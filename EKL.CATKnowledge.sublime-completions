{
  "scope": "source.ekl",
  "completions": [
    {
      "trigger": "AddNewViewBoxSpec\tASDSpecGenViewAbstract,ASDSpecViewBox",
      "contents": "AddNewViewBoxSpec(${1:asdspecgenviewabstract}, ${2:asdspecviewbox})"
    },
    {
      "trigger": "AttributeType\tASDAttributeSet,String",
      "contents": "AttributeType(${1:asdattributeset}, ${2:name})"
    },
    {
      "trigger": "ComputeGlobalAxisOrientedBoundingBox\tFeature,Real,Real,Real,Real,Real,Real",
      "contents": "ComputeGlobalAxisOrientedBoundingBox(${1:feat}, ${2:real}, ${3:real}, ${4:real}, ${5:real}, ${6:real}, ${7:real})"
    },
    {
      "trigger": "ComputeNearestSRSPlaneInfo\tInteger,Real,Real,Real,String,String,Real,Real,Real",
      "contents": "ComputeNearestSRSPlaneInfo(${1:int}, ${2:real}, ${3:real}, ${4:real}, ${5:name}, ${6:name}, ${7:real}, ${8:real}, ${9:real})"
    },
    {
      "trigger": "ComputeNormalAtCenterOfLargestPanelFace\tFeature,Real,Real,Real,Real,Real,Real",
      "contents": "ComputeNormalAtCenterOfLargestPanelFace(${1:feat}, ${2:real}, ${3:real}, ${4:real}, ${5:real}, ${6:real}, ${7:real})"
    },
    {
      "trigger": "CreateOrReplaceBandTable\tASDVerticalAlignmentView,String,LENGTH",
      "contents": "CreateOrReplaceBandTable(${1:asdverticalalignmentview}, ${2:name}, ${3:len})"
    },
    {
      "trigger": "CreateOrReplaceTable\tASDAlignmentView,String,AnchorPointEnum,AnchorPointEnum,Boolean,LENGTH",
      "contents": "CreateOrReplaceTable(${1:asdalignmentview}, ${2:name}, ${3:anchorpointenum}, ${4:anchorpointenum}, ${5:bool}, ${6:len})"
    },
    {
      "trigger": "CreateViewPositionAlignment\tASDSpecViewAbstract,ASDSpecViewPositionAlignment",
      "contents": "CreateViewPositionAlignment(${1:asdspecviewabstract}, ${2:asdspecviewpositionalignment})"
    },
    {
      "trigger": "FormatDimensionToString\tMagnitude,String,Integer",
      "contents": "FormatDimensionToString(${1:mag}, ${2:name}, ${3:int})"
    },
    {
      "trigger": "FormatDimensionToString\tMagnitude,String,Integer,Boolean",
      "contents": "FormatDimensionToString(${1:mag}, ${2:name}, ${3:int}, ${4:bool})"
    },
    {
      "trigger": "FormatDimensionToString\tMagnitude,String,Integer,Boolean,Boolean",
      "contents": "FormatDimensionToString(${1:mag}, ${2:name}, ${3:int}, ${4:bool}, ${5:bool})"
    },
    {
      "trigger": "FormatDimensionToString\tMagnitude,String,Integer,Boolean,Boolean,String",
      "contents": "FormatDimensionToString(${1:mag}, ${2:name}, ${3:int}, ${4:bool}, ${5:bool}, ${6:name})"
    },
    {
      "trigger": "Get3DShapeLayer\tFeature",
      "contents": "Get3DShapeLayer(${1:feat})"
    },
    {
      "trigger": "GetASDAnnotation\tASDView,List",
      "contents": "GetASDAnnotation(${1:asdview}, ${2:list})"
    },
    {
      "trigger": "GetASDView\tDrwView,ASDView",
      "contents": "GetASDView(${1:drwview}, ${2:asdview})"
    },
    {
      "trigger": "GetAlignment\tASDAlignmentView,Feature",
      "contents": "GetAlignment(${1:asdalignmentview}, ${2:feat})"
    },
    {
      "trigger": "GetAttachedStiffeners\tFeature,List",
      "contents": "GetAttachedStiffeners(${1:feat}, ${2:list})"
    },
    {
      "trigger": "GetAttributeBoolean\tASDAttributeSet,String",
      "contents": "GetAttributeBoolean(${1:asdattributeset}, ${2:name})"
    },
    {
      "trigger": "GetAttributeInteger\tASDAttributeSet,String",
      "contents": "GetAttributeInteger(${1:asdattributeset}, ${2:name})"
    },
    {
      "trigger": "GetAttributeReal\tASDAttributeSet,String",
      "contents": "GetAttributeReal(${1:asdattributeset}, ${2:name})"
    },
    {
      "trigger": "GetAttributeString\tASDAttributeSet,String",
      "contents": "GetAttributeString(${1:asdattributeset}, ${2:name})"
    },
    {
      "trigger": "GetAuthoringObject\tASDAnnotation,List",
      "contents": "GetAuthoringObject(${1:asdannotation}, ${2:list})"
    },
    {
      "trigger": "GetBackgroundImageRelimit\tASDSpecHorizontalAlignmentView,Boolean",
      "contents": "GetBackgroundImageRelimit(${1:asdspechorizontalalignmentview}, ${2:bool})"
    },
    {
      "trigger": "GetBackgroundImageType\tASDSpecHorizontalAlignmentView,BackgroundImageTypeEnum",
      "contents": "GetBackgroundImageType(${1:asdspechorizontalalignmentview}, ${2:backgroundimagetypeenum})"
    },
    {
      "trigger": "GetBoundaryMargin\tASDAlignmentSectionView,LENGTH,LENGTH",
      "contents": "GetBoundaryMargin(${1:asdalignmentsectionview}, ${2:len}, ${3:len})"
    },
    {
      "trigger": "GetBoxPoints\tDrwObject,LENGTH,LENGTH,LENGTH,LENGTH,LENGTH,LENGTH,LENGTH,LENGTH",
      "contents": "GetBoxPoints(${1:drwobject}, ${2:len}, ${3:len}, ${4:len}, ${5:len}, ${6:len}, ${7:len}, ${8:len}, ${9:len})"
    },
    {
      "trigger": "GetBoxSize\tDrwObject,LENGTH,LENGTH",
      "contents": "GetBoxSize(${1:drwobject}, ${2:len}, ${3:len})"
    },
    {
      "trigger": "GetCBOMProductOccurrence\tProductOccurrence,ProductOccurrence",
      "contents": "GetCBOMProductOccurrence(${1:productoccurrence}, ${2:productoccurrence})"
    },
    {
      "trigger": "GetCenterRadius\t2DCircle,LENGTH,LENGTH,LENGTH",
      "contents": "GetCenterRadius(${1:2dcircle}, ${2:len}, ${3:len}, ${4:len})"
    },
    {
      "trigger": "GetCoord\t2DPoint,LENGTH,LENGTH",
      "contents": "GetCoord(${1:2dpoint}, ${2:len}, ${3:len})"
    },
    {
      "trigger": "GetCrossingPlateThicknessInSheetRef\tASDBreakSymbol",
      "contents": "GetCrossingPlateThicknessInSheetRef(${1:asdbreaksymbol})"
    },
    {
      "trigger": "GetDirections\tASDSpecViewPositionAlignment,Integer,Integer",
      "contents": "GetDirections(${1:asdspecviewpositionalignment}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "GetDrawingStandard\tASDSpecDrawing,String",
      "contents": "GetDrawingStandard(${1:asdspecdrawing}, ${2:name})"
    },
    {
      "trigger": "GetEndDistance\tASDAlignmentView,LENGTH",
      "contents": "GetEndDistance(${1:asdalignmentview}, ${2:len})"
    },
    {
      "trigger": "GetExtremityPoints\tDrwArrow,LENGTH,LENGTH,LENGTH,LENGTH",
      "contents": "GetExtremityPoints(${1:drwarrow}, ${2:len}, ${3:len}, ${4:len}, ${5:len})"
    },
    {
      "trigger": "GetFarLimit\tASDSpecViewBox,Integer",
      "contents": "GetFarLimit(${1:asdspecviewbox}, ${2:int})"
    },
    {
      "trigger": "GetFarOffset\tASDSpecViewBox,Real",
      "contents": "GetFarOffset(${1:asdspecviewbox}, ${2:real})"
    },
    {
      "trigger": "GetLocation\tDrwDitto,LENGTH,LENGTH",
      "contents": "GetLocation(${1:drwditto}, ${2:len}, ${3:len})"
    },
    {
      "trigger": "GetLookingDirection\tDrwView",
      "contents": "GetLookingDirection(${1:drwview})"
    },
    {
      "trigger": "GetManufacturingAssembly\tProductOccurrence,FProcessOccurrence",
      "contents": "GetManufacturingAssembly(${1:productoccurrence}, ${2:fprocessoccurrence})"
    },
    {
      "trigger": "GetMargin\tASDSpecHorizontalAlignmentView,LENGTH",
      "contents": "GetMargin(${1:asdspechorizontalalignmentview}, ${2:len})"
    },
    {
      "trigger": "GetNearLimit\tASDSpecViewBox,Integer",
      "contents": "GetNearLimit(${1:asdspecviewbox}, ${2:int})"
    },
    {
      "trigger": "GetNearOffset\tASDSpecViewBox,Real",
      "contents": "GetNearOffset(${1:asdspecviewbox}, ${2:real})"
    },
    {
      "trigger": "GetNearestSRSPlane\tReal,Real,Real,Integer",
      "contents": "GetNearestSRSPlane(${1:real}, ${2:real}, ${3:real}, ${4:int})"
    },
    {
      "trigger": "GetNearestSkeletonSurface\tReal,Real,Real,Integer,String,String,Real",
      "contents": "GetNearestSkeletonSurface(${1:real}, ${2:real}, ${3:real}, ${4:int}, ${5:name}, ${6:name}, ${7:real})"
    },
    {
      "trigger": "GetObjects\tASDSpecViewBox,List,Boolean",
      "contents": "GetObjects(${1:asdspecviewbox}, ${2:list}, ${3:bool})"
    },
    {
      "trigger": "GetOffset\tASDAlignmentSectionView,LENGTH",
      "contents": "GetOffset(${1:asdalignmentsectionview}, ${2:len})"
    },
    {
      "trigger": "GetOperationType\tASDSpecViewBox,Integer",
      "contents": "GetOperationType(${1:asdspecviewbox}, ${2:int})"
    },
    {
      "trigger": "GetOrientation\tDrwObject,ANGLE",
      "contents": "GetOrientation(${1:drwobject}, ${2:angle})"
    },
    {
      "trigger": "GetOrientationMode\tASDSpecViewBox,Integer",
      "contents": "GetOrientationMode(${1:asdspecviewbox}, ${2:int})"
    },
    {
      "trigger": "GetParameterAngle\tASDAnnotation,String",
      "contents": "GetParameterAngle(${1:asdannotation}, ${2:name})"
    },
    {
      "trigger": "GetParameterBoolean\tASDAnnotation,String",
      "contents": "GetParameterBoolean(${1:asdannotation}, ${2:name})"
    },
    {
      "trigger": "GetParameterInteger\tASDAnnotation,String",
      "contents": "GetParameterInteger(${1:asdannotation}, ${2:name})"
    },
    {
      "trigger": "GetParameterLength\tASDAnnotation,String",
      "contents": "GetParameterLength(${1:asdannotation}, ${2:name})"
    },
    {
      "trigger": "GetParameterReal\tASDAnnotation,String",
      "contents": "GetParameterReal(${1:asdannotation}, ${2:name})"
    },
    {
      "trigger": "GetParameterString\tASDAnnotation,String",
      "contents": "GetParameterString(${1:asdannotation}, ${2:name})"
    },
    {
      "trigger": "GetParentDrawing\tASDSpecSheetAbstract,DrwDrawing",
      "contents": "GetParentDrawing(${1:asdspecsheetabstract}, ${2:drwdrawing})"
    },
    {
      "trigger": "GetParentSheet\tASDSpecViewAbstract,DrwSheet",
      "contents": "GetParentSheet(${1:asdspecviewabstract}, ${2:drwsheet})"
    },
    {
      "trigger": "GetPipBendAtIndex\tProductOccurrence,Integer,Real,ANGLE,Integer,LENGTH,LENGTH,LENGTH,LENGTH,LENGTH,LENGTH,LENGTH,LENGTH,LENGTH",
      "contents": "GetPipBendAtIndex(${1:productoccurrence}, ${2:int}, ${3:real}, ${4:angle}, ${5:int}, ${6:len}, ${7:len}, ${8:len}, ${9:len}, ${10:len}, ${11:len}, ${12:len}, ${13:len}, ${14:len})"
    },
    {
      "trigger": "GetPipeBendInfo\tProductOccurrence,LENGTH,ANGLE,Integer",
      "contents": "GetPipeBendInfo(${1:productoccurrence}, ${2:len}, ${3:angle}, ${4:int})"
    },
    {
      "trigger": "GetPipeNodeAtIndex\tProductOccurrence,Integer,LENGTH,LENGTH,LENGTH",
      "contents": "GetPipeNodeAtIndex(${1:productoccurrence}, ${2:int}, ${3:len}, ${4:len}, ${5:len})"
    },
    {
      "trigger": "GetPipeNodes\tProductOccurrence,Integer",
      "contents": "GetPipeNodes(${1:productoccurrence}, ${2:int})"
    },
    {
      "trigger": "GetPlateMinimumDimensions\tFeature,LENGTH,LENGTH",
      "contents": "GetPlateMinimumDimensions(${1:feat}, ${2:len}, ${3:len})"
    },
    {
      "trigger": "GetPoints\t2DLine,LENGTH,LENGTH,LENGTH,LENGTH",
      "contents": "GetPoints(${1:2dline}, ${2:len}, ${3:len}, ${4:len}, ${5:len})"
    },
    {
      "trigger": "GetPosition\tDrwObject,LENGTH,LENGTH",
      "contents": "GetPosition(${1:drwobject}, ${2:len}, ${3:len})"
    },
    {
      "trigger": "GetProjectionPlane\tASDSpecFrontView,Real,Real,Real,Real,Real,Real,Real,Real,Real",
      "contents": "GetProjectionPlane(${1:asdspecfrontview}, ${2:real}, ${3:real}, ${4:real}, ${5:real}, ${6:real}, ${7:real}, ${8:real}, ${9:real}, ${10:real})"
    },
    {
      "trigger": "GetSRSPlaneOrientation\tRFGGridFace",
      "contents": "GetSRSPlaneOrientation(${1:rfggridface})"
    },
    {
      "trigger": "GetScale\tASDSpecGenViewAbstract,Real",
      "contents": "GetScale(${1:asdspecgenviewabstract}, ${2:real})"
    },
    {
      "trigger": "GetSheetMargins\tASDSpecViewPositionAlignment,Real,Real",
      "contents": "GetSheetMargins(${1:asdspecviewpositionalignment}, ${2:real}, ${3:real})"
    },
    {
      "trigger": "GetSheetTemplate\tASDSpecSheet,String",
      "contents": "GetSheetTemplate(${1:asdspecsheet}, ${2:name})"
    },
    {
      "trigger": "GetSideLimits\tASDSpecViewBox,Integer",
      "contents": "GetSideLimits(${1:asdspecviewbox}, ${2:int})"
    },
    {
      "trigger": "GetSideOffsets\tASDSpecViewBox,Real",
      "contents": "GetSideOffsets(${1:asdspecviewbox}, ${2:real})"
    },
    {
      "trigger": "GetStartAnchor\tASDSpecViewPositionAlignment,Integer",
      "contents": "GetStartAnchor(${1:asdspecviewpositionalignment}, ${2:int})"
    },
    {
      "trigger": "GetStartDistance\tASDAlignmentView,LENGTH",
      "contents": "GetStartDistance(${1:asdalignmentview}, ${2:len})"
    },
    {
      "trigger": "GetStretch\tASDSpecVerticalAlignmentView,Real",
      "contents": "GetStretch(${1:asdspecverticalalignmentview}, ${2:real})"
    },
    {
      "trigger": "GetSymbolType\tASDSymbolAnnotation",
      "contents": "GetSymbolType(${1:asdsymbolannotation})"
    },
    {
      "trigger": "GetViewAxisPosition\tASDSpecViewAbstract,Real,Real",
      "contents": "GetViewAxisPosition(${1:asdspecviewabstract}, ${2:real}, ${3:real})"
    },
    {
      "trigger": "GetViewBoxSpecs\tASDSpecGenViewAbstract,List",
      "contents": "GetViewBoxSpecs(${1:asdspecgenviewabstract}, ${2:list})"
    },
    {
      "trigger": "GetViewBoxes\tASDView,List",
      "contents": "GetViewBoxes(${1:asdview}, ${2:list})"
    },
    {
      "trigger": "GetViewLinks\tASDSpecGenViewAbstract,List",
      "contents": "GetViewLinks(${1:asdspecgenviewabstract}, ${2:list})"
    },
    {
      "trigger": "GetViewOffsets\tASDSpecViewPositionAlignment,Real,Real",
      "contents": "GetViewOffsets(${1:asdspecviewpositionalignment}, ${2:real}, ${3:real})"
    },
    {
      "trigger": "GetViewPositionAlignment\tASDSpecViewAbstract,ASDSpecViewPositionAlignment",
      "contents": "GetViewPositionAlignment(${1:asdspecviewabstract}, ${2:asdspecviewpositionalignment})"
    },
    {
      "trigger": "GetViewProjectedPoint\tFeature,LENGTH,LENGTH,LENGTH,LENGTH,LENGTH",
      "contents": "GetViewProjectedPoint(${1:feat}, ${2:len}, ${3:len}, ${4:len}, ${5:len}, ${6:len})"
    },
    {
      "trigger": "GetViewProjectionPlane\tFeature,Real,Real,Real",
      "contents": "GetViewProjectionPlane(${1:feat}, ${2:real}, ${3:real}, ${4:real})"
    },
    {
      "trigger": "GetViewSpaceAllocation\tASDSpecViewPositionAlignment,Real",
      "contents": "GetViewSpaceAllocation(${1:asdspecviewpositionalignment}, ${2:real})"
    },
    {
      "trigger": "GetViewTemplate\tASDSpecAlignmentView,String",
      "contents": "GetViewTemplate(${1:asdspecalignmentview}, ${2:name})"
    },
    {
      "trigger": "HasAttribute\tASDAttributeSet,String",
      "contents": "HasAttribute(${1:asdattributeset}, ${2:name})"
    },
    {
      "trigger": "HasParameter\tASDAnnotation,String",
      "contents": "HasParameter(${1:asdannotation}, ${2:name})"
    },
    {
      "trigger": "IsAMasterElement\tASDStructuralView,Feature,Boolean",
      "contents": "IsAMasterElement(${1:asdstructuralview}, ${2:feat}, ${3:bool})"
    },
    {
      "trigger": "IsFullyInside\tASDBox,Feature,Boolean",
      "contents": "IsFullyInside(${1:asdbox}, ${2:feat}, ${3:bool})"
    },
    {
      "trigger": "IsOccurrenceRoot\tProductOccurrence",
      "contents": "IsOccurrenceRoot(${1:productoccurrence})"
    },
    {
      "trigger": "ListAttributeNames\tASDAttributeSet",
      "contents": "ListAttributeNames(${1:asdattributeset})"
    },
    {
      "trigger": "ListParameterNames\tASDAnnotation,List",
      "contents": "ListParameterNames(${1:asdannotation}, ${2:list})"
    },
    {
      "trigger": "ParameterType\tASDAnnotation,String",
      "contents": "ParameterType(${1:asdannotation}, ${2:name})"
    },
    {
      "trigger": "QueryTableDataUsingOccurrence\tASDGenerativeTable,ProductOccurrence,Integer",
      "contents": "QueryTableDataUsingOccurrence(${1:asdgenerativetable}, ${2:productoccurrence}, ${3:int})"
    },
    {
      "trigger": "Set3Points\t2DCircle,LENGTH,LENGTH,LENGTH,LENGTH,LENGTH,LENGTH,Integer",
      "contents": "Set3Points(${1:2dcircle}, ${2:len}, ${3:len}, ${4:len}, ${5:len}, ${6:len}, ${7:len}, ${8:int})"
    },
    {
      "trigger": "SetBackgroundImageRelimit\tASDSpecHorizontalAlignmentView,Boolean",
      "contents": "SetBackgroundImageRelimit(${1:asdspechorizontalalignmentview}, ${2:bool})"
    },
    {
      "trigger": "SetBackgroundImageType\tASDHorizontalAlignmentView,BackgroundImageTypeEnum",
      "contents": "SetBackgroundImageType(${1:asdhorizontalalignmentview}, ${2:backgroundimagetypeenum})"
    },
    {
      "trigger": "SetCenterRadius\t2DCircle,LENGTH,LENGTH,LENGTH",
      "contents": "SetCenterRadius(${1:2dcircle}, ${2:len}, ${3:len}, ${4:len})"
    },
    {
      "trigger": "SetCoord\t2DPoint,LENGTH,LENGTH",
      "contents": "SetCoord(${1:2dpoint}, ${2:len}, ${3:len})"
    },
    {
      "trigger": "SetDirections\tASDSpecViewPositionAlignment,Integer,Integer",
      "contents": "SetDirections(${1:asdspecviewpositionalignment}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "SetDrawingStandard\tASDSpecDrawing,String",
      "contents": "SetDrawingStandard(${1:asdspecdrawing}, ${2:name})"
    },
    {
      "trigger": "SetEndDistance\tASDSpecAlignmentView,LENGTH",
      "contents": "SetEndDistance(${1:asdspecalignmentview}, ${2:len})"
    },
    {
      "trigger": "SetExtremityPoints\tDrwArrow,LENGTH,LENGTH,LENGTH,LENGTH",
      "contents": "SetExtremityPoints(${1:drwarrow}, ${2:len}, ${3:len}, ${4:len}, ${5:len})"
    },
    {
      "trigger": "SetFarLimit\tASDSpecViewBox,Integer",
      "contents": "SetFarLimit(${1:asdspecviewbox}, ${2:int})"
    },
    {
      "trigger": "SetFarOffset\tASDSpecViewBox,Real",
      "contents": "SetFarOffset(${1:asdspecviewbox}, ${2:real})"
    },
    {
      "trigger": "SetFontSize\tDrwText,Real",
      "contents": "SetFontSize(${1:drwtext}, ${2:real})"
    },
    {
      "trigger": "SetJustification\tDrwText,Integer",
      "contents": "SetJustification(${1:drwtext}, ${2:int})"
    },
    {
      "trigger": "SetLocation\tDrwDitto,LENGTH,LENGTH",
      "contents": "SetLocation(${1:drwditto}, ${2:len}, ${3:len})"
    },
    {
      "trigger": "SetMargin\tASDSpecHorizontalAlignmentView,LENGTH",
      "contents": "SetMargin(${1:asdspechorizontalalignmentview}, ${2:len})"
    },
    {
      "trigger": "SetNearLimit\tASDSpecViewBox,Integer",
      "contents": "SetNearLimit(${1:asdspecviewbox}, ${2:int})"
    },
    {
      "trigger": "SetNearOffset\tASDSpecViewBox,Real",
      "contents": "SetNearOffset(${1:asdspecviewbox}, ${2:real})"
    },
    {
      "trigger": "SetObjects\tASDSpecViewBox,List,Boolean",
      "contents": "SetObjects(${1:asdspecviewbox}, ${2:list}, ${3:bool})"
    },
    {
      "trigger": "SetOperationType\tASDSpecViewBox,Integer",
      "contents": "SetOperationType(${1:asdspecviewbox}, ${2:int})"
    },
    {
      "trigger": "SetOrientation\tDrwObject,ANGLE",
      "contents": "SetOrientation(${1:drwobject}, ${2:angle})"
    },
    {
      "trigger": "SetOrientationMode\tASDSpecViewBox,Integer",
      "contents": "SetOrientationMode(${1:asdspecviewbox}, ${2:int})"
    },
    {
      "trigger": "SetPoints\t2DLine,LENGTH,LENGTH,LENGTH,LENGTH",
      "contents": "SetPoints(${1:2dline}, ${2:len}, ${3:len}, ${4:len}, ${5:len})"
    },
    {
      "trigger": "SetPosition\tDrwObject,LENGTH,LENGTH",
      "contents": "SetPosition(${1:drwobject}, ${2:len}, ${3:len})"
    },
    {
      "trigger": "SetPositionWithAnchor\tDrwText,LENGTH,LENGTH,Integer",
      "contents": "SetPositionWithAnchor(${1:drwtext}, ${2:len}, ${3:len}, ${4:int})"
    },
    {
      "trigger": "SetProjectionPlane\tASDSpecFrontView,Integer,Real,Real,Real,Real,Real,Real,Real,Real,Real",
      "contents": "SetProjectionPlane(${1:asdspecfrontview}, ${2:int}, ${3:real}, ${4:real}, ${5:real}, ${6:real}, ${7:real}, ${8:real}, ${9:real}, ${10:real}, ${11:real})"
    },
    {
      "trigger": "SetScale\tASDSpecGenViewAbstract,Real",
      "contents": "SetScale(${1:asdspecgenviewabstract}, ${2:real})"
    },
    {
      "trigger": "SetSheetMargins\tASDSpecViewPositionAlignment,Real,Real",
      "contents": "SetSheetMargins(${1:asdspecviewpositionalignment}, ${2:real}, ${3:real})"
    },
    {
      "trigger": "SetSheetTemplate\tASDSpecSheet,String",
      "contents": "SetSheetTemplate(${1:asdspecsheet}, ${2:name})"
    },
    {
      "trigger": "SetSideLimits\tASDSpecViewBox,Integer",
      "contents": "SetSideLimits(${1:asdspecviewbox}, ${2:int})"
    },
    {
      "trigger": "SetSideOffsets\tASDSpecViewBox,Real",
      "contents": "SetSideOffsets(${1:asdspecviewbox}, ${2:real})"
    },
    {
      "trigger": "SetStartAnchor\tASDSpecViewPositionAlignment,Integer",
      "contents": "SetStartAnchor(${1:asdspecviewpositionalignment}, ${2:int})"
    },
    {
      "trigger": "SetStartDistance\tASDSpecAlignmentView,LENGTH",
      "contents": "SetStartDistance(${1:asdspecalignmentview}, ${2:len})"
    },
    {
      "trigger": "SetStretch\tASDSpecVerticalAlignmentView,Real",
      "contents": "SetStretch(${1:asdspecverticalalignmentview}, ${2:real})"
    },
    {
      "trigger": "SetViewAxisPosition\tASDSpecViewAbstract,Real,Real",
      "contents": "SetViewAxisPosition(${1:asdspecviewabstract}, ${2:real}, ${3:real})"
    },
    {
      "trigger": "SetViewLinks\tASDSpecGenViewAbstract,List",
      "contents": "SetViewLinks(${1:asdspecgenviewabstract}, ${2:list})"
    },
    {
      "trigger": "SetViewOffsets\tASDSpecViewPositionAlignment,Real,Real",
      "contents": "SetViewOffsets(${1:asdspecviewpositionalignment}, ${2:real}, ${3:real})"
    },
    {
      "trigger": "SetViewSizeMode\tASDSpecViewPositionAlignment,Integer",
      "contents": "SetViewSizeMode(${1:asdspecviewpositionalignment}, ${2:int})"
    },
    {
      "trigger": "SetViewSpaceAllocation\tASDSpecViewPositionAlignment,Real",
      "contents": "SetViewSpaceAllocation(${1:asdspecviewpositionalignment}, ${2:real})"
    },
    {
      "trigger": "SetViewTemplate\tASDSpecAlignmentView,String",
      "contents": "SetViewTemplate(${1:asdspecalignmentview}, ${2:name})"
    },
    {
      "trigger": "SetWrapping\tDrwText,Integer,Real",
      "contents": "SetWrapping(${1:drwtext}, ${2:int}, ${3:real})"
    },
    {
      "trigger": "APPLY\tCATKwdDialogWindow",
      "contents": "APPLY(${1:catkwddialogwindow})"
    },
    {
      "trigger": "AST_AddClass\tModelicaAllTypes,String,String,ModelicaAllTypes",
      "contents": "AST_AddClass(${1:modelicaalltypes}, ${2:name}, ${3:name}, ${4:modelicaalltypes})"
    },
    {
      "trigger": "AST_GetComponentModifiers\tModelicaAllTypes,String,List",
      "contents": "AST_GetComponentModifiers(${1:modelicaalltypes}, ${2:name}, ${3:list})"
    },
    {
      "trigger": "AST_GetModelicaParameters\tModelicaAllTypes,List,List,List",
      "contents": "AST_GetModelicaParameters(${1:modelicaalltypes}, ${2:list}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "AST_SetComponentModifiers\tModelicaAllTypes,String,List",
      "contents": "AST_SetComponentModifiers(${1:modelicaalltypes}, ${2:name}, ${3:list})"
    },
    {
      "trigger": "AST_SetModelicaParameter\tModelicaAllTypes,String,String",
      "contents": "AST_SetModelicaParameter(${1:modelicaalltypes}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "Access\tFeature,String,String",
      "contents": "Access(${1:feat}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "AccessBusinessRole\tString",
      "contents": "AccessBusinessRole(${1:name})"
    },
    {
      "trigger": "AccessBusinessRoles\tList",
      "contents": "AccessBusinessRoles(${1:list})"
    },
    {
      "trigger": "AccessFederatedExtension\tFeature,String",
      "contents": "AccessFederatedExtension(${1:feat}, ${2:name})"
    },
    {
      "trigger": "AccessMemberList\tString",
      "contents": "AccessMemberList(${1:name})"
    },
    {
      "trigger": "AccessMemberLists\tList",
      "contents": "AccessMemberLists(${1:list})"
    },
    {
      "trigger": "AccessOrganization\tString",
      "contents": "AccessOrganization(${1:name})"
    },
    {
      "trigger": "AccessOrganizations\tList",
      "contents": "AccessOrganizations(${1:list})"
    },
    {
      "trigger": "AccessPerson\tString",
      "contents": "AccessPerson(${1:name})"
    },
    {
      "trigger": "AccessPersons\tList",
      "contents": "AccessPersons(${1:list})"
    },
    {
      "trigger": "AccessProject\tString",
      "contents": "AccessProject(${1:name})"
    },
    {
      "trigger": "AccessProjects\tList",
      "contents": "AccessProjects(${1:list})"
    },
    {
      "trigger": "AccessResource\tString,String",
      "contents": "AccessResource(${1:name}, ${2:name})"
    },
    {
      "trigger": "AccessSecurityContext\tString",
      "contents": "AccessSecurityContext(${1:name})"
    },
    {
      "trigger": "AccessSecurityContexts\tList",
      "contents": "AccessSecurityContexts(${1:list})"
    },
    {
      "trigger": "Action\tCATKwdDialog,String",
      "contents": "Action(${1:catkwddialog}, ${2:name})"
    },
    {
      "trigger": "ActivateConfiguredResources\tBusinessType",
      "contents": "ActivateConfiguredResources(${1:businesstype})"
    },
    {
      "trigger": "ActivateConstraint\tElecRoute",
      "contents": "ActivateConstraint(${1:elecroute})"
    },
    {
      "trigger": "ActivateFilterResources\tPLMWspPVS",
      "contents": "ActivateFilterResources(${1:plmwsppvs})"
    },
    {
      "trigger": "ActivateInactivateFeature\tFeature,Boolean",
      "contents": "ActivateInactivateFeature(${1:feat}, ${2:bool})"
    },
    {
      "trigger": "ActivateManufacturingSimulation\tDELMfgSimMSR",
      "contents": "ActivateManufacturingSimulation(${1:delmfgsimmsr})"
    },
    {
      "trigger": "ActivateMobileStorage\tFFS_Resource,Boolean",
      "contents": "ActivateMobileStorage(${1:ffs_resource}, ${2:bool})"
    },
    {
      "trigger": "ActivateResource\tFFS_Resource,Boolean",
      "contents": "ActivateResource(${1:ffs_resource}, ${2:bool})"
    },
    {
      "trigger": "ActivateSketchContour\tSddContourBased",
      "contents": "ActivateSketchContour(${1:sddcontourbased})"
    },
    {
      "trigger": "ActivateViews\tPLMOperation",
      "contents": "ActivateViews(${1:plmoperation})"
    },
    {
      "trigger": "Add3DPoint\tHVAC_Flexible_Duct,List,Integer",
      "contents": "Add3DPoint(${1:hvac_flexible_duct}, ${2:list}, ${3:int})"
    },
    {
      "trigger": "Add\tMap,ObjectType,ObjectType",
      "contents": "Add(${1:map}, ${2:objecttype}, ${3:objecttype})"
    },
    {
      "trigger": "AddActivity\tFFS_GroupActivity,FFS_Activity",
      "contents": "AddActivity(${1:ffs_groupactivity}, ${2:ffs_activity})"
    },
    {
      "trigger": "AddActivityLinkedToPlanning\tFFS_InZone,List",
      "contents": "AddActivityLinkedToPlanning(${1:ffs_inzone}, ${2:list})"
    },
    {
      "trigger": "AddActivityToAsPerSpecifiedTableDepartRequirement\tFFS_DestinationProperties,FFS_Activity",
      "contents": "AddActivityToAsPerSpecifiedTableDepartRequirement(${1:ffs_destinationproperties}, ${2:ffs_activity})"
    },
    {
      "trigger": "AddActivityToDestination\tFFS_DestinationProperties,FFS_Activity",
      "contents": "AddActivityToDestination(${1:ffs_destinationproperties}, ${2:ffs_activity})"
    },
    {
      "trigger": "AddAlternateProcess\tDELFmiFunctionReference,DELFmiFunctionReference",
      "contents": "AddAlternateProcess(${1:delfmifunctionreference}, ${2:delfmifunctionreference})"
    },
    {
      "trigger": "AddAndMountComponents\tResourceNCAssembly,VPMReference,VPMInstance,List,List",
      "contents": "AddAndMountComponents(${1:resourcencassembly}, ${2:vpmreference}, ${3:vpminstance}, ${4:list}, ${5:list})"
    },
    {
      "trigger": "AddAssemblyConstraint\tMCX,String,ObjectType",
      "contents": "AddAssemblyConstraint(${1:mcx}, ${2:name}, ${3:objecttype})"
    },
    {
      "trigger": "AddAssignedConsumableWithConsumptionRate\tFFS_Activity,FFS_Consumable,Real",
      "contents": "AddAssignedConsumableWithConsumptionRate(${1:ffs_activity}, ${2:ffs_consumable}, ${3:real})"
    },
    {
      "trigger": "AddAssignment\tHumanActivityManager,HumanActivityAssignment",
      "contents": "AddAssignment(${1:humanactivitymanager}, ${2:humanactivityassignment})"
    },
    {
      "trigger": "AddAttribute\tDNBTag,String,Integer,String",
      "contents": "AddAttribute(${1:dnbtag}, ${2:name}, ${3:int}, ${4:name})"
    },
    {
      "trigger": "AddBaseBoard\tLiveArchiCovering,LENGTH",
      "contents": "AddBaseBoard(${1:livearchicovering}, ${2:len})"
    },
    {
      "trigger": "AddBasicBox\tRFLVPMLogicalReference,String,Real,Real,Real,String",
      "contents": "AddBasicBox(${1:rflvpmlogicalreference}, ${2:name}, ${3:real}, ${4:real}, ${5:real}, ${6:name})"
    },
    {
      "trigger": "AddBasicCylinder\tRFLVPMLogicalReference,String,Real,Real,String",
      "contents": "AddBasicCylinder(${1:rflvpmlogicalreference}, ${2:name}, ${3:real}, ${4:real}, ${5:name})"
    },
    {
      "trigger": "AddBatchTrace\tString,String",
      "contents": "AddBatchTrace(${1:name}, ${2:name})"
    },
    {
      "trigger": "AddBranchPoint\tBranch,Feature,String,LENGTH,BranchPoint",
      "contents": "AddBranchPoint(${1:branch}, ${2:feat}, ${3:name}, ${4:len}, ${5:branchpoint})"
    },
    {
      "trigger": "AddBranchPoint\tBranch,SegmentExtremity,Real,BranchPoint",
      "contents": "AddBranchPoint(${1:branch}, ${2:segmentextremity}, ${3:real}, ${4:branchpoint})"
    },
    {
      "trigger": "AddBufferActivity\tFFS_ProductZone,FFS_Item",
      "contents": "AddBufferActivity(${1:ffs_productzone}, ${2:ffs_item})"
    },
    {
      "trigger": "AddCapableResource\tDELFmiFunctionReference,PLMResource",
      "contents": "AddCapableResource(${1:delfmifunctionreference}, ${2:plmresource})"
    },
    {
      "trigger": "AddCapableResourceDocument\tDELFmiFunctionReference,PLMResource,PLMCoreReference",
      "contents": "AddCapableResourceDocument(${1:delfmifunctionreference}, ${2:plmresource}, ${3:plmcorereference})"
    },
    {
      "trigger": "AddCollar\tSldSlot,Feature",
      "contents": "AddCollar(${1:sldslot}, ${2:feat})"
    },
    {
      "trigger": "AddComponent\tResourceNCAssembly,VPMReference,VPMInstance",
      "contents": "AddComponent(${1:resourcencassembly}, ${2:vpmreference}, ${3:vpminstance})"
    },
    {
      "trigger": "AddComputeQuantifier\tSIMItfSimulation,PIM_ComputeQuantifier",
      "contents": "AddComputeQuantifier(${1:simitfsimulation}, ${2:pim_computequantifier})"
    },
    {
      "trigger": "AddConductor\tConductorGroup,Conductor",
      "contents": "AddConductor(${1:conductorgroup}, ${2:conductor})"
    },
    {
      "trigger": "AddConfig\tMfgBaseInsert,String,String,String,MfgFSConfiguration",
      "contents": "AddConfig(${1:mfgbaseinsert}, ${2:name}, ${3:name}, ${4:name}, ${5:mfgfsconfiguration})"
    },
    {
      "trigger": "AddContextualEngineeringConnection\tVPMReference,String,VPMReference,String,ObjectType",
      "contents": "AddContextualEngineeringConnection(${1:vpmreference}, ${2:name}, ${3:vpmreference}, ${4:name}, ${5:objecttype})"
    },
    {
      "trigger": "AddContour\tMfg2DMAFeature,MfgMachinableAreaFeature,Integer",
      "contents": "AddContour(${1:mfg2dmafeature}, ${2:mfgmachinableareafeature}, ${3:int})"
    },
    {
      "trigger": "AddControllerUserAttribute\tRscController,String,String",
      "contents": "AddControllerUserAttribute(${1:rsccontroller}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "AddCore\tElec3DCable,Elec3DCableCore",
      "contents": "AddCore(${1:elec3dcable}, ${2:elec3dcablecore})"
    },
    {
      "trigger": "AddCreateActivity\tFFS_ProductZone,FFS_Item",
      "contents": "AddCreateActivity(${1:ffs_productzone}, ${2:ffs_item})"
    },
    {
      "trigger": "AddCriterion\tGeometryCheckOpe,String",
      "contents": "AddCriterion(${1:geometrycheckope}, ${2:name})"
    },
    {
      "trigger": "AddCriterion\tPLMQuery,String,String",
      "contents": "AddCriterion(${1:plmquery}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "AddCriterionOnExtension\tPLMQuery,String,String,String",
      "contents": "AddCriterionOnExtension(${1:plmquery}, ${2:name}, ${3:name}, ${4:name})"
    },
    {
      "trigger": "AddDecisionZone\tFFS_ClaimGroup,List",
      "contents": "AddDecisionZone(${1:ffs_claimgroup}, ${2:list})"
    },
    {
      "trigger": "AddDestinationZone\tFFS_TransportRouteGroup,FFS_VehicleDecisionPoint",
      "contents": "AddDestinationZone(${1:ffs_transportroutegroup}, ${2:ffs_vehicledecisionpoint})"
    },
    {
      "trigger": "AddDispatchActivity\tFFS_ProductZone,FFS_Item",
      "contents": "AddDispatchActivity(${1:ffs_productzone}, ${2:ffs_item})"
    },
    {
      "trigger": "AddDiversity\tHumanActivity,String,String",
      "contents": "AddDiversity(${1:humanactivity}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "AddElement\tMfgLatheSequentialOperation,MfgSeqMotionLatheBase",
      "contents": "AddElement(${1:mfglathesequentialoperation}, ${2:mfgseqmotionlathebase})"
    },
    {
      "trigger": "AddElement\tMfgPtToPtFeature,ManufacturingFeature,Integer",
      "contents": "AddElement(${1:mfgpttoptfeature}, ${2:manufacturingfeature}, ${3:int})"
    },
    {
      "trigger": "AddEndcut\tSddProfile,Integer,Feature",
      "contents": "AddEndcut(${1:sddprofile}, ${2:int}, ${3:feat})"
    },
    {
      "trigger": "AddEngineeringConnection\tVPMReference,String,ObjectType",
      "contents": "AddEngineeringConnection(${1:vpmreference}, ${2:name}, ${3:objecttype})"
    },
    {
      "trigger": "AddEstimatedTimeExtension\tPLMConnection",
      "contents": "AddEstimatedTimeExtension(${1:plmconnection})"
    },
    {
      "trigger": "AddExcitationToScenario\tDELMfgSimScenario,Feature",
      "contents": "AddExcitationToScenario(${1:delmfgsimscenario}, ${2:feat})"
    },
    {
      "trigger": "AddExclusionConstraint\tElecRoute,List",
      "contents": "AddExclusionConstraint(${1:elecroute}, ${2:list})"
    },
    {
      "trigger": "AddExtension\tFeature,String",
      "contents": "AddExtension(${1:feat}, ${2:name})"
    },
    {
      "trigger": "AddFireBridge\tAGTInsulation,Integer,Feature",
      "contents": "AddFireBridge(${1:agtinsulation}, ${2:int}, ${3:feat})"
    },
    {
      "trigger": "AddFlange\tSldPlate,Feature",
      "contents": "AddFlange(${1:sldplate}, ${2:feat})"
    },
    {
      "trigger": "AddFromZoneToDestination\tFFS_DestinationProperties,FFS_VehicleDecisionPoint",
      "contents": "AddFromZoneToDestination(${1:ffs_destinationproperties}, ${2:ffs_vehicledecisionpoint})"
    },
    {
      "trigger": "AddGenericActivity\tFFS_ProductZone",
      "contents": "AddGenericActivity(${1:ffs_productzone})"
    },
    {
      "trigger": "AddGenericActivity\tFFS_ProductZone,List",
      "contents": "AddGenericActivity(${1:ffs_productzone}, ${2:list})"
    },
    {
      "trigger": "AddGeolocation\tHumanActivity,Enumere,Enumere",
      "contents": "AddGeolocation(${1:humanactivity}, ${2:enumere}, ${3:enumere})"
    },
    {
      "trigger": "AddGeometry\tManufacturingActivity,String,Visualizable,ProductOccurrence,Integer,Integer",
      "contents": "AddGeometry(${1:manufacturingactivity}, ${2:name}, ${3:visualizable}, ${4:productoccurrence}, ${5:int}, ${6:int})"
    },
    {
      "trigger": "AddGeometry\tMfgMachinableAreaFeature,String,MfgMachinableBaseFeature,Integer",
      "contents": "AddGeometry(${1:mfgmachinableareafeature}, ${2:name}, ${3:mfgmachinablebasefeature}, ${4:int})"
    },
    {
      "trigger": "AddGroupActivity\tFFS_Resource",
      "contents": "AddGroupActivity(${1:ffs_resource})"
    },
    {
      "trigger": "AddGroupObjects\tSIMItfSimulation,PLMInterferenceGroup",
      "contents": "AddGroupObjects(${1:simitfsimulation}, ${2:plminterferencegroup})"
    },
    {
      "trigger": "AddHolderAttachmentType\tMfgToolHolder,String,String,String,String",
      "contents": "AddHolderAttachmentType(${1:mfgtoolholder}, ${2:name}, ${3:name}, ${4:name}, ${5:name})"
    },
    {
      "trigger": "AddHolders\tResourceNCAssembly,List",
      "contents": "AddHolders(${1:resourcencassembly}, ${2:list})"
    },
    {
      "trigger": "AddImplLinkUsageExt\tMfgProductionPlanning",
      "contents": "AddImplLinkUsageExt(${1:mfgproductionplanning})"
    },
    {
      "trigger": "AddInZone\tMatrix",
      "contents": "AddInZone(${1:matrix})"
    },
    {
      "trigger": "AddInclusionConstraint\tElecRoute,List",
      "contents": "AddInclusionConstraint(${1:elecroute}, ${2:list})"
    },
    {
      "trigger": "AddInputRobotTask\tRscMultiRobotPathPlanner,DNBResourceTask",
      "contents": "AddInputRobotTask(${1:rscmultirobotpathplanner}, ${2:dnbresourcetask})"
    },
    {
      "trigger": "AddInsert\tResourceNCAssembly,ToolDevice",
      "contents": "AddInsert(${1:resourcencassembly}, ${2:tooldevice})"
    },
    {
      "trigger": "AddInsertOnGaugeInsert\tResourceNCAssembly,ToolDevice,MfgInsertDefinition,List",
      "contents": "AddInsertOnGaugeInsert(${1:resourcencassembly}, ${2:tooldevice}, ${3:mfginsertdefinition}, ${4:list})"
    },
    {
      "trigger": "AddInterferenceResource\tRobInterferenceZoneMgr,ResourceOccurrence,List",
      "contents": "AddInterferenceResource(${1:robinterferencezonemgr}, ${2:resourceoccurrence}, ${3:list})"
    },
    {
      "trigger": "AddIntersectingElement\tSddOpening,Feature,Feature,Feature",
      "contents": "AddIntersectingElement(${1:sddopening}, ${2:feat}, ${3:feat}, ${4:feat})"
    },
    {
      "trigger": "AddItem\tList,ObjectType,Integer",
      "contents": "AddItem(${1:list}, ${2:objecttype}, ${3:int})"
    },
    {
      "trigger": "AddItfSpecificationTypeEngCnx\tSIMItfSimulation,PIM_SpecEngCnx",
      "contents": "AddItfSpecificationTypeEngCnx(${1:simitfsimulation}, ${2:pim_specengcnx})"
    },
    {
      "trigger": "AddJunctionDeviceAfterPosition\tElec3DCable,Integer,ProductOccurrence,Elec3DJunctionPoint",
      "contents": "AddJunctionDeviceAfterPosition(${1:elec3dcable}, ${2:int}, ${3:productoccurrence}, ${4:elec3djunctionpoint})"
    },
    {
      "trigger": "AddLimit\tAGTConnector,AGTProfileExtremity,Feature",
      "contents": "AddLimit(${1:agtconnector}, ${2:agtprofileextremity}, ${3:feat})"
    },
    {
      "trigger": "AddLinkedResource\tFFS_Failure,FFS_Resource",
      "contents": "AddLinkedResource(${1:ffs_failure}, ${2:ffs_resource})"
    },
    {
      "trigger": "AddLoadActivity\tFFS_ProductZone,List",
      "contents": "AddLoadActivity(${1:ffs_productzone}, ${2:list})"
    },
    {
      "trigger": "AddLogisticExtension\tPLMConnection",
      "contents": "AddLogisticExtension(${1:plmconnection})"
    },
    {
      "trigger": "AddMemberToPipingLineID\tLogicalOccurrence,LogicalOccurrence",
      "contents": "AddMemberToPipingLineID(${1:logicaloccurrence}, ${2:logicaloccurrence})"
    },
    {
      "trigger": "AddMovingObject\tDNBFitTrack,FProcessOccurrence,List",
      "contents": "AddMovingObject(${1:dnbfittrack}, ${2:fprocessoccurrence}, ${3:list})"
    },
    {
      "trigger": "AddNewOptimizationPathTarget\tRscOptimizationPath,Integer,Integer",
      "contents": "AddNewOptimizationPathTarget(${1:rscoptimizationpath}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "AddNewTuple\tKWECheck,Boolean,Feature",
      "contents": "AddNewTuple(${1:kwecheck}, ${2:bool}, ${3:feat})"
    },
    {
      "trigger": "AddOOTBExtension\tDELFmiFunctionInstance,String",
      "contents": "AddOOTBExtension(${1:delfmifunctioninstance}, ${2:name})"
    },
    {
      "trigger": "AddObject\tDEL3DState,ProductOccurrence,DEL3DStActionTypeEnum,List",
      "contents": "AddObject(${1:del3dstate}, ${2:productoccurrence}, ${3:del3dstactiontypeenum}, ${4:list})"
    },
    {
      "trigger": "AddObject\tKWECheck,Feature",
      "contents": "AddObject(${1:kwecheck}, ${2:feat})"
    },
    {
      "trigger": "AddOccurrence\tPLMInterferenceGroup,ProductOccurrence",
      "contents": "AddOccurrence(${1:plminterferencegroup}, ${2:productoccurrence})"
    },
    {
      "trigger": "AddOpening\tSddPanel,Feature,Integer",
      "contents": "AddOpening(${1:sddpanel}, ${2:feat}, ${3:int})"
    },
    {
      "trigger": "AddOrUpdateFile\tDocument,String,String",
      "contents": "AddOrUpdateFile(${1:document}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "AddOutZone\tMatrix",
      "contents": "AddOutZone(${1:matrix})"
    },
    {
      "trigger": "AddPackActivity\tFFS_ProductZone,List",
      "contents": "AddPackActivity(${1:ffs_productzone}, ${2:list})"
    },
    {
      "trigger": "AddPackActivity\tFFS_Resource,FFS_Resource,List",
      "contents": "AddPackActivity(${1:ffs_resource}, ${2:ffs_resource}, ${3:list})"
    },
    {
      "trigger": "AddParkingZone\tFFS_Activity,FFS_ResourceZone",
      "contents": "AddParkingZone(${1:ffs_activity}, ${2:ffs_resourcezone})"
    },
    {
      "trigger": "AddPartToDisassemble\tMfgProcessOccurrence,ProductOccurrence",
      "contents": "AddPartToDisassemble(${1:mfgprocessoccurrence}, ${2:productoccurrence})"
    },
    {
      "trigger": "AddPathPlannerMovingObjects\tRscPathPlanner,List",
      "contents": "AddPathPlannerMovingObjects(${1:rscpathplanner}, ${2:list})"
    },
    {
      "trigger": "AddPathPlannerObstacles\tRscPathPlanner,List",
      "contents": "AddPathPlannerObstacles(${1:rscpathplanner}, ${2:list})"
    },
    {
      "trigger": "AddPlaneAssociativity\tCATTPSView,Plane",
      "contents": "AddPlaneAssociativity(${1:cattpsview}, ${2:plane})"
    },
    {
      "trigger": "AddPoint\tDELPointTrajectory,List",
      "contents": "AddPoint(${1:delpointtrajectory}, ${2:list})"
    },
    {
      "trigger": "AddPosition\tMfgPatternUsage,Visualizable,ProductOccurrence,Integer",
      "contents": "AddPosition(${1:mfgpatternusage}, ${2:visualizable}, ${3:productoccurrence}, ${4:int})"
    },
    {
      "trigger": "AddPosition\tMfgPtToPtFeature,Visualizable,Integer,ProductOccurrence,MfgPtToPtSite",
      "contents": "AddPosition(${1:mfgpttoptfeature}, ${2:visualizable}, ${3:int}, ${4:productoccurrence}, ${5:mfgpttoptsite})"
    },
    {
      "trigger": "AddPrecedence\tFFS_Activity,FFS_Activity",
      "contents": "AddPrecedence(${1:ffs_activity}, ${2:ffs_activity})"
    },
    {
      "trigger": "AddProbeToScenario\tDELMfgSimScenario,Feature",
      "contents": "AddProbeToScenario(${1:delmfgsimscenario}, ${2:feat})"
    },
    {
      "trigger": "AddProbingPoint\tMfgProbingMultiPoints,Visualizable,ProductOccurrence,String,Boolean",
      "contents": "AddProbingPoint(${1:mfgprobingmultipoints}, ${2:visualizable}, ${3:productoccurrence}, ${4:name}, ${5:bool})"
    },
    {
      "trigger": "AddProcessOrGroup\tGroupOfProcessInstance,Feature,GroupProcessDiagnostic",
      "contents": "AddProcessOrGroup(${1:groupofprocessinstance}, ${2:feat}, ${3:groupprocessdiagnostic})"
    },
    {
      "trigger": "AddProduct\tFFS_Activity,FFS_Item,Boolean",
      "contents": "AddProduct(${1:ffs_activity}, ${2:ffs_item}, ${3:bool})"
    },
    {
      "trigger": "AddProduct\tFFS_ProductZone,FFS_Item",
      "contents": "AddProduct(${1:ffs_productzone}, ${2:ffs_item})"
    },
    {
      "trigger": "AddProductUserAttributes\tList,List",
      "contents": "AddProductUserAttributes(${1:list}, ${2:list})"
    },
    {
      "trigger": "AddProductZone\tFFS_Resource",
      "contents": "AddProductZone(${1:ffs_resource})"
    },
    {
      "trigger": "AddProductZone\tFFS_Resource,Matrix",
      "contents": "AddProductZone(${1:ffs_resource}, ${2:matrix})"
    },
    {
      "trigger": "AddProfileTemplateUserAttributes\tRscApplicativeProfileGroup,String,RscAttributeValueType",
      "contents": "AddProfileTemplateUserAttributes(${1:rscapplicativeprofilegroup}, ${2:name}, ${3:rscattributevaluetype})"
    },
    {
      "trigger": "AddQtyToBeProducedPerTime\tPLMConnection,Integer",
      "contents": "AddQtyToBeProducedPerTime(${1:plmconnection}, ${2:int})"
    },
    {
      "trigger": "AddRelativePositionExtension\tPLMConnection",
      "contents": "AddRelativePositionExtension(${1:plmconnection})"
    },
    {
      "trigger": "AddRelativeResourcePosition\tProdSystemOccurrence,ResourceOccurrence,List,ObjectType,ResourcePositionReferential,ResourcePositionApplicability,String",
      "contents": "AddRelativeResourcePosition(${1:prodsystemoccurrence}, ${2:resourceoccurrence}, ${3:list}, ${4:objecttype}, ${5:resourcepositionreferential}, ${6:resourcepositionapplicability}, ${7:name})"
    },
    {
      "trigger": "AddRequestHeaders\tHTTPClient,String",
      "contents": "AddRequestHeaders(${1:httpclient}, ${2:name})"
    },
    {
      "trigger": "AddResource\tFFS_Break,FFS_Resource",
      "contents": "AddResource(${1:ffs_break}, ${2:ffs_resource})"
    },
    {
      "trigger": "AddResourcePosition\tProdSystemOccurrence,ResourceOccurrence,List,ObjectType,ResourcePositionReferential,ResourcePositionApplicability,String",
      "contents": "AddResourcePosition(${1:prodsystemoccurrence}, ${2:resourceoccurrence}, ${3:list}, ${4:objecttype}, ${5:resourcepositionreferential}, ${6:resourcepositionapplicability}, ${7:name})"
    },
    {
      "trigger": "AddResourceQty\tSecondaryCandidateResourceLink,Integer",
      "contents": "AddResourceQty(${1:secondarycandidateresourcelink}, ${2:int})"
    },
    {
      "trigger": "AddResourceZone\tFFS_Activity,FFS_ResourceZone",
      "contents": "AddResourceZone(${1:ffs_activity}, ${2:ffs_resourcezone})"
    },
    {
      "trigger": "AddResponsibility\tPLMCoreReference,Organization,ResponsibilityLifeCycleStatus,DELMfgResponsibilityCnx",
      "contents": "AddResponsibility(${1:plmcorereference}, ${2:organization}, ${3:responsibilitylifecyclestatus}, ${4:delmfgresponsibilitycnx})"
    },
    {
      "trigger": "AddRobDRActionInstruction\tRobDrillRivetAction,Feature",
      "contents": "AddRobDRActionInstruction(${1:robdrillrivetaction}, ${2:feat})"
    },
    {
      "trigger": "AddRobDRUserCycle\tRobDrillRivetProfile,String,ProfileCycles",
      "contents": "AddRobDRUserCycle(${1:robdrillrivetprofile}, ${2:name}, ${3:profilecycles})"
    },
    {
      "trigger": "AddRowWithParmValues\tDesignTableType",
      "contents": "AddRowWithParmValues(${1:designtabletype})"
    },
    {
      "trigger": "AddRscGrabbedElement\tRscLogicGrab,ProductOccurrence,ProductOccurrence",
      "contents": "AddRscGrabbedElement(${1:rsclogicgrab}, ${2:productoccurrence}, ${3:productoccurrence})"
    },
    {
      "trigger": "AddRscMotionGroupResource\tRscMotionGroup,ProductOccurrence,Integer,ProductOccurrence",
      "contents": "AddRscMotionGroupResource(${1:rscmotiongroup}, ${2:productoccurrence}, ${3:int}, ${4:productoccurrence})"
    },
    {
      "trigger": "AddRscToolAttachResource\tRscLogicToolAttach,ProductOccurrence,ProductOccurrence",
      "contents": "AddRscToolAttachResource(${1:rsclogictoolattach}, ${2:productoccurrence}, ${3:productoccurrence})"
    },
    {
      "trigger": "AddScallop\tSddPanel,Feature",
      "contents": "AddScallop(${1:sddpanel}, ${2:feat})"
    },
    {
      "trigger": "AddSlot\tSddPanel,Feature",
      "contents": "AddSlot(${1:sddpanel}, ${2:feat})"
    },
    {
      "trigger": "AddSnapshot\tKWETuple,String",
      "contents": "AddSnapshot(${1:kwetuple}, ${2:name})"
    },
    {
      "trigger": "AddSnapshots\tKWETuple,List",
      "contents": "AddSnapshots(${1:kwetuple}, ${2:list})"
    },
    {
      "trigger": "AddSources\tCATDistribute,List,ProductOccurrence",
      "contents": "AddSources(${1:catdistribute}, ${2:list}, ${3:productoccurrence})"
    },
    {
      "trigger": "AddSpecifiedTrain\tFFS_TransportRouteGroup,FFS_TrainBehavior",
      "contents": "AddSpecifiedTrain(${1:ffs_transportroutegroup}, ${2:ffs_trainbehavior})"
    },
    {
      "trigger": "AddStateToScenario\tDELMfgSimScenario,DEL3DState",
      "contents": "AddStateToScenario(${1:delmfgsimscenario}, ${2:del3dstate})"
    },
    {
      "trigger": "AddStiffener\tSldPanel,Feature",
      "contents": "AddStiffener(${1:sldpanel}, ${2:feat})"
    },
    {
      "trigger": "AddStiffenerOnFreeEdge\tSldPanel,Feature",
      "contents": "AddStiffenerOnFreeEdge(${1:sldpanel}, ${2:feat})"
    },
    {
      "trigger": "AddStiffenerToInsulate\tAGTInsulation,Feature",
      "contents": "AddStiffenerToInsulate(${1:agtinsulation}, ${2:feat})"
    },
    {
      "trigger": "AddSubTupleFailed\tKWECheck,Feature",
      "contents": "AddSubTupleFailed(${1:kwecheck}, ${2:feat})"
    },
    {
      "trigger": "AddSubTupleFailedWithWeight\tKWECheck,Integer,Feature",
      "contents": "AddSubTupleFailedWithWeight(${1:kwecheck}, ${2:int}, ${3:feat})"
    },
    {
      "trigger": "AddSubTupleSucceeded\tKWECheck,Feature",
      "contents": "AddSubTupleSucceeded(${1:kwecheck}, ${2:feat})"
    },
    {
      "trigger": "AddSubstitute\tDELFmiFunctionInstance,DELFmiFunctionReference,SubstituteLifeCycleStatus,DELFmiMfgSubstituteCnx",
      "contents": "AddSubstitute(${1:delfmifunctioninstance}, ${2:delfmifunctionreference}, ${3:substitutelifecyclestatus}, ${4:delfmimfgsubstitutecnx})"
    },
    {
      "trigger": "AddSystemComponent\tSys3DAllocationConnection,LogicalOccurrence,List,List",
      "contents": "AddSystemComponent(${1:sys3dallocationconnection}, ${2:logicaloccurrence}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "AddTSAScenarioFasteningObject\tDELMfgSimTSAScenario,Feature,ResourceOccurrence",
      "contents": "AddTSAScenarioFasteningObject(${1:delmfgsimtsascenario}, ${2:feat}, ${3:resourceoccurrence})"
    },
    {
      "trigger": "AddTaskServiceCallToScenario\tDELMfgSimScenario,Feature",
      "contents": "AddTaskServiceCallToScenario(${1:delmfgsimscenario}, ${2:feat})"
    },
    {
      "trigger": "AddTextSymbol\tString,ObjectType,ObjectType",
      "contents": "AddTextSymbol(${1:name}, ${2:objecttype}, ${3:objecttype})"
    },
    {
      "trigger": "AddToElecGroup\tRFLVPMLogicalInstance,RFLVPMLogicalInstance",
      "contents": "AddToElecGroup(${1:rflvpmlogicalinstance}, ${2:rflvpmlogicalinstance})"
    },
    {
      "trigger": "AddToHarness\tLogicalOccurrence,LogicalOccurrence,RFLVPMLogicalPort",
      "contents": "AddToHarness(${1:logicaloccurrence}, ${2:logicaloccurrence}, ${3:rflvpmlogicalport})"
    },
    {
      "trigger": "AddToSelection\tObjectType,Boolean,ObjectType",
      "contents": "AddToSelection(${1:objecttype}, ${2:bool}, ${3:objecttype})"
    },
    {
      "trigger": "AddTool\tResourceNCAssembly,ToolDevice",
      "contents": "AddTool(${1:resourcencassembly}, ${2:tooldevice})"
    },
    {
      "trigger": "AddToolAttachmentType\tMfgBaseTool,String,List",
      "contents": "AddToolAttachmentType(${1:mfgbasetool}, ${2:name}, ${3:list})"
    },
    {
      "trigger": "AddTransferActivity\tFFS_Resource,FFS_Item",
      "contents": "AddTransferActivity(${1:ffs_resource}, ${2:ffs_item})"
    },
    {
      "trigger": "AddTransformActivity\tFFS_ProductZone,List,List",
      "contents": "AddTransformActivity(${1:ffs_productzone}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "AddTupleFailed\tKWECheck,Feature",
      "contents": "AddTupleFailed(${1:kwecheck}, ${2:feat})"
    },
    {
      "trigger": "AddTupleFailedWithComment\tKWECheck,Literal,Feature",
      "contents": "AddTupleFailedWithComment(${1:kwecheck}, ${2:literal}, ${3:feat})"
    },
    {
      "trigger": "AddTupleFailedWithName\tKWECheck,Literal,Literal,Feature",
      "contents": "AddTupleFailedWithName(${1:kwecheck}, ${2:literal}, ${3:literal}, ${4:feat})"
    },
    {
      "trigger": "AddTupleFailedWithWeight\tKWECheck,Integer,Feature",
      "contents": "AddTupleFailedWithWeight(${1:kwecheck}, ${2:int}, ${3:feat})"
    },
    {
      "trigger": "AddTupleSucceeded\tKWECheck,Feature",
      "contents": "AddTupleSucceeded(${1:kwecheck}, ${2:feat})"
    },
    {
      "trigger": "AddTupleSucceededWithComment\tKWECheck,Literal,Feature",
      "contents": "AddTupleSucceededWithComment(${1:kwecheck}, ${2:literal}, ${3:feat})"
    },
    {
      "trigger": "AddTupleSucceededWithName\tKWECheck,Literal,Literal,Feature",
      "contents": "AddTupleSucceededWithName(${1:kwecheck}, ${2:literal}, ${3:literal}, ${4:feat})"
    },
    {
      "trigger": "AddTupleToBeReviewed\tKWECheck,Feature",
      "contents": "AddTupleToBeReviewed(${1:kwecheck}, ${2:feat})"
    },
    {
      "trigger": "AddUnloadActivity\tFFS_ProductZone,FFS_Item",
      "contents": "AddUnloadActivity(${1:ffs_productzone}, ${2:ffs_item})"
    },
    {
      "trigger": "AddUnpackActivity\tFFS_ProductZone,List",
      "contents": "AddUnpackActivity(${1:ffs_productzone}, ${2:list})"
    },
    {
      "trigger": "AddUnpackActivity\tFFS_Resource,FFS_Resource,List",
      "contents": "AddUnpackActivity(${1:ffs_resource}, ${2:ffs_resource}, ${3:list})"
    },
    {
      "trigger": "AddUserParameter\tManufacturingOperation,String,Integer",
      "contents": "AddUserParameter(${1:manufacturingoperation}, ${2:name}, ${3:int})"
    },
    {
      "trigger": "AddUserRepresentation\tToolDevice,VPMReference,String,String,String,String,Boolean",
      "contents": "AddUserRepresentation(${1:tooldevice}, ${2:vpmreference}, ${3:name}, ${4:name}, ${5:name}, ${6:name}, ${7:bool})"
    },
    {
      "trigger": "AddVehicleDecisionPoint\tFFS_RoadSegment,Real,Real,Real,String",
      "contents": "AddVehicleDecisionPoint(${1:ffs_roadsegment}, ${2:real}, ${3:real}, ${4:real}, ${5:name})"
    },
    {
      "trigger": "AdvancedSort\tList,String,List,List,List",
      "contents": "AdvancedSort(${1:list}, ${2:name}, ${3:list}, ${4:list}, ${5:list})"
    },
    {
      "trigger": "AnchorVolume\tBody",
      "contents": "AnchorVolume(${1:body})"
    },
    {
      "trigger": "Append\tList,ObjectType",
      "contents": "Append(${1:list}, ${2:objecttype})"
    },
    {
      "trigger": "AppendActivitySetupPosition\tManufacturingActivity,MfgSetupPosition",
      "contents": "AppendActivitySetupPosition(${1:manufacturingactivity}, ${2:mfgsetupposition})"
    },
    {
      "trigger": "AppendOperation\tManufacturingProgram,String,Boolean",
      "contents": "AppendOperation(${1:manufacturingprogram}, ${2:name}, ${3:bool})"
    },
    {
      "trigger": "Apply3DState\tDEL3DState,List",
      "contents": "Apply3DState(${1:del3dstate}, ${2:list})"
    },
    {
      "trigger": "Apply\tList,String,String",
      "contents": "Apply(${1:list}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "ApplyCableRawMaterial\tElec3DCable,ElecCableRawMaterial",
      "contents": "ApplyCableRawMaterial(${1:elec3dcable}, ${2:eleccablerawmaterial})"
    },
    {
      "trigger": "ApplyHomePosition\tRscHomePositionMgr,RscMotionGroup,String",
      "contents": "ApplyHomePosition(${1:rschomepositionmgr}, ${2:rscmotiongroup}, ${3:name})"
    },
    {
      "trigger": "ApplyMask\tBitmap,Bitmap",
      "contents": "ApplyMask(${1:bitmap}, ${2:bitmap})"
    },
    {
      "trigger": "ApplyProductTableConfigWithDeleteMode\tProductTableType,Integer,Boolean",
      "contents": "ApplyProductTableConfigWithDeleteMode(${1:producttabletype}, ${2:int}, ${3:bool})"
    },
    {
      "trigger": "ApplyView\tPLMOperation,DMUFilterType",
      "contents": "ApplyView(${1:plmoperation}, ${2:dmufiltertype})"
    },
    {
      "trigger": "ApplyViewReUseWhenCopySetTo\tCATTPSSet",
      "contents": "ApplyViewReUseWhenCopySetTo(${1:cattpsset})"
    },
    {
      "trigger": "AreAllBarsIdentical\tAECRebarLayer",
      "contents": "AreAllBarsIdentical(${1:aecrebarlayer})"
    },
    {
      "trigger": "AreAllBendRadiusEqual\tAECRebarLayer,Integer",
      "contents": "AreAllBendRadiusEqual(${1:aecrebarlayer}, ${2:int})"
    },
    {
      "trigger": "AreComponentsDistantlyConnected\tElec3DNetworkNode",
      "contents": "AreComponentsDistantlyConnected(${1:elec3dnetworknode})"
    },
    {
      "trigger": "ArePointsCoplanar\tList",
      "contents": "ArePointsCoplanar(${1:list})"
    },
    {
      "trigger": "Area\tGeometricSurface",
      "contents": "Area(${1:geometricsurface})"
    },
    {
      "trigger": "AsVector\tGeometricPoint",
      "contents": "AsVector(${1:geometricpoint})"
    },
    {
      "trigger": "Asc\tString",
      "contents": "Asc(${1:name})"
    },
    {
      "trigger": "AssignBreak\tFFS_Shift,FFS_Break",
      "contents": "AssignBreak(${1:ffs_shift}, ${2:ffs_break})"
    },
    {
      "trigger": "AssignLayerOnSurface\tCSELayer,Surface",
      "contents": "AssignLayerOnSurface(${1:cselayer}, ${2:surface})"
    },
    {
      "trigger": "AssignOperation\tProdSystemOccurrence,ProdSystemOccurrence",
      "contents": "AssignOperation(${1:prodsystemoccurrence}, ${2:prodsystemoccurrence})"
    },
    {
      "trigger": "AssignOperationWithDetailingTask\tResourceOccurrence,ProdSystemOccurrence,DNBResourceTask",
      "contents": "AssignOperationWithDetailingTask(${1:resourceoccurrence}, ${2:prodsystemoccurrence}, ${3:dnbresourcetask})"
    },
    {
      "trigger": "AssignProcess\tProdSystemOccurrence,FProcessOccurrence",
      "contents": "AssignProcess(${1:prodsystemoccurrence}, ${2:fprocessoccurrence})"
    },
    {
      "trigger": "AssignProcess\tProdSystemOccurrence,FProcessOccurrence,String",
      "contents": "AssignProcess(${1:prodsystemoccurrence}, ${2:fprocessoccurrence}, ${3:name})"
    },
    {
      "trigger": "AssignProcessInLowerScope\tProdSystemOccurrence,List",
      "contents": "AssignProcessInLowerScope(${1:prodsystemoccurrence}, ${2:list})"
    },
    {
      "trigger": "AssignProcessInLowerScope\tProdSystemOccurrence,List,List,List",
      "contents": "AssignProcessInLowerScope(${1:prodsystemoccurrence}, ${2:list}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "AssignProduct\tMfgProcessOccurrence,ProductOccurrence",
      "contents": "AssignProduct(${1:mfgprocessoccurrence}, ${2:productoccurrence})"
    },
    {
      "trigger": "AssignProductPath\tMfgProcessOccurrence,List",
      "contents": "AssignProductPath(${1:mfgprocessoccurrence}, ${2:list})"
    },
    {
      "trigger": "AssignRequirementToDataCollectPlanOrCheckList\tProdSystemOccurrence,ProdSystemOccurrence,Requirement",
      "contents": "AssignRequirementToDataCollectPlanOrCheckList(${1:prodsystemoccurrence}, ${2:prodsystemoccurrence}, ${3:requirement})"
    },
    {
      "trigger": "AssignResourcePool\tFFS_Activity,FFS_ResourcePool",
      "contents": "AssignResourcePool(${1:ffs_activity}, ${2:ffs_resourcepool})"
    },
    {
      "trigger": "AssignResourceZone\tFFS_Break,FFS_ResourceZone",
      "contents": "AssignResourceZone(${1:ffs_break}, ${2:ffs_resourcezone})"
    },
    {
      "trigger": "AssignShift\tFFS_Date,FFS_Shift",
      "contents": "AssignShift(${1:ffs_date}, ${2:ffs_shift})"
    },
    {
      "trigger": "AssignShiftEndResourceZone\tFFS_Shift,FFS_ResourceZone",
      "contents": "AssignShiftEndResourceZone(${1:ffs_shift}, ${2:ffs_resourcezone})"
    },
    {
      "trigger": "AssignSolidOnBody\tCSESolid,Body",
      "contents": "AssignSolidOnBody(${1:csesolid}, ${2:body})"
    },
    {
      "trigger": "AssignSystem\tResourceOccurrence,ProdSystemOccurrence",
      "contents": "AssignSystem(${1:resourceoccurrence}, ${2:prodsystemoccurrence})"
    },
    {
      "trigger": "AssignUserLogic\tFFS_Activity,FFS_UserLogic",
      "contents": "AssignUserLogic(${1:ffs_activity}, ${2:ffs_userlogic})"
    },
    {
      "trigger": "AssignVolume\tProductOccurrence,Feature,ProductOccurrence",
      "contents": "AssignVolume(${1:productoccurrence}, ${2:feat}, ${3:productoccurrence})"
    },
    {
      "trigger": "Associate2DMainview\tRFLPLMFunctionalReference",
      "contents": "Associate2DMainview(${1:rflplmfunctionalreference})"
    },
    {
      "trigger": "AssociateContract\tRFLPLMFlowExpositionInstance,RFLPLMFunctionalContract",
      "contents": "AssociateContract(${1:rflplmflowexpositioninstance}, ${2:rflplmfunctionalcontract})"
    },
    {
      "trigger": "AssociateRoutable\tLogicalOccurrence,LogicalOccurrence",
      "contents": "AssociateRoutable(${1:logicaloccurrence}, ${2:logicaloccurrence})"
    },
    {
      "trigger": "AssociatedEquipmentCenter\tRFLVPMLogicalInstance",
      "contents": "AssociatedEquipmentCenter(${1:rflvpmlogicalinstance})"
    },
    {
      "trigger": "AssociatedPCPFromPort\tRFLVPMLogicalInstance,RFLVPMLogicalPort,RFLVPMLogicalInstance,RFLVPMLogicalPublication",
      "contents": "AssociatedPCPFromPort(${1:rflvpmlogicalinstance}, ${2:rflvpmlogicalport}, ${3:rflvpmlogicalinstance}, ${4:rflvpmlogicalpublication})"
    },
    {
      "trigger": "AssociatedPortsToPCP\tRFLVPMLogicalPublication,RFLVPMLogicalInstance,List,List",
      "contents": "AssociatedPortsToPCP(${1:rflvpmlogicalpublication}, ${2:rflvpmlogicalinstance}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "Attach\tDNBTagGroup,Feature",
      "contents": "Attach(${1:dnbtaggroup}, ${2:feat})"
    },
    {
      "trigger": "Attach\tHumanActivityManager,List,HAReport",
      "contents": "Attach(${1:humanactivitymanager}, ${2:list}, ${3:hareport})"
    },
    {
      "trigger": "AttachDocument\tPLMConnection,Feature",
      "contents": "AttachDocument(${1:plmconnection}, ${2:feat})"
    },
    {
      "trigger": "AttachDocumentOnRscDetail\tPLMConnection,Feature",
      "contents": "AttachDocumentOnRscDetail(${1:plmconnection}, ${2:feat})"
    },
    {
      "trigger": "AttachTagGroups\tList,List",
      "contents": "AttachTagGroups(${1:list}, ${2:list})"
    },
    {
      "trigger": "AuthorizedValues\tLiteral",
      "contents": "AuthorizedValues(${1:literal})"
    },
    {
      "trigger": "AutoRRSConnect\tRRSConnectionMgr",
      "contents": "AutoRRSConnect(${1:rrsconnectionmgr})"
    },
    {
      "trigger": "AutomaticToolGrouping\tProductOccurrence,Integer,String,String,String,String,Integer,Integer",
      "contents": "AutomaticToolGrouping(${1:productoccurrence}, ${2:int}, ${3:name}, ${4:name}, ${5:name}, ${6:name}, ${7:int}, ${8:int})"
    },
    {
      "trigger": "Axis\tGeometricCircle",
      "contents": "Axis(${1:geometriccircle})"
    },
    {
      "trigger": "AxisSystemSetCurrent\tAxisSystem,Boolean",
      "contents": "AxisSystemSetCurrent(${1:axissystem}, ${2:bool})"
    },
    {
      "trigger": "BeforeDelete\tUserFeature",
      "contents": "BeforeDelete(${1:userfeature})"
    },
    {
      "trigger": "BeforeUpdate\tUserFeature",
      "contents": "BeforeUpdate(${1:userfeature})"
    },
    {
      "trigger": "BelongsToFrozenEvolution\tPLMCoreInstance",
      "contents": "BelongsToFrozenEvolution(${1:plmcoreinstance})"
    },
    {
      "trigger": "BelongsToSameFst\tMCX,MCX",
      "contents": "BelongsToSameFst(${1:mcx}, ${2:mcx})"
    },
    {
      "trigger": "BoolToInteger\tBoolean",
      "contents": "BoolToInteger(${1:bool})"
    },
    {
      "trigger": "BoolToReal\tBoolean",
      "contents": "BoolToReal(${1:bool})"
    },
    {
      "trigger": "Boundary\tGeometricSurface",
      "contents": "Boundary(${1:geometricsurface})"
    },
    {
      "trigger": "BuildDate\t()",
      "contents": "BuildDate()"
    },
    {
      "trigger": "BuildDate\tInteger,Integer,Integer",
      "contents": "BuildDate(${1:int}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "BuildDate\tInteger,Integer,Integer,Integer,Integer,Integer",
      "contents": "BuildDate(${1:int}, ${2:int}, ${3:int}, ${4:int}, ${5:int}, ${6:int})"
    },
    {
      "trigger": "BuildDeferredMessageNLS\tString,String,Literal",
      "contents": "BuildDeferredMessageNLS(${1:name}, ${2:name}, ${3:literal})"
    },
    {
      "trigger": "BuildFromGeometricObject\tWireframe,GeometricObject",
      "contents": "BuildFromGeometricObject(${1:wireframe}, ${2:geometricobject})"
    },
    {
      "trigger": "BuildMessageNLS\tString,String,Literal",
      "contents": "BuildMessageNLS(${1:name}, ${2:name}, ${3:literal})"
    },
    {
      "trigger": "BuildTriMesh\tList,List",
      "contents": "BuildTriMesh(${1:list}, ${2:list})"
    },
    {
      "trigger": "CAAHypothenuse\tLENGTH,LENGTH",
      "contents": "CAAHypothenuse(${1:len}, ${2:len})"
    },
    {
      "trigger": "CANCEL\tCATKwdDialogWindow",
      "contents": "CANCEL(${1:catkwddialogwindow})"
    },
    {
      "trigger": "CGM4PointsBezierCurve\tGeometricPoint,GeometricPoint,GeometricPoint,GeometricPoint",
      "contents": "CGM4PointsBezierCurve(${1:geometricpoint}, ${2:geometricpoint}, ${3:geometricpoint}, ${4:geometricpoint})"
    },
    {
      "trigger": "CGMAdd\tList",
      "contents": "CGMAdd(${1:list})"
    },
    {
      "trigger": "CGMAdjacentCells\tGeometricObject,GeometricObject,Integer",
      "contents": "CGMAdjacentCells(${1:geometricobject}, ${2:geometricobject}, ${3:int})"
    },
    {
      "trigger": "CGMAffinity\tGeometricObject,GeometricPoint,GeometricPlane,GeometricLine,Real,Real,Real",
      "contents": "CGMAffinity(${1:geometricobject}, ${2:geometricpoint}, ${3:geometricplane}, ${4:geometricline}, ${5:real}, ${6:real}, ${7:real})"
    },
    {
      "trigger": "CGMAngleVectors\tVector,Vector,Vector",
      "contents": "CGMAngleVectors(${1:vector}, ${2:vector}, ${3:vector})"
    },
    {
      "trigger": "CGMArePointsCoplanar\tList",
      "contents": "CGMArePointsCoplanar(${1:list})"
    },
    {
      "trigger": "CGMArea\tGeometricObject",
      "contents": "CGMArea(${1:geometricobject})"
    },
    {
      "trigger": "CGMAssemble\tList,Boolean",
      "contents": "CGMAssemble(${1:list}, ${2:bool})"
    },
    {
      "trigger": "CGMAutoFillet\tGeometricSurface,Integer,GeometricSurface,LENGTH,LENGTH,Boolean,Boolean",
      "contents": "CGMAutoFillet(${1:geometricsurface}, ${2:int}, ${3:geometricsurface}, ${4:len}, ${5:len}, ${6:bool}, ${7:bool})"
    },
    {
      "trigger": "CGMBReps\tGeometricObject,Integer",
      "contents": "CGMBReps(${1:geometricobject}, ${2:int})"
    },
    {
      "trigger": "CGMBarycenter\tList,List",
      "contents": "CGMBarycenter(${1:list}, ${2:list})"
    },
    {
      "trigger": "CGMBezierPtsCurve\tList,Integer",
      "contents": "CGMBezierPtsCurve(${1:list}, ${2:int})"
    },
    {
      "trigger": "CGMBlend\tGeometricCurve,GeometricCurve,GeometricSurface,GeometricSurface,Integer,Integer,Real,Real",
      "contents": "CGMBlend(${1:geometriccurve}, ${2:geometriccurve}, ${3:geometricsurface}, ${4:geometricsurface}, ${5:int}, ${6:int}, ${7:real}, ${8:real})"
    },
    {
      "trigger": "CGMBoundary\tGeometricObject",
      "contents": "CGMBoundary(${1:geometricobject})"
    },
    {
      "trigger": "CGMBump\tGeometricObject,GeometricCurve,GeometricPoint,Vector,LENGTH,Integer,Vector,Real",
      "contents": "CGMBump(${1:geometricobject}, ${2:geometriccurve}, ${3:geometricpoint}, ${4:vector}, ${5:len}, ${6:int}, ${7:vector}, ${8:real})"
    },
    {
      "trigger": "CGMCatenary\tGeometricPoint,GeometricPoint,Vector,LENGTH",
      "contents": "CGMCatenary(${1:geometricpoint}, ${2:geometricpoint}, ${3:vector}, ${4:len})"
    },
    {
      "trigger": "CGMCenterOfGravity\tGeometricObject",
      "contents": "CGMCenterOfGravity(${1:geometricobject})"
    },
    {
      "trigger": "CGMCircle2PtsRadius\tGeometricPoint,GeometricPoint,GeometricSurface,LENGTH,Boolean,Boolean",
      "contents": "CGMCircle2PtsRadius(${1:geometricpoint}, ${2:geometricpoint}, ${3:geometricsurface}, ${4:len}, ${5:bool}, ${6:bool})"
    },
    {
      "trigger": "CGMCircle3Pts\tGeometricPoint,GeometricPoint,GeometricPoint,Boolean,Boolean",
      "contents": "CGMCircle3Pts(${1:geometricpoint}, ${2:geometricpoint}, ${3:geometricpoint}, ${4:bool}, ${5:bool})"
    },
    {
      "trigger": "CGMCircleCtrPt\tGeometricPoint,GeometricPoint,GeometricPlane,Integer,ANGLE,ANGLE",
      "contents": "CGMCircleCtrPt(${1:geometricpoint}, ${2:geometricpoint}, ${3:geometricplane}, ${4:int}, ${5:angle}, ${6:angle})"
    },
    {
      "trigger": "CGMCircleCtrRadius\tGeometricPoint,LENGTH,GeometricPlane,Integer,ANGLE,ANGLE",
      "contents": "CGMCircleCtrRadius(${1:geometricpoint}, ${2:len}, ${3:geometricplane}, ${4:int}, ${5:angle}, ${6:angle})"
    },
    {
      "trigger": "CGMCloseSurface\tGeometricSurface",
      "contents": "CGMCloseSurface(${1:geometricsurface})"
    },
    {
      "trigger": "CGMClosestPoints\tGeometricObject,GeometricObject,GeometricPoint,GeometricPoint",
      "contents": "CGMClosestPoints(${1:geometricobject}, ${2:geometricobject}, ${3:geometricpoint}, ${4:geometricpoint})"
    },
    {
      "trigger": "CGMCone\tGeometricPoint,ObjectType,GeometricPlane,LENGTH,Vector",
      "contents": "CGMCone(${1:geometricpoint}, ${2:objecttype}, ${3:geometricplane}, ${4:len}, ${5:vector})"
    },
    {
      "trigger": "CGMConvertToPoly\tGeometricObject",
      "contents": "CGMConvertToPoly(${1:geometricobject})"
    },
    {
      "trigger": "CGMCorners\tGeometricCurve,LENGTH,GeometricSurface",
      "contents": "CGMCorners(${1:geometriccurve}, ${2:len}, ${3:geometricsurface})"
    },
    {
      "trigger": "CGMCurvature\tGeometricCurve,GeometricPoint",
      "contents": "CGMCurvature(${1:geometriccurve}, ${2:geometricpoint})"
    },
    {
      "trigger": "CGMCurvatureCenter\tGeometricCurve,GeometricPoint",
      "contents": "CGMCurvatureCenter(${1:geometriccurve}, ${2:geometricpoint})"
    },
    {
      "trigger": "CGMCurveParallel\tGeometricCurve,GeometricSurface,ObjectType,Boolean,Integer",
      "contents": "CGMCurveParallel(${1:geometriccurve}, ${2:geometricsurface}, ${3:objecttype}, ${4:bool}, ${5:int})"
    },
    {
      "trigger": "CGMCurveParallelLaw\tGeometricCurve,GeometricSurface,MathFunction",
      "contents": "CGMCurveParallelLaw(${1:geometriccurve}, ${2:geometricsurface}, ${3:mathfunction})"
    },
    {
      "trigger": "CGMCurvePtRef\tGeometricCurve,GeometricPoint",
      "contents": "CGMCurvePtRef(${1:geometriccurve}, ${2:geometricpoint})"
    },
    {
      "trigger": "CGMCurveSmooth\tGeometricCurve,GeometricSurface,LENGTH",
      "contents": "CGMCurveSmooth(${1:geometriccurve}, ${2:geometricsurface}, ${3:len})"
    },
    {
      "trigger": "CGMDeformSurface\tGeometricSurface,List,List,Real",
      "contents": "CGMDeformSurface(${1:geometricsurface}, ${2:list}, ${3:list}, ${4:real})"
    },
    {
      "trigger": "CGMDisassemble\tGeometricObject",
      "contents": "CGMDisassemble(${1:geometricobject})"
    },
    {
      "trigger": "CGMDistance\tGeometricObject,GeometricObject,Vector",
      "contents": "CGMDistance(${1:geometricobject}, ${2:geometricobject}, ${3:vector})"
    },
    {
      "trigger": "CGMDivideSurface\tGeometricSurface,List",
      "contents": "CGMDivideSurface(${1:geometricsurface}, ${2:list})"
    },
    {
      "trigger": "CGMEllipse2Focals\tGeometricPoint,GeometricPoint,GeometricPlane,Real",
      "contents": "CGMEllipse2Focals(${1:geometricpoint}, ${2:geometricpoint}, ${3:geometricplane}, ${4:real})"
    },
    {
      "trigger": "CGMEllipse\tGeometricPoint,GeometricPlane,LENGTH,LENGTH,ANGLE",
      "contents": "CGMEllipse(${1:geometricpoint}, ${2:geometricplane}, ${3:len}, ${4:len}, ${5:angle})"
    },
    {
      "trigger": "CGMEvalPointRatioOnCurve\tGeometricPoint,GeometricCurve",
      "contents": "CGMEvalPointRatioOnCurve(${1:geometricpoint}, ${2:geometriccurve})"
    },
    {
      "trigger": "CGMExtrapolCrv\tGeometricCurve,GeometricSurface,Integer,LENGTH,LENGTH,Boolean",
      "contents": "CGMExtrapolCrv(${1:geometriccurve}, ${2:geometricsurface}, ${3:int}, ${4:len}, ${5:len}, ${6:bool})"
    },
    {
      "trigger": "CGMExtrapolSur\tGeometricSurface,List,Integer,LENGTH,Integer",
      "contents": "CGMExtrapolSur(${1:geometricsurface}, ${2:list}, ${3:int}, ${4:len}, ${5:int})"
    },
    {
      "trigger": "CGMExtremum\tGeometricObject,Vector,Boolean,Vector,Boolean,Vector,Boolean",
      "contents": "CGMExtremum(${1:geometricobject}, ${2:vector}, ${3:bool}, ${4:vector}, ${5:bool}, ${6:vector}, ${7:bool})"
    },
    {
      "trigger": "CGMExtrude\tGeometricCurve,Vector,LENGTH,LENGTH,Boolean",
      "contents": "CGMExtrude(${1:geometriccurve}, ${2:vector}, ${3:len}, ${4:len}, ${5:bool})"
    },
    {
      "trigger": "CGMFill\tGeometricCurve,GeometricCurve,List,GeometricSurface,Integer,GeometricSurface,Integer",
      "contents": "CGMFill(${1:geometriccurve}, ${2:geometriccurve}, ${3:list}, ${4:geometricsurface}, ${5:int}, ${6:geometricsurface}, ${7:int})"
    },
    {
      "trigger": "CGMFillet\tGeometricSurface,List,List",
      "contents": "CGMFillet(${1:geometricsurface}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "CGMGeodesicLine\tGeometricPoint,GeometricPoint,GeometricSurface",
      "contents": "CGMGeodesicLine(${1:geometricpoint}, ${2:geometricpoint}, ${3:geometricsurface})"
    },
    {
      "trigger": "CGMGroupByCont\tList,Integer",
      "contents": "CGMGroupByCont(${1:list}, ${2:int})"
    },
    {
      "trigger": "CGMHelix\tGeometricPoint,GeometricLine,LENGTH,ANGLE,ANGLE,Boolean,Boolean",
      "contents": "CGMHelix(${1:geometricpoint}, ${2:geometricline}, ${3:len}, ${4:angle}, ${5:angle}, ${6:bool}, ${7:bool})"
    },
    {
      "trigger": "CGMHyperbola\tGeometricPoint,GeometricPlane,LENGTH,LENGTH,LENGTH,LENGTH",
      "contents": "CGMHyperbola(${1:geometricpoint}, ${2:geometricplane}, ${3:len}, ${4:len}, ${5:len}, ${6:len})"
    },
    {
      "trigger": "CGMInertiaAxis\tGeometricObject,Integer",
      "contents": "CGMInertiaAxis(${1:geometricobject}, ${2:int})"
    },
    {
      "trigger": "CGMIntersect\tGeometricObject,GeometricObject",
      "contents": "CGMIntersect(${1:geometricobject}, ${2:geometricobject})"
    },
    {
      "trigger": "CGMInverse\tGeometricObject",
      "contents": "CGMInverse(${1:geometricobject})"
    },
    {
      "trigger": "CGMIsClosed\tGeometricCurve",
      "contents": "CGMIsClosed(${1:geometriccurve})"
    },
    {
      "trigger": "CGMIsClosedAlongDirection\tGeometricSurface,Boolean",
      "contents": "CGMIsClosedAlongDirection(${1:geometricsurface}, ${2:bool})"
    },
    {
      "trigger": "CGMIsLyingOn\tGeometricObject,GeometricObject,Integer",
      "contents": "CGMIsLyingOn(${1:geometricobject}, ${2:geometricobject}, ${3:int})"
    },
    {
      "trigger": "CGMIsoParamCurve\tGeometricSurface,Boolean,Real",
      "contents": "CGMIsoParamCurve(${1:geometricsurface}, ${2:bool}, ${3:real})"
    },
    {
      "trigger": "CGMIsoParamCurvePoint\tGeometricSurface,GeometricPoint,Real,Boolean",
      "contents": "CGMIsoParamCurvePoint(${1:geometricsurface}, ${2:geometricpoint}, ${3:real}, ${4:bool})"
    },
    {
      "trigger": "CGMLength\tGeometricCurve",
      "contents": "CGMLength(${1:geometriccurve})"
    },
    {
      "trigger": "CGMLine\tGeometricPoint,GeometricPoint,LENGTH,LENGTH,GeometricSurface",
      "contents": "CGMLine(${1:geometricpoint}, ${2:geometricpoint}, ${3:len}, ${4:len}, ${5:geometricsurface})"
    },
    {
      "trigger": "CGMLineAngle\tGeometricCurve,GeometricSurface,GeometricPoint,ANGLE,LENGTH,LENGTH,Boolean,Boolean",
      "contents": "CGMLineAngle(${1:geometriccurve}, ${2:geometricsurface}, ${3:geometricpoint}, ${4:angle}, ${5:len}, ${6:len}, ${7:bool}, ${8:bool})"
    },
    {
      "trigger": "CGMLineAxis\tGeometricCurve",
      "contents": "CGMLineAxis(${1:geometriccurve})"
    },
    {
      "trigger": "CGMLineNormal\tGeometricSurface,GeometricPoint,LENGTH,LENGTH,Boolean",
      "contents": "CGMLineNormal(${1:geometricsurface}, ${2:geometricpoint}, ${3:len}, ${4:len}, ${5:bool})"
    },
    {
      "trigger": "CGMLinePtDir\tGeometricPoint,Vector,LENGTH,LENGTH,Boolean",
      "contents": "CGMLinePtDir(${1:geometricpoint}, ${2:vector}, ${3:len}, ${4:len}, ${5:bool})"
    },
    {
      "trigger": "CGMLineTangent\tGeometricCurve,GeometricPoint,LENGTH,LENGTH,Boolean",
      "contents": "CGMLineTangent(${1:geometriccurve}, ${2:geometricpoint}, ${3:len}, ${4:len}, ${5:bool})"
    },
    {
      "trigger": "CGMLoft\tList,List,List,GeometricSurface,Integer,GeometricSurface,Integer,List,List,List,GeometricCurve",
      "contents": "CGMLoft(${1:list}, ${2:list}, ${3:list}, ${4:geometricsurface}, ${5:int}, ${6:geometricsurface}, ${7:int}, ${8:list}, ${9:list}, ${10:list}, ${11:geometriccurve})"
    },
    {
      "trigger": "CGMMapCurve\tGeometricCurve,GeometricLine,GeometricPlane",
      "contents": "CGMMapCurve(${1:geometriccurve}, ${2:geometricline}, ${3:geometricplane})"
    },
    {
      "trigger": "CGMMorphSurface\tGeometricSurface,List,List,List,List,List",
      "contents": "CGMMorphSurface(${1:geometricsurface}, ${2:list}, ${3:list}, ${4:list}, ${5:list}, ${6:list})"
    },
    {
      "trigger": "CGMMove\tGeometricObject,Matrix,Matrix",
      "contents": "CGMMove(${1:geometricobject}, ${2:matrix}, ${3:matrix})"
    },
    {
      "trigger": "CGMNear\tGeometricObject,GeometricObject,Boolean,Integer",
      "contents": "CGMNear(${1:geometricobject}, ${2:geometricobject}, ${3:bool}, ${4:int})"
    },
    {
      "trigger": "CGMNearCollection\tList,GeometricObject,Boolean",
      "contents": "CGMNearCollection(${1:list}, ${2:geometricobject}, ${3:bool})"
    },
    {
      "trigger": "CGMNesting\tList,List,Real,LENGTH,Boolean,List,Boolean",
      "contents": "CGMNesting(${1:list}, ${2:list}, ${3:real}, ${4:len}, ${5:bool}, ${6:list}, ${7:bool})"
    },
    {
      "trigger": "CGMNet\tList,List",
      "contents": "CGMNet(${1:list}, ${2:list})"
    },
    {
      "trigger": "CGMNurbsCurve\tList,Integer,Boolean",
      "contents": "CGMNurbsCurve(${1:list}, ${2:int}, ${3:bool})"
    },
    {
      "trigger": "CGMNurbsSurface\tList,Integer,Integer,Boolean",
      "contents": "CGMNurbsSurface(${1:list}, ${2:int}, ${3:int}, ${4:bool})"
    },
    {
      "trigger": "CGMOffset\tGeometricSurface,LENGTH",
      "contents": "CGMOffset(${1:geometricsurface}, ${2:len})"
    },
    {
      "trigger": "CGMOrientCurve\tGeometricCurve,GeometricPoint,Vector,Boolean",
      "contents": "CGMOrientCurve(${1:geometriccurve}, ${2:geometricpoint}, ${3:vector}, ${4:bool})"
    },
    {
      "trigger": "CGMOrientPlane\tGeometricPlane,Vector",
      "contents": "CGMOrientPlane(${1:geometricplane}, ${2:vector})"
    },
    {
      "trigger": "CGMOrientSurface\tGeometricSurface,GeometricPoint,Vector",
      "contents": "CGMOrientSurface(${1:geometricsurface}, ${2:geometricpoint}, ${3:vector})"
    },
    {
      "trigger": "CGMParabola\tGeometricPoint,GeometricPlane,LENGTH,LENGTH,LENGTH",
      "contents": "CGMParabola(${1:geometricpoint}, ${2:geometricplane}, ${3:len}, ${4:len}, ${5:len})"
    },
    {
      "trigger": "CGMParametricCurve\tString,String,String,Real,Real",
      "contents": "CGMParametricCurve(${1:name}, ${2:name}, ${3:name}, ${4:real}, ${5:real})"
    },
    {
      "trigger": "CGMParametricSurface\tMathFunctionUV,MathFunctionUV,MathFunctionUV,Real,Real,Real,Real,Real",
      "contents": "CGMParametricSurface(${1:mathfunctionuv}, ${2:mathfunctionuv}, ${3:mathfunctionuv}, ${4:real}, ${5:real}, ${6:real}, ${7:real}, ${8:real})"
    },
    {
      "trigger": "CGMPlane1Curve\tGeometricCurve",
      "contents": "CGMPlane1Curve(${1:geometriccurve})"
    },
    {
      "trigger": "CGMPlane3Pts\tGeometricPoint,GeometricPoint,GeometricPoint",
      "contents": "CGMPlane3Pts(${1:geometricpoint}, ${2:geometricpoint}, ${3:geometricpoint})"
    },
    {
      "trigger": "CGMPlane\tGeometricLine,GeometricLine",
      "contents": "CGMPlane(${1:geometricline}, ${2:geometricline})"
    },
    {
      "trigger": "CGMPlaneAngle\tGeometricPlane,GeometricLine,ANGLE,Boolean",
      "contents": "CGMPlaneAngle(${1:geometricplane}, ${2:geometricline}, ${3:angle}, ${4:bool})"
    },
    {
      "trigger": "CGMPlaneMean\tList",
      "contents": "CGMPlaneMean(${1:list})"
    },
    {
      "trigger": "CGMPlaneNormal\tGeometricCurve,GeometricPoint",
      "contents": "CGMPlaneNormal(${1:geometriccurve}, ${2:geometricpoint})"
    },
    {
      "trigger": "CGMPlaneOffset\tGeometricPlane,LENGTH,Boolean",
      "contents": "CGMPlaneOffset(${1:geometricplane}, ${2:len}, ${3:bool})"
    },
    {
      "trigger": "CGMPlaneOffsetPt\tGeometricPlane,GeometricPoint",
      "contents": "CGMPlaneOffsetPt(${1:geometricplane}, ${2:geometricpoint})"
    },
    {
      "trigger": "CGMPlanePointLine\tGeometricPoint,GeometricLine",
      "contents": "CGMPlanePointLine(${1:geometricpoint}, ${2:geometricline})"
    },
    {
      "trigger": "CGMPlaneTangent\tGeometricSurface,GeometricPoint",
      "contents": "CGMPlaneTangent(${1:geometricsurface}, ${2:geometricpoint})"
    },
    {
      "trigger": "CGMPoint\tLENGTH,LENGTH,LENGTH,GeometricPoint",
      "contents": "CGMPoint(${1:len}, ${2:len}, ${3:len}, ${4:geometricpoint})"
    },
    {
      "trigger": "CGMPoint\tVector,GeometricPoint",
      "contents": "CGMPoint(${1:vector}, ${2:geometricpoint})"
    },
    {
      "trigger": "CGMPointBetween\tGeometricPoint,GeometricPoint,Real,Boolean,GeometricObject",
      "contents": "CGMPointBetween(${1:geometricpoint}, ${2:geometricpoint}, ${3:real}, ${4:bool}, ${5:geometricobject})"
    },
    {
      "trigger": "CGMPointOnCurve\tGeometricCurve,GeometricPoint,LENGTH,Boolean",
      "contents": "CGMPointOnCurve(${1:geometriccurve}, ${2:geometricpoint}, ${3:len}, ${4:bool})"
    },
    {
      "trigger": "CGMPointOnCurveRatio\tGeometricCurve,GeometricPoint,Real,Boolean",
      "contents": "CGMPointOnCurveRatio(${1:geometriccurve}, ${2:geometricpoint}, ${3:real}, ${4:bool})"
    },
    {
      "trigger": "CGMPointOnPlane\tGeometricPlane,GeometricPoint,LENGTH,LENGTH",
      "contents": "CGMPointOnPlane(${1:geometricplane}, ${2:geometricpoint}, ${3:len}, ${4:len})"
    },
    {
      "trigger": "CGMPointOnSurface\tGeometricSurface,Real,Real",
      "contents": "CGMPointOnSurface(${1:geometricsurface}, ${2:real}, ${3:real})"
    },
    {
      "trigger": "CGMPointOnSurfaceFromCenter\tGeometricSurface,GeometricPoint,LENGTH,LENGTH,Integer",
      "contents": "CGMPointOnSurfaceFromCenter(${1:geometricsurface}, ${2:geometricpoint}, ${3:len}, ${4:len}, ${5:int})"
    },
    {
      "trigger": "CGMPolarCurve\tString,String,ANGLE,ANGLE,Boolean",
      "contents": "CGMPolarCurve(${1:name}, ${2:name}, ${3:angle}, ${4:angle}, ${5:bool})"
    },
    {
      "trigger": "CGMPolygon2Pts\tGeometricPoint,GeometricPoint,GeometricPlane,Integer,Real",
      "contents": "CGMPolygon2Pts(${1:geometricpoint}, ${2:geometricpoint}, ${3:geometricplane}, ${4:int}, ${5:real})"
    },
    {
      "trigger": "CGMPolygon\tGeometricPoint,GeometricPlane,Integer,LENGTH,ANGLE,Real",
      "contents": "CGMPolygon(${1:geometricpoint}, ${2:geometricplane}, ${3:int}, ${4:len}, ${5:angle}, ${6:real})"
    },
    {
      "trigger": "CGMPolyhedron\tList",
      "contents": "CGMPolyhedron(${1:list})"
    },
    {
      "trigger": "CGMPolyline\tList,Boolean",
      "contents": "CGMPolyline(${1:list}, ${2:bool})"
    },
    {
      "trigger": "CGMProject\tGeometricObject,GeometricObject,Vector,Integer,GeometricPoint",
      "contents": "CGMProject(${1:geometricobject}, ${2:geometricobject}, ${3:vector}, ${4:int}, ${5:geometricpoint})"
    },
    {
      "trigger": "CGMRectangle2Pts\tGeometricPoint,GeometricPoint,GeometricPlane,Vector,Boolean",
      "contents": "CGMRectangle2Pts(${1:geometricpoint}, ${2:geometricpoint}, ${3:geometricplane}, ${4:vector}, ${5:bool})"
    },
    {
      "trigger": "CGMRectangle3Pts\tGeometricPoint,GeometricPoint,GeometricPoint",
      "contents": "CGMRectangle3Pts(${1:geometricpoint}, ${2:geometricpoint}, ${3:geometricpoint})"
    },
    {
      "trigger": "CGMRemove\tGeometricVolume,GeometricVolume",
      "contents": "CGMRemove(${1:geometricvolume}, ${2:geometricvolume})"
    },
    {
      "trigger": "CGMRemoveFaces\tGeometricSurface,List",
      "contents": "CGMRemoveFaces(${1:geometricsurface}, ${2:list})"
    },
    {
      "trigger": "CGMRevolve\tGeometricObject,GeometricLine,ANGLE,ANGLE,Integer,Boolean",
      "contents": "CGMRevolve(${1:geometricobject}, ${2:geometricline}, ${3:angle}, ${4:angle}, ${5:int}, ${6:bool})"
    },
    {
      "trigger": "CGMRollingOffset\tGeometricCurve,GeometricSurface,LENGTH,Boolean",
      "contents": "CGMRollingOffset(${1:geometriccurve}, ${2:geometricsurface}, ${3:len}, ${4:bool})"
    },
    {
      "trigger": "CGMRotate\tGeometricObject,GeometricLine,ANGLE",
      "contents": "CGMRotate(${1:geometricobject}, ${2:geometricline}, ${3:angle})"
    },
    {
      "trigger": "CGMSampleCurve\tGeometricCurve,LENGTH,LENGTH,ANGLE",
      "contents": "CGMSampleCurve(${1:geometriccurve}, ${2:len}, ${3:len}, ${4:angle})"
    },
    {
      "trigger": "CGMScaling\tGeometricObject,GeometricObject,Real",
      "contents": "CGMScaling(${1:geometricobject}, ${2:geometricobject}, ${3:real})"
    },
    {
      "trigger": "CGMShapeFillet\tGeometricSurface,GeometricSurface,LENGTH,Boolean,Boolean",
      "contents": "CGMShapeFillet(${1:geometricsurface}, ${2:geometricsurface}, ${3:len}, ${4:bool}, ${5:bool})"
    },
    {
      "trigger": "CGMShell\tGeometricVolume,LENGTH,LENGTH",
      "contents": "CGMShell(${1:geometricvolume}, ${2:len}, ${3:len})"
    },
    {
      "trigger": "CGMShortestPath\tList,List,GeometricPoint,GeometricPoint,List",
      "contents": "CGMShortestPath(${1:list}, ${2:list}, ${3:geometricpoint}, ${4:geometricpoint}, ${5:list})"
    },
    {
      "trigger": "CGMSilhouetteConical\tGeometricObject,GeometricPoint,Boolean,Boolean,Boolean",
      "contents": "CGMSilhouetteConical(${1:geometricobject}, ${2:geometricpoint}, ${3:bool}, ${4:bool}, ${5:bool})"
    },
    {
      "trigger": "CGMSilhouetteCylindrical\tGeometricObject,Vector,GeometricPlane,Boolean,Boolean,Boolean,Boolean",
      "contents": "CGMSilhouetteCylindrical(${1:geometricobject}, ${2:vector}, ${3:geometricplane}, ${4:bool}, ${5:bool}, ${6:bool}, ${7:bool})"
    },
    {
      "trigger": "CGMSliceWire\tGeometricCurve,List",
      "contents": "CGMSliceWire(${1:geometriccurve}, ${2:list})"
    },
    {
      "trigger": "CGMSphere\tGeometricPoint,LENGTH,GeometricLine,Boolean,ANGLE,ANGLE,ANGLE,ANGLE",
      "contents": "CGMSphere(${1:geometricpoint}, ${2:len}, ${3:geometricline}, ${4:bool}, ${5:angle}, ${6:angle}, ${7:angle}, ${8:angle})"
    },
    {
      "trigger": "CGMSpiral\tGeometricPoint,GeometricSurface,LENGTH,LENGTH,Vector,Real,Boolean",
      "contents": "CGMSpiral(${1:geometricpoint}, ${2:geometricsurface}, ${3:len}, ${4:len}, ${5:vector}, ${6:real}, ${7:bool})"
    },
    {
      "trigger": "CGMSpline\tList,Boolean,GeometricSurface,List,List",
      "contents": "CGMSpline(${1:list}, ${2:bool}, ${3:geometricsurface}, ${4:list}, ${5:list})"
    },
    {
      "trigger": "CGMSplit\tGeometricCurve,GeometricObject,Boolean",
      "contents": "CGMSplit(${1:geometriccurve}, ${2:geometricobject}, ${3:bool})"
    },
    {
      "trigger": "CGMSubDomains\tGeometricObject",
      "contents": "CGMSubDomains(${1:geometricobject})"
    },
    {
      "trigger": "CGMSurfacePoisonDiskSampleTess\tGeometricSurface,Integer,List,List,List,Boolean,Integer",
      "contents": "CGMSurfacePoisonDiskSampleTess(${1:geometricsurface}, ${2:int}, ${3:list}, ${4:list}, ${5:list}, ${6:bool}, ${7:int})"
    },
    {
      "trigger": "CGMSweep2Guides\tGeometricCurve,GeometricObject,ObjectType,ObjectType",
      "contents": "CGMSweep2Guides(${1:geometriccurve}, ${2:geometricobject}, ${3:objecttype}, ${4:objecttype})"
    },
    {
      "trigger": "CGMSweep\tGeometricCurve,GeometricCurve,GeometricSurface",
      "contents": "CGMSweep(${1:geometriccurve}, ${2:geometriccurve}, ${3:geometricsurface})"
    },
    {
      "trigger": "CGMSweepCircle\tGeometricCurve,LENGTH",
      "contents": "CGMSweepCircle(${1:geometriccurve}, ${2:len})"
    },
    {
      "trigger": "CGMSweepSegment\tGeometricCurve,GeometricSurface,LENGTH,LENGTH,ANGLE",
      "contents": "CGMSweepSegment(${1:geometriccurve}, ${2:geometricsurface}, ${3:len}, ${4:len}, ${5:angle})"
    },
    {
      "trigger": "CGMSymmetry\tGeometricObject,GeometricObject",
      "contents": "CGMSymmetry(${1:geometricobject}, ${2:geometricobject})"
    },
    {
      "trigger": "CGMThickSurface\tGeometricSurface,LENGTH,LENGTH,Boolean,Boolean",
      "contents": "CGMThickSurface(${1:geometricsurface}, ${2:len}, ${3:len}, ${4:bool}, ${5:bool})"
    },
    {
      "trigger": "CGMTransfer\tGeometricSurface,GeometricSurface,Integer,List",
      "contents": "CGMTransfer(${1:geometricsurface}, ${2:geometricsurface}, ${3:int}, ${4:list})"
    },
    {
      "trigger": "CGMTranslate\tGeometricObject,Vector,LENGTH",
      "contents": "CGMTranslate(${1:geometricobject}, ${2:vector}, ${3:len})"
    },
    {
      "trigger": "CGMTrim\tGeometricObject,GeometricObject,Boolean,Boolean",
      "contents": "CGMTrim(${1:geometricobject}, ${2:geometricobject}, ${3:bool}, ${4:bool})"
    },
    {
      "trigger": "CGMUnfold\tGeometricSurface,GeometricPlane,Boolean,GeometricPoint,GeometricObject,GeometricPoint,GeometricObject",
      "contents": "CGMUnfold(${1:geometricsurface}, ${2:geometricplane}, ${3:bool}, ${4:geometricpoint}, ${5:geometricobject}, ${6:geometricpoint}, ${7:geometricobject})"
    },
    {
      "trigger": "CGMUntrim\tGeometricObject",
      "contents": "CGMUntrim(${1:geometricobject})"
    },
    {
      "trigger": "CGMVolume\tGeometricSurface",
      "contents": "CGMVolume(${1:geometricsurface})"
    },
    {
      "trigger": "CGMWrapSurface\tGeometricObject,GeometricSurface,GeometricSurface,Boolean,Boolean,Boolean",
      "contents": "CGMWrapSurface(${1:geometricobject}, ${2:geometricsurface}, ${3:geometricsurface}, ${4:bool}, ${5:bool}, ${6:bool})"
    },
    {
      "trigger": "CONTAINSONEOF\tString",
      "contents": "CONTAINSONEOF(${1:name})"
    },
    {
      "trigger": "CalculateVolumeReport\tString,Integer",
      "contents": "CalculateVolumeReport(${1:name}, ${2:int})"
    },
    {
      "trigger": "CallKWAInKWE\tKWERuleBaseComponent,String,ObjectType",
      "contents": "CallKWAInKWE(${1:kwerulebasecomponent}, ${2:name}, ${3:objecttype})"
    },
    {
      "trigger": "CallKWEVB\tString,ObjectType",
      "contents": "CallKWEVB(${1:name}, ${2:objecttype})"
    },
    {
      "trigger": "CallWebService\tString,String",
      "contents": "CallWebService(${1:name}, ${2:name})"
    },
    {
      "trigger": "CameraViewerCaptureImage\tDEL3DAnimationCameraViewer",
      "contents": "CameraViewerCaptureImage(${1:del3danimationcameraviewer})"
    },
    {
      "trigger": "CanBeOffset\tSurface,LENGTH,LENGTH,Integer,Boolean",
      "contents": "CanBeOffset(${1:surface}, ${2:len}, ${3:len}, ${4:int}, ${5:bool})"
    },
    {
      "trigger": "CanBeSimulated\tMechanism,Integer,Integer,Integer,Integer",
      "contents": "CanBeSimulated(${1:mechanism}, ${2:int}, ${3:int}, ${4:int}, ${5:int})"
    },
    {
      "trigger": "CapableResources\tDELFmiFunctionReference",
      "contents": "CapableResources(${1:delfmifunctionreference})"
    },
    {
      "trigger": "Capture360\tCaptureService,Integer,Feature",
      "contents": "Capture360(${1:captureservice}, ${2:int}, ${3:feat})"
    },
    {
      "trigger": "Capture\tCaptureService,Feature",
      "contents": "Capture(${1:captureservice}, ${2:feat})"
    },
    {
      "trigger": "CastToDELMfgSimMSR\tManufacturingSimulation",
      "contents": "CastToDELMfgSimMSR(${1:manufacturingsimulation})"
    },
    {
      "trigger": "CastToManufacturingSimulation\tDELMfgSimMSR",
      "contents": "CastToManufacturingSimulation(${1:delmfgsimmsr})"
    },
    {
      "trigger": "CellAsBoolean\tDTSheetType,Integer,Integer",
      "contents": "CellAsBoolean(${1:dtsheettype}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "CellAsReal\tDTSheetType,Integer,Integer",
      "contents": "CellAsReal(${1:dtsheettype}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "CellAsString\tDTSheetType,Integer,Integer",
      "contents": "CellAsString(${1:dtsheettype}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "Center\tGeometricCircle",
      "contents": "Center(${1:geometriccircle})"
    },
    {
      "trigger": "CenterGraph\tObjectType",
      "contents": "CenterGraph(${1:objecttype})"
    },
    {
      "trigger": "CenterOfGravity\tGeometricObject",
      "contents": "CenterOfGravity(${1:geometricobject})"
    },
    {
      "trigger": "ChangeContext\tSys3DAllocationConnection,ProductOccurrence",
      "contents": "ChangeContext(${1:sys3dallocationconnection}, ${2:productoccurrence})"
    },
    {
      "trigger": "ChangeSweepOrientation\tDELSurfaceTrajectory,DELSurfaceTrajectorySweepEntry",
      "contents": "ChangeSweepOrientation(${1:delsurfacetrajectory}, ${2:delsurfacetrajectorysweepentry})"
    },
    {
      "trigger": "ChangeToolOnRelatedActivities\tString,MfgBaseTool",
      "contents": "ChangeToolOnRelatedActivities(${1:name}, ${2:mfgbasetool})"
    },
    {
      "trigger": "CheckCompatibility\tHVAC_Port,ProductOccurrence,VPMPort,ProductOccurrence,Boolean,List,List",
      "contents": "CheckCompatibility(${1:hvac_port}, ${2:productoccurrence}, ${3:vpmport}, ${4:productoccurrence}, ${5:bool}, ${6:list}, ${7:list})"
    },
    {
      "trigger": "CheckDCPFormulaValidity\tProdSystemOccurrence",
      "contents": "CheckDCPFormulaValidity(${1:prodsystemoccurrence})"
    },
    {
      "trigger": "CheckIn\tDocument,String,String,String",
      "contents": "CheckIn(${1:document}, ${2:name}, ${3:name}, ${4:name})"
    },
    {
      "trigger": "CheckIn\tPLMDMTDocument,String",
      "contents": "CheckIn(${1:plmdmtdocument}, ${2:name})"
    },
    {
      "trigger": "CheckLicense\tString,Boolean",
      "contents": "CheckLicense(${1:name}, ${2:bool})"
    },
    {
      "trigger": "CheckLocationProximity\tProductOccurrence,Real,Real,Real,Real",
      "contents": "CheckLocationProximity(${1:productoccurrence}, ${2:real}, ${3:real}, ${4:real}, ${5:real})"
    },
    {
      "trigger": "CheckLockAngle\tPiping_Part_Occurrence,ProductOccurrence,Boolean,ANGLE",
      "contents": "CheckLockAngle(${1:piping_part_occurrence}, ${2:productoccurrence}, ${3:bool}, ${4:angle})"
    },
    {
      "trigger": "CheckNameUnicity\tRscControllerProfileMgr,RscGenericProfileType,String",
      "contents": "CheckNameUnicity(${1:rsccontrollerprofilemgr}, ${2:rscgenericprofiletype}, ${3:name})"
    },
    {
      "trigger": "CheckOut\tDocument,String",
      "contents": "CheckOut(${1:document}, ${2:name})"
    },
    {
      "trigger": "CheckOut\tPLMDMTDocument",
      "contents": "CheckOut(${1:plmdmtdocument})"
    },
    {
      "trigger": "CheckProjDistAndNormVectDiff\tFeature,Feature,Feature,Real,Real",
      "contents": "CheckProjDistAndNormVectDiff(${1:feat}, ${2:feat}, ${3:feat}, ${4:real}, ${5:real})"
    },
    {
      "trigger": "CheckTextBooleanProperty\tDrwText,String,Boolean",
      "contents": "CheckTextBooleanProperty(${1:drwtext}, ${2:name}, ${3:bool})"
    },
    {
      "trigger": "CheckTextColorProperty\tDrwText,List,List,Boolean",
      "contents": "CheckTextColorProperty(${1:drwtext}, ${2:list}, ${3:list}, ${4:bool})"
    },
    {
      "trigger": "CheckTextRealProperty\tDrwText,String,Real,Real,Boolean",
      "contents": "CheckTextRealProperty(${1:drwtext}, ${2:name}, ${3:real}, ${4:real}, ${5:bool})"
    },
    {
      "trigger": "CheckTextStringProperty\tDrwText,String,String,Boolean,Boolean",
      "contents": "CheckTextStringProperty(${1:drwtext}, ${2:name}, ${3:name}, ${4:bool}, ${5:bool})"
    },
    {
      "trigger": "Chr\tInteger",
      "contents": "Chr(${1:int})"
    },
    {
      "trigger": "CkeckAndCreateSLAResourceFromOccList\tList",
      "contents": "CkeckAndCreateSLAResourceFromOccList(${1:list})"
    },
    {
      "trigger": "Clash\tPositioned3DObject,Positioned3DObject",
      "contents": "Clash(${1:positioned3dobject}, ${2:positioned3dobject})"
    },
    {
      "trigger": "ClassifyObjects\tComponentFamily,PLMQueryResult,List,Boolean,Boolean,List,List,Boolean",
      "contents": "ClassifyObjects(${1:componentfamily}, ${2:plmqueryresult}, ${3:list}, ${4:bool}, ${5:bool}, ${6:list}, ${7:list}, ${8:bool})"
    },
    {
      "trigger": "ClearAllControllerUserAttributeAuthorizedValues\tRscController,String",
      "contents": "ClearAllControllerUserAttributeAuthorizedValues(${1:rsccontroller}, ${2:name})"
    },
    {
      "trigger": "ClearAllControllerUserAttributes\tRscController",
      "contents": "ClearAllControllerUserAttributes(${1:rsccontroller})"
    },
    {
      "trigger": "ClearAllJunctionAssociation\tElec3DCable",
      "contents": "ClearAllJunctionAssociation(${1:elec3dcable})"
    },
    {
      "trigger": "ClearBrokenSignalMapping\tRscModelLogicMgr,Boolean",
      "contents": "ClearBrokenSignalMapping(${1:rscmodellogicmgr}, ${2:bool})"
    },
    {
      "trigger": "ClearControllerSpecificAttributeSet\tRscController,String",
      "contents": "ClearControllerSpecificAttributeSet(${1:rsccontroller}, ${2:name})"
    },
    {
      "trigger": "ClearSheet\tDTSheetType",
      "contents": "ClearSheet(${1:dtsheettype})"
    },
    {
      "trigger": "Close\tBitmap,Integer",
      "contents": "Close(${1:bitmap}, ${2:int})"
    },
    {
      "trigger": "Close\tCATKwdWindow",
      "contents": "Close(${1:catkwdwindow})"
    },
    {
      "trigger": "CloseJSON\tDELTimeAnalysisRepInstance",
      "contents": "CloseJSON(${1:deltimeanalysisrepinstance})"
    },
    {
      "trigger": "CloserConfig\tDTSheetType,String,String,Literal",
      "contents": "CloserConfig(${1:dtsheettype}, ${2:name}, ${3:name}, ${4:literal})"
    },
    {
      "trigger": "CloserInfConfig\tDTSheetType,String,Literal",
      "contents": "CloserInfConfig(${1:dtsheettype}, ${2:name}, ${3:literal})"
    },
    {
      "trigger": "CloserSupConfig\tDTSheetType,String,Literal",
      "contents": "CloserSupConfig(${1:dtsheettype}, ${2:name}, ${3:literal})"
    },
    {
      "trigger": "CloserValueInfInColumn\tDTSheetType,Integer,Real",
      "contents": "CloserValueInfInColumn(${1:dtsheettype}, ${2:int}, ${3:real})"
    },
    {
      "trigger": "CloserValueSupInColumn\tDTSheetType,Integer,Real",
      "contents": "CloserValueSupInColumn(${1:dtsheettype}, ${2:int}, ${3:real})"
    },
    {
      "trigger": "CollapseNode\tObjectType",
      "contents": "CollapseNode(${1:objecttype})"
    },
    {
      "trigger": "CombineSpaces\tProductOccurrence,List,List,List",
      "contents": "CombineSpaces(${1:productoccurrence}, ${2:list}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "CommitAssignments\tHumanActivityManager",
      "contents": "CommitAssignments(${1:humanactivitymanager})"
    },
    {
      "trigger": "CommitChanges\tDTSheetType",
      "contents": "CommitChanges(${1:dtsheettype})"
    },
    {
      "trigger": "Compare\tSysItfInContext,SysItfInContext",
      "contents": "Compare(${1:sysitfincontext}, ${2:sysitfincontext})"
    },
    {
      "trigger": "CompareRscController\tRscControllerSynchronization",
      "contents": "CompareRscController(${1:rsccontrollersynchronization})"
    },
    {
      "trigger": "CompareRscControllerCategory\tRscControllerSynchronizationCategory",
      "contents": "CompareRscControllerCategory(${1:rsccontrollersynchronizationcategory})"
    },
    {
      "trigger": "CompareViewImages\tProdSystemOccurrence,ProdSystemOccurrence,String,ProdSystemOccurrence,String,Real",
      "contents": "CompareViewImages(${1:prodsystemoccurrence}, ${2:prodsystemoccurrence}, ${3:name}, ${4:prodsystemoccurrence}, ${5:name}, ${6:real})"
    },
    {
      "trigger": "Compound3DStates\tProductOccurrence,List,String,List",
      "contents": "Compound3DStates(${1:productoccurrence}, ${2:list}, ${3:name}, ${4:list})"
    },
    {
      "trigger": "Compute\tList,String,String,String,UndefinedType",
      "contents": "Compute(${1:list}, ${2:name}, ${3:name}, ${4:name}, ${5:undefinedtype})"
    },
    {
      "trigger": "ComputeAllInterferencePairs\tRobInterferenceZoneMgr",
      "contents": "ComputeAllInterferencePairs(${1:robinterferencezonemgr})"
    },
    {
      "trigger": "ComputeAndUpdateName\tBranch",
      "contents": "ComputeAndUpdateName(${1:branch})"
    },
    {
      "trigger": "ComputeCandidatePlaneFromProjectData\tStrStructureCopySpecification,Feature,Integer,Feature,Integer",
      "contents": "ComputeCandidatePlaneFromProjectData(${1:strstructurecopyspecification}, ${2:feat}, ${3:int}, ${4:feat}, ${5:int})"
    },
    {
      "trigger": "ComputeDimension\tSddPanel,Boolean,String,LENGTH",
      "contents": "ComputeDimension(${1:sddpanel}, ${2:bool}, ${3:name}, ${4:len})"
    },
    {
      "trigger": "ComputeEquivalentType\tMCX",
      "contents": "ComputeEquivalentType(${1:mcx})"
    },
    {
      "trigger": "ComputeFlexDuctExtremityAngle\tHVAC_Duct_Occurrence,HVAC_Part_Occurrence,ANGLE",
      "contents": "ComputeFlexDuctExtremityAngle(${1:hvac_duct_occurrence}, ${2:hvac_part_occurrence}, ${3:angle})"
    },
    {
      "trigger": "ComputeFlexTubeExtremityAngle\tPiping_Pipe_Occurrence,Piping_Part_Occurrence,ANGLE",
      "contents": "ComputeFlexTubeExtremityAngle(${1:piping_pipe_occurrence}, ${2:piping_part_occurrence}, ${3:angle})"
    },
    {
      "trigger": "ComputeGlobalOrientation\tPiping_Part_Occurrence,ANGLE,ANGLE,AxisSystem,ProductOccurrence",
      "contents": "ComputeGlobalOrientation(${1:piping_part_occurrence}, ${2:angle}, ${3:angle}, ${4:axissystem}, ${5:productoccurrence})"
    },
    {
      "trigger": "ComputeInputOrientation\tStrStructureCopySpecification,Feature,Feature,Integer,Feature",
      "contents": "ComputeInputOrientation(${1:strstructurecopyspecification}, ${2:feat}, ${3:feat}, ${4:int}, ${5:feat})"
    },
    {
      "trigger": "ComputeInvertedOrientation\tStrStructureCopySpecification,Integer,Integer",
      "contents": "ComputeInvertedOrientation(${1:strstructurecopyspecification}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "ComputeLength\tElec3DConductorEnd,LENGTH",
      "contents": "ComputeLength(${1:elec3dconductorend}, ${2:len})"
    },
    {
      "trigger": "ComputeMassCOGandMI\tElec3DCable",
      "contents": "ComputeMassCOGandMI(${1:elec3dcable})"
    },
    {
      "trigger": "ComputeMultiRobotSolution\tRscMultiRobotPathPlanner",
      "contents": "ComputeMultiRobotSolution(${1:rscmultirobotpathplanner})"
    },
    {
      "trigger": "ComputeNewUniqueName\tRscControllerProfileMgr,RscGenericProfileType",
      "contents": "ComputeNewUniqueName(${1:rsccontrollerprofilemgr}, ${2:rscgenericprofiletype})"
    },
    {
      "trigger": "ComputeNodeGlobalPosition\tElec3DNetworkArc,Elec3DNetworkNode,List",
      "contents": "ComputeNodeGlobalPosition(${1:elec3dnetworkarc}, ${2:elec3dnetworknode}, ${3:list})"
    },
    {
      "trigger": "ComputeNodeGlobalPosition\tElec3DNetworkPath,Elec3DNetworkNode,List,List",
      "contents": "ComputeNodeGlobalPosition(${1:elec3dnetworkpath}, ${2:elec3dnetworknode}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "ComputeOptimizedPaths\tRscPathPlanner,List",
      "contents": "ComputeOptimizedPaths(${1:rscpathplanner}, ${2:list})"
    },
    {
      "trigger": "ComputeOrientation\tPiping_Part_Occurrence,ProductOccurrence,ANGLE,ProductOccurrence",
      "contents": "ComputeOrientation(${1:piping_part_occurrence}, ${2:productoccurrence}, ${3:angle}, ${4:productoccurrence})"
    },
    {
      "trigger": "ComputeProtectionGlobalPosition\tElec3DNetworkArc,Elec3DNetworkNode,List,List,List",
      "contents": "ComputeProtectionGlobalPosition(${1:elec3dnetworkarc}, ${2:elec3dnetworknode}, ${3:list}, ${4:list}, ${5:list})"
    },
    {
      "trigger": "ComputeResultingProduct\tMfgProcessOccurrence",
      "contents": "ComputeResultingProduct(${1:mfgprocessoccurrence})"
    },
    {
      "trigger": "ComputeResultingProductForFilter\tMfgProcessOccurrence,Product Configuration",
      "contents": "ComputeResultingProductForFilter(${1:mfgprocessoccurrence}, ${2:product configuration})"
    },
    {
      "trigger": "ComputeRouteStatus\tElecRoute,RouteStatus",
      "contents": "ComputeRouteStatus(${1:elecroute}, ${2:routestatus})"
    },
    {
      "trigger": "ComputeRscTaskCycleTime\tDNBResourceTask,Real,ProductOccurrence,Boolean",
      "contents": "ComputeRscTaskCycleTime(${1:dnbresourcetask}, ${2:real}, ${3:productoccurrence}, ${4:bool})"
    },
    {
      "trigger": "ComputeSupportPosition\tElec3DNetworkArc,SharedSupportPartOccurrence,Elec3DNetworkNode,LENGTH,LENGTH",
      "contents": "ComputeSupportPosition(${1:elec3dnetworkarc}, ${2:sharedsupportpartoccurrence}, ${3:elec3dnetworknode}, ${4:len}, ${5:len})"
    },
    {
      "trigger": "ComputeValidationStatus\tSptPrimarySupportOccurrence,Feature,LENGTH,List,SptPrimarySupportValidationStatus,Boolean",
      "contents": "ComputeValidationStatus(${1:sptprimarysupportoccurrence}, ${2:feat}, ${3:len}, ${4:list}, ${5:sptprimarysupportvalidationstatus}, ${6:bool})"
    },
    {
      "trigger": "ComputedMinAngle\tConductor,ANGLE,Segment,Segment",
      "contents": "ComputedMinAngle(${1:conductor}, ${2:angle}, ${3:segment}, ${4:segment})"
    },
    {
      "trigger": "ComputedMinBendRadius\tConductor,LENGTH,Segment",
      "contents": "ComputedMinBendRadius(${1:conductor}, ${2:len}, ${3:segment})"
    },
    {
      "trigger": "ConfigureToolResource\tProductOccurrence,ProductOccurrence",
      "contents": "ConfigureToolResource(${1:productoccurrence}, ${2:productoccurrence})"
    },
    {
      "trigger": "ConnectSegmentsDistantly\tSegmentExtremity,ProductOccurrence,ElecPort",
      "contents": "ConnectSegmentsDistantly(${1:segmentextremity}, ${2:productoccurrence}, ${3:elecport})"
    },
    {
      "trigger": "ConnectSegmentsDistantly\tSegmentExtremity,SegmentExtremity",
      "contents": "ConnectSegmentsDistantly(${1:segmentextremity}, ${2:segmentextremity})"
    },
    {
      "trigger": "Constant\tLiteral",
      "contents": "Constant(${1:literal})"
    },
    {
      "trigger": "Convert\tFeature,String",
      "contents": "Convert(${1:feat}, ${2:name})"
    },
    {
      "trigger": "ConvertBitmapToString\tCaptureService,Bitmap",
      "contents": "ConvertBitmapToString(${1:captureservice}, ${2:bitmap})"
    },
    {
      "trigger": "ConvertColorHEXtoRGB\tString,Integer,Integer,Integer",
      "contents": "ConvertColorHEXtoRGB(${1:name}, ${2:int}, ${3:int}, ${4:int})"
    },
    {
      "trigger": "ConvertColorRGBtoHEX\tInteger,Integer,Integer,String",
      "contents": "ConvertColorRGBtoHEX(${1:int}, ${2:int}, ${3:int}, ${4:name})"
    },
    {
      "trigger": "ConvexHull2D\tList,List",
      "contents": "ConvexHull2D(${1:list}, ${2:list})"
    },
    {
      "trigger": "ConvexHull\tList,List,List,List",
      "contents": "ConvexHull(${1:list}, ${2:list}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "Coord\tGeometricPoint,LENGTH,LENGTH,LENGTH",
      "contents": "Coord(${1:geometricpoint}, ${2:len}, ${3:len}, ${4:len})"
    },
    {
      "trigger": "Copy\tConductor,Electrical3DSystemOccurrence,Conductor",
      "contents": "Copy(${1:conductor}, ${2:electrical3dsystemoccurrence}, ${3:conductor})"
    },
    {
      "trigger": "Copy\tList",
      "contents": "Copy(${1:list})"
    },
    {
      "trigger": "CopyFileTo\tDocument,String,String",
      "contents": "CopyFileTo(${1:document}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "CopyPoint\tDELPointTrajectory,DNBTag,Boolean",
      "contents": "CopyPoint(${1:delpointtrajectory}, ${2:dnbtag}, ${3:bool})"
    },
    {
      "trigger": "CopyProfile\tCATEbm_ReferenceProfile,List",
      "contents": "CopyProfile(${1:catebm_referenceprofile}, ${2:list})"
    },
    {
      "trigger": "CopyTo\tDocument,String",
      "contents": "CopyTo(${1:document}, ${2:name})"
    },
    {
      "trigger": "CountOccurrences\tString,String",
      "contents": "CountOccurrences(${1:name}, ${2:name})"
    },
    {
      "trigger": "Create3DLabelMarker\tPLMOperation,List",
      "contents": "Create3DLabelMarker(${1:plmoperation}, ${2:list})"
    },
    {
      "trigger": "Create3DState\tProductOccurrence,String,List",
      "contents": "Create3DState(${1:productoccurrence}, ${2:name}, ${3:list})"
    },
    {
      "trigger": "Create3DTextMarker\tPLMOperation,List,List",
      "contents": "Create3DTextMarker(${1:plmoperation}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "Create3DTextMarkerWithEmoticon\tPLMOperation,List,List,String",
      "contents": "Create3DTextMarkerWithEmoticon(${1:plmoperation}, ${2:list}, ${3:list}, ${4:name})"
    },
    {
      "trigger": "CreateAGVInstance\tFFS_RoadSegment,VPMReference,ProductOccurrence,Integer,Real,Matrix",
      "contents": "CreateAGVInstance(${1:ffs_roadsegment}, ${2:vpmreference}, ${3:productoccurrence}, ${4:int}, ${5:real}, ${6:matrix})"
    },
    {
      "trigger": "CreateARGB\tInteger,Integer,Integer,Integer",
      "contents": "CreateARGB(${1:int}, ${2:int}, ${3:int}, ${4:int})"
    },
    {
      "trigger": "CreateAdvancedConnectionPoint\tVPMReference,String,List,String",
      "contents": "CreateAdvancedConnectionPoint(${1:vpmreference}, ${2:name}, ${3:list}, ${4:name})"
    },
    {
      "trigger": "CreateAllocationConnection\tProductOccurrence,List,List,List,ProductOccurrence,Sys3DAllocationConnection",
      "contents": "CreateAllocationConnection(${1:productoccurrence}, ${2:list}, ${3:list}, ${4:list}, ${5:productoccurrence}, ${6:sys3dallocationconnection})"
    },
    {
      "trigger": "CreateAllocationSession\tProductOccurrence,LogicalOccurrence",
      "contents": "CreateAllocationSession(${1:productoccurrence}, ${2:logicaloccurrence})"
    },
    {
      "trigger": "CreateAndInsertGroup\tGroupOfProcessInstance,GroupProcessDiagnostic",
      "contents": "CreateAndInsertGroup(${1:groupofprocessinstance}, ${2:groupprocessdiagnostic})"
    },
    {
      "trigger": "CreateAndRunPLMQueryUQL\tString",
      "contents": "CreateAndRunPLMQueryUQL(${1:name})"
    },
    {
      "trigger": "CreateAndUpdateJSON\tDELTimeAnalysisRepInstance",
      "contents": "CreateAndUpdateJSON(${1:deltimeanalysisrepinstance})"
    },
    {
      "trigger": "CreateAnnLabel\tDIFView,DrwObject,Real,Real,DrwObject",
      "contents": "CreateAnnLabel(${1:difview}, ${2:drwobject}, ${3:real}, ${4:real}, ${5:drwobject})"
    },
    {
      "trigger": "CreateAnnTable\tDIFView,Real,Real,Integer,Integer,Real,Real,DrwObject",
      "contents": "CreateAnnTable(${1:difview}, ${2:real}, ${3:real}, ${4:int}, ${5:int}, ${6:real}, ${7:real}, ${8:drwobject})"
    },
    {
      "trigger": "CreateAnnText\tDIFView,Real,Real,String,DrwObject",
      "contents": "CreateAnnText(${1:difview}, ${2:real}, ${3:real}, ${4:name}, ${5:drwobject})"
    },
    {
      "trigger": "CreateApplicativeProfileGroup\tRscApplicativeProfileMgr,String",
      "contents": "CreateApplicativeProfileGroup(${1:rscapplicativeprofilemgr}, ${2:name})"
    },
    {
      "trigger": "CreateArcApproach\tRobArcTrajectory,Real",
      "contents": "CreateArcApproach(${1:robarctrajectory}, ${2:real})"
    },
    {
      "trigger": "CreateArcCurveOperationContour\tRobArcTrajectory,List",
      "contents": "CreateArcCurveOperationContour(${1:robarctrajectory}, ${2:list})"
    },
    {
      "trigger": "CreateArcCurvesContour\tRobArcTrajectory,List,List,CurveType,List,List,List,List",
      "contents": "CreateArcCurvesContour(${1:robarctrajectory}, ${2:list}, ${3:list}, ${4:curvetype}, ${5:list}, ${6:list}, ${7:list}, ${8:list})"
    },
    {
      "trigger": "CreateArcDeparture\tRobArcTrajectory,Real",
      "contents": "CreateArcDeparture(${1:robarctrajectory}, ${2:real})"
    },
    {
      "trigger": "CreateArcSurfaceIntersectionContour\tRobArcTrajectory,List,List,List,List,Boolean",
      "contents": "CreateArcSurfaceIntersectionContour(${1:robarctrajectory}, ${2:list}, ${3:list}, ${4:list}, ${5:list}, ${6:bool})"
    },
    {
      "trigger": "CreateArcTagGroupContour\tRobArcTrajectory,DNBTagGroup,List,List,List,List",
      "contents": "CreateArcTagGroupContour(${1:robarctrajectory}, ${2:dnbtaggroup}, ${3:list}, ${4:list}, ${5:list}, ${6:list})"
    },
    {
      "trigger": "CreateAssembly\tString,String,ResourceNCAssembly",
      "contents": "CreateAssembly(${1:name}, ${2:name}, ${3:resourcencassembly})"
    },
    {
      "trigger": "CreateAssignInstruction\tRscLogicSequence,String,String,Integer",
      "contents": "CreateAssignInstruction(${1:rsclogicsequence}, ${2:name}, ${3:name}, ${4:int})"
    },
    {
      "trigger": "CreateAssignmentFilter\tMfgProcessOccurrence,ProductOccurrence",
      "contents": "CreateAssignmentFilter(${1:mfgprocessoccurrence}, ${2:productoccurrence})"
    },
    {
      "trigger": "CreateBitmapFromObject\tFeature,Integer,Integer",
      "contents": "CreateBitmapFromObject(${1:feat}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "CreateBolt\tCSEPropertySet",
      "contents": "CreateBolt(${1:csepropertyset})"
    },
    {
      "trigger": "CreateBooleanAssembleBody\tFeature,Feature,Feature",
      "contents": "CreateBooleanAssembleBody(${1:feat}, ${2:feat}, ${3:feat})"
    },
    {
      "trigger": "CreateBranch\tElectricalBranchGeometryOccurrence,List,Branch",
      "contents": "CreateBranch(${1:electricalbranchgeometryoccurrence}, ${2:list}, ${3:branch})"
    },
    {
      "trigger": "CreateBranchOnExternalCurve\tElectricalBranchGeometryOccurrence,ProductOccurrence,Feature,Branch",
      "contents": "CreateBranchOnExternalCurve(${1:electricalbranchgeometryoccurrence}, ${2:productoccurrence}, ${3:feat}, ${4:branch})"
    },
    {
      "trigger": "CreateBreakInstruction\tRscLogicSequence,Integer",
      "contents": "CreateBreakInstruction(${1:rsclogicsequence}, ${2:int})"
    },
    {
      "trigger": "CreateCable\tElectrical3DSystem,ProductOccurrence,ElecPort,ProductOccurrence,ElecPort,Elec3DCable",
      "contents": "CreateCable(${1:electrical3dsystem}, ${2:productoccurrence}, ${3:elecport}, ${4:productoccurrence}, ${5:elecport}, ${6:elec3dcable})"
    },
    {
      "trigger": "CreateCandidateResourceLink\tProdSystemOccurrence,ResourceOccurrence",
      "contents": "CreateCandidateResourceLink(${1:prodsystemoccurrence}, ${2:resourceoccurrence})"
    },
    {
      "trigger": "CreateCandidateResourceScopeLink\tProdSystemOccurrence,PLMEntity",
      "contents": "CreateCandidateResourceScopeLink(${1:prodsystemoccurrence}, ${2:plmentity})"
    },
    {
      "trigger": "CreateCapableRscDetail\tPLMConnection,ProdSystemOccurrence,PLMConnection",
      "contents": "CreateCapableRscDetail(${1:plmconnection}, ${2:prodsystemoccurrence}, ${3:plmconnection})"
    },
    {
      "trigger": "CreateCircularProfile\tLENGTH,ElecCircularProfile",
      "contents": "CreateCircularProfile(${1:len}, ${2:eleccircularprofile})"
    },
    {
      "trigger": "CreateClaimGroup\tList,Integer,String",
      "contents": "CreateClaimGroup(${1:list}, ${2:int}, ${3:name})"
    },
    {
      "trigger": "CreateCnxEvent\tVPMReference,CATMatConnection",
      "contents": "CreateCnxEvent(${1:vpmreference}, ${2:catmatconnection})"
    },
    {
      "trigger": "CreateComponentVolumeNode\tSys3DComponentVolumeNode,ProductOccurrence,VPMPort",
      "contents": "CreateComponentVolumeNode(${1:sys3dcomponentvolumenode}, ${2:productoccurrence}, ${3:vpmport})"
    },
    {
      "trigger": "CreateConditionInstruction\tRscLogicSequence,Integer",
      "contents": "CreateConditionInstruction(${1:rsclogicsequence}, ${2:int})"
    },
    {
      "trigger": "CreateConductor\tConductorGroup,ProductOccurrence,ElecPort,ProductOccurrence,ElecPort,Conductor",
      "contents": "CreateConductor(${1:conductorgroup}, ${2:productoccurrence}, ${3:elecport}, ${4:productoccurrence}, ${5:elecport}, ${6:conductor})"
    },
    {
      "trigger": "CreateConductorGroup\tElectrical3DSystem,ConductorGroup",
      "contents": "CreateConductorGroup(${1:electrical3dsystem}, ${2:conductorgroup})"
    },
    {
      "trigger": "CreateConeShape\tLENGTH,LENGTH,Sys3DCone",
      "contents": "CreateConeShape(${1:len}, ${2:len}, ${3:sys3dcone})"
    },
    {
      "trigger": "CreateConstraint\tDatabaseObjectType,String,String,ObjectType",
      "contents": "CreateConstraint(${1:databaseobjecttype}, ${2:name}, ${3:name}, ${4:objecttype})"
    },
    {
      "trigger": "CreateConsumable\tFFS_Resource",
      "contents": "CreateConsumable(${1:ffs_resource})"
    },
    {
      "trigger": "CreateContextualConstraint\tVPMInstance,DatabaseObjectType,String,String,ObjectType",
      "contents": "CreateContextualConstraint(${1:vpminstance}, ${2:databaseobjecttype}, ${3:name}, ${4:name}, ${5:objecttype})"
    },
    {
      "trigger": "CreateContinuousProcessReference\tString,Integer",
      "contents": "CreateContinuousProcessReference(${1:name}, ${2:int})"
    },
    {
      "trigger": "CreateControlTimerInstruction\tRscLogicSequence,String,Integer,Integer",
      "contents": "CreateControlTimerInstruction(${1:rsclogicsequence}, ${2:name}, ${3:int}, ${4:int})"
    },
    {
      "trigger": "CreateCustomInstruction\tRscLogicSequence,String,Integer",
      "contents": "CreateCustomInstruction(${1:rsclogicsequence}, ${2:name}, ${3:int})"
    },
    {
      "trigger": "CreateCylinderShape\tLENGTH,LENGTH,Sys3DCylinder",
      "contents": "CreateCylinderShape(${1:len}, ${2:len}, ${3:sys3dcylinder})"
    },
    {
      "trigger": "CreateDCChecklistRow\tDELWkiDataCollectChecklistReference",
      "contents": "CreateDCChecklistRow(${1:delwkidatacollectchecklistreference})"
    },
    {
      "trigger": "CreateDCPRow\tDELWkiDataCollectPlanReference,String",
      "contents": "CreateDCPRow(${1:delwkidatacollectplanreference}, ${2:name})"
    },
    {
      "trigger": "CreateDELSLAFFSSimScenario\tString",
      "contents": "CreateDELSLAFFSSimScenario(${1:name})"
    },
    {
      "trigger": "CreateDeclaredSpaceAssignment\tPLMCoreInstance,SPP_SpaceRef",
      "contents": "CreateDeclaredSpaceAssignment(${1:plmcoreinstance}, ${2:spp_spaceref})"
    },
    {
      "trigger": "CreateDeclaredWeightExtensions\tVPMReference",
      "contents": "CreateDeclaredWeightExtensions(${1:vpmreference})"
    },
    {
      "trigger": "CreateDerivationVolumeNode\tSys3DDerivationVolumeNode,ProductOccurrence",
      "contents": "CreateDerivationVolumeNode(${1:sys3dderivationvolumenode}, ${2:productoccurrence})"
    },
    {
      "trigger": "CreateDeviceDistantLink\tFeature,ProductOccurrence,ElecPort,ElecDeviceDistantLink",
      "contents": "CreateDeviceDistantLink(${1:feat}, ${2:productoccurrence}, ${3:elecport}, ${4:elecdevicedistantlink})"
    },
    {
      "trigger": "CreateDeviceRouteElement\tProductOccurrence,ElecPort,Elec3DDeviceRouteElement",
      "contents": "CreateDeviceRouteElement(${1:productoccurrence}, ${2:elecport}, ${3:elec3ddevicerouteelement})"
    },
    {
      "trigger": "CreateDialogCommand\tString",
      "contents": "CreateDialogCommand(${1:name})"
    },
    {
      "trigger": "CreateDistributeOperator\tList,ProductOccurrence,ProductOccurrence",
      "contents": "CreateDistributeOperator(${1:list}, ${2:productoccurrence}, ${3:productoccurrence})"
    },
    {
      "trigger": "CreateElecGuideCurve\tElec3DDuct,GeometricFeature,Elec3DGuideCurve",
      "contents": "CreateElecGuideCurve(${1:elec3dduct}, ${2:geometricfeature}, ${3:elec3dguidecurve})"
    },
    {
      "trigger": "CreateEllipticalProfile\tLENGTH,LENGTH,ElecEllipticalProfile",
      "contents": "CreateEllipticalProfile(${1:len}, ${2:len}, ${3:elecellipticalprofile})"
    },
    {
      "trigger": "CreateExtensionGuideCurve\tElectricalBranchGeometry,GeometricFeature,Elec3DExtensionGuideCurve",
      "contents": "CreateExtensionGuideCurve(${1:electricalbranchgeometry}, ${2:geometricfeature}, ${3:elec3dextensionguidecurve})"
    },
    {
      "trigger": "CreateExtensionGuideCurveFromPublication\tElec3DGuideCurve,Elec3DDuctOccurrence,ElectricalBranchGeometryOccurrence,Elec3DExtensionGuideCurve",
      "contents": "CreateExtensionGuideCurveFromPublication(${1:elec3dguidecurve}, ${2:elec3dductoccurrence}, ${3:electricalbranchgeometryoccurrence}, ${4:elec3dextensionguidecurve})"
    },
    {
      "trigger": "CreateFailure\tFFS_Resource,String,String",
      "contents": "CreateFailure(${1:ffs_resource}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "CreateFastenerDistributionReport\tProductOccurrence,Integer,String,String",
      "contents": "CreateFastenerDistributionReport(${1:productoccurrence}, ${2:int}, ${3:name}, ${4:name})"
    },
    {
      "trigger": "CreateFaultMonitor\tResourceOccurrence,String",
      "contents": "CreateFaultMonitor(${1:resourceoccurrence}, ${2:name})"
    },
    {
      "trigger": "CreateForLoopInstruction\tRscLogicSequence,Integer",
      "contents": "CreateForLoopInstruction(${1:rsclogicsequence}, ${2:int})"
    },
    {
      "trigger": "CreateGaugeInsertDefinition\tMfgBaseTool,MfgInsertDefinition",
      "contents": "CreateGaugeInsertDefinition(${1:mfgbasetool}, ${2:mfginsertdefinition})"
    },
    {
      "trigger": "CreateGenericProfile\tRscControllerProfileMgr,RscGenericProfileType,String",
      "contents": "CreateGenericProfile(${1:rsccontrollerprofilemgr}, ${2:rscgenericprofiletype}, ${3:name})"
    },
    {
      "trigger": "CreateGotoInstruction\tRscLogicSequence,String,Integer",
      "contents": "CreateGotoInstruction(${1:rsclogicsequence}, ${2:name}, ${3:int})"
    },
    {
      "trigger": "CreateGrabInstruction\tDNBResourceTask,String,Integer",
      "contents": "CreateGrabInstruction(${1:dnbresourcetask}, ${2:name}, ${3:int})"
    },
    {
      "trigger": "CreateHEXAColor\tString",
      "contents": "CreateHEXAColor(${1:name})"
    },
    {
      "trigger": "CreateHSB\tANGLE,Real,Real",
      "contents": "CreateHSB(${1:angle}, ${2:real}, ${3:real})"
    },
    {
      "trigger": "CreateHTTPClient\t()",
      "contents": "CreateHTTPClient()"
    },
    {
      "trigger": "CreateHistoLinkBetweenReferences\tPLMCoreReference,PLMCoreReference",
      "contents": "CreateHistoLinkBetweenReferences(${1:plmcorereference}, ${2:plmcorereference})"
    },
    {
      "trigger": "CreateHolder\tString,String,ToolDevice",
      "contents": "CreateHolder(${1:name}, ${2:name}, ${3:tooldevice})"
    },
    {
      "trigger": "CreateHomePosition\tRscHomePositionMgr,RscMotionGroup,String,List",
      "contents": "CreateHomePosition(${1:rschomepositionmgr}, ${2:rscmotiongroup}, ${3:name}, ${4:list})"
    },
    {
      "trigger": "CreateHumanActivityAssignment\t()",
      "contents": "CreateHumanActivityAssignment()"
    },
    {
      "trigger": "CreateHumanActivityManager\t()",
      "contents": "CreateHumanActivityManager()"
    },
    {
      "trigger": "CreateHvacPort\tHVAC_Part,Real,Real,Real,Real,Real,Real,Real,Real,Real,HvacPort_Types,String,Real,Real,Real",
      "contents": "CreateHvacPort(${1:hvac_part}, ${2:real}, ${3:real}, ${4:real}, ${5:real}, ${6:real}, ${7:real}, ${8:real}, ${9:real}, ${10:real}, ${11:hvacport_types}, ${12:name}, ${13:real}, ${14:real}, ${15:real})"
    },
    {
      "trigger": "CreateHvacPortOnReference\tVPMReference,GSMPoint,Direction,Direction,HvacPort_Types,String,GSMPoint",
      "contents": "CreateHvacPortOnReference(${1:vpmreference}, ${2:gsmpoint}, ${3:direction}, ${4:direction}, ${5:hvacport_types}, ${6:name}, ${7:gsmpoint})"
    },
    {
      "trigger": "CreateHvacReplicatePort\tPLMEnsRefEquipment,ProductOccurrence,String,String,Boolean,HVAC_Port",
      "contents": "CreateHvacReplicatePort(${1:plmensrefequipment}, ${2:productoccurrence}, ${3:name}, ${4:name}, ${5:bool}, ${6:hvac_port})"
    },
    {
      "trigger": "CreateImplementLinkBetweenSystemOccAndProcessOcc\tProdSystemOccurrence,FProcessOccurrence",
      "contents": "CreateImplementLinkBetweenSystemOccAndProcessOcc(${1:prodsystemoccurrence}, ${2:fprocessoccurrence})"
    },
    {
      "trigger": "CreateImplementLinkBetweenSystemOccAndWorkplanOcc\tProdSystemOccurrence,ProdSystemOccurrence",
      "contents": "CreateImplementLinkBetweenSystemOccAndWorkplanOcc(${1:prodsystemoccurrence}, ${2:prodsystemoccurrence})"
    },
    {
      "trigger": "CreateImport\tImportManager",
      "contents": "CreateImport(${1:importmanager})"
    },
    {
      "trigger": "CreateInsert\tString,String,ToolDevice",
      "contents": "CreateInsert(${1:name}, ${2:name}, ${3:tooldevice})"
    },
    {
      "trigger": "CreateInterfaceVolumeNode\tSys3DInterfaceVolumeNode,ProductOccurrence",
      "contents": "CreateInterfaceVolumeNode(${1:sys3dinterfacevolumenode}, ${2:productoccurrence})"
    },
    {
      "trigger": "CreateInterpolationAxis\tManufacturingActivity,Visualizable,ProductOccurrence,MfgDirection",
      "contents": "CreateInterpolationAxis(${1:manufacturingactivity}, ${2:visualizable}, ${3:productoccurrence}, ${4:mfgdirection})"
    },
    {
      "trigger": "CreateItemSubComponents\tProdSystemOccurrence,ProdSystemOccurrence,List,List",
      "contents": "CreateItemSubComponents(${1:prodsystemoccurrence}, ${2:prodsystemoccurrence}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "CreateItemSubComponentsEx\tProdSystemOccurrence,ProdSystemOccurrence,List,List,Boolean",
      "contents": "CreateItemSubComponentsEx(${1:prodsystemoccurrence}, ${2:prodsystemoccurrence}, ${3:list}, ${4:list}, ${5:bool})"
    },
    {
      "trigger": "CreateJSONDocument\tObjectType",
      "contents": "CreateJSONDocument(${1:objecttype})"
    },
    {
      "trigger": "CreateJunctionNode\tSys3DJunctionNode,ProductOccurrence,Feature",
      "contents": "CreateJunctionNode(${1:sys3djunctionnode}, ${2:productoccurrence}, ${3:feat})"
    },
    {
      "trigger": "CreateLatheTool\tString,String,Boolean,ToolDevice",
      "contents": "CreateLatheTool(${1:name}, ${2:name}, ${3:bool}, ${4:tooldevice})"
    },
    {
      "trigger": "CreateLayer\tCSEPropertySet",
      "contents": "CreateLayer(${1:csepropertyset})"
    },
    {
      "trigger": "CreateLineFastener\tCSEPropertySet",
      "contents": "CreateLineFastener(${1:csepropertyset})"
    },
    {
      "trigger": "CreateMachiningFeature\tString",
      "contents": "CreateMachiningFeature(${1:name})"
    },
    {
      "trigger": "CreateMachiningProcess\tNCMachiningTemplate",
      "contents": "CreateMachiningProcess(${1:ncmachiningtemplate})"
    },
    {
      "trigger": "CreateMadeFromRelation\tVPMReference,VPMReference,MustBeMadeFrom",
      "contents": "CreateMadeFromRelation(${1:vpmreference}, ${2:vpmreference}, ${3:mustbemadefrom})"
    },
    {
      "trigger": "CreateManufacturingScenario\tDELMfgSimMSR,String",
      "contents": "CreateManufacturingScenario(${1:delmfgsimmsr}, ${2:name})"
    },
    {
      "trigger": "CreateManufacturingSimulation\tDELMfgSimMSRMgr,String",
      "contents": "CreateManufacturingSimulation(${1:delmfgsimmsrmgr}, ${2:name})"
    },
    {
      "trigger": "CreateMap\tString,String",
      "contents": "CreateMap(${1:name}, ${2:name})"
    },
    {
      "trigger": "CreateMapFromColumns\tDTSheetType,List,String",
      "contents": "CreateMapFromColumns(${1:dtsheettype}, ${2:list}, ${3:name})"
    },
    {
      "trigger": "CreateMarkers\tAECAlignment3D,String,Integer,LENGTH",
      "contents": "CreateMarkers(${1:aecalignment3d}, ${2:name}, ${3:int}, ${4:len})"
    },
    {
      "trigger": "CreateMarkersWithOT\tAECAlignment3D,String,String,String,LENGTH,VerticalSignageLateralPosition,LENGTH,LENGTH,Integer,LENGTH",
      "contents": "CreateMarkersWithOT(${1:aecalignment3d}, ${2:name}, ${3:name}, ${4:name}, ${5:len}, ${6:verticalsignagelateralposition}, ${7:len}, ${8:len}, ${9:int}, ${10:len})"
    },
    {
      "trigger": "CreateMaterial\tCSEPropertySet",
      "contents": "CreateMaterial(${1:csepropertyset})"
    },
    {
      "trigger": "CreateMaterialFlow\tProdSystemOccurrence,ProdSystemOccurrence",
      "contents": "CreateMaterialFlow(${1:prodsystemoccurrence}, ${2:prodsystemoccurrence})"
    },
    {
      "trigger": "CreateMaterialFlow\tProdSystemOccurrence,ProdSystemOccurrence,List",
      "contents": "CreateMaterialFlow(${1:prodsystemoccurrence}, ${2:prodsystemoccurrence}, ${3:list})"
    },
    {
      "trigger": "CreateMaterialization\tDELFmiFunctionReference,VPMReference,DELFmiProcessOutputPrereqMaterializationCnx",
      "contents": "CreateMaterialization(${1:delfmifunctionreference}, ${2:vpmreference}, ${3:delfmiprocessoutputprereqmaterializationcnx})"
    },
    {
      "trigger": "CreateMillOrDrillTool\tString,String,Boolean,ToolDevice",
      "contents": "CreateMillOrDrillTool(${1:name}, ${2:name}, ${3:bool}, ${4:tooldevice})"
    },
    {
      "trigger": "CreateMotionActivity\tDNBResourceTask,Boolean,RscLogicInstruction,DNBRobotMotion",
      "contents": "CreateMotionActivity(${1:dnbresourcetask}, ${2:bool}, ${3:rsclogicinstruction}, ${4:dnbrobotmotion})"
    },
    {
      "trigger": "CreateMountControlEquipment\tRscMountsMgr,String",
      "contents": "CreateMountControlEquipment(${1:rscmountsmgr}, ${2:name})"
    },
    {
      "trigger": "CreateNetGroupExtremity\tLogicalOccurrence,LogicalOccurrence,String,RFLVPMLogicalPort",
      "contents": "CreateNetGroupExtremity(${1:logicaloccurrence}, ${2:logicaloccurrence}, ${3:name}, ${4:rflvpmlogicalport})"
    },
    {
      "trigger": "CreateNetGroupExtremityForPins\tList,List,LogicalOccurrence,String,RFLVPMLogicalPort",
      "contents": "CreateNetGroupExtremityForPins(${1:list}, ${2:list}, ${3:logicaloccurrence}, ${4:name}, ${5:rflvpmlogicalport})"
    },
    {
      "trigger": "CreateNetworkPath\tSys3DNetworkPath,List,Sys3DNetworkNode,Sys3DNetworkNode",
      "contents": "CreateNetworkPath(${1:sys3dnetworkpath}, ${2:list}, ${3:sys3dnetworknode}, ${4:sys3dnetworknode})"
    },
    {
      "trigger": "CreateNewApplicativeProfile\tRscApplicativeProfileGroup,String",
      "contents": "CreateNewApplicativeProfile(${1:rscapplicativeprofilegroup}, ${2:name})"
    },
    {
      "trigger": "CreateNewWorkInstruction\tProdSystemOccurrence,WorkInstructionType",
      "contents": "CreateNewWorkInstruction(${1:prodsystemoccurrence}, ${2:workinstructiontype})"
    },
    {
      "trigger": "CreateOrModifyConWip\tFFS_Resource,FFS_Resource,FFS_Item,FFS_Item,Integer",
      "contents": "CreateOrModifyConWip(${1:ffs_resource}, ${2:ffs_resource}, ${3:ffs_item}, ${4:ffs_item}, ${5:int})"
    },
    {
      "trigger": "CreateOrModifyDatum\tString,Feature,List,Integer",
      "contents": "CreateOrModifyDatum(${1:name}, ${2:feat}, ${3:list}, ${4:int})"
    },
    {
      "trigger": "CreateOrModifyTemplate\tObjectType,Feature,List,Integer,TemplateInstantiationOptionsType",
      "contents": "CreateOrModifyTemplate(${1:objecttype}, ${2:feat}, ${3:list}, ${4:int}, ${5:templateinstantiationoptionstype})"
    },
    {
      "trigger": "CreateOrModifyTimeConstraint\tProdSystemOccurrence,ProdSystemOccurrence,Real,Integer",
      "contents": "CreateOrModifyTimeConstraint(${1:prodsystemoccurrence}, ${2:prodsystemoccurrence}, ${3:real}, ${4:int})"
    },
    {
      "trigger": "CreateOrModifyTimeConstraint\tProdSystemOccurrence,ProdSystemOccurrence,Real,Integer,DELLmiTimeConstraintCnx",
      "contents": "CreateOrModifyTimeConstraint(${1:prodsystemoccurrence}, ${2:prodsystemoccurrence}, ${3:real}, ${4:int}, ${5:dellmitimeconstraintcnx})"
    },
    {
      "trigger": "CreateOrRetrieveBreak\tFFS_Shift,Integer,Integer,Integer,Integer,Integer,Integer,String,Boolean",
      "contents": "CreateOrRetrieveBreak(${1:ffs_shift}, ${2:int}, ${3:int}, ${4:int}, ${5:int}, ${6:int}, ${7:int}, ${8:name}, ${9:bool})"
    },
    {
      "trigger": "CreateOrRetrieveDate\tFFS_ShiftModel,Integer,Integer,Integer",
      "contents": "CreateOrRetrieveDate(${1:ffs_shiftmodel}, ${2:int}, ${3:int}, ${4:int})"
    },
    {
      "trigger": "CreateOrRetrieveItemFromOccurrencePath\tString",
      "contents": "CreateOrRetrieveItemFromOccurrencePath(${1:name})"
    },
    {
      "trigger": "CreateOrRetrieveProductFlow\tFFS_Resource,FFS_Resource,List",
      "contents": "CreateOrRetrieveProductFlow(${1:ffs_resource}, ${2:ffs_resource}, ${3:list})"
    },
    {
      "trigger": "CreateOrRetrieveResource\tProductOccurrence",
      "contents": "CreateOrRetrieveResource(${1:productoccurrence})"
    },
    {
      "trigger": "CreateOrRetrieveResourceFromOccurrencePath\tString",
      "contents": "CreateOrRetrieveResourceFromOccurrencePath(${1:name})"
    },
    {
      "trigger": "CreateOrRetrieveShift\tFFS_Date,Integer,Integer,Integer,Integer,Integer,Integer,String,Boolean",
      "contents": "CreateOrRetrieveShift(${1:ffs_date}, ${2:int}, ${3:int}, ${4:int}, ${5:int}, ${6:int}, ${7:int}, ${8:name}, ${9:bool})"
    },
    {
      "trigger": "CreateOrRetrieveShiftModelByName\tString",
      "contents": "CreateOrRetrieveShiftModelByName(${1:name})"
    },
    {
      "trigger": "CreateOrUpdateComputedWeight\tVPMReference",
      "contents": "CreateOrUpdateComputedWeight(${1:vpmreference})"
    },
    {
      "trigger": "CreateOrgRscForRscPositioning\tPLMCoreReference,PLMResource",
      "contents": "CreateOrgRscForRscPositioning(${1:plmcorereference}, ${2:plmresource})"
    },
    {
      "trigger": "CreatePLMQuery\tString",
      "contents": "CreatePLMQuery(${1:name})"
    },
    {
      "trigger": "CreatePLMQueryResult\tPLMEntity",
      "contents": "CreatePLMQueryResult(${1:plmentity})"
    },
    {
      "trigger": "CreatePadShape\tLENGTH,LENGTH,LENGTH,Sys3DPad",
      "contents": "CreatePadShape(${1:len}, ${2:len}, ${3:len}, ${4:sys3dpad})"
    },
    {
      "trigger": "CreatePaintTrajectory\tString,ResourceOccurrence,List,List",
      "contents": "CreatePaintTrajectory(${1:name}, ${2:resourceoccurrence}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "CreateParallelInstruction\tRscLogicSequence,Integer",
      "contents": "CreateParallelInstruction(${1:rsclogicsequence}, ${2:int})"
    },
    {
      "trigger": "CreateParallelSequence\tRscLogicParallel,Integer",
      "contents": "CreateParallelSequence(${1:rsclogicparallel}, ${2:int})"
    },
    {
      "trigger": "CreateParameterFromType\tString,Literal",
      "contents": "CreateParameterFromType(${1:name}, ${2:literal})"
    },
    {
      "trigger": "CreateParkingGroup\tFFS_VehicleDecisionPoint,List,List,FFS_ResourcePool,String",
      "contents": "CreateParkingGroup(${1:ffs_vehicledecisionpoint}, ${2:list}, ${3:list}, ${4:ffs_resourcepool}, ${5:name})"
    },
    {
      "trigger": "CreatePartialScope\tMfgProcessOccurrence,ProductOccurrence,Boolean,VPMReference,DELFmiFunctionReference,List,List,List,VPMReference,DELFmiFunctionReference",
      "contents": "CreatePartialScope(${1:mfgprocessoccurrence}, ${2:productoccurrence}, ${3:bool}, ${4:vpmreference}, ${5:delfmifunctionreference}, ${6:list}, ${7:list}, ${8:list}, ${9:vpmreference}, ${10:delfmifunctionreference})"
    },
    {
      "trigger": "CreatePath\tList,Elec3DNetworkPath",
      "contents": "CreatePath(${1:list}, ${2:elec3dnetworkpath})"
    },
    {
      "trigger": "CreatePathString\tDatabaseObjectType,List,ObjectType",
      "contents": "CreatePathString(${1:databaseobjecttype}, ${2:list}, ${3:objecttype})"
    },
    {
      "trigger": "CreatePathwayBranch\tSys3D_PathwayGeometryOccurrence,List,Sys3DPathwayBranch",
      "contents": "CreatePathwayBranch(${1:sys3d_pathwaygeometryoccurrence}, ${2:list}, ${3:sys3dpathwaybranch})"
    },
    {
      "trigger": "CreatePathwayBranchPoint\tSys3DPathwayBranch,CATEbm_ControlPoint,CATEbm_BranchPoint",
      "contents": "CreatePathwayBranchPoint(${1:sys3dpathwaybranch}, ${2:catebm_controlpoint}, ${3:catebm_branchpoint})"
    },
    {
      "trigger": "CreatePathwayBranchPoints\tSys3DPathwayBranch,List,List",
      "contents": "CreatePathwayBranchPoints(${1:sys3dpathwaybranch}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "CreatePathwayConnectionPoint\tSys3D_AbstractVolume,String,String,AxisSystem,Sys3D_PathwayConnectionPoint,String",
      "contents": "CreatePathwayConnectionPoint(${1:sys3d_abstractvolume}, ${2:name}, ${3:name}, ${4:axissystem}, ${5:sys3d_pathwayconnectionpoint}, ${6:name})"
    },
    {
      "trigger": "CreatePathwayRouteElement\tSys3D_PathwayGeometryOccurrence,Sys3DPathwayBranch,Feature,Sys3DPathwayRouteElement",
      "contents": "CreatePathwayRouteElement(${1:sys3d_pathwaygeometryoccurrence}, ${2:sys3dpathwaybranch}, ${3:feat}, ${4:sys3dpathwayrouteelement})"
    },
    {
      "trigger": "CreatePathwaySegmentArc\tSys3DPathwaySegmentArc,ProductOccurrence,Feature",
      "contents": "CreatePathwaySegmentArc(${1:sys3dpathwaysegmentarc}, ${2:productoccurrence}, ${3:feat})"
    },
    {
      "trigger": "CreatePatternUsage\tMfgPatternUsage",
      "contents": "CreatePatternUsage(${1:mfgpatternusage})"
    },
    {
      "trigger": "CreatePipingPort\tPLMEnsRefEquipment,Real,Real,Real,Real,Real,Real,Real,Real,Real,PipingPort_Types,String,Real,Real,Real",
      "contents": "CreatePipingPort(${1:plmensrefequipment}, ${2:real}, ${3:real}, ${4:real}, ${5:real}, ${6:real}, ${7:real}, ${8:real}, ${9:real}, ${10:real}, ${11:pipingport_types}, ${12:name}, ${13:real}, ${14:real}, ${15:real})"
    },
    {
      "trigger": "CreatePipingPortOnReference\tVPMReference,GSMPoint,Direction,Direction,PipingPort_Types,String,GSMPoint",
      "contents": "CreatePipingPortOnReference(${1:vpmreference}, ${2:gsmpoint}, ${3:direction}, ${4:direction}, ${5:pipingport_types}, ${6:name}, ${7:gsmpoint})"
    },
    {
      "trigger": "CreatePipingReplicatePort\tPLMEnsRefEquipment,ProductOccurrence,String,String,Boolean,Piping_Port",
      "contents": "CreatePipingReplicatePort(${1:plmensrefequipment}, ${2:productoccurrence}, ${3:name}, ${4:name}, ${5:bool}, ${6:piping_port})"
    },
    {
      "trigger": "CreatePointFastener\tCSEPropertySet",
      "contents": "CreatePointFastener(${1:csepropertyset})"
    },
    {
      "trigger": "CreatePointOperation\tDNBResourceTask,PointOperationType,RscLogicInstruction,PointOperationPosition,DNBTag,ProductOccurrence,RscLogicSequence,Feature",
      "contents": "CreatePointOperation(${1:dnbresourcetask}, ${2:pointoperationtype}, ${3:rsclogicinstruction}, ${4:pointoperationposition}, ${5:dnbtag}, ${6:productoccurrence}, ${7:rsclogicsequence}, ${8:feat})"
    },
    {
      "trigger": "CreatePointRouteElement\tFeature,Elec3DPointRouteElement",
      "contents": "CreatePointRouteElement(${1:feat}, ${2:elec3dpointrouteelement})"
    },
    {
      "trigger": "CreatePointRouteElement\tProductOccurrence,Feature,Sys3DPointRouteElement",
      "contents": "CreatePointRouteElement(${1:productoccurrence}, ${2:feat}, ${3:sys3dpointrouteelement})"
    },
    {
      "trigger": "CreatePointTrajectory\tPointTrajectoryType,ProdSystemOccurrence,String",
      "contents": "CreatePointTrajectory(${1:pointtrajectorytype}, ${2:prodsystemoccurrence}, ${3:name})"
    },
    {
      "trigger": "CreatePreAssignedRscContextLink\tPLMSystem,PLMResource,Integer",
      "contents": "CreatePreAssignedRscContextLink(${1:plmsystem}, ${2:plmresource}, ${3:int})"
    },
    {
      "trigger": "CreatePreAssignedRscLink\tProdSystemOccurrence,PLMResource,AllocatedResourceLink,Integer",
      "contents": "CreatePreAssignedRscLink(${1:prodsystemoccurrence}, ${2:plmresource}, ${3:allocatedresourcelink}, ${4:int})"
    },
    {
      "trigger": "CreatePrimaryCapableResourceLink\tPLMCoreReference,PLMResource,DELAsmProcessCanUseCnx",
      "contents": "CreatePrimaryCapableResourceLink(${1:plmcorereference}, ${2:plmresource}, ${3:delasmprocesscanusecnx})"
    },
    {
      "trigger": "CreateProcessGroup\tMfgProcessOccurrence",
      "contents": "CreateProcessGroup(${1:mfgprocessoccurrence})"
    },
    {
      "trigger": "CreateProcessReference\tString",
      "contents": "CreateProcessReference(${1:name})"
    },
    {
      "trigger": "CreateProductFlow\tFFS_Resource,FFS_Resource,List,String",
      "contents": "CreateProductFlow(${1:ffs_resource}, ${2:ffs_resource}, ${3:list}, ${4:name})"
    },
    {
      "trigger": "CreateProductProcessScope\tDELFmiFunctionReference,VPMReference",
      "contents": "CreateProductProcessScope(${1:delfmifunctionreference}, ${2:vpmreference})"
    },
    {
      "trigger": "CreateProfile\tResourceOccurrence",
      "contents": "CreateProfile(${1:resourceoccurrence})"
    },
    {
      "trigger": "CreateProgressBar\tString",
      "contents": "CreateProgressBar(${1:name})"
    },
    {
      "trigger": "CreatePublication\tDatabaseObjectType,VPMInstance,ObjectType,String",
      "contents": "CreatePublication(${1:databaseobjecttype}, ${2:vpminstance}, ${3:objecttype}, ${4:name})"
    },
    {
      "trigger": "CreatePulseInstruction\tRscLogicSequence,String,String,Integer",
      "contents": "CreatePulseInstruction(${1:rsclogicsequence}, ${2:name}, ${3:name}, ${4:int})"
    },
    {
      "trigger": "CreateRacewayPort\tRaceway_Part,Real,Real,Real,Real,Real,Real,Real,Real,Real,RacewayPort_Types,String,Real,Real,Real",
      "contents": "CreateRacewayPort(${1:raceway_part}, ${2:real}, ${3:real}, ${4:real}, ${5:real}, ${6:real}, ${7:real}, ${8:real}, ${9:real}, ${10:real}, ${11:racewayport_types}, ${12:name}, ${13:real}, ${14:real}, ${15:real})"
    },
    {
      "trigger": "CreateRacewayPortOnReference\tVPMReference,GSMPoint,Direction,Direction,RacewayPort_Types,String,GSMPoint",
      "contents": "CreateRacewayPortOnReference(${1:vpmreference}, ${2:gsmpoint}, ${3:direction}, ${4:direction}, ${5:racewayport_types}, ${6:name}, ${7:gsmpoint})"
    },
    {
      "trigger": "CreateRacewayReplicatePort\tPLMEnsRefEquipment,ProductOccurrence,String,String,Boolean,Raceway_Port",
      "contents": "CreateRacewayReplicatePort(${1:plmensrefequipment}, ${2:productoccurrence}, ${3:name}, ${4:name}, ${5:bool}, ${6:raceway_port})"
    },
    {
      "trigger": "CreateRectangularProfile\tLENGTH,LENGTH,ElecRectangularProfile",
      "contents": "CreateRectangularProfile(${1:len}, ${2:len}, ${3:elecrectangularprofile})"
    },
    {
      "trigger": "CreateReleaseInstruction\tDNBResourceTask,String,Integer",
      "contents": "CreateReleaseInstruction(${1:dnbresourcetask}, ${2:name}, ${3:int})"
    },
    {
      "trigger": "CreateReplicatedPublication\tVPMReference,String,ProductOccurrence,ElecPort,ElecPort",
      "contents": "CreateReplicatedPublication(${1:vpmreference}, ${2:name}, ${3:productoccurrence}, ${4:elecport}, ${5:elecport})"
    },
    {
      "trigger": "CreateRequestGroup\tFFS_VehicleDecisionPoint,List,List,FFS_ResourcePool,String",
      "contents": "CreateRequestGroup(${1:ffs_vehicledecisionpoint}, ${2:list}, ${3:list}, ${4:ffs_resourcepool}, ${5:name})"
    },
    {
      "trigger": "CreateResourcePool\tList,String",
      "contents": "CreateResourcePool(${1:list}, ${2:name})"
    },
    {
      "trigger": "CreateResourceSubComponents\tProdSystemOccurrence,ProdSystemOccurrence,List,List",
      "contents": "CreateResourceSubComponents(${1:prodsystemoccurrence}, ${2:prodsystemoccurrence}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "CreateResourceSubComponentsEx\tProdSystemOccurrence,ProdSystemOccurrence,List,List,Boolean",
      "contents": "CreateResourceSubComponentsEx(${1:prodsystemoccurrence}, ${2:prodsystemoccurrence}, ${3:list}, ${4:list}, ${5:bool})"
    },
    {
      "trigger": "CreateResourceVariantTrajectory\tDELPointTrajectory,String,String,Boolean,Boolean",
      "contents": "CreateResourceVariantTrajectory(${1:delpointtrajectory}, ${2:name}, ${3:name}, ${4:bool}, ${5:bool})"
    },
    {
      "trigger": "CreateResourceZone\tFFS_Resource,Matrix",
      "contents": "CreateResourceZone(${1:ffs_resource}, ${2:matrix})"
    },
    {
      "trigger": "CreateResultingRobotTasks\tRscMultiRobotPathPlanner",
      "contents": "CreateResultingRobotTasks(${1:rscmultirobotpathplanner})"
    },
    {
      "trigger": "CreateReturnInstruction\tRscLogicSequence,Integer",
      "contents": "CreateReturnInstruction(${1:rsclogicsequence}, ${2:int})"
    },
    {
      "trigger": "CreateRobApplicationTrajectories\tResourceOccurrence",
      "contents": "CreateRobApplicationTrajectories(${1:resourceoccurrence})"
    },
    {
      "trigger": "CreateRobApplicationTrajectory\tProdSystemOccurrence,RobApplicationType",
      "contents": "CreateRobApplicationTrajectory(${1:prodsystemoccurrence}, ${2:robapplicationtype})"
    },
    {
      "trigger": "CreateRobApplicationTrajectory\tResourceOccurrence,RobApplicationType,PointTrajectoryType,ResourceOccurrence",
      "contents": "CreateRobApplicationTrajectory(${1:resourceoccurrence}, ${2:robapplicationtype}, ${3:pointtrajectorytype}, ${4:resourceoccurrence})"
    },
    {
      "trigger": "CreateRobDRAction\tFeature,RobDrillRivetProfile,DNBTag,Integer",
      "contents": "CreateRobDRAction(${1:feat}, ${2:robdrillrivetprofile}, ${3:dnbtag}, ${4:int})"
    },
    {
      "trigger": "CreateRobDRActions\tRobDrillRivetProfile,DNBTagGroup,Integer,Boolean",
      "contents": "CreateRobDRActions(${1:robdrillrivetprofile}, ${2:dnbtaggroup}, ${3:int}, ${4:bool})"
    },
    {
      "trigger": "CreateRobDRProfile\tProfileType,ResourceOccurrence",
      "contents": "CreateRobDRProfile(${1:profiletype}, ${2:resourceoccurrence})"
    },
    {
      "trigger": "CreateRobDRSequence\tRobDrillRivetProfile,DNBTagGroup,Integer,Boolean",
      "contents": "CreateRobDRSequence(${1:robdrillrivetprofile}, ${2:dnbtaggroup}, ${3:int}, ${4:bool})"
    },
    {
      "trigger": "CreateRobotTaskSolution\tRscPathPlanner,Integer,String",
      "contents": "CreateRobotTaskSolution(${1:rscpathplanner}, ${2:int}, ${3:name})"
    },
    {
      "trigger": "CreateRouteGroup\tFFS_VehicleDecisionPoint,List,List,FFS_ResourcePool,String",
      "contents": "CreateRouteGroup(${1:ffs_vehicledecisionpoint}, ${2:list}, ${3:list}, ${4:ffs_resourcepool}, ${5:name})"
    },
    {
      "trigger": "CreateRoutingRuleSet\tSys3DRoutingRuleSet,Feature,LogicalOccurrence",
      "contents": "CreateRoutingRuleSet(${1:sys3droutingruleset}, ${2:feat}, ${3:logicaloccurrence})"
    },
    {
      "trigger": "CreateRscAttachment\tRscAttachmentsMgr,String,ProductOccurrence,VPMPort,ProductOccurrence,VPMPort,RscTransform",
      "contents": "CreateRscAttachment(${1:rscattachmentsmgr}, ${2:name}, ${3:productoccurrence}, ${4:vpmport}, ${5:productoccurrence}, ${6:vpmport}, ${7:rsctransform})"
    },
    {
      "trigger": "CreateRscConst\tDNBResourceTask,String,Integer,String,DNBConst",
      "contents": "CreateRscConst(${1:dnbresourcetask}, ${2:name}, ${3:int}, ${4:name}, ${5:dnbconst})"
    },
    {
      "trigger": "CreateRscConstant\tRscModelLogicMgr,String,Integer,String",
      "contents": "CreateRscConstant(${1:rscmodellogicmgr}, ${2:name}, ${3:int}, ${4:name})"
    },
    {
      "trigger": "CreateRscControllerForControl\tRscControllerMgr,List,List",
      "contents": "CreateRscControllerForControl(${1:rsccontrollermgr}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "CreateRscControllerForMechanism\tRscControllerMgr,String",
      "contents": "CreateRscControllerForMechanism(${1:rsccontrollermgr}, ${2:name})"
    },
    {
      "trigger": "CreateRscIOSignal\tRscModelLogicMgr,String,Integer,Integer",
      "contents": "CreateRscIOSignal(${1:rscmodellogicmgr}, ${2:name}, ${3:int}, ${4:int})"
    },
    {
      "trigger": "CreateRscIOSignalMappings\tRscModelLogicMgr,ProductOccurrence,ProductOccurrence,String,String",
      "contents": "CreateRscIOSignalMappings(${1:rscmodellogicmgr}, ${2:productoccurrence}, ${3:productoccurrence}, ${4:name}, ${5:name})"
    },
    {
      "trigger": "CreateRscLocalConstant\tRscLogicTask,String,Integer,String",
      "contents": "CreateRscLocalConstant(${1:rsclogictask}, ${2:name}, ${3:int}, ${4:name})"
    },
    {
      "trigger": "CreateRscLocalIOSignal\tRscLogicTask,String,Integer,Integer",
      "contents": "CreateRscLocalIOSignal(${1:rsclogictask}, ${2:name}, ${3:int}, ${4:int})"
    },
    {
      "trigger": "CreateRscLocalVar\tDNBResourceTask,String,Integer,DNBLocalVar",
      "contents": "CreateRscLocalVar(${1:dnbresourcetask}, ${2:name}, ${3:int}, ${4:dnblocalvar})"
    },
    {
      "trigger": "CreateRscLocalVariable\tRscLogicTask,String,Integer",
      "contents": "CreateRscLocalVariable(${1:rsclogictask}, ${2:name}, ${3:int})"
    },
    {
      "trigger": "CreateRscLogicSimSensor\tRscModelLogicMgr,String,String",
      "contents": "CreateRscLogicSimSensor(${1:rscmodellogicmgr}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "CreateRscLogicTask\tRscModelLogicMgr,String,Integer",
      "contents": "CreateRscLogicTask(${1:rscmodellogicmgr}, ${2:name}, ${3:int})"
    },
    {
      "trigger": "CreateRscMotionGroup\tRscController,List,List",
      "contents": "CreateRscMotionGroup(${1:rsccontroller}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "CreateRscPortFromAxis\tRscPortsMgr,Integer,String,AxisSystem,ProductOccurrence",
      "contents": "CreateRscPortFromAxis(${1:rscportsmgr}, ${2:int}, ${3:name}, ${4:axissystem}, ${5:productoccurrence})"
    },
    {
      "trigger": "CreateRscPortFromTransfo\tRscPortsMgr,Integer,String,RscTransform,ProductOccurrence",
      "contents": "CreateRscPortFromTransfo(${1:rscportsmgr}, ${2:int}, ${3:name}, ${4:rsctransform}, ${5:productoccurrence})"
    },
    {
      "trigger": "CreateRscTimer\tRscModelLogicMgr,String",
      "contents": "CreateRscTimer(${1:rscmodellogicmgr}, ${2:name})"
    },
    {
      "trigger": "CreateRscVariable\tRscModelLogicMgr,String,Integer",
      "contents": "CreateRscVariable(${1:rscmodellogicmgr}, ${2:name}, ${3:int})"
    },
    {
      "trigger": "CreateRunTaskInstruction\tRscLogicSequence,String,Integer",
      "contents": "CreateRunTaskInstruction(${1:rsclogicsequence}, ${2:name}, ${3:int})"
    },
    {
      "trigger": "CreateSPMOperation\tDNBResourceTask,Boolean,RscLogicInstruction,DNBSPMOperation",
      "contents": "CreateSPMOperation(${1:dnbresourcetask}, ${2:bool}, ${3:rsclogicinstruction}, ${4:dnbspmoperation})"
    },
    {
      "trigger": "CreateScope\tMfgProcessOccurrence,ProductOccurrence",
      "contents": "CreateScope(${1:mfgprocessoccurrence}, ${2:productoccurrence})"
    },
    {
      "trigger": "CreateScopeAndSetUsagePointTarget\tProdSystemOccurrence,FProcessOccurrence,FProcessOccurrence,MfgProductionPlanning",
      "contents": "CreateScopeAndSetUsagePointTarget(${1:prodsystemoccurrence}, ${2:fprocessoccurrence}, ${3:fprocessoccurrence}, ${4:mfgproductionplanning})"
    },
    {
      "trigger": "CreateScopeToProduct\tMfgProcessOccurrence,PLMCoreReference",
      "contents": "CreateScopeToProduct(${1:mfgprocessoccurrence}, ${2:plmcorereference})"
    },
    {
      "trigger": "CreateScopeToWorkplan\tProdSystemOccurrence,ProdSystemOccurrence",
      "contents": "CreateScopeToWorkplan(${1:prodsystemoccurrence}, ${2:prodsystemoccurrence})"
    },
    {
      "trigger": "CreateScopeWithContext\tMfgProcessOccurrence,ProductOccurrence,Boolean,VPMReference,DELFmiFunctionReference,List,List,List,VPMReference,DELFmiFunctionReference",
      "contents": "CreateScopeWithContext(${1:mfgprocessoccurrence}, ${2:productoccurrence}, ${3:bool}, ${4:vpmreference}, ${5:delfmifunctionreference}, ${6:list}, ${7:list}, ${8:list}, ${9:vpmreference}, ${10:delfmifunctionreference})"
    },
    {
      "trigger": "CreateSecondaryCapableResourceLink\tPLMCoreReference,PLMResource,PLMConnection,SecondaryCandidateResourceLink",
      "contents": "CreateSecondaryCapableResourceLink(${1:plmcorereference}, ${2:plmresource}, ${3:plmconnection}, ${4:secondarycandidateresourcelink})"
    },
    {
      "trigger": "CreateSeqMotion\tString,MfgPtToPtSite",
      "contents": "CreateSeqMotion(${1:name}, ${2:mfgpttoptsite})"
    },
    {
      "trigger": "CreateServiceCallInstruction\tRscLogicSequence,String,ProductOccurrence,Integer",
      "contents": "CreateServiceCallInstruction(${1:rsclogicsequence}, ${2:name}, ${3:productoccurrence}, ${4:int})"
    },
    {
      "trigger": "CreateSetupPosition\tManufacturingSetup,MfgSetupPosition",
      "contents": "CreateSetupPosition(${1:manufacturingsetup}, ${2:mfgsetupposition})"
    },
    {
      "trigger": "CreateSheet\tFeature,String",
      "contents": "CreateSheet(${1:feat}, ${2:name})"
    },
    {
      "trigger": "CreateSignalRoute\tFeature,ProductOccurrence,Sys3D_RouteOccurrence,LogicalOccurrence,String",
      "contents": "CreateSignalRoute(${1:feat}, ${2:productoccurrence}, ${3:sys3d_routeoccurrence}, ${4:logicaloccurrence}, ${5:name})"
    },
    {
      "trigger": "CreateSolid\tCSEPropertySet",
      "contents": "CreateSolid(${1:csepropertyset})"
    },
    {
      "trigger": "CreateSpecificProfileType\tRscControllerProfile,String",
      "contents": "CreateSpecificProfileType(${1:rsccontrollerprofile}, ${2:name})"
    },
    {
      "trigger": "CreateSphereShape\tLENGTH,Sys3DSphere",
      "contents": "CreateSphereShape(${1:len}, ${2:sys3dsphere})"
    },
    {
      "trigger": "CreateStandardConnectionPoint\tElecPortV5,String,Boolean,ElecPort",
      "contents": "CreateStandardConnectionPoint(${1:elecportv5}, ${2:name}, ${3:bool}, ${4:elecport})"
    },
    {
      "trigger": "CreateStylusTool\tString,String,ToolDevice",
      "contents": "CreateStylusTool(${1:name}, ${2:name}, ${3:tooldevice})"
    },
    {
      "trigger": "CreateSupportRouteElement\tProductOccurrence,Integer,Elec3DSupportRouteElement",
      "contents": "CreateSupportRouteElement(${1:productoccurrence}, ${2:int}, ${3:elec3dsupportrouteelement})"
    },
    {
      "trigger": "CreateSurfaceFastener\tCSEPropertySet",
      "contents": "CreateSurfaceFastener(${1:csepropertyset})"
    },
    {
      "trigger": "CreateSystemOrOperationOutputToProcess\tPLMCoreReference,DELFmiFunctionReference",
      "contents": "CreateSystemOrOperationOutputToProcess(${1:plmcorereference}, ${2:delfmifunctionreference})"
    },
    {
      "trigger": "CreateTSAScenario\tDELMfgSimMSR,String,ScenarioTypeEnum,ResourceOccurrence",
      "contents": "CreateTSAScenario(${1:delmfgsimmsr}, ${2:name}, ${3:scenariotypeenum}, ${4:resourceoccurrence})"
    },
    {
      "trigger": "CreateTag\tDNBTagGroup,String,Integer,Boolean,DNBTag",
      "contents": "CreateTag(${1:dnbtaggroup}, ${2:name}, ${3:int}, ${4:bool}, ${5:dnbtag})"
    },
    {
      "trigger": "CreateTagAtLocation\tDNBTagGroup,String,Integer,Boolean,RscTransform,DNBTag",
      "contents": "CreateTagAtLocation(${1:dnbtaggroup}, ${2:name}, ${3:int}, ${4:bool}, ${5:rsctransform}, ${6:dnbtag})"
    },
    {
      "trigger": "CreateTagGroup\tProductOccurrence,String",
      "contents": "CreateTagGroup(${1:productoccurrence}, ${2:name})"
    },
    {
      "trigger": "CreateTask\tDNBTaskManager,Integer,DNBResourceTask",
      "contents": "CreateTask(${1:dnbtaskmanager}, ${2:int}, ${3:dnbresourcetask})"
    },
    {
      "trigger": "CreateTaskOnMotionGroups\tDNBTaskManager,Integer,List,DNBResourceTask",
      "contents": "CreateTaskOnMotionGroups(${1:dnbtaskmanager}, ${2:int}, ${3:list}, ${4:dnbresourcetask})"
    },
    {
      "trigger": "CreateTimeAnalysisLines\tDELTimeAnalysisRepInstance,Integer",
      "contents": "CreateTimeAnalysisLines(${1:deltimeanalysisrepinstance}, ${2:int})"
    },
    {
      "trigger": "CreateTimeConstraint\tList,List",
      "contents": "CreateTimeConstraint(${1:list}, ${2:list})"
    },
    {
      "trigger": "CreateToolAttachInstruction\tDNBResourceTask,String,Integer",
      "contents": "CreateToolAttachInstruction(${1:dnbresourcetask}, ${2:name}, ${3:int})"
    },
    {
      "trigger": "CreateToolDetachInstruction\tDNBResourceTask,String,Integer",
      "contents": "CreateToolDetachInstruction(${1:dnbresourcetask}, ${2:name}, ${3:int})"
    },
    {
      "trigger": "CreateTrack\tFProcessOccurrence",
      "contents": "CreateTrack(${1:fprocessoccurrence})"
    },
    {
      "trigger": "CreateTrain\tList,List,String,Real",
      "contents": "CreateTrain(${1:list}, ${2:list}, ${3:name}, ${4:real})"
    },
    {
      "trigger": "CreateTrain\tList,List,String,Real,String",
      "contents": "CreateTrain(${1:list}, ${2:list}, ${3:name}, ${4:real}, ${5:name})"
    },
    {
      "trigger": "CreateTrainWithInitialLocation\tFFS_VehicleDecisionPoint,List,String,Real",
      "contents": "CreateTrainWithInitialLocation(${1:ffs_vehicledecisionpoint}, ${2:list}, ${3:name}, ${4:real})"
    },
    {
      "trigger": "CreateTrainWithInitialLocation\tFFS_VehicleDecisionPoint,List,String,Real,String",
      "contents": "CreateTrainWithInitialLocation(${1:ffs_vehicledecisionpoint}, ${2:list}, ${3:name}, ${4:real}, ${5:name})"
    },
    {
      "trigger": "CreateTransformedObject\tStrStructureCopySpecification,Feature,Feature,Feature,Integer",
      "contents": "CreateTransformedObject(${1:strstructurecopyspecification}, ${2:feat}, ${3:feat}, ${4:feat}, ${5:int})"
    },
    {
      "trigger": "CreateTransportRouteGroup\tList,FFS_ResourcePool",
      "contents": "CreateTransportRouteGroup(${1:list}, ${2:ffs_resourcepool})"
    },
    {
      "trigger": "CreateTruckInstance\tFFS_RoadSegment,VPMReference,ProductOccurrence,Integer,Real,Matrix",
      "contents": "CreateTruckInstance(${1:ffs_roadsegment}, ${2:vpmreference}, ${3:productoccurrence}, ${4:int}, ${5:real}, ${6:matrix})"
    },
    {
      "trigger": "CreateTruncatedRectangularProfile\tLENGTH,LENGTH,LENGTH,LENGTH,String,ElecTruncatedRectangularProfile",
      "contents": "CreateTruncatedRectangularProfile(${1:len}, ${2:len}, ${3:len}, ${4:len}, ${5:name}, ${6:electruncatedrectangularprofile})"
    },
    {
      "trigger": "CreateUserApplicativeProfileGroup\tRscApplicativeProfileMgr,String",
      "contents": "CreateUserApplicativeProfileGroup(${1:rscapplicativeprofilemgr}, ${2:name})"
    },
    {
      "trigger": "CreateUserConnectionLine\tCSEPropertySet,Line",
      "contents": "CreateUserConnectionLine(${1:csepropertyset}, ${2:line})"
    },
    {
      "trigger": "CreateUserConnectionPoints\tCSEPropertySet,List",
      "contents": "CreateUserConnectionPoints(${1:csepropertyset}, ${2:list})"
    },
    {
      "trigger": "CreateVehicleController\tProductOccurrence,VPMReference,Matrix",
      "contents": "CreateVehicleController(${1:productoccurrence}, ${2:vpmreference}, ${3:matrix})"
    },
    {
      "trigger": "CreateView\tPLMOperation",
      "contents": "CreateView(${1:plmoperation})"
    },
    {
      "trigger": "CreateVolumeRouteElement\tSys3D_AbstractVolumeOccurrence,Sys3D_PathwayConnectionPoint,Sys3DVolumeRouteElement,LENGTH",
      "contents": "CreateVolumeRouteElement(${1:sys3d_abstractvolumeoccurrence}, ${2:sys3d_pathwayconnectionpoint}, ${3:sys3dvolumerouteelement}, ${4:len})"
    },
    {
      "trigger": "CreateWaitInstruction\tRscLogicSequence,Integer",
      "contents": "CreateWaitInstruction(${1:rsclogicsequence}, ${2:int})"
    },
    {
      "trigger": "CreateWaypointMotionActivity\tDNBResourceTask,Boolean,RscLogicInstruction,String,String,DNBRobotMotion",
      "contents": "CreateWaypointMotionActivity(${1:dnbresourcetask}, ${2:bool}, ${3:rsclogicinstruction}, ${4:name}, ${5:name}, ${6:dnbrobotmotion})"
    },
    {
      "trigger": "CreateWhileLoopInstruction\tRscLogicSequence,Integer,Integer",
      "contents": "CreateWhileLoopInstruction(${1:rsclogicsequence}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "CreateXMLDocument\tObjectType,Boolean,ObjectType,String",
      "contents": "CreateXMLDocument(${1:objecttype}, ${2:bool}, ${3:objecttype}, ${4:name})"
    },
    {
      "trigger": "CrossProduct\tVector,Vector",
      "contents": "CrossProduct(${1:vector}, ${2:vector})"
    },
    {
      "trigger": "CubicInterpolation\tReal,Real,Real",
      "contents": "CubicInterpolation(${1:real}, ${2:real}, ${3:real})"
    },
    {
      "trigger": "Date\tString",
      "contents": "Date(${1:name})"
    },
    {
      "trigger": "DateFormat\tString,Date",
      "contents": "DateFormat(${1:name}, ${2:date})"
    },
    {
      "trigger": "DeActivateViews\tPLMOperation",
      "contents": "DeActivateViews(${1:plmoperation})"
    },
    {
      "trigger": "DeactivateConfiguredResources\tInteger",
      "contents": "DeactivateConfiguredResources(${1:int})"
    },
    {
      "trigger": "DeactivateConstraint\tElecRoute",
      "contents": "DeactivateConstraint(${1:elecroute})"
    },
    {
      "trigger": "DeactivateFilterResources\t()",
      "contents": "DeactivateFilterResources()"
    },
    {
      "trigger": "DeactivateManufacturingSimulation\tDELMfgSimMSR",
      "contents": "DeactivateManufacturingSimulation(${1:delmfgsimmsr})"
    },
    {
      "trigger": "DeactivateSketchContour\tSddContourBased",
      "contents": "DeactivateSketchContour(${1:sddcontourbased})"
    },
    {
      "trigger": "DebuggerBreak\t()",
      "contents": "DebuggerBreak()"
    },
    {
      "trigger": "DefineAttributeMapping\tComponentFamily,List,List",
      "contents": "DefineAttributeMapping(${1:componentfamily}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "DefineIOSignalFromCommand\tRscControlLogicMgr,String,Integer,Integer",
      "contents": "DefineIOSignalFromCommand(${1:rsccontrollogicmgr}, ${2:name}, ${3:int}, ${4:int})"
    },
    {
      "trigger": "DefineIOSignalMapping\tRscModelLogicMgr,String,ProductOccurrence,String,ProductOccurrence",
      "contents": "DefineIOSignalMapping(${1:rscmodellogicmgr}, ${2:name}, ${3:productoccurrence}, ${4:name}, ${5:productoccurrence})"
    },
    {
      "trigger": "DefineInterferenceComputation\tVPMInstance,VPMRepInstance,VPMInstance,VPMRepInstance,PIM_TypeOfCheckWithRule,LENGTH,KWERule",
      "contents": "DefineInterferenceComputation(${1:vpminstance}, ${2:vpmrepinstance}, ${3:vpminstance}, ${4:vpmrepinstance}, ${5:pim_typeofcheckwithrule}, ${6:len}, ${7:kwerule})"
    },
    {
      "trigger": "Delaunay3D\tList",
      "contents": "Delaunay3D(${1:list})"
    },
    {
      "trigger": "Delete3DState\tDEL3DState",
      "contents": "Delete3DState(${1:del3dstate})"
    },
    {
      "trigger": "Delete\tFeature",
      "contents": "Delete(${1:feat})"
    },
    {
      "trigger": "Delete\tHTTPClient,String,DataTreeNode",
      "contents": "Delete(${1:httpclient}, ${2:name}, ${3:datatreenode})"
    },
    {
      "trigger": "DeleteActivity\tFFS_Activity",
      "contents": "DeleteActivity(${1:ffs_activity})"
    },
    {
      "trigger": "DeleteAllAttachedDocument\tPLMConnection",
      "contents": "DeleteAllAttachedDocument(${1:plmconnection})"
    },
    {
      "trigger": "DeleteAllAttachedDocumentsOnRscDetail\tPLMConnection",
      "contents": "DeleteAllAttachedDocumentsOnRscDetail(${1:plmconnection})"
    },
    {
      "trigger": "DeleteAllRscIOSignalMappings\tRscModelLogicMgr,Boolean",
      "contents": "DeleteAllRscIOSignalMappings(${1:rscmodellogicmgr}, ${2:bool})"
    },
    {
      "trigger": "DeleteAttachedDocument\tPLMConnection,Feature",
      "contents": "DeleteAttachedDocument(${1:plmconnection}, ${2:feat})"
    },
    {
      "trigger": "DeleteAttachedDocumentOnRscDetail\tPLMConnection,Feature",
      "contents": "DeleteAttachedDocumentOnRscDetail(${1:plmconnection}, ${2:feat})"
    },
    {
      "trigger": "DeleteClaimGroup\tFFS_ClaimGroup",
      "contents": "DeleteClaimGroup(${1:ffs_claimgroup})"
    },
    {
      "trigger": "DeleteCnxEvent\tVPMReference,CATMatConnection",
      "contents": "DeleteCnxEvent(${1:vpmreference}, ${2:catmatconnection})"
    },
    {
      "trigger": "DeleteConsumable\tFFS_Consumable",
      "contents": "DeleteConsumable(${1:ffs_consumable})"
    },
    {
      "trigger": "DeleteDCChecklistRows\tDELWkiDataCollectPlanReference,List",
      "contents": "DeleteDCChecklistRows(${1:delwkidatacollectplanreference}, ${2:list})"
    },
    {
      "trigger": "DeleteDCPRows\tDELWkiDataCollectPlanReference,List",
      "contents": "DeleteDCPRows(${1:delwkidatacollectplanreference}, ${2:list})"
    },
    {
      "trigger": "DeleteDressup\tPLMOperation,Feature",
      "contents": "DeleteDressup(${1:plmoperation}, ${2:feat})"
    },
    {
      "trigger": "DeleteElementaryMotion2\tMfgMacroMotion,Integer,Integer",
      "contents": "DeleteElementaryMotion2(${1:mfgmacromotion}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "DeleteElementaryMotion\tMfgMacroMotion,MfgMacroElementaryMotion,Integer",
      "contents": "DeleteElementaryMotion(${1:mfgmacromotion}, ${2:mfgmacroelementarymotion}, ${3:int})"
    },
    {
      "trigger": "DeleteFireBridge\tAGTInsulation,Integer",
      "contents": "DeleteFireBridge(${1:agtinsulation}, ${2:int})"
    },
    {
      "trigger": "DeleteInZoneByName\tString",
      "contents": "DeleteInZoneByName(${1:name})"
    },
    {
      "trigger": "DeleteMfgActivities\tList",
      "contents": "DeleteMfgActivities(${1:list})"
    },
    {
      "trigger": "DeleteMfgActivity\tManufacturingActivity",
      "contents": "DeleteMfgActivity(${1:manufacturingactivity})"
    },
    {
      "trigger": "DeleteMotionActivities\tDNBResourceTask,List",
      "contents": "DeleteMotionActivities(${1:dnbresourcetask}, ${2:list})"
    },
    {
      "trigger": "DeleteMotionActivity\tDNBResourceTask,DNBRobotMotion",
      "contents": "DeleteMotionActivity(${1:dnbresourcetask}, ${2:dnbrobotmotion})"
    },
    {
      "trigger": "DeleteNetGroupExtremity\tLogicalOccurrence,LogicalOccurrence",
      "contents": "DeleteNetGroupExtremity(${1:logicaloccurrence}, ${2:logicaloccurrence})"
    },
    {
      "trigger": "DeleteNetGroupExtremityFromPins\tList,List,LogicalOccurrence",
      "contents": "DeleteNetGroupExtremityFromPins(${1:list}, ${2:list}, ${3:logicaloccurrence})"
    },
    {
      "trigger": "DeleteOutZoneByName\tString",
      "contents": "DeleteOutZoneByName(${1:name})"
    },
    {
      "trigger": "DeleteParkingGroup\tFFS_ParkingGroup",
      "contents": "DeleteParkingGroup(${1:ffs_parkinggroup})"
    },
    {
      "trigger": "DeletePointOperation\tDELPointOperation",
      "contents": "DeletePointOperation(${1:delpointoperation})"
    },
    {
      "trigger": "DeletePointTrajectory\tDELPointTrajectory",
      "contents": "DeletePointTrajectory(${1:delpointtrajectory})"
    },
    {
      "trigger": "DeleteProductFlow\tFFS_ProductFlow",
      "contents": "DeleteProductFlow(${1:ffs_productflow})"
    },
    {
      "trigger": "DeleteProductZone\tFFS_ProductZone",
      "contents": "DeleteProductZone(${1:ffs_productzone})"
    },
    {
      "trigger": "DeleteProfile\tResourceOccurrence,DNBSpotProfile",
      "contents": "DeleteProfile(${1:resourceoccurrence}, ${2:dnbspotprofile})"
    },
    {
      "trigger": "DeletePublication\tDatabaseObjectType,String",
      "contents": "DeletePublication(${1:databaseobjecttype}, ${2:name})"
    },
    {
      "trigger": "DeleteRepresentations\tToolDevice,List",
      "contents": "DeleteRepresentations(${1:tooldevice}, ${2:list})"
    },
    {
      "trigger": "DeleteRequestGroup\tFFS_RequestGroup",
      "contents": "DeleteRequestGroup(${1:ffs_requestgroup})"
    },
    {
      "trigger": "DeleteResourceZoneByName\tString",
      "contents": "DeleteResourceZoneByName(${1:name})"
    },
    {
      "trigger": "DeleteRobDRAction\tRobDrillRivetAction,Feature",
      "contents": "DeleteRobDRAction(${1:robdrillrivetaction}, ${2:feat})"
    },
    {
      "trigger": "DeleteRobDRProfile\tRobDrillRivetProfile,ResourceOccurrence",
      "contents": "DeleteRobDRProfile(${1:robdrillrivetprofile}, ${2:resourceoccurrence})"
    },
    {
      "trigger": "DeleteRobDRSequence\tRobDrillRivetSequence,Feature",
      "contents": "DeleteRobDRSequence(${1:robdrillrivetsequence}, ${2:feat})"
    },
    {
      "trigger": "DeleteRouteGroup\tFFS_RouteGroup",
      "contents": "DeleteRouteGroup(${1:ffs_routegroup})"
    },
    {
      "trigger": "DeleteRoutes\tElectrical3DSystem,List",
      "contents": "DeleteRoutes(${1:electrical3dsystem}, ${2:list})"
    },
    {
      "trigger": "DeleteRscConst\tDNBResourceTask,DNBConst",
      "contents": "DeleteRscConst(${1:dnbresourcetask}, ${2:dnbconst})"
    },
    {
      "trigger": "DeleteRscIOSignalMappings\tRscModelLogicMgr,ProductOccurrence,ProductOccurrence,String,String,Boolean",
      "contents": "DeleteRscIOSignalMappings(${1:rscmodellogicmgr}, ${2:productoccurrence}, ${3:productoccurrence}, ${4:name}, ${5:name}, ${6:bool})"
    },
    {
      "trigger": "DeleteRscLocalVar\tDNBResourceTask,DNBLocalVar",
      "contents": "DeleteRscLocalVar(${1:dnbresourcetask}, ${2:dnblocalvar})"
    },
    {
      "trigger": "DeleteTag\tDNBTagGroup,DNBTag",
      "contents": "DeleteTag(${1:dnbtaggroup}, ${2:dnbtag})"
    },
    {
      "trigger": "DeleteTask\tDNBTaskManager,DNBResourceTask",
      "contents": "DeleteTask(${1:dnbtaskmanager}, ${2:dnbresourcetask})"
    },
    {
      "trigger": "DeleteTasks\tDNBTaskManager,List",
      "contents": "DeleteTasks(${1:dnbtaskmanager}, ${2:list})"
    },
    {
      "trigger": "DeleteTrack\tDNBFitTrack",
      "contents": "DeleteTrack(${1:dnbfittrack})"
    },
    {
      "trigger": "DeleteTrajectory\tDELSurfaceTrajectory",
      "contents": "DeleteTrajectory(${1:delsurfacetrajectory})"
    },
    {
      "trigger": "DeleteTransportRoute\tFFS_TransportRouteGroup",
      "contents": "DeleteTransportRoute(${1:ffs_transportroutegroup})"
    },
    {
      "trigger": "DeleteVehicleDecisionPoint\tFFS_VehicleDecisionPoint",
      "contents": "DeleteVehicleDecisionPoint(${1:ffs_vehicledecisionpoint})"
    },
    {
      "trigger": "DestroyAllocationSession\t()",
      "contents": "DestroyAllocationSession()"
    },
    {
      "trigger": "Detach\tDNBTagGroup",
      "contents": "Detach(${1:dnbtaggroup})"
    },
    {
      "trigger": "Detach\tHumanActivityManager,List,HAReport",
      "contents": "Detach(${1:humanactivitymanager}, ${2:list}, ${3:hareport})"
    },
    {
      "trigger": "DetachDocument\tPLMEntity,Feature",
      "contents": "DetachDocument(${1:plmentity}, ${2:feat})"
    },
    {
      "trigger": "DetachTagGroups\tList",
      "contents": "DetachTagGroups(${1:list})"
    },
    {
      "trigger": "Determinant\tMatrix",
      "contents": "Determinant(${1:matrix})"
    },
    {
      "trigger": "Dilate\tBitmap,Integer",
      "contents": "Dilate(${1:bitmap}, ${2:int})"
    },
    {
      "trigger": "DimToString\tMagnitude,String",
      "contents": "DimToString(${1:mag}, ${2:name})"
    },
    {
      "trigger": "Direction\tGeometricLine",
      "contents": "Direction(${1:geometricline})"
    },
    {
      "trigger": "DisableErrors\tBoolean,Boolean,Boolean",
      "contents": "DisableErrors(${1:bool}, ${2:bool}, ${3:bool})"
    },
    {
      "trigger": "DisableUndo\t()",
      "contents": "DisableUndo()"
    },
    {
      "trigger": "DisassociateRoutable\tLogicalOccurrence,LogicalOccurrence",
      "contents": "DisassociateRoutable(${1:logicaloccurrence}, ${2:logicaloccurrence})"
    },
    {
      "trigger": "DispatchRouteToEPS\tElec3DCable,ElecRoute,Electrical3DSystemOccurrence,ElecRoute",
      "contents": "DispatchRouteToEPS(${1:elec3dcable}, ${2:elecroute}, ${3:electrical3dsystemoccurrence}, ${4:elecroute})"
    },
    {
      "trigger": "DissociateContract\tRFLPLMFlowExpositionInstance,RFLPLMFunctionalContract",
      "contents": "DissociateContract(${1:rflplmflowexpositioninstance}, ${2:rflplmfunctionalcontract})"
    },
    {
      "trigger": "DistanceWireProduct\tFeature,Feature",
      "contents": "DistanceWireProduct(${1:feat}, ${2:feat})"
    },
    {
      "trigger": "DistributeWeight\tMLPLayerObject,String",
      "contents": "DistributeWeight(${1:mlplayerobject}, ${2:name})"
    },
    {
      "trigger": "DrawPixel\tBitmap,Integer,Integer,Integer,Integer,Integer",
      "contents": "DrawPixel(${1:bitmap}, ${2:int}, ${3:int}, ${4:int}, ${5:int}, ${6:int})"
    },
    {
      "trigger": "Dump\tMatrix",
      "contents": "Dump(${1:matrix})"
    },
    {
      "trigger": "Duplicate\tBitmap",
      "contents": "Duplicate(${1:bitmap})"
    },
    {
      "trigger": "Edges\tGeometricObject",
      "contents": "Edges(${1:geometricobject})"
    },
    {
      "trigger": "Elec_BranchExtremities\tBranch,SegmentExtremity,SegmentExtremity",
      "contents": "Elec_BranchExtremities(${1:branch}, ${2:segmentextremity}, ${3:segmentextremity})"
    },
    {
      "trigger": "Elec_BundleSegmentExtremities\tSegment,SegmentExtremity,SegmentExtremity",
      "contents": "Elec_BundleSegmentExtremities(${1:segment}, ${2:segmentextremity}, ${3:segmentextremity})"
    },
    {
      "trigger": "Elec_DistanceCommon\tFeature,Feature",
      "contents": "Elec_DistanceCommon(${1:feat}, ${2:feat})"
    },
    {
      "trigger": "Elec_FillingRatio\tSegment,Real,Boolean,Real,Real",
      "contents": "Elec_FillingRatio(${1:segment}, ${2:real}, ${3:bool}, ${4:real}, ${5:real})"
    },
    {
      "trigger": "ElectricalConnect\tVPMInstance,String,VPMInstance,String,Integer",
      "contents": "ElectricalConnect(${1:vpminstance}, ${2:name}, ${3:vpminstance}, ${4:name}, ${5:int})"
    },
    {
      "trigger": "ElectricalConnect\tVPMInstance,VPMInstance,String,Integer",
      "contents": "ElectricalConnect(${1:vpminstance}, ${2:vpminstance}, ${3:name}, ${4:int})"
    },
    {
      "trigger": "ElectricalDisconnect\tVPMInstance,String",
      "contents": "ElectricalDisconnect(${1:vpminstance}, ${2:name})"
    },
    {
      "trigger": "ElectricalDisconnectBranch\tVPMInstance,String",
      "contents": "ElectricalDisconnectBranch(${1:vpminstance}, ${2:name})"
    },
    {
      "trigger": "Empty\tDNBTagGroup",
      "contents": "Empty(${1:dnbtaggroup})"
    },
    {
      "trigger": "EnableErrors\t()",
      "contents": "EnableErrors()"
    },
    {
      "trigger": "EnableOrDisableResource\tFFS_Shift,FFS_Resource,Boolean",
      "contents": "EnableOrDisableResource(${1:ffs_shift}, ${2:ffs_resource}, ${3:bool})"
    },
    {
      "trigger": "EnableRRS\tRRSConnectionParameters,Boolean",
      "contents": "EnableRRS(${1:rrsconnectionparameters}, ${2:bool})"
    },
    {
      "trigger": "End\tGeometricCurve",
      "contents": "End(${1:geometriccurve})"
    },
    {
      "trigger": "EndBuildUp\tProdSystemOccurrence",
      "contents": "EndBuildUp(${1:prodsystemoccurrence})"
    },
    {
      "trigger": "EndModifyTemplate\tFeature",
      "contents": "EndModifyTemplate(${1:feat})"
    },
    {
      "trigger": "EndOfAlgorithmRun \tOptOptimization",
      "contents": "EndOfAlgorithmRun (${1:optoptimization})"
    },
    {
      "trigger": "EndOfPEOLeanUpdate\tOptOptimization",
      "contents": "EndOfPEOLeanUpdate(${1:optoptimization})"
    },
    {
      "trigger": "EquipmentCenterAllocation\tRFLVPMLogicalInstance",
      "contents": "EquipmentCenterAllocation(${1:rflvpmlogicalinstance})"
    },
    {
      "trigger": "Erode\tBitmap,Integer",
      "contents": "Erode(${1:bitmap}, ${2:int})"
    },
    {
      "trigger": "Eval\tMathFunctionX,Real",
      "contents": "Eval(${1:mathfunctionx}, ${2:real})"
    },
    {
      "trigger": "EvalUV\tMathFunctionUV,Real,Real",
      "contents": "EvalUV(${1:mathfunctionuv}, ${2:real}, ${3:real})"
    },
    {
      "trigger": "Evaluate\tLaw,Real",
      "contents": "Evaluate(${1:law}, ${2:real})"
    },
    {
      "trigger": "EvaluateScrewVolume\tScrew",
      "contents": "EvaluateScrewVolume(${1:screw})"
    },
    {
      "trigger": "Execute\tSIMItfSimulation,ProductOccurrence",
      "contents": "Execute(${1:simitfsimulation}, ${2:productoccurrence})"
    },
    {
      "trigger": "ExecuteAutoSequence\tList,Boolean",
      "contents": "ExecuteAutoSequence(${1:list}, ${2:bool})"
    },
    {
      "trigger": "ExecuteDOFOptimization\tRscPathPlanner,Real,Real",
      "contents": "ExecuteDOFOptimization(${1:rscpathplanner}, ${2:real}, ${3:real})"
    },
    {
      "trigger": "ExecuteJavaProcedure\tString,ObjectType",
      "contents": "ExecuteJavaProcedure(${1:name}, ${2:objecttype})"
    },
    {
      "trigger": "ExecuteMultiPathValidation\tRscMultiRobotPathPlanner",
      "contents": "ExecuteMultiPathValidation(${1:rscmultirobotpathplanner})"
    },
    {
      "trigger": "ExecutePLMFunction\tString,String,ObjectType",
      "contents": "ExecutePLMFunction(${1:name}, ${2:name}, ${3:objecttype})"
    },
    {
      "trigger": "ExecutePLMProcedure\tString,ObjectType",
      "contents": "ExecutePLMProcedure(${1:name}, ${2:objecttype})"
    },
    {
      "trigger": "ExecutePathValidation\tRscPathPlanner",
      "contents": "ExecutePathValidation(${1:rscpathplanner})"
    },
    {
      "trigger": "ExecuteRuleService\tString,Feature,RuleContext",
      "contents": "ExecuteRuleService(${1:name}, ${2:feat}, ${3:rulecontext})"
    },
    {
      "trigger": "ExecuteVBResource\tString,String,ObjectType,ObjectType",
      "contents": "ExecuteVBResource(${1:name}, ${2:name}, ${3:objecttype}, ${4:objecttype})"
    },
    {
      "trigger": "ExecuteValidationService\tString,Feature,RuleContext",
      "contents": "ExecuteValidationService(${1:name}, ${2:feat}, ${3:rulecontext})"
    },
    {
      "trigger": "ExpandNode\tObjectType,Integer",
      "contents": "ExpandNode(${1:objecttype}, ${2:int})"
    },
    {
      "trigger": "Export3DStateCGR\tDEL3DState,String,ProductOccurrence,Integer",
      "contents": "Export3DStateCGR(${1:del3dstate}, ${2:name}, ${3:productoccurrence}, ${4:int})"
    },
    {
      "trigger": "Export3DStateImage\tDEL3DState,DELImageType,String,Integer,Integer",
      "contents": "Export3DStateImage(${1:del3dstate}, ${2:delimagetype}, ${3:name}, ${4:int}, ${5:int})"
    },
    {
      "trigger": "Export3DStateXML\tDEL3DState,String",
      "contents": "Export3DStateXML(${1:del3dstate}, ${2:name})"
    },
    {
      "trigger": "ExportInterferencePairInterlocks\tRobInterferencePair,String",
      "contents": "ExportInterferencePairInterlocks(${1:robinterferencepair}, ${2:name})"
    },
    {
      "trigger": "ExportInterferencePairResults\tRobInterferencePair,String",
      "contents": "ExportInterferencePairResults(${1:robinterferencepair}, ${2:name})"
    },
    {
      "trigger": "ExportPathPlannerSpecifications\tRscPathPlanner,String",
      "contents": "ExportPathPlannerSpecifications(${1:rscpathplanner}, ${2:name})"
    },
    {
      "trigger": "ExportProcessPoints\tDNBSPMOperation,String",
      "contents": "ExportProcessPoints(${1:dnbspmoperation}, ${2:name})"
    },
    {
      "trigger": "ExportRscIOSignalMappings\tRscModelLogicMgr,String",
      "contents": "ExportRscIOSignalMappings(${1:rscmodellogicmgr}, ${2:name})"
    },
    {
      "trigger": "ExposedTypeName\tRFLPLMFunctionalConnector",
      "contents": "ExposedTypeName(${1:rflplmfunctionalconnector})"
    },
    {
      "trigger": "Extract\tList,String,String,String",
      "contents": "Extract(${1:list}, ${2:name}, ${3:name}, ${4:name})"
    },
    {
      "trigger": "Extract\tString,Integer,Integer",
      "contents": "Extract(${1:name}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "FLAttachToEditor\tSysConnectable",
      "contents": "FLAttachToEditor(${1:sysconnectable})"
    },
    {
      "trigger": "FLExtract2DGraph\tSysConnectable,String,String",
      "contents": "FLExtract2DGraph(${1:sysconnectable}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "FLGet2DGraphicalProperties\tFunctionalOccurrence,List,List",
      "contents": "FLGet2DGraphicalProperties(${1:functionaloccurrence}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "FLGet2DGraphicalProperties\tFunctionalOccurrence,SysConnection,List,List",
      "contents": "FLGet2DGraphicalProperties(${1:functionaloccurrence}, ${2:sysconnection}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "FLGet2DPosition\tFunctionalOccurrence,Real,Real",
      "contents": "FLGet2DPosition(${1:functionaloccurrence}, ${2:real}, ${3:real})"
    },
    {
      "trigger": "FLGet2DPosition\tFunctionalOccurrence,SysInterface,Real,Real",
      "contents": "FLGet2DPosition(${1:functionaloccurrence}, ${2:sysinterface}, ${3:real}, ${4:real})"
    },
    {
      "trigger": "FLGet2DSize\tFunctionalOccurrence,Real,Real",
      "contents": "FLGet2DSize(${1:functionaloccurrence}, ${2:real}, ${3:real})"
    },
    {
      "trigger": "FLGetMinimizedStatus\tFunctionalOccurrence,Boolean",
      "contents": "FLGetMinimizedStatus(${1:functionaloccurrence}, ${2:bool})"
    },
    {
      "trigger": "FLGetMinimizedStatus\tFunctionalOccurrence,SysInterface,Boolean",
      "contents": "FLGetMinimizedStatus(${1:functionaloccurrence}, ${2:sysinterface}, ${3:bool})"
    },
    {
      "trigger": "FLGetWayPoints\tSysConnection,List,List",
      "contents": "FLGetWayPoints(${1:sysconnection}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "FLSet2DGraphicalProperties\tFunctionalOccurrence,List,List",
      "contents": "FLSet2DGraphicalProperties(${1:functionaloccurrence}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "FLSet2DGraphicalProperties\tFunctionalOccurrence,SysConnection,List,List",
      "contents": "FLSet2DGraphicalProperties(${1:functionaloccurrence}, ${2:sysconnection}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "FLSet2DPosition\tFunctionalOccurrence,Real,Real",
      "contents": "FLSet2DPosition(${1:functionaloccurrence}, ${2:real}, ${3:real})"
    },
    {
      "trigger": "FLSet2DPosition\tFunctionalOccurrence,SysInterface,Real,Real",
      "contents": "FLSet2DPosition(${1:functionaloccurrence}, ${2:sysinterface}, ${3:real}, ${4:real})"
    },
    {
      "trigger": "FLSet2DSize\tFunctionalOccurrence,Real,Real",
      "contents": "FLSet2DSize(${1:functionaloccurrence}, ${2:real}, ${3:real})"
    },
    {
      "trigger": "FLSetMinimizedStatus\tFunctionalOccurrence,Boolean",
      "contents": "FLSetMinimizedStatus(${1:functionaloccurrence}, ${2:bool})"
    },
    {
      "trigger": "FLSetMinimizedStatus\tFunctionalOccurrence,SysInterface,Boolean",
      "contents": "FLSetMinimizedStatus(${1:functionaloccurrence}, ${2:sysinterface}, ${3:bool})"
    },
    {
      "trigger": "FLSetWayPoints\tSysConnection,List,List",
      "contents": "FLSetWayPoints(${1:sysconnection}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "Faces\tGeometricObject",
      "contents": "Faces(${1:geometricobject})"
    },
    {
      "trigger": "FileContentModification\tDesignTableType",
      "contents": "FileContentModification(${1:designtabletype})"
    },
    {
      "trigger": "Filter\tDTSheetType,String",
      "contents": "Filter(${1:dtsheettype}, ${2:name})"
    },
    {
      "trigger": "Filter\tList,String,String",
      "contents": "Filter(${1:list}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "FiltrerMaterialsWithBrokenLinks\tList",
      "contents": "FiltrerMaterialsWithBrokenLinks(${1:list})"
    },
    {
      "trigger": "Finalize\tBaseConcept",
      "contents": "Finalize(${1:baseconcept})"
    },
    {
      "trigger": "FinalizeControllerSynchronization\tRscControllerSynchronization",
      "contents": "FinalizeControllerSynchronization(${1:rsccontrollersynchronization})"
    },
    {
      "trigger": "FinalizeSweptVolumeComputation\tDELRscSweptVolumeMgr",
      "contents": "FinalizeSweptVolumeComputation(${1:delrscsweptvolumemgr})"
    },
    {
      "trigger": "Find\tFeature,String,String,Boolean",
      "contents": "Find(${1:feat}, ${2:name}, ${3:name}, ${4:bool})"
    },
    {
      "trigger": "FindAttributeReal\tFeature,String",
      "contents": "FindAttributeReal(${1:feat}, ${2:name})"
    },
    {
      "trigger": "FindContour\tBitmap,Integer,Integer",
      "contents": "FindContour(${1:bitmap}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "FindManufacturingFeature\tString,String",
      "contents": "FindManufacturingFeature(${1:name}, ${2:name})"
    },
    {
      "trigger": "FindObject\tObjectPath,String,Boolean",
      "contents": "FindObject(${1:objectpath}, ${2:name}, ${3:bool})"
    },
    {
      "trigger": "FindSignalRoute\tFeature,ProductOccurrence,Sys3D_RouteOccurrence,LogicalOccurrence",
      "contents": "FindSignalRoute(${1:feat}, ${2:productoccurrence}, ${3:sys3d_routeoccurrence}, ${4:logicaloccurrence})"
    },
    {
      "trigger": "FindType\tString",
      "contents": "FindType(${1:name})"
    },
    {
      "trigger": "FitAllIn\t()",
      "contents": "FitAllIn()"
    },
    {
      "trigger": "FlattenList\tList",
      "contents": "FlattenList(${1:list})"
    },
    {
      "trigger": "FlipToolApproach\tDELSurfaceTrajectory",
      "contents": "FlipToolApproach(${1:delsurfacetrajectory})"
    },
    {
      "trigger": "FluidicFab_SetFeatureAttribute\tList,FluidicFab_FeatureType,String,String",
      "contents": "FluidicFab_SetFeatureAttribute(${1:list}, ${2:fluidicfab_featuretype}, ${3:name}, ${4:name})"
    },
    {
      "trigger": "FootprintArea\tProductOccurrence,LENGTH",
      "contents": "FootprintArea(${1:productoccurrence}, ${2:len})"
    },
    {
      "trigger": "FormatNumber\tReal,String,Integer",
      "contents": "FormatNumber(${1:real}, ${2:name}, ${3:int})"
    },
    {
      "trigger": "FromTo\tConductor,VPMInstance,String,VPMInstance,String",
      "contents": "FromTo(${1:conductor}, ${2:vpminstance}, ${3:name}, ${4:vpminstance}, ${5:name})"
    },
    {
      "trigger": "FullSolve\tProdSystemOccurrence,Map,String",
      "contents": "FullSolve(${1:prodsystemoccurrence}, ${2:map}, ${3:name})"
    },
    {
      "trigger": "GSDGetSurfaceOrientation\tFeature",
      "contents": "GSDGetSurfaceOrientation(${1:feat})"
    },
    {
      "trigger": "GaussianBlur\tBitmap,Integer",
      "contents": "GaussianBlur(${1:bitmap}, ${2:int})"
    },
    {
      "trigger": "Generate\tKnowledgeReportGeneration",
      "contents": "Generate(${1:knowledgereportgeneration})"
    },
    {
      "trigger": "GenerateBehaviorModelFromMechanism\tModelicaPackage,Feature,String,Boolean",
      "contents": "GenerateBehaviorModelFromMechanism(${1:modelicapackage}, ${2:feat}, ${3:name}, ${4:bool})"
    },
    {
      "trigger": "GenerateBehaviorModelFromPiping\tModelicaPackage,ProductOccurrence,String,String",
      "contents": "GenerateBehaviorModelFromPiping(${1:modelicapackage}, ${2:productoccurrence}, ${3:name}, ${4:name})"
    },
    {
      "trigger": "GenerateBehaviorModelFromSinglePipingObject\tModelicaPackage,ProductOccurrence,String,String",
      "contents": "GenerateBehaviorModelFromSinglePipingObject(${1:modelicapackage}, ${2:productoccurrence}, ${3:name}, ${4:name})"
    },
    {
      "trigger": "GenerateFluidLogicalSeqNum\tRFLVPMLogicalReference",
      "contents": "GenerateFluidLogicalSeqNum(${1:rflvpmlogicalreference})"
    },
    {
      "trigger": "GenerateKinematics\tRscKinWizardMgr,String",
      "contents": "GenerateKinematics(${1:rsckinwizardmgr}, ${2:name})"
    },
    {
      "trigger": "GenerateRequirementsFromAnnotationSets\tList,List,List",
      "contents": "GenerateRequirementsFromAnnotationSets(${1:list}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "GenerateResults\tFeature,Feature",
      "contents": "GenerateResults(${1:feat}, ${2:feat})"
    },
    {
      "trigger": "GenerateRoadPathway\tProductOccurrence,List,Real,Real,String",
      "contents": "GenerateRoadPathway(${1:productoccurrence}, ${2:list}, ${3:real}, ${4:real}, ${5:name})"
    },
    {
      "trigger": "GenerateRotary\tToolDevice",
      "contents": "GenerateRotary(${1:tooldevice})"
    },
    {
      "trigger": "GenerateSketchOnDestination\tStrStructureCopySpecification,Feature,Sketch,Sketch",
      "contents": "GenerateSketchOnDestination(${1:strstructurecopyspecification}, ${2:feat}, ${3:sketch}, ${4:sketch})"
    },
    {
      "trigger": "GenerateSweptVolume\tDELRscSweptVolumeMgr,List,List,List",
      "contents": "GenerateSweptVolume(${1:delrscsweptvolumemgr}, ${2:list}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "GenerateUniqueFolderID\tString",
      "contents": "GenerateUniqueFolderID(${1:name})"
    },
    {
      "trigger": "GenerateUniqueSubFolderID\tString,Integer",
      "contents": "GenerateUniqueSubFolderID(${1:name}, ${2:int})"
    },
    {
      "trigger": "GeometryCheckOpe\t()",
      "contents": "GeometryCheckOpe()"
    },
    {
      "trigger": "Get3DAlignmentCurve\tAECRoadSet",
      "contents": "Get3DAlignmentCurve(${1:aecroadset})"
    },
    {
      "trigger": "Get3DAxisSystem\tSddContourBased,Feature",
      "contents": "Get3DAxisSystem(${1:sddcontourbased}, ${2:feat})"
    },
    {
      "trigger": "Get3DAxisSystem\tSldSketchBasedPanel,Feature,Feature,Feature",
      "contents": "Get3DAxisSystem(${1:sldsketchbasedpanel}, ${2:feat}, ${3:feat}, ${4:feat})"
    },
    {
      "trigger": "Get3DMarkerLeaderPositions\tPLMOperation,Feature,List",
      "contents": "Get3DMarkerLeaderPositions(${1:plmoperation}, ${2:feat}, ${3:list})"
    },
    {
      "trigger": "Get3DMarkerPosition\tPLMOperation,Feature,List",
      "contents": "Get3DMarkerPosition(${1:plmoperation}, ${2:feat}, ${3:list})"
    },
    {
      "trigger": "Get3DPoint\tElec3DPointRouteElement,Point",
      "contents": "Get3DPoint(${1:elec3dpointrouteelement}, ${2:point})"
    },
    {
      "trigger": "Get3DTagText\tAECRebarLayer",
      "contents": "Get3DTagText(${1:aecrebarlayer})"
    },
    {
      "trigger": "Get3DTextMarkerProperties\tPLMOperation,Feature,List",
      "contents": "Get3DTextMarkerProperties(${1:plmoperation}, ${2:feat}, ${3:list})"
    },
    {
      "trigger": "Get3To5xConverter\tManufacturingActivity,M3xTo5xConverter",
      "contents": "Get3To5xConverter(${1:manufacturingactivity}, ${2:m3xto5xconverter})"
    },
    {
      "trigger": "Get4XNormalConstraint\tManufacturingActivity,MfgDirection",
      "contents": "Get4XNormalConstraint(${1:manufacturingactivity}, ${2:mfgdirection})"
    },
    {
      "trigger": "Get\tHTTPClient,String,DataTreeNode",
      "contents": "Get(${1:httpclient}, ${2:name}, ${3:datatreenode})"
    },
    {
      "trigger": "Get\tMap,ObjectType",
      "contents": "Get(${1:map}, ${2:objecttype})"
    },
    {
      "trigger": "GetAGVInstanceByName\tString",
      "contents": "GetAGVInstanceByName(${1:name})"
    },
    {
      "trigger": "GetAbscissa\tElecDeviceDistantLink,LENGTH",
      "contents": "GetAbscissa(${1:elecdevicedistantlink}, ${2:len})"
    },
    {
      "trigger": "GetAbsoluteAxis\tDNBTag,ProductOccurrence,ProductOccurrence,List",
      "contents": "GetAbsoluteAxis(${1:dnbtag}, ${2:productoccurrence}, ${3:productoccurrence}, ${4:list})"
    },
    {
      "trigger": "GetAccelerationUnit\tRscMotionProfile,RscMotionType",
      "contents": "GetAccelerationUnit(${1:rscmotionprofile}, ${2:rscmotiontype})"
    },
    {
      "trigger": "GetAccelerationValue\tRscMotionProfile,RscMotionType",
      "contents": "GetAccelerationValue(${1:rscmotionprofile}, ${2:rscmotiontype})"
    },
    {
      "trigger": "GetAccuracyProfile\tDNBRobotMotion,Feature",
      "contents": "GetAccuracyProfile(${1:dnbrobotmotion}, ${2:feat})"
    },
    {
      "trigger": "GetAccuracyType\tRscAccuracyProfile",
      "contents": "GetAccuracyType(${1:rscaccuracyprofile})"
    },
    {
      "trigger": "GetAccuracyValue\tRscAccuracyProfile",
      "contents": "GetAccuracyValue(${1:rscaccuracyprofile})"
    },
    {
      "trigger": "GetActionRuleName\tSldAdvConnection,String",
      "contents": "GetActionRuleName(${1:sldadvconnection}, ${2:name})"
    },
    {
      "trigger": "GetActiveAutoSequenceRules\tList,List",
      "contents": "GetActiveAutoSequenceRules(${1:list}, ${2:list})"
    },
    {
      "trigger": "GetActiveOperation\tProdSystemOccurrence,ProdSystemOccurrence",
      "contents": "GetActiveOperation(${1:prodsystemoccurrence}, ${2:prodsystemoccurrence})"
    },
    {
      "trigger": "GetActiveState\tProductOccurrence",
      "contents": "GetActiveState(${1:productoccurrence})"
    },
    {
      "trigger": "GetActiveSystem\tProdSystemOccurrence,ProdSystemOccurrence",
      "contents": "GetActiveSystem(${1:prodsystemoccurrence}, ${2:prodsystemoccurrence})"
    },
    {
      "trigger": "GetActivities\tFFS_GroupActivity",
      "contents": "GetActivities(${1:ffs_groupactivity})"
    },
    {
      "trigger": "GetActivitiesSequence\tFFS_GroupActivity",
      "contents": "GetActivitiesSequence(${1:ffs_groupactivity})"
    },
    {
      "trigger": "GetActivityFromDestination\tFFS_DestinationProperties",
      "contents": "GetActivityFromDestination(${1:ffs_destinationproperties})"
    },
    {
      "trigger": "GetActivityFromName\tFFS_Resource,String",
      "contents": "GetActivityFromName(${1:ffs_resource}, ${2:name})"
    },
    {
      "trigger": "GetActivityFromName\tString",
      "contents": "GetActivityFromName(${1:name})"
    },
    {
      "trigger": "GetActivityMaxValueToAsPerSpecifiedTableDepartRequirement\tFFS_DestinationProperties,FFS_Activity",
      "contents": "GetActivityMaxValueToAsPerSpecifiedTableDepartRequirement(${1:ffs_destinationproperties}, ${2:ffs_activity})"
    },
    {
      "trigger": "GetActivityMinValueToAsPerSpecifiedTableDepartRequirement\tFFS_DestinationProperties,FFS_Activity",
      "contents": "GetActivityMinValueToAsPerSpecifiedTableDepartRequirement(${1:ffs_destinationproperties}, ${2:ffs_activity})"
    },
    {
      "trigger": "GetActivitySetupPositions\tManufacturingActivity,List",
      "contents": "GetActivitySetupPositions(${1:manufacturingactivity}, ${2:list})"
    },
    {
      "trigger": "GetActivitySyntax\tAuxiliaryOperation,String",
      "contents": "GetActivitySyntax(${1:auxiliaryoperation}, ${2:name})"
    },
    {
      "trigger": "GetActivityToAsPerSpecifiedTableDepartRequirement\tFFS_DestinationProperties",
      "contents": "GetActivityToAsPerSpecifiedTableDepartRequirement(${1:ffs_destinationproperties})"
    },
    {
      "trigger": "GetActualCant\tAECHorizontalArc",
      "contents": "GetActualCant(${1:aechorizontalarc})"
    },
    {
      "trigger": "GetAggregatedParameters\tDatabaseObjectType",
      "contents": "GetAggregatedParameters(${1:databaseobjecttype})"
    },
    {
      "trigger": "GetAggregatedPreAssignedRscLinks\tPLMSystem,List",
      "contents": "GetAggregatedPreAssignedRscLinks(${1:plmsystem}, ${2:list})"
    },
    {
      "trigger": "GetAggregatingObject\tPlmParameter",
      "contents": "GetAggregatingObject(${1:plmparameter})"
    },
    {
      "trigger": "GetAheadCurve\tAECAlignment2DHorizontal,LENGTH",
      "contents": "GetAheadCurve(${1:aecalignment2dhorizontal}, ${2:len})"
    },
    {
      "trigger": "GetAheadCurve\tAECHorizontalArc",
      "contents": "GetAheadCurve(${1:aechorizontalarc})"
    },
    {
      "trigger": "GetAheadLabel\tAECAlignment2DHorizontal,LENGTH",
      "contents": "GetAheadLabel(${1:aecalignment2dhorizontal}, ${2:len})"
    },
    {
      "trigger": "GetAheadStation\tAECAlignment2DHorizontal,LENGTH,String,Boolean,Integer",
      "contents": "GetAheadStation(${1:aecalignment2dhorizontal}, ${2:len}, ${3:name}, ${4:bool}, ${5:int})"
    },
    {
      "trigger": "GetAheadStation\tAECAlignment2DHorizontal,LENGTH,String,Integer,Boolean,Integer",
      "contents": "GetAheadStation(${1:aecalignment2dhorizontal}, ${2:len}, ${3:name}, ${4:int}, ${5:bool}, ${6:int})"
    },
    {
      "trigger": "GetAlgebraicDifferenceStartEndGrade\tAECVerticalCurve",
      "contents": "GetAlgebraicDifferenceStartEndGrade(${1:aecverticalcurve})"
    },
    {
      "trigger": "GetAlignToFlange\tSddOpening,Integer",
      "contents": "GetAlignToFlange(${1:sddopening}, ${2:int})"
    },
    {
      "trigger": "GetAlignment\tAECAlignment2DVertical",
      "contents": "GetAlignment(${1:aecalignment2dvertical})"
    },
    {
      "trigger": "GetAllAccesses\tFeature,List,List",
      "contents": "GetAllAccesses(${1:feat}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "GetAllActivities\t()",
      "contents": "GetAllActivities()"
    },
    {
      "trigger": "GetAllAssignedBreaks\tFFS_Shift",
      "contents": "GetAllAssignedBreaks(${1:ffs_shift})"
    },
    {
      "trigger": "GetAllAssignedResources\tFFS_Break",
      "contents": "GetAllAssignedResources(${1:ffs_break})"
    },
    {
      "trigger": "GetAllAssignedShifts\tFFS_Date",
      "contents": "GetAllAssignedShifts(${1:ffs_date})"
    },
    {
      "trigger": "GetAllBufferActivities\tFFS_Resource",
      "contents": "GetAllBufferActivities(${1:ffs_resource})"
    },
    {
      "trigger": "GetAllChildren\tFeature",
      "contents": "GetAllChildren(${1:feat})"
    },
    {
      "trigger": "GetAllCreateActivities\tFFS_InZone",
      "contents": "GetAllCreateActivities(${1:ffs_inzone})"
    },
    {
      "trigger": "GetAllDatesOnShiftModel\tFFS_Date",
      "contents": "GetAllDatesOnShiftModel(${1:ffs_date})"
    },
    {
      "trigger": "GetAllDestinationProperties\tFFS_TransportRouteGroup",
      "contents": "GetAllDestinationProperties(${1:ffs_transportroutegroup})"
    },
    {
      "trigger": "GetAllDisabledResources\tFFS_Shift",
      "contents": "GetAllDisabledResources(${1:ffs_shift})"
    },
    {
      "trigger": "GetAllDressup\tPLMOperation",
      "contents": "GetAllDressup(${1:plmoperation})"
    },
    {
      "trigger": "GetAllEnabledResources\tFFS_Shift",
      "contents": "GetAllEnabledResources(${1:ffs_shift})"
    },
    {
      "trigger": "GetAllFFSSimScenario\t()",
      "contents": "GetAllFFSSimScenario()"
    },
    {
      "trigger": "GetAllHolidayDatesOnShiftModel\tFFS_Date",
      "contents": "GetAllHolidayDatesOnShiftModel(${1:ffs_date})"
    },
    {
      "trigger": "GetAllInZones\t()",
      "contents": "GetAllInZones()"
    },
    {
      "trigger": "GetAllLinkedProfiles\tDNBSpotProfile",
      "contents": "GetAllLinkedProfiles(${1:dnbspotprofile})"
    },
    {
      "trigger": "GetAllMotionActivities\tDNBSPMOperation,List",
      "contents": "GetAllMotionActivities(${1:dnbspmoperation}, ${2:list})"
    },
    {
      "trigger": "GetAllOrgCollabSpaceCouples\tList,List",
      "contents": "GetAllOrgCollabSpaceCouples(${1:list}, ${2:list})"
    },
    {
      "trigger": "GetAllOutZones\t()",
      "contents": "GetAllOutZones()"
    },
    {
      "trigger": "GetAllOutputCnxToProcesses\tPLMCoreReference,DELLmiProdSystemIOPort,Integer,List,List,List",
      "contents": "GetAllOutputCnxToProcesses(${1:plmcorereference}, ${2:dellmiprodsystemioport}, ${3:int}, ${4:list}, ${5:list}, ${6:list})"
    },
    {
      "trigger": "GetAllOutputCnxToProducts\tPLMCoreReference,DELLmiProdSystemIOPort,Integer,List,List,List",
      "contents": "GetAllOutputCnxToProducts(${1:plmcorereference}, ${2:dellmiprodsystemioport}, ${3:int}, ${4:list}, ${5:list}, ${6:list})"
    },
    {
      "trigger": "GetAllPositionedResources\tProdSystemOccurrence,List,List,List,List,List,List",
      "contents": "GetAllPositionedResources(${1:prodsystemoccurrence}, ${2:list}, ${3:list}, ${4:list}, ${5:list}, ${6:list}, ${7:list})"
    },
    {
      "trigger": "GetAllProcessesIsAlternateOfWithNavigate\tDELFmiFunctionReference",
      "contents": "GetAllProcessesIsAlternateOfWithNavigate(${1:delfmifunctionreference})"
    },
    {
      "trigger": "GetAllRelativeResourcePositions\tProdSystemOccurrence,List,List,List,List,List,List",
      "contents": "GetAllRelativeResourcePositions(${1:prodsystemoccurrence}, ${2:list}, ${3:list}, ${4:list}, ${5:list}, ${6:list}, ${7:list})"
    },
    {
      "trigger": "GetAllResourceItems\tResourceTable",
      "contents": "GetAllResourceItems(${1:resourcetable})"
    },
    {
      "trigger": "GetAllResourceZones\t()",
      "contents": "GetAllResourceZones()"
    },
    {
      "trigger": "GetAllRscControllerCategory\tRscControllerSynchronization,Integer",
      "contents": "GetAllRscControllerCategory(${1:rsccontrollersynchronization}, ${2:int})"
    },
    {
      "trigger": "GetAllSetupPositions\tManufacturingSetup,List",
      "contents": "GetAllSetupPositions(${1:manufacturingsetup}, ${2:list})"
    },
    {
      "trigger": "GetAllSystemOfEachScope\tFProcessOccurrence",
      "contents": "GetAllSystemOfEachScope(${1:fprocessoccurrence})"
    },
    {
      "trigger": "GetAllTagGroupsInContext\tProductOccurrence,Boolean",
      "contents": "GetAllTagGroupsInContext(${1:productoccurrence}, ${2:bool})"
    },
    {
      "trigger": "GetAllTransfoResultTags\tAECRebarLayer",
      "contents": "GetAllTransfoResultTags(${1:aecrebarlayer})"
    },
    {
      "trigger": "GetAllUserLogics\t()",
      "contents": "GetAllUserLogics()"
    },
    {
      "trigger": "GetAllViews\tPLMOperation",
      "contents": "GetAllViews(${1:plmoperation})"
    },
    {
      "trigger": "GetAllocatedSystemPorts\tSys3DAllocationConnection,VPMPort,List,List",
      "contents": "GetAllocatedSystemPorts(${1:sys3dallocationconnection}, ${2:vpmport}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "GetAllocatedVolumePort\tSys3DAllocationConnection,RFLVPMLogicalPort,LogicalOccurrence,VPMPort",
      "contents": "GetAllocatedVolumePort(${1:sys3dallocationconnection}, ${2:rflvpmlogicalport}, ${3:logicaloccurrence}, ${4:vpmport})"
    },
    {
      "trigger": "GetAllocationConnection\tLogicalOccurrence,ProductOccurrence,Sys3DAllocationConnection",
      "contents": "GetAllocationConnection(${1:logicaloccurrence}, ${2:productoccurrence}, ${3:sys3dallocationconnection})"
    },
    {
      "trigger": "GetAnalysisRobot\tDELMfgSimTSAScenario",
      "contents": "GetAnalysisRobot(${1:delmfgsimtsascenario})"
    },
    {
      "trigger": "GetAnalysisRobotToolProfilesID\tDELMfgSimTSAScenario,ResourceOccurrence",
      "contents": "GetAnalysisRobotToolProfilesID(${1:delmfgsimtsascenario}, ${2:resourceoccurrence})"
    },
    {
      "trigger": "GetAnchorPoint\tAGTConnector,String",
      "contents": "GetAnchorPoint(${1:agtconnector}, ${2:name})"
    },
    {
      "trigger": "GetAnchorPosition\tDNBFitTrack",
      "contents": "GetAnchorPosition(${1:dnbfittrack})"
    },
    {
      "trigger": "GetAngle\tAGTConnector,ANGLE",
      "contents": "GetAngle(${1:agtconnector}, ${2:angle})"
    },
    {
      "trigger": "GetAngularTolerance\tAECRebarLayer",
      "contents": "GetAngularTolerance(${1:aecrebarlayer})"
    },
    {
      "trigger": "GetAngularTolerance\tGSMAssemble,ANGLE",
      "contents": "GetAngularTolerance(${1:gsmassemble}, ${2:angle})"
    },
    {
      "trigger": "GetAngularToleranceMode\tGSMAssemble,Boolean",
      "contents": "GetAngularToleranceMode(${1:gsmassemble}, ${2:bool})"
    },
    {
      "trigger": "GetAnnotation\tElec3DProtectionAnnotation,String",
      "contents": "GetAnnotation(${1:elec3dprotectionannotation}, ${2:name})"
    },
    {
      "trigger": "GetAnnotationFeature\tSys3D_PathwayGeometryOccurrence,String,Sys3DAnnotation",
      "contents": "GetAnnotationFeature(${1:sys3d_pathwaygeometryoccurrence}, ${2:name}, ${3:sys3dannotation})"
    },
    {
      "trigger": "GetApexLength\tAECHorizontalArc",
      "contents": "GetApexLength(${1:aechorizontalarc})"
    },
    {
      "trigger": "GetApplicabilityModeOnCapRscOrRscDetail\tPLMConnection,String",
      "contents": "GetApplicabilityModeOnCapRscOrRscDetail(${1:plmconnection}, ${2:name})"
    },
    {
      "trigger": "GetApplicationContext\t()",
      "contents": "GetApplicationContext()"
    },
    {
      "trigger": "GetApplicativeAttribute\tFeature,String,String",
      "contents": "GetApplicativeAttribute(${1:feat}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "GetApplicativeProfile\tRscApplicativeProfileGroup,String",
      "contents": "GetApplicativeProfile(${1:rscapplicativeprofilegroup}, ${2:name})"
    },
    {
      "trigger": "GetApplicativeProfileGroup\tRscApplicativeProfileMgr,String",
      "contents": "GetApplicativeProfileGroup(${1:rscapplicativeprofilemgr}, ${2:name})"
    },
    {
      "trigger": "GetApplicativeProfileMgr\tRscControllerProfileMgr",
      "contents": "GetApplicativeProfileMgr(${1:rsccontrollerprofilemgr})"
    },
    {
      "trigger": "GetApplicativeProfilesID\tRscApplicativeProfileGroup",
      "contents": "GetApplicativeProfilesID(${1:rscapplicativeprofilegroup})"
    },
    {
      "trigger": "GetApproachDistance\tDELSurfaceTrajectory,DELSurfaceTrajectoryAppoachType",
      "contents": "GetApproachDistance(${1:delsurfacetrajectory}, ${2:delsurfacetrajectoryappoachtype})"
    },
    {
      "trigger": "GetArcFlareStart\tRobArcTrajectory,Real,Real",
      "contents": "GetArcFlareStart(${1:robarctrajectory}, ${2:real}, ${3:real})"
    },
    {
      "trigger": "GetArcFlareStop\tRobArcTrajectory,Real,Real",
      "contents": "GetArcFlareStop(${1:robarctrajectory}, ${2:real}, ${3:real})"
    },
    {
      "trigger": "GetArcGlobalBRR\tRobArcTrajectory,Real,Real,Real",
      "contents": "GetArcGlobalBRR(${1:robarctrajectory}, ${2:real}, ${3:real}, ${4:real})"
    },
    {
      "trigger": "GetArcs\tElec3DNetworkNode,List",
      "contents": "GetArcs(${1:elec3dnetworknode}, ${2:list})"
    },
    {
      "trigger": "GetAsRequired\tMustBeMadeFrom,Boolean",
      "contents": "GetAsRequired(${1:mustbemadefrom}, ${2:bool})"
    },
    {
      "trigger": "GetAssignShift\tFFS_TransportRouteGroup",
      "contents": "GetAssignShift(${1:ffs_transportroutegroup})"
    },
    {
      "trigger": "GetAssignedConsumables\tFFS_Activity",
      "contents": "GetAssignedConsumables(${1:ffs_activity})"
    },
    {
      "trigger": "GetAssignedObjects\tSPP_SpaceRef,String,List",
      "contents": "GetAssignedObjects(${1:spp_spaceref}, ${2:name}, ${3:list})"
    },
    {
      "trigger": "GetAssignedOperations\tFProcessOccurrence",
      "contents": "GetAssignedOperations(${1:fprocessoccurrence})"
    },
    {
      "trigger": "GetAssignedOperationsWithDetailingTasks\tResourceOccurrence,List,List",
      "contents": "GetAssignedOperationsWithDetailingTasks(${1:resourceoccurrence}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "GetAssignedProcess\tProductOccurrence",
      "contents": "GetAssignedProcess(${1:productoccurrence})"
    },
    {
      "trigger": "GetAssignedProcessFromInstPath\tList",
      "contents": "GetAssignedProcessFromInstPath(${1:list})"
    },
    {
      "trigger": "GetAssignedProcessWithContext\tProductOccurrence,DELFmiFunctionReference",
      "contents": "GetAssignedProcessWithContext(${1:productoccurrence}, ${2:delfmifunctionreference})"
    },
    {
      "trigger": "GetAssignedResourceZones\tFFS_Break",
      "contents": "GetAssignedResourceZones(${1:ffs_break})"
    },
    {
      "trigger": "GetAssigningSpaces\tPLMCoreInstance,String,String,List,Boolean",
      "contents": "GetAssigningSpaces(${1:plmcoreinstance}, ${2:name}, ${3:name}, ${4:list}, ${5:bool})"
    },
    {
      "trigger": "GetAssociatedContracts\tRFLPLMFlowExpositionInstance",
      "contents": "GetAssociatedContracts(${1:rflplmflowexpositioninstance})"
    },
    {
      "trigger": "GetAssociatedFastener\tSpotAssyFastenerOccurrence",
      "contents": "GetAssociatedFastener(${1:spotassyfasteneroccurrence})"
    },
    {
      "trigger": "GetAssociatedFeature\tFFS_Resource",
      "contents": "GetAssociatedFeature(${1:ffs_resource})"
    },
    {
      "trigger": "GetAssociatedFlow\tRFLPLMFunctionalConnector",
      "contents": "GetAssociatedFlow(${1:rflplmfunctionalconnector})"
    },
    {
      "trigger": "GetAssociatedFlowInstance\tRFLPLMFunctionalConnector",
      "contents": "GetAssociatedFlowInstance(${1:rflplmfunctionalconnector})"
    },
    {
      "trigger": "GetAssociatedSystemType\tRFLVPMLogicalPort",
      "contents": "GetAssociatedSystemType(${1:rflvpmlogicalport})"
    },
    {
      "trigger": "GetAssociatedSystemTypeInstance\tRFLVPMLogicalPort",
      "contents": "GetAssociatedSystemTypeInstance(${1:rflvpmlogicalport})"
    },
    {
      "trigger": "GetAttachedDocuments\tPLMConnection",
      "contents": "GetAttachedDocuments(${1:plmconnection})"
    },
    {
      "trigger": "GetAttachedDocumentsOnRscDetail\tPLMConnection,List",
      "contents": "GetAttachedDocumentsOnRscDetail(${1:plmconnection}, ${2:list})"
    },
    {
      "trigger": "GetAttachedHAsFromIDs\tHumanActivityManager,List,Map,HAReport",
      "contents": "GetAttachedHAsFromIDs(${1:humanactivitymanager}, ${2:list}, ${3:map}, ${4:hareport})"
    },
    {
      "trigger": "GetAttachedHAsFromObjects\tHumanActivityManager,List,Map,HAReport",
      "contents": "GetAttachedHAsFromObjects(${1:humanactivitymanager}, ${2:list}, ${3:map}, ${4:hareport})"
    },
    {
      "trigger": "GetAttachedObject\tDNBTagGroup,Feature",
      "contents": "GetAttachedObject(${1:dnbtaggroup}, ${2:feat})"
    },
    {
      "trigger": "GetAttachedObjectAngle\tDELStrMfgAttachmentLine,ANGLE",
      "contents": "GetAttachedObjectAngle(${1:delstrmfgattachmentline}, ${2:angle})"
    },
    {
      "trigger": "GetAttachedTools\tRscToolProfile,ProductOccurrence,Integer",
      "contents": "GetAttachedTools(${1:rsctoolprofile}, ${2:productoccurrence}, ${3:int})"
    },
    {
      "trigger": "GetAttachmentStatus\tRscToolProfile",
      "contents": "GetAttachmentStatus(${1:rsctoolprofile})"
    },
    {
      "trigger": "GetAttachmentTransformation\tRscToolProfile",
      "contents": "GetAttachmentTransformation(${1:rsctoolprofile})"
    },
    {
      "trigger": "GetAttachmentsList\tMfgResource,List",
      "contents": "GetAttachmentsList(${1:mfgresource}, ${2:list})"
    },
    {
      "trigger": "GetAttributeAny\tFeature,String",
      "contents": "GetAttributeAny(${1:feat}, ${2:name})"
    },
    {
      "trigger": "GetAttributeDate\tFeature,String",
      "contents": "GetAttributeDate(${1:feat}, ${2:name})"
    },
    {
      "trigger": "GetAttributeIntegerFromDCPRow\tPLMSpecifyHowToCollectDataCnx,String",
      "contents": "GetAttributeIntegerFromDCPRow(${1:plmspecifyhowtocollectdatacnx}, ${2:name})"
    },
    {
      "trigger": "GetAttributeList\tDNBTag,List",
      "contents": "GetAttributeList(${1:dnbtag}, ${2:list})"
    },
    {
      "trigger": "GetAttributeListFromDCPRow\tPLMSpecifyHowToCollectDataCnx,String",
      "contents": "GetAttributeListFromDCPRow(${1:plmspecifyhowtocollectdatacnx}, ${2:name})"
    },
    {
      "trigger": "GetAttributeObject\tFeature,String",
      "contents": "GetAttributeObject(${1:feat}, ${2:name})"
    },
    {
      "trigger": "GetAttributeOnConnectedPorts\tHVAC_Duct_Occurrence,HVAC_Duct_Occurrence,String,LENGTH,LENGTH",
      "contents": "GetAttributeOnConnectedPorts(${1:hvac_duct_occurrence}, ${2:hvac_duct_occurrence}, ${3:name}, ${4:len}, ${5:len})"
    },
    {
      "trigger": "GetAttributeRealFromDCPRow\tPLMSpecifyHowToCollectDataCnx,String",
      "contents": "GetAttributeRealFromDCPRow(${1:plmspecifyhowtocollectdatacnx}, ${2:name})"
    },
    {
      "trigger": "GetAttributeStringFromDCPRow\tPLMSpecifyHowToCollectDataCnx,String",
      "contents": "GetAttributeStringFromDCPRow(${1:plmspecifyhowtocollectdatacnx}, ${2:name})"
    },
    {
      "trigger": "GetAttributeType\tFeature,String",
      "contents": "GetAttributeType(${1:feat}, ${2:name})"
    },
    {
      "trigger": "GetAttributeValue\tDNBTag,String,Integer,String",
      "contents": "GetAttributeValue(${1:dnbtag}, ${2:name}, ${3:int}, ${4:name})"
    },
    {
      "trigger": "GetAttributeValuePointer\tFeature,String",
      "contents": "GetAttributeValuePointer(${1:feat}, ${2:name})"
    },
    {
      "trigger": "GetAuthorizedCustomerAdditionalEnsSpecs\tEnsEngSpecResourceFinder,List",
      "contents": "GetAuthorizedCustomerAdditionalEnsSpecs(${1:ensengspecresourcefinder}, ${2:list})"
    },
    {
      "trigger": "GetAuxillaryAxisHome\tDNBRobotMotion,Feature,String",
      "contents": "GetAuxillaryAxisHome(${1:dnbrobotmotion}, ${2:feat}, ${3:name})"
    },
    {
      "trigger": "GetAuxillaryAxisValues\tDNBRobotMotion,Feature,List",
      "contents": "GetAuxillaryAxisValues(${1:dnbrobotmotion}, ${2:feat}, ${3:list})"
    },
    {
      "trigger": "GetAvailabilityModeOnResourceDetail\tPLMConnection,String",
      "contents": "GetAvailabilityModeOnResourceDetail(${1:plmconnection}, ${2:name})"
    },
    {
      "trigger": "GetAvailableMechanismIDs\tRscControllerMgr",
      "contents": "GetAvailableMechanismIDs(${1:rsccontrollermgr})"
    },
    {
      "trigger": "GetAvailableProfileGroupIDs\tRscApplicativeProfileMgr",
      "contents": "GetAvailableProfileGroupIDs(${1:rscapplicativeprofilemgr})"
    },
    {
      "trigger": "GetAvailableRobotConfigs\tDELMfgSimTSAScenario,ResourceOccurrence",
      "contents": "GetAvailableRobotConfigs(${1:delmfgsimtsascenario}, ${2:resourceoccurrence})"
    },
    {
      "trigger": "GetAvailableServices\tRscLogicServiceCall",
      "contents": "GetAvailableServices(${1:rsclogicservicecall})"
    },
    {
      "trigger": "GetAvailableSpecificProfileTypeID\tRscControllerProfile",
      "contents": "GetAvailableSpecificProfileTypeID(${1:rsccontrollerprofile})"
    },
    {
      "trigger": "GetAxialPlaneDistance\tMfgSequentialAxialOperation,Integer,Real",
      "contents": "GetAxialPlaneDistance(${1:mfgsequentialaxialoperation}, ${2:int}, ${3:real})"
    },
    {
      "trigger": "GetAxis\tDNBTag,List",
      "contents": "GetAxis(${1:dnbtag}, ${2:list})"
    },
    {
      "trigger": "GetAxisDirection\tMfgMachiningAxisSystem,String,MfgDirection",
      "contents": "GetAxisDirection(${1:mfgmachiningaxissystem}, ${2:name}, ${3:mfgdirection})"
    },
    {
      "trigger": "GetAxisInvolvement\tMachineInstruction,String,Integer",
      "contents": "GetAxisInvolvement(${1:machineinstruction}, ${2:name}, ${3:int})"
    },
    {
      "trigger": "GetAxisNames\tVPMInstance,List",
      "contents": "GetAxisNames(${1:vpminstance}, ${2:list})"
    },
    {
      "trigger": "GetAxisSystem\tElecPort,Vector,Vector,Vector,Vector",
      "contents": "GetAxisSystem(${1:elecport}, ${2:vector}, ${3:vector}, ${4:vector}, ${5:vector})"
    },
    {
      "trigger": "GetAxisValues\tMachineInstruction,String,Real",
      "contents": "GetAxisValues(${1:machineinstruction}, ${2:name}, ${3:real})"
    },
    {
      "trigger": "GetAzimuth\tAECHorizontalTangent,ProductOccurrence",
      "contents": "GetAzimuth(${1:aechorizontaltangent}, ${2:productoccurrence})"
    },
    {
      "trigger": "GetBackCurve\tAECAlignment2DHorizontal,LENGTH",
      "contents": "GetBackCurve(${1:aecalignment2dhorizontal}, ${2:len})"
    },
    {
      "trigger": "GetBackCurve\tAECHorizontalArc",
      "contents": "GetBackCurve(${1:aechorizontalarc})"
    },
    {
      "trigger": "GetBackLabel\tAECAlignment2DHorizontal,LENGTH",
      "contents": "GetBackLabel(${1:aecalignment2dhorizontal}, ${2:len})"
    },
    {
      "trigger": "GetBackStation\tAECAlignment2DHorizontal,LENGTH,String,Boolean,Integer",
      "contents": "GetBackStation(${1:aecalignment2dhorizontal}, ${2:len}, ${3:name}, ${4:bool}, ${5:int})"
    },
    {
      "trigger": "GetBackStation\tAECAlignment2DHorizontal,LENGTH,String,Integer,Boolean,Integer",
      "contents": "GetBackStation(${1:aecalignment2dhorizontal}, ${2:len}, ${3:name}, ${4:int}, ${5:bool}, ${6:int})"
    },
    {
      "trigger": "GetBackupMoveStroke\tDNBSpotProfile,Integer",
      "contents": "GetBackupMoveStroke(${1:dnbspotprofile}, ${2:int})"
    },
    {
      "trigger": "GetBackupMoveStrokeProfile\tDNBSpotProfile,Integer",
      "contents": "GetBackupMoveStrokeProfile(${1:dnbspotprofile}, ${2:int})"
    },
    {
      "trigger": "GetBackupMoveStrokeProfileName\tDNBSpotProfile,Integer",
      "contents": "GetBackupMoveStrokeProfileName(${1:dnbspotprofile}, ${2:int})"
    },
    {
      "trigger": "GetBar\tAECRebarLayer,Integer",
      "contents": "GetBar(${1:aecrebarlayer}, ${2:int})"
    },
    {
      "trigger": "GetBarDiameter\tAECRebarLayer",
      "contents": "GetBarDiameter(${1:aecrebarlayer})"
    },
    {
      "trigger": "GetBarLength\tAECRebarLayer",
      "contents": "GetBarLength(${1:aecrebarlayer})"
    },
    {
      "trigger": "GetBarMark\tAECRebarLayer",
      "contents": "GetBarMark(${1:aecrebarlayer})"
    },
    {
      "trigger": "GetBaseCenterOfProductOccurence\tProductOccurrence",
      "contents": "GetBaseCenterOfProductOccurence(${1:productoccurrence})"
    },
    {
      "trigger": "GetBasePart\tRscMountsMgr",
      "contents": "GetBasePart(${1:rscmountsmgr})"
    },
    {
      "trigger": "GetBaseboardHeight\tLiveArchiCovering,LENGTH",
      "contents": "GetBaseboardHeight(${1:livearchicovering}, ${2:len})"
    },
    {
      "trigger": "GetBatchContext\t()",
      "contents": "GetBatchContext()"
    },
    {
      "trigger": "GetBenchParameter\tBenchSupport",
      "contents": "GetBenchParameter(${1:benchsupport})"
    },
    {
      "trigger": "GetBenchParameters\tBenchParametersGroup",
      "contents": "GetBenchParameters(${1:benchparametersgroup})"
    },
    {
      "trigger": "GetBenchParametersGroup\tPitParameters",
      "contents": "GetBenchParametersGroup(${1:pitparameters})"
    },
    {
      "trigger": "GetBenchSupportGroup\tPit",
      "contents": "GetBenchSupportGroup(${1:pit})"
    },
    {
      "trigger": "GetBendRadius\tCATEbm_ControlPoint,Real",
      "contents": "GetBendRadius(${1:catebm_controlpoint}, ${2:real})"
    },
    {
      "trigger": "GetBendRadiusDelta\tElec3DProtectionAnnotation,LENGTH",
      "contents": "GetBendRadiusDelta(${1:elec3dprotectionannotation}, ${2:len})"
    },
    {
      "trigger": "GetBendRadiusRatio\tBranch,Real",
      "contents": "GetBendRadiusRatio(${1:branch}, ${2:real})"
    },
    {
      "trigger": "GetBendingAngle\tSddFlange,Feature",
      "contents": "GetBendingAngle(${1:sddflange}, ${2:feat})"
    },
    {
      "trigger": "GetBendingInformation\tFeature,Feature,Real,ANGLE,LENGTH",
      "contents": "GetBendingInformation(${1:feat}, ${2:feat}, ${3:real}, ${4:angle}, ${5:len})"
    },
    {
      "trigger": "GetBendingRadius\tSddFlange,Feature",
      "contents": "GetBendingRadius(${1:sddflange}, ${2:feat})"
    },
    {
      "trigger": "GetBottomClearance\tLiveArchiCeiling,LENGTH",
      "contents": "GetBottomClearance(${1:livearchiceiling}, ${2:len})"
    },
    {
      "trigger": "GetBrokenSignalMappingCount\tRscModelLogicMgr,Boolean",
      "contents": "GetBrokenSignalMappingCount(${1:rscmodellogicmgr}, ${2:bool})"
    },
    {
      "trigger": "GetBuildAlgorithm\tHVAC_Flexible_Duct,CATEbm_BranchTypeEnum",
      "contents": "GetBuildAlgorithm(${1:hvac_flexible_duct}, ${2:catebm_branchtypeenum})"
    },
    {
      "trigger": "GetBuildMode\tHVAC_Flexible_Duct,CATEbm_FlexBuildModeEnum",
      "contents": "GetBuildMode(${1:hvac_flexible_duct}, ${2:catebm_flexbuildmodeenum})"
    },
    {
      "trigger": "GetBuildUpPosition\tPLMConnection,List,ResourceOccurrence,Boolean,String,String",
      "contents": "GetBuildUpPosition(${1:plmconnection}, ${2:list}, ${3:resourceoccurrence}, ${4:bool}, ${5:name}, ${6:name})"
    },
    {
      "trigger": "GetBuildUpThumbnail\tProdSystemOccurrence,String,Integer,Integer",
      "contents": "GetBuildUpThumbnail(${1:prodsystemoccurrence}, ${2:name}, ${3:int}, ${4:int})"
    },
    {
      "trigger": "GetBuildingElevation\tLiveArchiBuilding",
      "contents": "GetBuildingElevation(${1:livearchibuilding})"
    },
    {
      "trigger": "GetBuildingHeight\tLiveArchiBuilding",
      "contents": "GetBuildingHeight(${1:livearchibuilding})"
    },
    {
      "trigger": "GetBuildingNumStories\tLiveArchiBuilding",
      "contents": "GetBuildingNumStories(${1:livearchibuilding})"
    },
    {
      "trigger": "GetBuildingQTO\tLiveArchiBuilding,LENGTH,AREA,AREA,VOLUME,VOLUME",
      "contents": "GetBuildingQTO(${1:livearchibuilding}, ${2:len}, ${3:area}, ${4:area}, ${5:volume}, ${6:volume})"
    },
    {
      "trigger": "GetBuildupMfgItemsResourcesByType\tPLMOperation,Integer",
      "contents": "GetBuildupMfgItemsResourcesByType(${1:plmoperation}, ${2:int})"
    },
    {
      "trigger": "GetBuildupRelativePosition\tProdSystemOccurrence,ResourceOccurrence,List",
      "contents": "GetBuildupRelativePosition(${1:prodsystemoccurrence}, ${2:resourceoccurrence}, ${3:list})"
    },
    {
      "trigger": "GetBundle\tFastenerInstance,BundleFastenerAbstract",
      "contents": "GetBundle(${1:fastenerinstance}, ${2:bundlefastenerabstract})"
    },
    {
      "trigger": "GetBundleFromFasten\tMfgProcessOccurrence",
      "contents": "GetBundleFromFasten(${1:mfgprocessoccurrence})"
    },
    {
      "trigger": "GetBundlesFromStackPart\tVPMInstance,VPMReference,List",
      "contents": "GetBundlesFromStackPart(${1:vpminstance}, ${2:vpmreference}, ${3:list})"
    },
    {
      "trigger": "GetCSEPropertySet\tBoolean",
      "contents": "GetCSEPropertySet(${1:bool})"
    },
    {
      "trigger": "GetCable\tElec3DCableCore,Elec3DCable",
      "contents": "GetCable(${1:elec3dcablecore}, ${2:elec3dcable})"
    },
    {
      "trigger": "GetCableRawMaterial\tElec3DCable,ElecCableRawMaterial",
      "contents": "GetCableRawMaterial(${1:elec3dcable}, ${2:eleccablerawmaterial})"
    },
    {
      "trigger": "GetCableReference\tElec3DCable,Elec3DCableReference",
      "contents": "GetCableReference(${1:elec3dcable}, ${2:elec3dcablereference})"
    },
    {
      "trigger": "GetCalculatedValueAddedPercentage\tDELTimeAnalysisRepInstance,Real",
      "contents": "GetCalculatedValueAddedPercentage(${1:deltimeanalysisrepinstance}, ${2:real})"
    },
    {
      "trigger": "GetCameraViewerMgr\tProductOccurrence",
      "contents": "GetCameraViewerMgr(${1:productoccurrence})"
    },
    {
      "trigger": "GetCandidateResource\tProdSystemOccurrence,Integer,PLMEntity",
      "contents": "GetCandidateResource(${1:prodsystemoccurrence}, ${2:int}, ${3:plmentity})"
    },
    {
      "trigger": "GetCandidateResourceLink\tPLMCoreReference,Integer,PLMResource,ResourceOccurrence,CandidateResourceLink,Integer,String",
      "contents": "GetCandidateResourceLink(${1:plmcorereference}, ${2:int}, ${3:plmresource}, ${4:resourceoccurrence}, ${5:candidateresourcelink}, ${6:int}, ${7:name})"
    },
    {
      "trigger": "GetCandidateRscScopeLink\tPLMCoreReference,PLMResource,CandidateResourceScopeLink,Integer,String",
      "contents": "GetCandidateRscScopeLink(${1:plmcorereference}, ${2:plmresource}, ${3:candidateresourcescopelink}, ${4:int}, ${5:name})"
    },
    {
      "trigger": "GetCandidatedLimitforFB\tAGTInsulation,List",
      "contents": "GetCandidatedLimitforFB(${1:agtinsulation}, ${2:list})"
    },
    {
      "trigger": "GetCapablePrimaryResources\tPLMCoreReference,List,List",
      "contents": "GetCapablePrimaryResources(${1:plmcorereference}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "GetCapableResourceAssociatedDocs\tDELFmiFunctionReference,PLMResource",
      "contents": "GetCapableResourceAssociatedDocs(${1:delfmifunctionreference}, ${2:plmresource})"
    },
    {
      "trigger": "GetCapableResourceQuantity\tDELFmiFunctionReference,PLMResource",
      "contents": "GetCapableResourceQuantity(${1:delfmifunctionreference}, ${2:plmresource})"
    },
    {
      "trigger": "GetCapableResources\tDELFmiFunctionReference,Integer",
      "contents": "GetCapableResources(${1:delfmifunctionreference}, ${2:int})"
    },
    {
      "trigger": "GetCapableResourcesAssociatedWithDCPRow\tPLMSpecifyHowToCollectDataCnx",
      "contents": "GetCapableResourcesAssociatedWithDCPRow(${1:plmspecifyhowtocollectdatacnx})"
    },
    {
      "trigger": "GetCapableResourcesAssociatedWithInstruction\tProdSystemOccurrence",
      "contents": "GetCapableResourcesAssociatedWithInstruction(${1:prodsystemoccurrence})"
    },
    {
      "trigger": "GetCapableRscLinkFromRscDetail\tPLMConnection,ProdSystemOccurrence,List",
      "contents": "GetCapableRscLinkFromRscDetail(${1:plmconnection}, ${2:prodsystemoccurrence}, ${3:list})"
    },
    {
      "trigger": "GetCapableRscLinkFromRscUsage\tVPMInstance,List",
      "contents": "GetCapableRscLinkFromRscUsage(${1:vpminstance}, ${2:list})"
    },
    {
      "trigger": "GetCartesianPosition\tRscHomePositionMgr,RscMotionGroup,String",
      "contents": "GetCartesianPosition(${1:rschomepositionmgr}, ${2:rscmotiongroup}, ${3:name})"
    },
    {
      "trigger": "GetCartesianTarget\tDNBRobotMotion,List",
      "contents": "GetCartesianTarget(${1:dnbrobotmotion}, ${2:list})"
    },
    {
      "trigger": "GetCategory\tAECAlignment2DHorizontal,LENGTH",
      "contents": "GetCategory(${1:aecalignment2dhorizontal}, ${2:len})"
    },
    {
      "trigger": "GetCategory\tAECAlignmentPoint",
      "contents": "GetCategory(${1:aecalignmentpoint})"
    },
    {
      "trigger": "GetCategoryDiscipline\tSIMObjSimulationCategoryReference",
      "contents": "GetCategoryDiscipline(${1:simobjsimulationcategoryreference})"
    },
    {
      "trigger": "GetCeilingThickness\tLiveArchiCeiling,LENGTH",
      "contents": "GetCeilingThickness(${1:livearchiceiling}, ${2:len})"
    },
    {
      "trigger": "GetCeilingType\tLiveArchiCeiling,AGTType",
      "contents": "GetCeilingType(${1:livearchiceiling}, ${2:agttype})"
    },
    {
      "trigger": "GetCentralAngle\tAECHorizontalArc",
      "contents": "GetCentralAngle(${1:aechorizontalarc})"
    },
    {
      "trigger": "GetCentroid\tRscToolProfile",
      "contents": "GetCentroid(${1:rsctoolprofile})"
    },
    {
      "trigger": "GetChamferAngle\tFeature",
      "contents": "GetChamferAngle(${1:feat})"
    },
    {
      "trigger": "GetChamferMode\tFeature",
      "contents": "GetChamferMode(${1:feat})"
    },
    {
      "trigger": "GetCharacteristicValue\tComponentFamilyItem,String",
      "contents": "GetCharacteristicValue(${1:componentfamilyitem}, ${2:name})"
    },
    {
      "trigger": "GetCharacteristics\tComponentFamily,List,List",
      "contents": "GetCharacteristics(${1:componentfamily}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "GetChild\tPLMSystem,Integer",
      "contents": "GetChild(${1:plmsystem}, ${2:int})"
    },
    {
      "trigger": "GetChildActivities\tManufacturingActivity,List",
      "contents": "GetChildActivities(${1:manufacturingactivity}, ${2:list})"
    },
    {
      "trigger": "GetChildren\tResourceOccurrence",
      "contents": "GetChildren(${1:resourceoccurrence})"
    },
    {
      "trigger": "GetChildrenFromParentChildren\tFeature",
      "contents": "GetChildrenFromParentChildren(${1:feat})"
    },
    {
      "trigger": "GetChildrenNumber\tPLMResource",
      "contents": "GetChildrenNumber(${1:plmresource})"
    },
    {
      "trigger": "GetCityGIAttributeValue\tCATCCTGeoItem,String",
      "contents": "GetCityGIAttributeValue(${1:catcctgeoitem}, ${2:name})"
    },
    {
      "trigger": "GetClaimGroupByName\tString",
      "contents": "GetClaimGroupByName(${1:name})"
    },
    {
      "trigger": "GetClaimGroups\tProductOccurrence",
      "contents": "GetClaimGroups(${1:productoccurrence})"
    },
    {
      "trigger": "GetClashGeometries\tSIMItfSimulation,PIM_ClashGeometry",
      "contents": "GetClashGeometries(${1:simitfsimulation}, ${2:pim_clashgeometry})"
    },
    {
      "trigger": "GetClashGroupingType\tProductOccurrence,Boolean",
      "contents": "GetClashGroupingType(${1:productoccurrence}, ${2:bool})"
    },
    {
      "trigger": "GetClashQuantifiers\tSIMItfSimulation,PIM_ClashQuantifier",
      "contents": "GetClashQuantifiers(${1:simitfsimulation}, ${2:pim_clashquantifier})"
    },
    {
      "trigger": "GetClashVolume\tPLMPIMMetricReference,VOLUME",
      "contents": "GetClashVolume(${1:plmpimmetricreference}, ${2:volume})"
    },
    {
      "trigger": "GetClassificationAttribute\tFastenerComponent,String,String",
      "contents": "GetClassificationAttribute(${1:fastenercomponent}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "GetClassificationID\tSys3DPathwayBranchAnnotation,String",
      "contents": "GetClassificationID(${1:sys3dpathwaybranchannotation}, ${2:name})"
    },
    {
      "trigger": "GetClassificationValue\tDELPointCloudRepReference",
      "contents": "GetClassificationValue(${1:delpointcloudrepreference})"
    },
    {
      "trigger": "GetClassifiedObjects\tString,String",
      "contents": "GetClassifiedObjects(${1:name}, ${2:name})"
    },
    {
      "trigger": "GetClearanceGeometries\tSIMItfSimulation,PIM_ClearanceGeometry",
      "contents": "GetClearanceGeometries(${1:simitfsimulation}, ${2:pim_clearancegeometry})"
    },
    {
      "trigger": "GetClearanceQuantifiers\tSIMItfSimulation,PIM_ClearanceQuantifier",
      "contents": "GetClearanceQuantifiers(${1:simitfsimulation}, ${2:pim_clearancequantifier})"
    },
    {
      "trigger": "GetClearanceValue\tSIMItfSimulation,Real",
      "contents": "GetClearanceValue(${1:simitfsimulation}, ${2:real})"
    },
    {
      "trigger": "GetClockingAngle\tProductOccurrence,VPMPort,ProductOccurrence,VPMPort,ANGLE,String,String",
      "contents": "GetClockingAngle(${1:productoccurrence}, ${2:vpmport}, ${3:productoccurrence}, ${4:vpmport}, ${5:angle}, ${6:name}, ${7:name})"
    },
    {
      "trigger": "GetCloseSpace\tAGTInsulation",
      "contents": "GetCloseSpace(${1:agtinsulation})"
    },
    {
      "trigger": "GetCloseSpaceCategories\tAGTInsulation,List",
      "contents": "GetCloseSpaceCategories(${1:agtinsulation}, ${2:list})"
    },
    {
      "trigger": "GetClosedJointValue\tDNBSpotProfile,Integer",
      "contents": "GetClosedJointValue(${1:dnbspotprofile}, ${2:int})"
    },
    {
      "trigger": "GetCollarParameters\tSddCollarSurface,String,Feature,String,Feature",
      "contents": "GetCollarParameters(${1:sddcollarsurface}, ${2:name}, ${3:feat}, ${4:name}, ${5:feat})"
    },
    {
      "trigger": "GetCollarThickness\tSddCollarSurface,Feature",
      "contents": "GetCollarThickness(${1:sddcollarsurface}, ${2:feat})"
    },
    {
      "trigger": "GetCollars\tSddOpening,List",
      "contents": "GetCollars(${1:sddopening}, ${2:list})"
    },
    {
      "trigger": "GetCollision3To5xToolAxis\tM3xTo5xConverter,MfgDirection",
      "contents": "GetCollision3To5xToolAxis(${1:m3xto5xconverter}, ${2:mfgdirection})"
    },
    {
      "trigger": "GetCollisionAccuracyLevel\tRscMultiRobotPathPlanner",
      "contents": "GetCollisionAccuracyLevel(${1:rscmultirobotpathplanner})"
    },
    {
      "trigger": "GetColor\tAGTConnector,String",
      "contents": "GetColor(${1:agtconnector}, ${2:name})"
    },
    {
      "trigger": "GetColor\tHVAC_Flexible_Duct,Integer,Integer,Integer",
      "contents": "GetColor(${1:hvac_flexible_duct}, ${2:int}, ${3:int}, ${4:int})"
    },
    {
      "trigger": "GetColorAlpha\tColor",
      "contents": "GetColorAlpha(${1:color})"
    },
    {
      "trigger": "GetColorBlue\tColor",
      "contents": "GetColorBlue(${1:color})"
    },
    {
      "trigger": "GetColorBrightness\tColor",
      "contents": "GetColorBrightness(${1:color})"
    },
    {
      "trigger": "GetColorGreen\tColor",
      "contents": "GetColorGreen(${1:color})"
    },
    {
      "trigger": "GetColorHexa\tColor",
      "contents": "GetColorHexa(${1:color})"
    },
    {
      "trigger": "GetColorHue\tColor",
      "contents": "GetColorHue(${1:color})"
    },
    {
      "trigger": "GetColorRed\tColor",
      "contents": "GetColorRed(${1:color})"
    },
    {
      "trigger": "GetColorSaturation\tColor",
      "contents": "GetColorSaturation(${1:color})"
    },
    {
      "trigger": "GetColumn\tEnsTechnologicalTable,Integer,List",
      "contents": "GetColumn(${1:enstechnologicaltable}, ${2:int}, ${3:list})"
    },
    {
      "trigger": "GetColumn\tMatrix,Integer",
      "contents": "GetColumn(${1:matrix}, ${2:int})"
    },
    {
      "trigger": "GetColumnDefinitions\tEnsTechnologicalTable,List",
      "contents": "GetColumnDefinitions(${1:enstechnologicaltable}, ${2:list})"
    },
    {
      "trigger": "GetCommandAccelerationTime\tRscKinematicsMgr,RscMotionGroup,Integer",
      "contents": "GetCommandAccelerationTime(${1:rsckinematicsmgr}, ${2:rscmotiongroup}, ${3:int})"
    },
    {
      "trigger": "GetCommandCautionZone\tRscKinematicsMgr,RscMotionGroup,Integer",
      "contents": "GetCommandCautionZone(${1:rsckinematicsmgr}, ${2:rscmotiongroup}, ${3:int})"
    },
    {
      "trigger": "GetCommandCautionZoneMode\tRscKinematicsMgr,RscMotionGroup",
      "contents": "GetCommandCautionZoneMode(${1:rsckinematicsmgr}, ${2:rscmotiongroup})"
    },
    {
      "trigger": "GetCommandCount\tRscControlLogicMgr",
      "contents": "GetCommandCount(${1:rsccontrollogicmgr})"
    },
    {
      "trigger": "GetCommandCount\tRscKinematicsMgr,RscMotionGroup",
      "contents": "GetCommandCount(${1:rsckinematicsmgr}, ${2:rscmotiongroup})"
    },
    {
      "trigger": "GetCommandDimension\tRscControlLogicMgr,Integer",
      "contents": "GetCommandDimension(${1:rsccontrollogicmgr}, ${2:int})"
    },
    {
      "trigger": "GetCommandLowerLimit\tRscKinematicsMgr,RscMotionGroup,Integer,RscTravelLimitsType",
      "contents": "GetCommandLowerLimit(${1:rsckinematicsmgr}, ${2:rscmotiongroup}, ${3:int}, ${4:rsctravellimitstype})"
    },
    {
      "trigger": "GetCommandLowerLimitExpression\tRscKinematicsMgr,RscMotionGroup,Integer",
      "contents": "GetCommandLowerLimitExpression(${1:rsckinematicsmgr}, ${2:rscmotiongroup}, ${3:int})"
    },
    {
      "trigger": "GetCommandMaxAcceleration\tRscKinematicsMgr,RscMotionGroup,Integer",
      "contents": "GetCommandMaxAcceleration(${1:rsckinematicsmgr}, ${2:rscmotiongroup}, ${3:int})"
    },
    {
      "trigger": "GetCommandMaxSpeed\tRscKinematicsMgr,RscMotionGroup,Integer",
      "contents": "GetCommandMaxSpeed(${1:rsckinematicsmgr}, ${2:rscmotiongroup}, ${3:int})"
    },
    {
      "trigger": "GetCommandName\tRscControlLogicMgr,Integer",
      "contents": "GetCommandName(${1:rsccontrollogicmgr}, ${2:int})"
    },
    {
      "trigger": "GetCommandName\tRscKinematicsMgr,RscMotionGroup,Integer",
      "contents": "GetCommandName(${1:rsckinematicsmgr}, ${2:rscmotiongroup}, ${3:int})"
    },
    {
      "trigger": "GetCommandParts\tRscKinematicsMgr,RscMotionGroup,Integer",
      "contents": "GetCommandParts(${1:rsckinematicsmgr}, ${2:rscmotiongroup}, ${3:int})"
    },
    {
      "trigger": "GetCommandType\tRscKinematicsMgr,RscMotionGroup,Integer",
      "contents": "GetCommandType(${1:rsckinematicsmgr}, ${2:rscmotiongroup}, ${3:int})"
    },
    {
      "trigger": "GetCommandUpperLimit\tRscKinematicsMgr,RscMotionGroup,Integer,RscTravelLimitsType",
      "contents": "GetCommandUpperLimit(${1:rsckinematicsmgr}, ${2:rscmotiongroup}, ${3:int}, ${4:rsctravellimitstype})"
    },
    {
      "trigger": "GetCommandUpperLimitExpression\tRscKinematicsMgr,RscMotionGroup,Integer",
      "contents": "GetCommandUpperLimitExpression(${1:rsckinematicsmgr}, ${2:rscmotiongroup}, ${3:int})"
    },
    {
      "trigger": "GetComment\tManufacturingOperation",
      "contents": "GetComment(${1:manufacturingoperation})"
    },
    {
      "trigger": "GetCommonStatus\tDELPointTrajectory",
      "contents": "GetCommonStatus(${1:delpointtrajectory})"
    },
    {
      "trigger": "GetComparison\tSIMItfSimulation,PIM_Comparison",
      "contents": "GetComparison(${1:simitfsimulation}, ${2:pim_comparison})"
    },
    {
      "trigger": "GetCompensationAvailable\tMfgProbingMultiPoints,List",
      "contents": "GetCompensationAvailable(${1:mfgprobingmultipoints}, ${2:list})"
    },
    {
      "trigger": "GetComponent\tElec3DNetworkArc,Feature",
      "contents": "GetComponent(${1:elec3dnetworkarc}, ${2:feat})"
    },
    {
      "trigger": "GetComponentFamily\tCATComponentsFamilyExtensionOnElement",
      "contents": "GetComponentFamily(${1:catcomponentsfamilyextensiononelement})"
    },
    {
      "trigger": "GetComponents\tElec3DDeviceNode,ProductOccurrence,VPMPort,List",
      "contents": "GetComponents(${1:elec3ddevicenode}, ${2:productoccurrence}, ${3:vpmport}, ${4:list})"
    },
    {
      "trigger": "GetComponents\tElec3DJunctionNode,List",
      "contents": "GetComponents(${1:elec3djunctionnode}, ${2:list})"
    },
    {
      "trigger": "GetComponents\tElec3DProxyNode,Segment,List",
      "contents": "GetComponents(${1:elec3dproxynode}, ${2:segment}, ${3:list})"
    },
    {
      "trigger": "GetComponentsFastenedTo\tSpotAssyFastenerOccurrence,ProductOccurrence",
      "contents": "GetComponentsFastenedTo(${1:spotassyfasteneroccurrence}, ${2:productoccurrence})"
    },
    {
      "trigger": "GetComputeMinNumberUnloadAutomatically\tFFS_DestinationProperties",
      "contents": "GetComputeMinNumberUnloadAutomatically(${1:ffs_destinationproperties})"
    },
    {
      "trigger": "GetComputed3Dtangent\tElec3DRouteElement,Vector",
      "contents": "GetComputed3Dtangent(${1:elec3drouteelement}, ${2:vector})"
    },
    {
      "trigger": "GetComputedValueAsReal\tMLPComputedValues,String",
      "contents": "GetComputedValueAsReal(${1:mlpcomputedvalues}, ${2:name})"
    },
    {
      "trigger": "GetConWipQuantity\tFFS_Resource,FFS_Resource,FFS_Item,FFS_Item",
      "contents": "GetConWipQuantity(${1:ffs_resource}, ${2:ffs_resource}, ${3:ffs_item}, ${4:ffs_item})"
    },
    {
      "trigger": "GetConcretizationsFromPrototype\tPLMCoreReference",
      "contents": "GetConcretizationsFromPrototype(${1:plmcorereference})"
    },
    {
      "trigger": "GetConfig\tDNBRobotMotion,Integer",
      "contents": "GetConfig(${1:dnbrobotmotion}, ${2:int})"
    },
    {
      "trigger": "GetConfigList\tMfgBaseInsert,List",
      "contents": "GetConfigList(${1:mfgbaseinsert}, ${2:list})"
    },
    {
      "trigger": "GetConfiguration\tAECHorizontalArc",
      "contents": "GetConfiguration(${1:aechorizontalarc})"
    },
    {
      "trigger": "GetConfigurationFilters\tPLMCoreReference",
      "contents": "GetConfigurationFilters(${1:plmcorereference})"
    },
    {
      "trigger": "GetConnectedArcs\tProductOccurrence,VPMPort,Elec3DDeviceNode,List",
      "contents": "GetConnectedArcs(${1:productoccurrence}, ${2:vpmport}, ${3:elec3ddevicenode}, ${4:list})"
    },
    {
      "trigger": "GetConnectedArcs\tSys3DNetworkNode,List",
      "contents": "GetConnectedArcs(${1:sys3dnetworknode}, ${2:list})"
    },
    {
      "trigger": "GetConnectedDevice\tProductOccurrence,VPMPort,ProductOccurrence,VPMPort",
      "contents": "GetConnectedDevice(${1:productoccurrence}, ${2:vpmport}, ${3:productoccurrence}, ${4:vpmport})"
    },
    {
      "trigger": "GetConnectedDevices\tProductOccurrence,VPMPort,List,List",
      "contents": "GetConnectedDevices(${1:productoccurrence}, ${2:vpmport}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "GetConnectedElements\tDELStrMfgWeldLine",
      "contents": "GetConnectedElements(${1:delstrmfgweldline})"
    },
    {
      "trigger": "GetConnectedObjects\tSptPrimarySupportOccurrence,List,List",
      "contents": "GetConnectedObjects(${1:sptprimarysupportoccurrence}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "GetConnectedProcesses\tFasten",
      "contents": "GetConnectedProcesses(${1:fasten})"
    },
    {
      "trigger": "GetConnectedWorkspace\t()",
      "contents": "GetConnectedWorkspace()"
    },
    {
      "trigger": "GetConnectedWorkspaceFather\t()",
      "contents": "GetConnectedWorkspaceFather()"
    },
    {
      "trigger": "GetConnectionType\tSptPrimarySupportOccurrence,SptPrimarySupportConnectionType",
      "contents": "GetConnectionType(${1:sptprimarysupportoccurrence}, ${2:sptprimarysupportconnectiontype})"
    },
    {
      "trigger": "GetConnexityMode\tGSMAssemble,Boolean",
      "contents": "GetConnexityMode(${1:gsmassemble}, ${2:bool})"
    },
    {
      "trigger": "GetConstrainedOperationsList\tProdSystemOccurrence,List,List",
      "contents": "GetConstrainedOperationsList(${1:prodsystemoccurrence}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "GetConstrainedOperationsList\tProdSystemOccurrence,List,List,List",
      "contents": "GetConstrainedOperationsList(${1:prodsystemoccurrence}, ${2:list}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "GetConstrainingOperationsList\tProdSystemOccurrence,List,List",
      "contents": "GetConstrainingOperationsList(${1:prodsystemoccurrence}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "GetConstrainingOperationsList\tProdSystemOccurrence,List,List,List",
      "contents": "GetConstrainingOperationsList(${1:prodsystemoccurrence}, ${2:list}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "GetConstraintStatus\tElecRoute,Integer",
      "contents": "GetConstraintStatus(${1:elecroute}, ${2:int})"
    },
    {
      "trigger": "GetConsumableForReplenishActivity\tFFS_GenericActivity",
      "contents": "GetConsumableForReplenishActivity(${1:ffs_genericactivity})"
    },
    {
      "trigger": "GetConsumables\tFFS_Resource",
      "contents": "GetConsumables(${1:ffs_resource})"
    },
    {
      "trigger": "GetConsumptionRateForAssignedConsumable\tFFS_Activity,FFS_Consumable",
      "contents": "GetConsumptionRateForAssignedConsumable(${1:ffs_activity}, ${2:ffs_consumable})"
    },
    {
      "trigger": "GetContactGeometries\tSIMItfSimulation,PIM_ContactGeometry",
      "contents": "GetContactGeometries(${1:simitfsimulation}, ${2:pim_contactgeometry})"
    },
    {
      "trigger": "GetContext\tDNBResourceTask,ProductOccurrence",
      "contents": "GetContext(${1:dnbresourcetask}, ${2:productoccurrence})"
    },
    {
      "trigger": "GetContinuousQuantity\tMustBeMadeFrom,Magnitude",
      "contents": "GetContinuousQuantity(${1:mustbemadefrom}, ${2:mag})"
    },
    {
      "trigger": "GetContour\tLiveArchiCeiling,Feature",
      "contents": "GetContour(${1:livearchiceiling}, ${2:feat})"
    },
    {
      "trigger": "GetContour\tSddOpening,String,String",
      "contents": "GetContour(${1:sddopening}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "GetContourOffset\tLiveArchiCeiling,LENGTH",
      "contents": "GetContourOffset(${1:livearchiceiling}, ${2:len})"
    },
    {
      "trigger": "GetContourParametersName\tSldOpening,List",
      "contents": "GetContourParametersName(${1:sldopening}, ${2:list})"
    },
    {
      "trigger": "GetContourParamter\tSddOpening,String,Feature",
      "contents": "GetContourParamter(${1:sddopening}, ${2:name}, ${3:feat})"
    },
    {
      "trigger": "GetContourPublicParamaters\tSddContourBased,String,Feature",
      "contents": "GetContourPublicParamaters(${1:sddcontourbased}, ${2:name}, ${3:feat})"
    },
    {
      "trigger": "GetContours\tFeature",
      "contents": "GetContours(${1:feat})"
    },
    {
      "trigger": "GetControlledMechanismID\tRscControllerMgr",
      "contents": "GetControlledMechanismID(${1:rsccontrollermgr})"
    },
    {
      "trigger": "GetControllerContextType\tRscController",
      "contents": "GetControllerContextType(${1:rsccontroller})"
    },
    {
      "trigger": "GetControllerIOMappingStrategy\tRscController",
      "contents": "GetControllerIOMappingStrategy(${1:rsccontroller})"
    },
    {
      "trigger": "GetControllerObjectName\tRscControllerObject",
      "contents": "GetControllerObjectName(${1:rsccontrollerobject})"
    },
    {
      "trigger": "GetControllerProfileMgr\tRscController",
      "contents": "GetControllerProfileMgr(${1:rsccontroller})"
    },
    {
      "trigger": "GetControllerRobotID\tRscController",
      "contents": "GetControllerRobotID(${1:rsccontroller})"
    },
    {
      "trigger": "GetControllerSpecificAttributeSet\tRscController,String",
      "contents": "GetControllerSpecificAttributeSet(${1:rsccontroller}, ${2:name})"
    },
    {
      "trigger": "GetControllerSpecificAttributeSetList\tRscController,Boolean",
      "contents": "GetControllerSpecificAttributeSetList(${1:rsccontroller}, ${2:bool})"
    },
    {
      "trigger": "GetControllerType\tRscController",
      "contents": "GetControllerType(${1:rsccontroller})"
    },
    {
      "trigger": "GetControllerUsage\tRscController",
      "contents": "GetControllerUsage(${1:rsccontroller})"
    },
    {
      "trigger": "GetControllerUserAttributeAuthorizedValuesInteger\tRscController,String",
      "contents": "GetControllerUserAttributeAuthorizedValuesInteger(${1:rsccontroller}, ${2:name})"
    },
    {
      "trigger": "GetControllerUserAttributeAuthorizedValuesReal\tRscController,String",
      "contents": "GetControllerUserAttributeAuthorizedValuesReal(${1:rsccontroller}, ${2:name})"
    },
    {
      "trigger": "GetControllerUserAttributeAuthorizedValuesString\tRscController,String",
      "contents": "GetControllerUserAttributeAuthorizedValuesString(${1:rsccontroller}, ${2:name})"
    },
    {
      "trigger": "GetControllerUserAttributeList\tRscController",
      "contents": "GetControllerUserAttributeList(${1:rsccontroller})"
    },
    {
      "trigger": "GetControllerUserAttributeType\tRscController,String",
      "contents": "GetControllerUserAttributeType(${1:rsccontroller}, ${2:name})"
    },
    {
      "trigger": "GetControllerUserAttributeValueBoolean\tRscController,String",
      "contents": "GetControllerUserAttributeValueBoolean(${1:rsccontroller}, ${2:name})"
    },
    {
      "trigger": "GetControllerUserAttributeValueInteger\tRscController,String",
      "contents": "GetControllerUserAttributeValueInteger(${1:rsccontroller}, ${2:name})"
    },
    {
      "trigger": "GetControllerUserAttributeValueReal\tRscController,String",
      "contents": "GetControllerUserAttributeValueReal(${1:rsccontroller}, ${2:name})"
    },
    {
      "trigger": "GetControllerUserAttributeValueString\tRscController,String",
      "contents": "GetControllerUserAttributeValueString(${1:rsccontroller}, ${2:name})"
    },
    {
      "trigger": "GetConveyorDecisionPoints\tFFS_Resource",
      "contents": "GetConveyorDecisionPoints(${1:ffs_resource})"
    },
    {
      "trigger": "GetConveyorDecisionPointsByName\tProductOccurrence,String",
      "contents": "GetConveyorDecisionPointsByName(${1:productoccurrence}, ${2:name})"
    },
    {
      "trigger": "GetCoordinates\tAECAlignmentPoint,LENGTH,LENGTH,LENGTH,LENGTH",
      "contents": "GetCoordinates(${1:aecalignmentpoint}, ${2:len}, ${3:len}, ${4:len}, ${5:len})"
    },
    {
      "trigger": "GetCorrectorValue\tProductOccurrence,Boolean,String,String,Integer",
      "contents": "GetCorrectorValue(${1:productoccurrence}, ${2:bool}, ${3:name}, ${4:name}, ${5:int})"
    },
    {
      "trigger": "GetCorrespondingLimit\tSddPanel,Feature,Feature,Feature",
      "contents": "GetCorrespondingLimit(${1:sddpanel}, ${2:feat}, ${3:feat}, ${4:feat})"
    },
    {
      "trigger": "GetCorrespondingOpening\tSddStiffenerOnFreeEdge,Feature,Feature",
      "contents": "GetCorrespondingOpening(${1:sddstiffeneronfreeedge}, ${2:feat}, ${3:feat})"
    },
    {
      "trigger": "GetCoveredObject\tHVAC_Insulation_Occurrence",
      "contents": "GetCoveredObject(${1:hvac_insulation_occurrence})"
    },
    {
      "trigger": "GetCoveringType\tLiveArchiCovering,AGTType",
      "contents": "GetCoveringType(${1:livearchicovering}, ${2:agttype})"
    },
    {
      "trigger": "GetCreatedItem\tFFS_CreateActivity",
      "contents": "GetCreatedItem(${1:ffs_createactivity})"
    },
    {
      "trigger": "GetCreationUnitAndPrecision\tFTARequirementModel,String,Integer",
      "contents": "GetCreationUnitAndPrecision(${1:ftarequirementmodel}, ${2:name}, ${3:int})"
    },
    {
      "trigger": "GetCrossFramesLocation\tAgtRefComponentInstance,String",
      "contents": "GetCrossFramesLocation(${1:agtrefcomponentinstance}, ${2:name})"
    },
    {
      "trigger": "GetCurrentAngle\tManufacturingActivity",
      "contents": "GetCurrentAngle(${1:manufacturingactivity})"
    },
    {
      "trigger": "GetCurrentControllerApplicationType\tRscController",
      "contents": "GetCurrentControllerApplicationType(${1:rsccontroller})"
    },
    {
      "trigger": "GetCurrentDiscipline\t()",
      "contents": "GetCurrentDiscipline()"
    },
    {
      "trigger": "GetCurrentDistance\tManufacturingActivity",
      "contents": "GetCurrentDistance(${1:manufacturingactivity})"
    },
    {
      "trigger": "GetCurrentErrorDescription\tGeometryCheckOpe",
      "contents": "GetCurrentErrorDescription(${1:geometrycheckope})"
    },
    {
      "trigger": "GetCurrentGenericProfile\tRscControllerProfileMgr,RscGenericProfileType",
      "contents": "GetCurrentGenericProfile(${1:rsccontrollerprofilemgr}, ${2:rscgenericprofiletype})"
    },
    {
      "trigger": "GetCurrentLatitudeAngle\tManufacturingActivity",
      "contents": "GetCurrentLatitudeAngle(${1:manufacturingactivity})"
    },
    {
      "trigger": "GetCurrentLongitudeAngle\tManufacturingActivity",
      "contents": "GetCurrentLongitudeAngle(${1:manufacturingactivity})"
    },
    {
      "trigger": "GetCurrentManufacturingSimulation\tDELMfgSimMSRMgr",
      "contents": "GetCurrentManufacturingSimulation(${1:delmfgsimmsrmgr})"
    },
    {
      "trigger": "GetCurrentObjectInError\tGeometryCheckOpe",
      "contents": "GetCurrentObjectInError(${1:geometrycheckope})"
    },
    {
      "trigger": "GetCurrentView\tPLMOperation,DMUFilterType",
      "contents": "GetCurrentView(${1:plmoperation}, ${2:dmufiltertype})"
    },
    {
      "trigger": "GetCurrentZTopValue\tManufacturingActivity",
      "contents": "GetCurrentZTopValue(${1:manufacturingactivity})"
    },
    {
      "trigger": "GetCurve\tAGTConnector,Feature",
      "contents": "GetCurve(${1:agtconnector}, ${2:feat})"
    },
    {
      "trigger": "GetCurve\tCbaAnnotation",
      "contents": "GetCurve(${1:cbaannotation})"
    },
    {
      "trigger": "GetCurve\tSldProfile,Feature,Feature,Feature",
      "contents": "GetCurve(${1:sldprofile}, ${2:feat}, ${3:feat}, ${4:feat})"
    },
    {
      "trigger": "GetCurveOffset\tSddProfile,Feature",
      "contents": "GetCurveOffset(${1:sddprofile}, ${2:feat})"
    },
    {
      "trigger": "GetCurvilinearDistance\tAECAlignmentPoint",
      "contents": "GetCurvilinearDistance(${1:aecalignmentpoint})"
    },
    {
      "trigger": "GetCurvilinearLength\tAECHorizontalArc",
      "contents": "GetCurvilinearLength(${1:aechorizontalarc})"
    },
    {
      "trigger": "GetCuttingElement\tSddOpening3DObjectPanel,Feature",
      "contents": "GetCuttingElement(${1:sddopening3dobjectpanel}, ${2:feat})"
    },
    {
      "trigger": "GetCuttingElement\tSldOpening,Feature,Feature,Feature",
      "contents": "GetCuttingElement(${1:sldopening}, ${2:feat}, ${3:feat}, ${4:feat})"
    },
    {
      "trigger": "GetCuttingElements\tSldPanel,List",
      "contents": "GetCuttingElements(${1:sldpanel}, ${2:list})"
    },
    {
      "trigger": "GetCuttingLength\tManufacturingActivity",
      "contents": "GetCuttingLength(${1:manufacturingactivity})"
    },
    {
      "trigger": "GetCuttingTime\tManufacturingActivity",
      "contents": "GetCuttingTime(${1:manufacturingactivity})"
    },
    {
      "trigger": "GetDCChecklistRows\tDELWkiDataCollectChecklistReference",
      "contents": "GetDCChecklistRows(${1:delwkidatacollectchecklistreference})"
    },
    {
      "trigger": "GetDCPRows\tDELWkiDataCollectPlanReference",
      "contents": "GetDCPRows(${1:delwkidatacollectplanreference})"
    },
    {
      "trigger": "GetDCPRowsLinkedWithViewOrDressup\tObjectType",
      "contents": "GetDCPRowsLinkedWithViewOrDressup(${1:objecttype})"
    },
    {
      "trigger": "GetDELSimFaultMonitorMgr\t()",
      "contents": "GetDELSimFaultMonitorMgr()"
    },
    {
      "trigger": "GetDOFTypeAndDisplacementLimits\tMachineInstruction,String,String,Real,Real",
      "contents": "GetDOFTypeAndDisplacementLimits(${1:machineinstruction}, ${2:name}, ${3:name}, ${4:real}, ${5:real})"
    },
    {
      "trigger": "GetDRPredecessors\tMfgProcessOccurrence",
      "contents": "GetDRPredecessors(${1:mfgprocessoccurrence})"
    },
    {
      "trigger": "GetDRSuccessors\tMfgProcessOccurrence",
      "contents": "GetDRSuccessors(${1:mfgprocessoccurrence})"
    },
    {
      "trigger": "GetDataCodeDetails\tString,String,List",
      "contents": "GetDataCodeDetails(${1:name}, ${2:name}, ${3:list})"
    },
    {
      "trigger": "GetDataMaterializingMBOM\tVPMReference,List,List",
      "contents": "GetDataMaterializingMBOM(${1:vpmreference}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "GetDataRequirementPredecessors\tDELFmiFunctionInstance",
      "contents": "GetDataRequirementPredecessors(${1:delfmifunctioninstance})"
    },
    {
      "trigger": "GetDataRequirementSuccessors\tDELFmiFunctionInstance",
      "contents": "GetDataRequirementSuccessors(${1:delfmifunctioninstance})"
    },
    {
      "trigger": "GetDateHolidayValue\tFFS_ShiftModel,Integer,Integer,Integer",
      "contents": "GetDateHolidayValue(${1:ffs_shiftmodel}, ${2:int}, ${3:int}, ${4:int})"
    },
    {
      "trigger": "GetDatumType\tVisualizable",
      "contents": "GetDatumType(${1:visualizable})"
    },
    {
      "trigger": "GetDecelerationUnit\tRscMotionProfile,RscMotionType",
      "contents": "GetDecelerationUnit(${1:rscmotionprofile}, ${2:rscmotiontype})"
    },
    {
      "trigger": "GetDecelerationValue\tRscMotionProfile,RscMotionType",
      "contents": "GetDecelerationValue(${1:rscmotionprofile}, ${2:rscmotiontype})"
    },
    {
      "trigger": "GetDeckFramesLocation\tAgtRefComponentInstance,String",
      "contents": "GetDeckFramesLocation(${1:agtrefcomponentinstance}, ${2:name})"
    },
    {
      "trigger": "GetDefaultBendRadius\tHVAC_Rigid_Duct,LENGTH",
      "contents": "GetDefaultBendRadius(${1:hvac_rigid_duct}, ${2:len})"
    },
    {
      "trigger": "GetDefaultName\tVPMReference,VPMRepReference,VPMRepInstance,String",
      "contents": "GetDefaultName(${1:vpmreference}, ${2:vpmrepreference}, ${3:vpmrepinstance}, ${4:name})"
    },
    {
      "trigger": "GetDefaultValue\tDNBLocalVar,String",
      "contents": "GetDefaultValue(${1:dnblocalvar}, ${2:name})"
    },
    {
      "trigger": "GetDefinedCorrectorSitesName\tProductOccurrence,Boolean,List",
      "contents": "GetDefinedCorrectorSitesName(${1:productoccurrence}, ${2:bool}, ${3:list})"
    },
    {
      "trigger": "GetDeflectionValue\tVPMReference,String",
      "contents": "GetDeflectionValue(${1:vpmreference}, ${2:name})"
    },
    {
      "trigger": "GetDegreeOfCurvature\tAECHorizontalArc,LENGTH,String,Integer",
      "contents": "GetDegreeOfCurvature(${1:aechorizontalarc}, ${2:len}, ${3:name}, ${4:int})"
    },
    {
      "trigger": "GetDependancyOnATableColumn\tEnsTechnologicalTable,Integer,EnsTechnologicalTableDependancy",
      "contents": "GetDependancyOnATableColumn(${1:enstechnologicaltable}, ${2:int}, ${3:enstechnologicaltabledependancy})"
    },
    {
      "trigger": "GetDesignCutout\tDELStrMfgOpeningPreparation",
      "contents": "GetDesignCutout(${1:delstrmfgopeningpreparation})"
    },
    {
      "trigger": "GetDesignEndCut\tDELStrMfgEndCut",
      "contents": "GetDesignEndCut(${1:delstrmfgendcut})"
    },
    {
      "trigger": "GetDesignOnPOLevelStatus\tM3xOperation,Boolean",
      "contents": "GetDesignOnPOLevelStatus(${1:m3xoperation}, ${2:bool})"
    },
    {
      "trigger": "GetDesignTable\tSldAdvConnection,String,Feature",
      "contents": "GetDesignTable(${1:sldadvconnection}, ${2:name}, ${3:feat})"
    },
    {
      "trigger": "GetDesignVehicles\tAECLaneType",
      "contents": "GetDesignVehicles(${1:aeclanetype})"
    },
    {
      "trigger": "GetDesignation\tAECRebarLayer",
      "contents": "GetDesignation(${1:aecrebarlayer})"
    },
    {
      "trigger": "GetDestinationProperties\tFFS_TransportRouteGroup,FFS_VehicleDecisionPoint",
      "contents": "GetDestinationProperties(${1:ffs_transportroutegroup}, ${2:ffs_vehicledecisionpoint})"
    },
    {
      "trigger": "GetDestinationZone\tFFS_TransportRouteGroup",
      "contents": "GetDestinationZone(${1:ffs_transportroutegroup})"
    },
    {
      "trigger": "GetDevice\tElec3DConductorEnd,ProductOccurrence,ElecPort",
      "contents": "GetDevice(${1:elec3dconductorend}, ${2:productoccurrence}, ${3:elecport})"
    },
    {
      "trigger": "GetDevice\tMachineInstruction,VPMInstance",
      "contents": "GetDevice(${1:machineinstruction}, ${2:vpminstance})"
    },
    {
      "trigger": "GetDeviceAxisInvolvement\tMachineInstruction,VPMInstance,String,Integer",
      "contents": "GetDeviceAxisInvolvement(${1:machineinstruction}, ${2:vpminstance}, ${3:name}, ${4:int})"
    },
    {
      "trigger": "GetDeviceAxisPriority\tMachineInstruction,VPMInstance,String,Integer",
      "contents": "GetDeviceAxisPriority(${1:machineinstruction}, ${2:vpminstance}, ${3:name}, ${4:int})"
    },
    {
      "trigger": "GetDeviceAxisValues\tMachineInstruction,VPMInstance,String,Real",
      "contents": "GetDeviceAxisValues(${1:machineinstruction}, ${2:vpminstance}, ${3:name}, ${4:real})"
    },
    {
      "trigger": "GetDeviceDistantLinkLength\tElecDeviceDistantLink,LENGTH,Feature",
      "contents": "GetDeviceDistantLinkLength(${1:elecdevicedistantlink}, ${2:len}, ${3:feat})"
    },
    {
      "trigger": "GetDeviceDistantLinks\tProductOccurrence,List",
      "contents": "GetDeviceDistantLinks(${1:productoccurrence}, ${2:list})"
    },
    {
      "trigger": "GetDeviceJointNumber\tDNBSpotProfile,Integer",
      "contents": "GetDeviceJointNumber(${1:dnbspotprofile}, ${2:int})"
    },
    {
      "trigger": "GetDeviceList\tMachineInstruction,List",
      "contents": "GetDeviceList(${1:machineinstruction}, ${2:list})"
    },
    {
      "trigger": "GetDeviceMCA\tDNBSpotProfile,Integer",
      "contents": "GetDeviceMCA(${1:dnbspotprofile}, ${2:int})"
    },
    {
      "trigger": "GetDeviceMCAs\tDNBSpotProfile",
      "contents": "GetDeviceMCAs(${1:dnbspotprofile})"
    },
    {
      "trigger": "GetDeviceRouteElement\tElec3DDeviceRouteElement,ProductOccurrence",
      "contents": "GetDeviceRouteElement(${1:elec3ddevicerouteelement}, ${2:productoccurrence})"
    },
    {
      "trigger": "GetDiameter\tElec3DSegmentAnnotation,LENGTH",
      "contents": "GetDiameter(${1:elec3dsegmentannotation}, ${2:len})"
    },
    {
      "trigger": "GetDimensionTolerance\tFTARequirementModel,String,List",
      "contents": "GetDimensionTolerance(${1:ftarequirementmodel}, ${2:name}, ${3:list})"
    },
    {
      "trigger": "GetDirection\tAECHorizontalArc",
      "contents": "GetDirection(${1:aechorizontalarc})"
    },
    {
      "trigger": "GetDirection\tMCX,Integer,CATMCXDirection",
      "contents": "GetDirection(${1:mcx}, ${2:int}, ${3:catmcxdirection})"
    },
    {
      "trigger": "GetDirection\tMfgDirection,Real,Real,Real",
      "contents": "GetDirection(${1:mfgdirection}, ${2:real}, ${3:real}, ${4:real})"
    },
    {
      "trigger": "GetDirection\tSddMember,Feature",
      "contents": "GetDirection(${1:sddmember}, ${2:feat})"
    },
    {
      "trigger": "GetDirectionOfAxis\tAxisSystem,Real,Real,Real,Real,Real,Real,Real,Real,Real,Real,Real,Real",
      "contents": "GetDirectionOfAxis(${1:axissystem}, ${2:real}, ${3:real}, ${4:real}, ${5:real}, ${6:real}, ${7:real}, ${8:real}, ${9:real}, ${10:real}, ${11:real}, ${12:real}, ${13:real})"
    },
    {
      "trigger": "GetDirectionValue\tFeature",
      "contents": "GetDirectionValue(${1:feat})"
    },
    {
      "trigger": "GetDirectionalClrInfo\tProductOccurrence",
      "contents": "GetDirectionalClrInfo(${1:productoccurrence})"
    },
    {
      "trigger": "GetDirectlyRelatedHorizontalAlignments\tAECAlignment2DHorizontal,List,List",
      "contents": "GetDirectlyRelatedHorizontalAlignments(${1:aecalignment2dhorizontal}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "GetDiscipline\tSys3DPathwayBranchAnnotation,String",
      "contents": "GetDiscipline(${1:sys3dpathwaybranchannotation}, ${2:name})"
    },
    {
      "trigger": "GetDispatchedItem\tFFS_DispatchActivity",
      "contents": "GetDispatchedItem(${1:ffs_dispatchactivity})"
    },
    {
      "trigger": "GetDistance\tAECAlignment2DHorizontal,String",
      "contents": "GetDistance(${1:aecalignment2dhorizontal}, ${2:name})"
    },
    {
      "trigger": "GetDistance\tAECSubgradeSection",
      "contents": "GetDistance(${1:aecsubgradesection})"
    },
    {
      "trigger": "GetDistance\tBranchPoint,Feature,LENGTH",
      "contents": "GetDistance(${1:branchpoint}, ${2:feat}, ${3:len})"
    },
    {
      "trigger": "GetDistanceFromPathway\tFeature,Feature,Real",
      "contents": "GetDistanceFromPathway(${1:feat}, ${2:feat}, ${3:real})"
    },
    {
      "trigger": "GetDistanceToBoundary\tAECRoadSurfaceMainCurve,LENGTH,CrossSectionPlaneOrientationModeEnum,LENGTH,LENGTH",
      "contents": "GetDistanceToBoundary(${1:aecroadsurfacemaincurve}, ${2:len}, ${3:crosssectionplaneorientationmodeenum}, ${4:len}, ${5:len})"
    },
    {
      "trigger": "GetDistanceToBoundary\tAECRoadSurfaceMainCurve,LENGTH,LENGTH,LENGTH",
      "contents": "GetDistanceToBoundary(${1:aecroadsurfacemaincurve}, ${2:len}, ${3:len}, ${4:len})"
    },
    {
      "trigger": "GetDistanceToCrown\tAECBoundary,LENGTH,CrossSectionPlaneOrientationModeEnum,LENGTH,LENGTH",
      "contents": "GetDistanceToCrown(${1:aecboundary}, ${2:len}, ${3:crosssectionplaneorientationmodeenum}, ${4:len}, ${5:len})"
    },
    {
      "trigger": "GetDistanceToCrown\tAECBoundary,LENGTH,LENGTH,LENGTH",
      "contents": "GetDistanceToCrown(${1:aecboundary}, ${2:len}, ${3:len}, ${4:len})"
    },
    {
      "trigger": "GetDistanceToCrown\tAECRoadSurfaceMainCurve,LENGTH",
      "contents": "GetDistanceToCrown(${1:aecroadsurfacemaincurve}, ${2:len})"
    },
    {
      "trigger": "GetDistanceToCrown\tAECRoadSurfaceMainCurve,LENGTH,CrossSectionPlaneOrientationModeEnum",
      "contents": "GetDistanceToCrown(${1:aecroadsurfacemaincurve}, ${2:len}, ${3:crosssectionplaneorientationmodeenum})"
    },
    {
      "trigger": "GetDistanceToTerrain\tAECRoadSurfaceMainCurve,LENGTH",
      "contents": "GetDistanceToTerrain(${1:aecroadsurfacemaincurve}, ${2:len})"
    },
    {
      "trigger": "GetDistanceToTerrain\tAECRoadSurfaceMainCurve,LENGTH,CrossSectionPlaneOrientationModeEnum",
      "contents": "GetDistanceToTerrain(${1:aecroadsurfacemaincurve}, ${2:len}, ${3:crosssectionplaneorientationmodeenum})"
    },
    {
      "trigger": "GetDistantlyConnectedComponents\tElec3DDeviceNode,List,List",
      "contents": "GetDistantlyConnectedComponents(${1:elec3ddevicenode}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "GetDistantlyConnectedComponents\tElec3DJunctionNode,SegmentExtremity,List,List",
      "contents": "GetDistantlyConnectedComponents(${1:elec3djunctionnode}, ${2:segmentextremity}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "GetDocument\tXMLNode",
      "contents": "GetDocument(${1:xmlnode})"
    },
    {
      "trigger": "GetDraftControlByRef\tFeature",
      "contents": "GetDraftControlByRef(${1:feat})"
    },
    {
      "trigger": "GetDrainageEquipmentType\tAECAlignmentPoint",
      "contents": "GetDrainageEquipmentType(${1:aecalignmentpoint})"
    },
    {
      "trigger": "GetDressupName\tPLMOperation,Feature",
      "contents": "GetDressupName(${1:plmoperation}, ${2:feat})"
    },
    {
      "trigger": "GetDressupText\tPLMOperation,Feature",
      "contents": "GetDressupText(${1:plmoperation}, ${2:feat})"
    },
    {
      "trigger": "GetDressupVisibility\tPLMOperation,Feature",
      "contents": "GetDressupVisibility(${1:plmoperation}, ${2:feat})"
    },
    {
      "trigger": "GetDrivenParameters\tAdvisorParameterSet,List",
      "contents": "GetDrivenParameters(${1:advisorparameterset}, ${2:list})"
    },
    {
      "trigger": "GetDrivenParameters\tAdvisorParameterSet,List,Boolean",
      "contents": "GetDrivenParameters(${1:advisorparameterset}, ${2:list}, ${3:bool})"
    },
    {
      "trigger": "GetDriverPerformsallActivitiesinSpecifiedTable\tFFS_TransportRouteGroup",
      "contents": "GetDriverPerformsallActivitiesinSpecifiedTable(${1:ffs_transportroutegroup})"
    },
    {
      "trigger": "GetDrivingParameters\tAdvisorParameterSet,List",
      "contents": "GetDrivingParameters(${1:advisorparameterset}, ${2:list})"
    },
    {
      "trigger": "GetDrivingParameters\tAdvisorParameterSet,List,Boolean",
      "contents": "GetDrivingParameters(${1:advisorparameterset}, ${2:list}, ${3:bool})"
    },
    {
      "trigger": "GetDuration\tFFS_Activity",
      "contents": "GetDuration(${1:ffs_activity})"
    },
    {
      "trigger": "GetEdge\tSddFlange,Feature",
      "contents": "GetEdge(${1:sddflange}, ${2:feat})"
    },
    {
      "trigger": "GetEditorRootOccurrences\tString",
      "contents": "GetEditorRootOccurrences(${1:name})"
    },
    {
      "trigger": "GetEditorRoots\tString",
      "contents": "GetEditorRoots(${1:name})"
    },
    {
      "trigger": "GetEffectivity\tVPMInstance,String,String",
      "contents": "GetEffectivity(${1:vpminstance}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "GetElbowAngle\tDNBRobotMotion,Real",
      "contents": "GetElbowAngle(${1:dnbrobotmotion}, ${2:real})"
    },
    {
      "trigger": "GetElecConstantArea\tElec3DSegmentAnnotation,Boolean",
      "contents": "GetElecConstantArea(${1:elec3dsegmentannotation}, ${2:bool})"
    },
    {
      "trigger": "GetElecEnds\tRFLVPMLogicalInstance,List,List",
      "contents": "GetElecEnds(${1:rflvpmlogicalinstance}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "GetElecGroupOwner\tRFLVPMLogicalInstance",
      "contents": "GetElecGroupOwner(${1:rflvpmlogicalinstance})"
    },
    {
      "trigger": "GetElecGroupedObjects\tRFLVPMLogicalInstance",
      "contents": "GetElecGroupedObjects(${1:rflvpmlogicalinstance})"
    },
    {
      "trigger": "GetElecRepType\tElec3DSegmentAnnotation,String",
      "contents": "GetElecRepType(${1:elec3dsegmentannotation}, ${2:name})"
    },
    {
      "trigger": "GetElectricalConnectedEnds\tLogicalOccurrence,List,List,List",
      "contents": "GetElectricalConnectedEnds(${1:logicaloccurrence}, ${2:list}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "GetElectricalConnectedEndsWithFilters\tLogicalOccurrence,String,String,List,List,List",
      "contents": "GetElectricalConnectedEndsWithFilters(${1:logicaloccurrence}, ${2:name}, ${3:name}, ${4:list}, ${5:list}, ${6:list})"
    },
    {
      "trigger": "GetElectricalSpec\tSIMItfSimulation,Boolean",
      "contents": "GetElectricalSpec(${1:simitfsimulation}, ${2:bool})"
    },
    {
      "trigger": "GetElementEligibleForConsideration\tFeature",
      "contents": "GetElementEligibleForConsideration(${1:feat})"
    },
    {
      "trigger": "GetElementThumbnail\tProdSystemOccurrence,String,Integer,Integer",
      "contents": "GetElementThumbnail(${1:prodsystemoccurrence}, ${2:name}, ${3:int}, ${4:int})"
    },
    {
      "trigger": "GetElementaryMotion\tMfgMacroMotion,Integer,MfgMacroElementaryMotion",
      "contents": "GetElementaryMotion(${1:mfgmacromotion}, ${2:int}, ${3:mfgmacroelementarymotion})"
    },
    {
      "trigger": "GetElevation\tAECAlignment2DVertical,LENGTH",
      "contents": "GetElevation(${1:aecalignment2dvertical}, ${2:len})"
    },
    {
      "trigger": "GetElevation\tAECBoundary,LENGTH,CrossSectionPlaneOrientationModeEnum,LENGTH,LENGTH",
      "contents": "GetElevation(${1:aecboundary}, ${2:len}, ${3:crosssectionplaneorientationmodeenum}, ${4:len}, ${5:len})"
    },
    {
      "trigger": "GetElevation\tAECBoundary,LENGTH,LENGTH,LENGTH",
      "contents": "GetElevation(${1:aecboundary}, ${2:len}, ${3:len}, ${4:len})"
    },
    {
      "trigger": "GetElevation\tAECRoadSurfaceMainCurve,LENGTH,CrossSectionPlaneOrientationModeEnum",
      "contents": "GetElevation(${1:aecroadsurfacemaincurve}, ${2:len}, ${3:crosssectionplaneorientationmodeenum})"
    },
    {
      "trigger": "GetElevation\tAECVerticalAlignmentPoint",
      "contents": "GetElevation(${1:aecverticalalignmentpoint})"
    },
    {
      "trigger": "GetEndElevation\tAECVerticalCurve",
      "contents": "GetEndElevation(${1:aecverticalcurve})"
    },
    {
      "trigger": "GetEndEndCutAngle\tSddFlange,Feature",
      "contents": "GetEndEndCutAngle(${1:sddflange}, ${2:feat})"
    },
    {
      "trigger": "GetEndEndCutDistance\tSddFlange,Feature",
      "contents": "GetEndEndCutDistance(${1:sddflange}, ${2:feat})"
    },
    {
      "trigger": "GetEndEndCutOffset\tSddFlange,Feature",
      "contents": "GetEndEndCutOffset(${1:sddflange}, ${2:feat})"
    },
    {
      "trigger": "GetEndEndCutRadius\tSddFlange,Feature",
      "contents": "GetEndEndCutRadius(${1:sddflange}, ${2:feat})"
    },
    {
      "trigger": "GetEndHomePositionName\tFFS_Activity",
      "contents": "GetEndHomePositionName(${1:ffs_activity})"
    },
    {
      "trigger": "GetEndHomePositionName\tFFS_Activity,FFS_ResourcePool",
      "contents": "GetEndHomePositionName(${1:ffs_activity}, ${2:ffs_resourcepool})"
    },
    {
      "trigger": "GetEndNodes\tSys3DNetworkPath,Sys3DNetworkNode,Sys3DNetworkNode",
      "contents": "GetEndNodes(${1:sys3dnetworkpath}, ${2:sys3dnetworknode}, ${3:sys3dnetworknode})"
    },
    {
      "trigger": "GetEndOffset\tSddChamfer,Feature",
      "contents": "GetEndOffset(${1:sddchamfer}, ${2:feat})"
    },
    {
      "trigger": "GetEndPointDistance\tAECAlignment2DVertical",
      "contents": "GetEndPointDistance(${1:aecalignment2dvertical})"
    },
    {
      "trigger": "GetEndPosition\tAECVerticalCurve,LENGTH,LENGTH",
      "contents": "GetEndPosition(${1:aecverticalcurve}, ${2:len}, ${3:len})"
    },
    {
      "trigger": "GetEndPt\tSddMember,Feature",
      "contents": "GetEndPt(${1:sddmember}, ${2:feat})"
    },
    {
      "trigger": "GetEndPt\tSldMember,Feature,Feature,Feature",
      "contents": "GetEndPt(${1:sldmember}, ${2:feat}, ${3:feat}, ${4:feat})"
    },
    {
      "trigger": "GetEndStation\tAECVerticalCurve",
      "contents": "GetEndStation(${1:aecverticalcurve})"
    },
    {
      "trigger": "GetEndcut\tSddProfile,Integer,Feature",
      "contents": "GetEndcut(${1:sddprofile}, ${2:int}, ${3:feat})"
    },
    {
      "trigger": "GetEnsFilterResult\tEnsEngSpecResourceFinder,EnsFilter,List",
      "contents": "GetEnsFilterResult(${1:ensengspecresourcefinder}, ${2:ensfilter}, ${3:list})"
    },
    {
      "trigger": "GetEnsFilterResultType\tEnsEngSpecResourceFinder,String",
      "contents": "GetEnsFilterResultType(${1:ensengspecresourcefinder}, ${2:name})"
    },
    {
      "trigger": "GetEnsTechnoTableResult\tEnsEngSpecResourceFinder,EnsTechnologicalTable,List",
      "contents": "GetEnsTechnoTableResult(${1:ensengspecresourcefinder}, ${2:enstechnologicaltable}, ${3:list})"
    },
    {
      "trigger": "GetEnsTechnoTableResultType\tEnsEngSpecResourceFinder,String",
      "contents": "GetEnsTechnoTableResultType(${1:ensengspecresourcefinder}, ${2:name})"
    },
    {
      "trigger": "GetEnterpriseItemNumber\tDELFmiFunctionReference",
      "contents": "GetEnterpriseItemNumber(${1:delfmifunctionreference})"
    },
    {
      "trigger": "GetEnvVariableValue\tString",
      "contents": "GetEnvVariableValue(${1:name})"
    },
    {
      "trigger": "GetEquilibriumCant\tAECHorizontalArc",
      "contents": "GetEquilibriumCant(${1:aechorizontalarc})"
    },
    {
      "trigger": "GetErrorState\tBaseConcept",
      "contents": "GetErrorState(${1:baseconcept})"
    },
    {
      "trigger": "GetExcavationArea\tAECRoadSurfaceMainCurve,LENGTH",
      "contents": "GetExcavationArea(${1:aecroadsurfacemaincurve}, ${2:len})"
    },
    {
      "trigger": "GetExcavationArea\tAECRoadSurfaceMainCurve,LENGTH,CrossSectionPlaneOrientationModeEnum",
      "contents": "GetExcavationArea(${1:aecroadsurfacemaincurve}, ${2:len}, ${3:crosssectionplaneorientationmodeenum})"
    },
    {
      "trigger": "GetExclusionConstraint\tElecRoute,List",
      "contents": "GetExclusionConstraint(${1:elecroute}, ${2:list})"
    },
    {
      "trigger": "GetExecutedProcessingGroup\tKWEProfile",
      "contents": "GetExecutedProcessingGroup(${1:kweprofile})"
    },
    {
      "trigger": "GetExecutionType\tDNBResourceTask,Integer",
      "contents": "GetExecutionType(${1:dnbresourcetask}, ${2:int})"
    },
    {
      "trigger": "GetExistingProfileGroupIDs\tRscApplicativeProfileMgr",
      "contents": "GetExistingProfileGroupIDs(${1:rscapplicativeprofilemgr})"
    },
    {
      "trigger": "GetExistingSpecificProfileTypeID\tRscControllerProfile",
      "contents": "GetExistingSpecificProfileTypeID(${1:rsccontrollerprofile})"
    },
    {
      "trigger": "GetExistingUserProfileGroupIDs\tRscApplicativeProfileMgr",
      "contents": "GetExistingUserProfileGroupIDs(${1:rscapplicativeprofilemgr})"
    },
    {
      "trigger": "GetExtensionDefinition\tEnsFilter,Boolean,List",
      "contents": "GetExtensionDefinition(${1:ensfilter}, ${2:bool}, ${3:list})"
    },
    {
      "trigger": "GetExternalReference\tElec3DProtectionAnnotation,String",
      "contents": "GetExternalReference(${1:elec3dprotectionannotation}, ${2:name})"
    },
    {
      "trigger": "GetExtremities\tAECHorizontalArc,2DPoint,2DPoint",
      "contents": "GetExtremities(${1:aechorizontalarc}, ${2:2dpoint}, ${3:2dpoint})"
    },
    {
      "trigger": "GetExtremity\tSldEndcut,Integer",
      "contents": "GetExtremity(${1:sldendcut}, ${2:int})"
    },
    {
      "trigger": "GetExtremityDistances\tAECHorizontalArc,LENGTH,LENGTH",
      "contents": "GetExtremityDistances(${1:aechorizontalarc}, ${2:len}, ${3:len})"
    },
    {
      "trigger": "GetExtremumPointDistance\tAECVerticalCurve",
      "contents": "GetExtremumPointDistance(${1:aecverticalcurve})"
    },
    {
      "trigger": "GetExtremumPointElevation\tAECVerticalCurve",
      "contents": "GetExtremumPointElevation(${1:aecverticalcurve})"
    },
    {
      "trigger": "GetExtremumPointLabel\tAECVerticalCurve",
      "contents": "GetExtremumPointLabel(${1:aecverticalcurve})"
    },
    {
      "trigger": "GetExtremumPointStation\tAECVerticalCurve,String,Boolean,Integer",
      "contents": "GetExtremumPointStation(${1:aecverticalcurve}, ${2:name}, ${3:bool}, ${4:int})"
    },
    {
      "trigger": "GetExtremumPointStation\tAECVerticalCurve,String,Integer,Boolean,Integer",
      "contents": "GetExtremumPointStation(${1:aecverticalcurve}, ${2:name}, ${3:int}, ${4:bool}, ${5:int})"
    },
    {
      "trigger": "GetExtremumPosition\tAECVerticalCurve,LENGTH,LENGTH",
      "contents": "GetExtremumPosition(${1:aecverticalcurve}, ${2:len}, ${3:len})"
    },
    {
      "trigger": "GetExtrusionMode\tSldOpening,Integer",
      "contents": "GetExtrusionMode(${1:sldopening}, ${2:int})"
    },
    {
      "trigger": "GetFSConfigAttributeBoolean\tProductOccurrence,String,String,String,Boolean,String,Boolean",
      "contents": "GetFSConfigAttributeBoolean(${1:productoccurrence}, ${2:name}, ${3:name}, ${4:name}, ${5:bool}, ${6:name}, ${7:bool})"
    },
    {
      "trigger": "GetFSConfigAttributeReal\tProductOccurrence,String,String,String,Boolean,String,Real",
      "contents": "GetFSConfigAttributeReal(${1:productoccurrence}, ${2:name}, ${3:name}, ${4:name}, ${5:bool}, ${6:name}, ${7:real})"
    },
    {
      "trigger": "GetFTAFeatures\tFTARequirementModel,Requirement Specification,CATTPSSet,CATTPSAllAnnotations",
      "contents": "GetFTAFeatures(${1:ftarequirementmodel}, ${2:requirement specification}, ${3:cattpsset}, ${4:cattpsallannotations})"
    },
    {
      "trigger": "GetFailures\tFFS_Resource",
      "contents": "GetFailures(${1:ffs_resource})"
    },
    {
      "trigger": "GetFamilyItems\tComponentFamily",
      "contents": "GetFamilyItems(${1:componentfamily})"
    },
    {
      "trigger": "GetFastenFromDetailedFasten\tMfgProcessOccurrence",
      "contents": "GetFastenFromDetailedFasten(${1:mfgprocessoccurrence})"
    },
    {
      "trigger": "GetFastenItemsOnSides\tMfgProcessOccurrence,List,List",
      "contents": "GetFastenItemsOnSides(${1:mfgprocessoccurrence}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "GetFastener\tDELPointTrajectory,Integer",
      "contents": "GetFastener(${1:delpointtrajectory}, ${2:int})"
    },
    {
      "trigger": "GetFastenerEngineeringSpecData\tSpotInstance,FastenerEngineeringSpecData",
      "contents": "GetFastenerEngineeringSpecData(${1:spotinstance}, ${2:fastenerengineeringspecdata})"
    },
    {
      "trigger": "GetFastenerSpec\tSIMItfSimulation,PIM_FastenerSpec",
      "contents": "GetFastenerSpec(${1:simitfsimulation}, ${2:pim_fastenerspec})"
    },
    {
      "trigger": "GetFastenerStrategy\tMfgProcessOccurrence",
      "contents": "GetFastenerStrategy(${1:mfgprocessoccurrence})"
    },
    {
      "trigger": "GetFastenerTechnology\tFastener,FastenerType,String,String",
      "contents": "GetFastenerTechnology(${1:fastener}, ${2:fastenertype}, ${3:name}, ${4:name})"
    },
    {
      "trigger": "GetFasteners\tBundleFastenerAbstract,FastenerInstanceType,List",
      "contents": "GetFasteners(${1:bundlefastenerabstract}, ${2:fastenerinstancetype}, ${3:list})"
    },
    {
      "trigger": "GetFastenersFromStackPart\tVPMInstance,VPMReference,List",
      "contents": "GetFastenersFromStackPart(${1:vpminstance}, ${2:vpmreference}, ${3:list})"
    },
    {
      "trigger": "GetFather\tResourceOccurrence",
      "contents": "GetFather(${1:resourceoccurrence})"
    },
    {
      "trigger": "GetFatherConveyorResource\tFFS_ConveyorDecisionPoint",
      "contents": "GetFatherConveyorResource(${1:ffs_conveyordecisionpoint})"
    },
    {
      "trigger": "GetFaultDuration\tDELSimFaultResult",
      "contents": "GetFaultDuration(${1:delsimfaultresult})"
    },
    {
      "trigger": "GetFaultMonActiveFlag\tDELSimFaultMonitor",
      "contents": "GetFaultMonActiveFlag(${1:delsimfaultmonitor})"
    },
    {
      "trigger": "GetFaultMonitors\tDELSimFaultMonitorMgr",
      "contents": "GetFaultMonitors(${1:delsimfaultmonitormgr})"
    },
    {
      "trigger": "GetFaultResults\tDELSimFaultMonitor,String",
      "contents": "GetFaultResults(${1:delsimfaultmonitor}, ${2:name})"
    },
    {
      "trigger": "GetFaultSeverity\tDELSimFaultResult",
      "contents": "GetFaultSeverity(${1:delsimfaultresult})"
    },
    {
      "trigger": "GetFaultStartTime\tDELSimFaultResult",
      "contents": "GetFaultStartTime(${1:delsimfaultresult})"
    },
    {
      "trigger": "GetFaultType\tDELSimFaultResult",
      "contents": "GetFaultType(${1:delsimfaultresult})"
    },
    {
      "trigger": "GetFaultySketchElements\tFeature",
      "contents": "GetFaultySketchElements(${1:feat})"
    },
    {
      "trigger": "GetFeature\tManufacturingActivity",
      "contents": "GetFeature(${1:manufacturingactivity})"
    },
    {
      "trigger": "GetFeature\tMfgPtToPtSite,ManufacturingFeature",
      "contents": "GetFeature(${1:mfgpttoptsite}, ${2:manufacturingfeature})"
    },
    {
      "trigger": "GetFeatureAnnotation\tElectricalBranchGeometryOccurrence,String,Elec3DAnnotation",
      "contents": "GetFeatureAnnotation(${1:electricalbranchgeometryoccurrence}, ${2:name}, ${3:elec3dannotation})"
    },
    {
      "trigger": "GetFeatureInContext\tManufacturingActivity",
      "contents": "GetFeatureInContext(${1:manufacturingactivity})"
    },
    {
      "trigger": "GetFeedRateMode\tMachineInstruction,Integer",
      "contents": "GetFeedRateMode(${1:machineinstruction}, ${2:int})"
    },
    {
      "trigger": "GetFeedRateValues\tMachineInstruction,Real,Real",
      "contents": "GetFeedRateValues(${1:machineinstruction}, ${2:real}, ${3:real})"
    },
    {
      "trigger": "GetFillArea\tAECRoadSurfaceMainCurve,LENGTH",
      "contents": "GetFillArea(${1:aecroadsurfacemaincurve}, ${2:len})"
    },
    {
      "trigger": "GetFillArea\tAECRoadSurfaceMainCurve,LENGTH,CrossSectionPlaneOrientationModeEnum",
      "contents": "GetFillArea(${1:aecroadsurfacemaincurve}, ${2:len}, ${3:crosssectionplaneorientationmodeenum})"
    },
    {
      "trigger": "GetFilter\tPLMInterferenceGroup,Feature",
      "contents": "GetFilter(${1:plminterferencegroup}, ${2:feat})"
    },
    {
      "trigger": "GetFilterPPRContentAppliedConfiguration\tFeature,Product Configuration",
      "contents": "GetFilterPPRContentAppliedConfiguration(${1:feat}, ${2:product configuration})"
    },
    {
      "trigger": "GetFilterUnits\tEnsFilter,List,List",
      "contents": "GetFilterUnits(${1:ensfilter}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "GetFilteredResourceTableItems\tResourceTable,String",
      "contents": "GetFilteredResourceTableItems(${1:resourcetable}, ${2:name})"
    },
    {
      "trigger": "GetFindNumber\tVPMInstance",
      "contents": "GetFindNumber(${1:vpminstance})"
    },
    {
      "trigger": "GetFireBridge\tAGTInsulation,Integer,Feature",
      "contents": "GetFireBridge(${1:agtinsulation}, ${2:int}, ${3:feat})"
    },
    {
      "trigger": "GetFirstFailureTimeDistribution\tFFS_Failure",
      "contents": "GetFirstFailureTimeDistribution(${1:ffs_failure})"
    },
    {
      "trigger": "GetFirstFeatureID\tPLMPIMMetricReference,String",
      "contents": "GetFirstFeatureID(${1:plmpimmetricreference}, ${2:name})"
    },
    {
      "trigger": "GetFirstFeatureName\tPLMPIMMetricReference,String",
      "contents": "GetFirstFeatureName(${1:plmpimmetricreference}, ${2:name})"
    },
    {
      "trigger": "GetFirstOffset\tSddOpening,Feature",
      "contents": "GetFirstOffset(${1:sddopening}, ${2:feat})"
    },
    {
      "trigger": "GetFirstSupportOffset\tSddProfile,Feature",
      "contents": "GetFirstSupportOffset(${1:sddprofile}, ${2:feat})"
    },
    {
      "trigger": "GetFirstSurface\tSddProfile,Feature",
      "contents": "GetFirstSurface(${1:sddprofile}, ${2:feat})"
    },
    {
      "trigger": "GetFirstSurface\tSldProfile,Feature,Feature,Feature",
      "contents": "GetFirstSurface(${1:sldprofile}, ${2:feat}, ${3:feat}, ${4:feat})"
    },
    {
      "trigger": "GetFlangeAnchorPointOffset\tAGTConnector,LENGTH",
      "contents": "GetFlangeAnchorPointOffset(${1:agtconnector}, ${2:len})"
    },
    {
      "trigger": "GetFlangeEndLimit\tSddFlange,Feature",
      "contents": "GetFlangeEndLimit(${1:sddflange}, ${2:feat})"
    },
    {
      "trigger": "GetFlangeExtrusionMode\tSddOpening,Integer",
      "contents": "GetFlangeExtrusionMode(${1:sddopening}, ${2:int})"
    },
    {
      "trigger": "GetFlangeOrientation\tSldProfile,Integer",
      "contents": "GetFlangeOrientation(${1:sldprofile}, ${2:int})"
    },
    {
      "trigger": "GetFlangeStartLimit\tSddFlange,Feature",
      "contents": "GetFlangeStartLimit(${1:sddflange}, ${2:feat})"
    },
    {
      "trigger": "GetFlangeWidth\tSddFlange,Feature",
      "contents": "GetFlangeWidth(${1:sddflange}, ${2:feat})"
    },
    {
      "trigger": "GetFlanges\tSddPlate,List",
      "contents": "GetFlanges(${1:sddplate}, ${2:list})"
    },
    {
      "trigger": "GetFlexibility\tElec3DProtectionAnnotation,Integer",
      "contents": "GetFlexibility(${1:elec3dprotectionannotation}, ${2:int})"
    },
    {
      "trigger": "GetFlexibleRange\tPLMFst_FlexibleFastenerInstance,LENGTH,LENGTH",
      "contents": "GetFlexibleRange(${1:plmfst_flexiblefastenerinstance}, ${2:len}, ${3:len})"
    },
    {
      "trigger": "GetFloorColor\tLiveArchiCovering,String",
      "contents": "GetFloorColor(${1:livearchicovering}, ${2:name})"
    },
    {
      "trigger": "GetFloorMaterial\tLiveArchiCovering,String",
      "contents": "GetFloorMaterial(${1:livearchicovering}, ${2:name})"
    },
    {
      "trigger": "GetFloorThickness\tLiveArchiCovering,LENGTH",
      "contents": "GetFloorThickness(${1:livearchicovering}, ${2:len})"
    },
    {
      "trigger": "GetFlow\tAECAlignment2DHorizontal,LENGTH",
      "contents": "GetFlow(${1:aecalignment2dhorizontal}, ${2:len})"
    },
    {
      "trigger": "GetFlow\tAECAlignmentPoint",
      "contents": "GetFlow(${1:aecalignmentpoint})"
    },
    {
      "trigger": "GetFlowItems\tFFS_ProductFlow",
      "contents": "GetFlowItems(${1:ffs_productflow})"
    },
    {
      "trigger": "GetFluidDensity\tAECAlignmentPoint",
      "contents": "GetFluidDensity(${1:aecalignmentpoint})"
    },
    {
      "trigger": "GetFormedElementValues\tMfgProcessOccurrence,Feature,LENGTH,LENGTH,ANGLE,ANGLE",
      "contents": "GetFormedElementValues(${1:mfgprocessoccurrence}, ${2:feat}, ${3:len}, ${4:len}, ${5:angle}, ${6:angle})"
    },
    {
      "trigger": "GetFormedElements\tMfgProcessOccurrence,List",
      "contents": "GetFormedElements(${1:mfgprocessoccurrence}, ${2:list})"
    },
    {
      "trigger": "GetFreeParameter\tPLMCoreReference",
      "contents": "GetFreeParameter(${1:plmcorereference})"
    },
    {
      "trigger": "GetFrequency\tFFS_TransportRouteGroup",
      "contents": "GetFrequency(${1:ffs_transportroutegroup})"
    },
    {
      "trigger": "GetFrom\tElec3DCable,ProductOccurrence,Elec3DCavity,Integer",
      "contents": "GetFrom(${1:elec3dcable}, ${2:productoccurrence}, ${3:elec3dcavity}, ${4:int})"
    },
    {
      "trigger": "GetFrom\tElecRoute,ProductOccurrence,VPMPort",
      "contents": "GetFrom(${1:elecroute}, ${2:productoccurrence}, ${3:vpmport})"
    },
    {
      "trigger": "GetFromResource\tFFS_ProductFlow,FFS_Resource",
      "contents": "GetFromResource(${1:ffs_productflow}, ${2:ffs_resource})"
    },
    {
      "trigger": "GetFromTo\tConductor,ProductOccurrence,Elec3DCavity,ProductOccurrence,Elec3DCavity,Integer,Integer",
      "contents": "GetFromTo(${1:conductor}, ${2:productoccurrence}, ${3:elec3dcavity}, ${4:productoccurrence}, ${5:elec3dcavity}, ${6:int}, ${7:int})"
    },
    {
      "trigger": "GetFromZoneFromDestination\tFFS_DestinationProperties",
      "contents": "GetFromZoneFromDestination(${1:ffs_destinationproperties})"
    },
    {
      "trigger": "GetFrontOverhangWidth\tAECVehicleType,LENGTH",
      "contents": "GetFrontOverhangWidth(${1:aecvehicletype}, ${2:len})"
    },
    {
      "trigger": "GetFullSuperElevation\tAECHorizontalArc",
      "contents": "GetFullSuperElevation(${1:aechorizontalarc})"
    },
    {
      "trigger": "GetGage\tProductOccurrence,Boolean,String,Real",
      "contents": "GetGage(${1:productoccurrence}, ${2:bool}, ${3:name}, ${4:real})"
    },
    {
      "trigger": "GetGauge\tElecCableRawMaterialCore,String",
      "contents": "GetGauge(${1:eleccablerawmaterialcore}, ${2:name})"
    },
    {
      "trigger": "GetGaugeInsertDefinitions\tMfgBaseTool,List",
      "contents": "GetGaugeInsertDefinitions(${1:mfgbasetool}, ${2:list})"
    },
    {
      "trigger": "GetGenericProfile\tRscControllerProfileMgr,RscGenericProfileType,String",
      "contents": "GetGenericProfile(${1:rsccontrollerprofilemgr}, ${2:rscgenericprofiletype}, ${3:name})"
    },
    {
      "trigger": "GetGenericProfileIDs\tRscControllerProfileMgr,RscGenericProfileType",
      "contents": "GetGenericProfileIDs(${1:rsccontrollerprofilemgr}, ${2:rscgenericprofiletype})"
    },
    {
      "trigger": "GetGeolocatedCartesianCoordinates\tProductOccurrence,Point,LENGTH,LENGTH,LENGTH",
      "contents": "GetGeolocatedCartesianCoordinates(${1:productoccurrence}, ${2:point}, ${3:len}, ${4:len}, ${5:len})"
    },
    {
      "trigger": "GetGeolocatedGeographicalCoordinates\tProductOccurrence,Point,ANGLE,ANGLE,LENGTH",
      "contents": "GetGeolocatedGeographicalCoordinates(${1:productoccurrence}, ${2:point}, ${3:angle}, ${4:angle}, ${5:len})"
    },
    {
      "trigger": "GetGeometricElements\tManufacturingActivity,String,List,Boolean,Boolean",
      "contents": "GetGeometricElements(${1:manufacturingactivity}, ${2:name}, ${3:list}, ${4:bool}, ${5:bool})"
    },
    {
      "trigger": "GetGeometricalComponentName\tCATTPSAllAnnotations,Integer,String",
      "contents": "GetGeometricalComponentName(${1:cattpsallannotations}, ${2:int}, ${3:name})"
    },
    {
      "trigger": "GetGeometry\tMRX,Integer,String,Feature",
      "contents": "GetGeometry(${1:mrx}, ${2:int}, ${3:name}, ${4:feat})"
    },
    {
      "trigger": "GetGeometryAsString\tMRX,Integer,Boolean,String,String",
      "contents": "GetGeometryAsString(${1:mrx}, ${2:int}, ${3:bool}, ${4:name}, ${5:name})"
    },
    {
      "trigger": "GetGeometryFeature\tMRX,Integer,Feature",
      "contents": "GetGeometryFeature(${1:mrx}, ${2:int}, ${3:feat})"
    },
    {
      "trigger": "GetGlobal3To5xToolAxis\tM3xTo5xConverter,MfgDirection",
      "contents": "GetGlobal3To5xToolAxis(${1:m3xto5xconverter}, ${2:mfgdirection})"
    },
    {
      "trigger": "GetGlobalBendRadius\tCATEbm_Branch,Real",
      "contents": "GetGlobalBendRadius(${1:catebm_branch}, ${2:real})"
    },
    {
      "trigger": "GetGlobalClearanceValue\tPLMSimulationOptionsMgr",
      "contents": "GetGlobalClearanceValue(${1:plmsimulationoptionsmgr})"
    },
    {
      "trigger": "GetGlobalProfile\tCATEbm_Branch,CATEbm_ReferenceProfile",
      "contents": "GetGlobalProfile(${1:catebm_branch}, ${2:catebm_referenceprofile})"
    },
    {
      "trigger": "GetGlobalSlack\tHVAC_Flexible_Duct,Real",
      "contents": "GetGlobalSlack(${1:hvac_flexible_duct}, ${2:real})"
    },
    {
      "trigger": "GetGrade\tAECTangentGrade",
      "contents": "GetGrade(${1:aectangentgrade})"
    },
    {
      "trigger": "GetGradientAtStationing\tAECAlignment3D,String",
      "contents": "GetGradientAtStationing(${1:aecalignment3d}, ${2:name})"
    },
    {
      "trigger": "GetGroupActivities\tFFS_Resource",
      "contents": "GetGroupActivities(${1:ffs_resource})"
    },
    {
      "trigger": "GetGroupActivity\tFFS_Activity",
      "contents": "GetGroupActivity(${1:ffs_activity})"
    },
    {
      "trigger": "GetGroupActivityFromName\tFFS_Resource,String",
      "contents": "GetGroupActivityFromName(${1:ffs_resource}, ${2:name})"
    },
    {
      "trigger": "GetGroupComputationType\tSIMItfSimulation,PIM_GroupComputationType",
      "contents": "GetGroupComputationType(${1:simitfsimulation}, ${2:pim_groupcomputationtype})"
    },
    {
      "trigger": "GetGroupObjects\tSIMItfSimulation,Integer,PLMInterferenceGroup",
      "contents": "GetGroupObjects(${1:simitfsimulation}, ${2:int}, ${3:plminterferencegroup})"
    },
    {
      "trigger": "GetGunStatus\tDNBSpotProfile,Integer",
      "contents": "GetGunStatus(${1:dnbspotprofile}, ${2:int})"
    },
    {
      "trigger": "GetGunTipCloseDirection\tDNBSpotProfile,Integer",
      "contents": "GetGunTipCloseDirection(${1:dnbspotprofile}, ${2:int})"
    },
    {
      "trigger": "GetGunTipDirectionalClrValues\tPLMSimulationOptionsMgr",
      "contents": "GetGunTipDirectionalClrValues(${1:plmsimulationoptionsmgr})"
    },
    {
      "trigger": "GetHarness\tLogicalOccurrence",
      "contents": "GetHarness(${1:logicaloccurrence})"
    },
    {
      "trigger": "GetHarnessContent\tRFLVPMLogicalInstance,List",
      "contents": "GetHarnessContent(${1:rflvpmlogicalinstance}, ${2:list})"
    },
    {
      "trigger": "GetHarnessOccurrenceContent\tLogicalOccurrence,List",
      "contents": "GetHarnessOccurrenceContent(${1:logicaloccurrence}, ${2:list})"
    },
    {
      "trigger": "GetHeadSideTorqueValues\tFastenerEngineeringSpecData,TORQUE,TORQUE,TORQUE",
      "contents": "GetHeadSideTorqueValues(${1:fastenerengineeringspecdata}, ${2:torque}, ${3:torque}, ${4:torque})"
    },
    {
      "trigger": "GetHeight\tAGTDraughtStop,LENGTH",
      "contents": "GetHeight(${1:agtdraughtstop}, ${2:len})"
    },
    {
      "trigger": "GetHomePositionCount\tRscHomePositionMgr,RscMotionGroup",
      "contents": "GetHomePositionCount(${1:rschomepositionmgr}, ${2:rscmotiongroup})"
    },
    {
      "trigger": "GetHomePositionDOFCount\tRscHomePositionMgr,RscMotionGroup",
      "contents": "GetHomePositionDOFCount(${1:rschomepositionmgr}, ${2:rscmotiongroup})"
    },
    {
      "trigger": "GetHomePositionDOFType\tRscHomePositionMgr,RscMotionGroup,Integer",
      "contents": "GetHomePositionDOFType(${1:rschomepositionmgr}, ${2:rscmotiongroup}, ${3:int})"
    },
    {
      "trigger": "GetHomePositionMgr\tRscController",
      "contents": "GetHomePositionMgr(${1:rsccontroller})"
    },
    {
      "trigger": "GetHomePositionValues\tRscHomePositionMgr,RscMotionGroup,String",
      "contents": "GetHomePositionValues(${1:rschomepositionmgr}, ${2:rscmotiongroup}, ${3:name})"
    },
    {
      "trigger": "GetHomeTarget\tDNBRobotMotion,String",
      "contents": "GetHomeTarget(${1:dnbrobotmotion}, ${2:name})"
    },
    {
      "trigger": "GetHorizontalAlignment\tAECAlignment",
      "contents": "GetHorizontalAlignment(${1:aecalignment})"
    },
    {
      "trigger": "GetHorizontalAlignmentSegmentInfo\t2DCurve,AECAlignmentPoint,AECAlignmentPoint,ANGLE,LENGTH,LENGTH,Boolean,Boolean,Real",
      "contents": "GetHorizontalAlignmentSegmentInfo(${1:2dcurve}, ${2:aecalignmentpoint}, ${3:aecalignmentpoint}, ${4:angle}, ${5:len}, ${6:len}, ${7:bool}, ${8:bool}, ${9:real})"
    },
    {
      "trigger": "GetHorizontalAlignments\tAECHorizontalNetwork",
      "contents": "GetHorizontalAlignments(${1:aechorizontalnetwork})"
    },
    {
      "trigger": "GetHorizontalLength\tAECVerticalCurve",
      "contents": "GetHorizontalLength(${1:aecverticalcurve})"
    },
    {
      "trigger": "GetIFC_IDs\tPLMPIMMetricReference,List,List",
      "contents": "GetIFC_IDs(${1:plmpimmetricreference}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "GetIFC_Names\tPLMPIMMetricReference,List,List",
      "contents": "GetIFC_Names(${1:plmpimmetricreference}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "GetIOSignalCommandUnit\tRscControlLogicMgr,Integer",
      "contents": "GetIOSignalCommandUnit(${1:rsccontrollogicmgr}, ${2:int})"
    },
    {
      "trigger": "GetIOSignalFromCommand\tRscControlLogicMgr,Integer",
      "contents": "GetIOSignalFromCommand(${1:rsccontrollogicmgr}, ${2:int})"
    },
    {
      "trigger": "GetIOSignalMapped\tRscModelLogicMgr,String,Integer,ProductOccurrence",
      "contents": "GetIOSignalMapped(${1:rscmodellogicmgr}, ${2:name}, ${3:int}, ${4:productoccurrence})"
    },
    {
      "trigger": "GetIconForSimulationDocument\tString",
      "contents": "GetIconForSimulationDocument(${1:name})"
    },
    {
      "trigger": "GetImpactedGotoInstructions\tRscLogicInstruction",
      "contents": "GetImpactedGotoInstructions(${1:rsclogicinstruction})"
    },
    {
      "trigger": "GetImplemented\tList,List",
      "contents": "GetImplemented(${1:list}, ${2:list})"
    },
    {
      "trigger": "GetImplementedFunctionalSystemsConnections\tLogicalOccurrence,List,List",
      "contents": "GetImplementedFunctionalSystemsConnections(${1:logicaloccurrence}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "GetImplementedFunctionalSystemsPorts\tRFLVPMLogicalPort,LogicalOccurrence,List,List",
      "contents": "GetImplementedFunctionalSystemsPorts(${1:rflvpmlogicalport}, ${2:logicaloccurrence}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "GetImplementedInContext\tRFLVPMLogicalReference,RFLVPMLogicalReference",
      "contents": "GetImplementedInContext(${1:rflvpmlogicalreference}, ${2:rflvpmlogicalreference})"
    },
    {
      "trigger": "GetImplementedOperations\tProdSystemOccurrence,DELLmiWorkPlanSystemReference",
      "contents": "GetImplementedOperations(${1:prodsystemoccurrence}, ${2:dellmiworkplansystemreference})"
    },
    {
      "trigger": "GetImplementedProcessOccurrenceFromSystemOcc\tProdSystemOccurrence,DELFmiFunctionReference",
      "contents": "GetImplementedProcessOccurrenceFromSystemOcc(${1:prodsystemoccurrence}, ${2:delfmifunctionreference})"
    },
    {
      "trigger": "GetImplementedProcessOccurrenceFromSystemOcc\tProdSystemOccurrence,DELFmiFunctionReference,List,List",
      "contents": "GetImplementedProcessOccurrenceFromSystemOcc(${1:prodsystemoccurrence}, ${2:delfmifunctionreference}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "GetImplementedProduct\tDELFmiFunctionInstance",
      "contents": "GetImplementedProduct(${1:delfmifunctioninstance})"
    },
    {
      "trigger": "GetImplementedWorkplanOccurrenceFromSystemOcc\tProdSystemOccurrence,DELLmiWorkPlanSystemReference",
      "contents": "GetImplementedWorkplanOccurrenceFromSystemOcc(${1:prodsystemoccurrence}, ${2:dellmiworkplansystemreference})"
    },
    {
      "trigger": "GetImplementing\tList,List",
      "contents": "GetImplementing(${1:list}, ${2:list})"
    },
    {
      "trigger": "GetImplementingInContext\tRFLPLMFunctionalReference,RFLPLMFunctionalReference",
      "contents": "GetImplementingInContext(${1:rflplmfunctionalreference}, ${2:rflplmfunctionalreference})"
    },
    {
      "trigger": "GetImplementingLogicalSystems\tRFLPLMFunctionalConnection,FunctionalOccurrence",
      "contents": "GetImplementingLogicalSystems(${1:rflplmfunctionalconnection}, ${2:functionaloccurrence})"
    },
    {
      "trigger": "GetImplementingLogicalSystemsPorts\tRFLPLMFunctionalConnector,FunctionalOccurrence,List,List",
      "contents": "GetImplementingLogicalSystemsPorts(${1:rflplmfunctionalconnector}, ${2:functionaloccurrence}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "GetImplementingOperations\tProdSystemOccurrence,DELLmiPPRSystemReference,DELLmiPPRSystemReference",
      "contents": "GetImplementingOperations(${1:prodsystemoccurrence}, ${2:dellmipprsystemreference}, ${3:dellmipprsystemreference})"
    },
    {
      "trigger": "GetImplementingSystemsFromProcessOcc\tFProcessOccurrence,DELLmiPPRSystemReference",
      "contents": "GetImplementingSystemsFromProcessOcc(${1:fprocessoccurrence}, ${2:dellmipprsystemreference})"
    },
    {
      "trigger": "GetImplementingSystemsFromWorkplanOcc\tProdSystemOccurrence,DELLmiPPRSystemReference",
      "contents": "GetImplementingSystemsFromWorkplanOcc(${1:prodsystemoccurrence}, ${2:dellmipprsystemreference})"
    },
    {
      "trigger": "GetImplicitFilteringMode\tProdSystemOccurrence",
      "contents": "GetImplicitFilteringMode(${1:prodsystemoccurrence})"
    },
    {
      "trigger": "GetImplicitFilteringOverload\tProdSystemOccurrence",
      "contents": "GetImplicitFilteringOverload(${1:prodsystemoccurrence})"
    },
    {
      "trigger": "GetInProductZone\tFFS_TransferActivity",
      "contents": "GetInProductZone(${1:ffs_transferactivity})"
    },
    {
      "trigger": "GetInZoneByName\tString",
      "contents": "GetInZoneByName(${1:name})"
    },
    {
      "trigger": "GetInclusionConstraint\tElecRoute,List",
      "contents": "GetInclusionConstraint(${1:elecroute}, ${2:list})"
    },
    {
      "trigger": "GetInconsistentLinkAnalysis\tMfgProcessOccurrence,List,List,List,List,List,List,List,List",
      "contents": "GetInconsistentLinkAnalysis(${1:mfgprocessoccurrence}, ${2:list}, ${3:list}, ${4:list}, ${5:list}, ${6:list}, ${7:list}, ${8:list}, ${9:list})"
    },
    {
      "trigger": "GetIndexOfFastenedPart\tFastenerOccurrence,ProductOccurrence",
      "contents": "GetIndexOfFastenedPart(${1:fasteneroccurrence}, ${2:productoccurrence})"
    },
    {
      "trigger": "GetInertia\tRscToolProfile",
      "contents": "GetInertia(${1:rsctoolprofile})"
    },
    {
      "trigger": "GetInfrastructureType\tAECAlignmentPoint",
      "contents": "GetInfrastructureType(${1:aecalignmentpoint})"
    },
    {
      "trigger": "GetInitialLoop\tFFS_TransportRouteGroup",
      "contents": "GetInitialLoop(${1:ffs_transportroutegroup})"
    },
    {
      "trigger": "GetInnerDiameter\tAECPipeline",
      "contents": "GetInnerDiameter(${1:aecpipeline})"
    },
    {
      "trigger": "GetInnerDiameter\tElec3DProtectionAnnotation,LENGTH",
      "contents": "GetInnerDiameter(${1:elec3dprotectionannotation}, ${2:len})"
    },
    {
      "trigger": "GetInputExternalProductOnly\tFFS_Activity,FFS_Item",
      "contents": "GetInputExternalProductOnly(${1:ffs_activity}, ${2:ffs_item})"
    },
    {
      "trigger": "GetInputMultiRobotTask\tRscMultiRobotPathPlanner,Integer",
      "contents": "GetInputMultiRobotTask(${1:rscmultirobotpathplanner}, ${2:int})"
    },
    {
      "trigger": "GetInputProductQuantity\tFFS_Activity,FFS_Item",
      "contents": "GetInputProductQuantity(${1:ffs_activity}, ${2:ffs_item})"
    },
    {
      "trigger": "GetInputProductZone\tFFS_GenericActivity,FFS_Item",
      "contents": "GetInputProductZone(${1:ffs_genericactivity}, ${2:ffs_item})"
    },
    {
      "trigger": "GetInputs\tSldAdvConnection,List",
      "contents": "GetInputs(${1:sldadvconnection}, ${2:list})"
    },
    {
      "trigger": "GetInstantiatedActivities\tMachiningProcess,List,List",
      "contents": "GetInstantiatedActivities(${1:machiningprocess}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "GetInstructions\tDNBResourceTask,List",
      "contents": "GetInstructions(${1:dnbresourcetask}, ${2:list})"
    },
    {
      "trigger": "GetInstructionsLinkedWithViewOrDressup\tObjectType",
      "contents": "GetInstructionsLinkedWithViewOrDressup(${1:objecttype})"
    },
    {
      "trigger": "GetInsulationSpecifications\tAGTInsulation,Feature,AGTInsulationTypeOption",
      "contents": "GetInsulationSpecifications(${1:agtinsulation}, ${2:feat}, ${3:agtinsulationtypeoption})"
    },
    {
      "trigger": "GetInterferenceClearanceValue\tRobInterferenceZoneMgr",
      "contents": "GetInterferenceClearanceValue(${1:robinterferencezonemgr})"
    },
    {
      "trigger": "GetInterferenceFromIndex\tSIMItfSimulation,Integer,SIMItfContextOfInterference,PLMPIMMetricReference",
      "contents": "GetInterferenceFromIndex(${1:simitfsimulation}, ${2:int}, ${3:simitfcontextofinterference}, ${4:plmpimmetricreference})"
    },
    {
      "trigger": "GetInterferenceMetric\tSIMItfContextOfInterference,PLMPIMMetricReference",
      "contents": "GetInterferenceMetric(${1:simitfcontextofinterference}, ${2:plmpimmetricreference})"
    },
    {
      "trigger": "GetInterferencePairIncludedFlag\tRobInterferencePair",
      "contents": "GetInterferencePairIncludedFlag(${1:robinterferencepair})"
    },
    {
      "trigger": "GetInterferencePairTask1\tRobInterferencePair",
      "contents": "GetInterferencePairTask1(${1:robinterferencepair})"
    },
    {
      "trigger": "GetInterferencePairTask2\tRobInterferencePair",
      "contents": "GetInterferencePairTask2(${1:robinterferencepair})"
    },
    {
      "trigger": "GetInterferencePairs\tRobInterferenceZoneMgr,Boolean",
      "contents": "GetInterferencePairs(${1:robinterferencezonemgr}, ${2:bool})"
    },
    {
      "trigger": "GetInterferenceResourceIncludedFlag\tRobInterferenceZoneMgr,ResourceOccurrence",
      "contents": "GetInterferenceResourceIncludedFlag(${1:robinterferencezonemgr}, ${2:resourceoccurrence})"
    },
    {
      "trigger": "GetInterferenceResources\tRobInterferenceZoneMgr",
      "contents": "GetInterferenceResources(${1:robinterferencezonemgr})"
    },
    {
      "trigger": "GetInterferenceRscClearancesFlag\tRobInterferenceZoneMgr",
      "contents": "GetInterferenceRscClearancesFlag(${1:robinterferencezonemgr})"
    },
    {
      "trigger": "GetInterferenceSimulationStepSize\tRobInterferenceZoneMgr",
      "contents": "GetInterferenceSimulationStepSize(${1:robinterferencezonemgr})"
    },
    {
      "trigger": "GetInterferenceTaskIncludedFlag\tRobInterferenceZoneMgr,DNBResourceTask",
      "contents": "GetInterferenceTaskIncludedFlag(${1:robinterferencezonemgr}, ${2:dnbresourcetask})"
    },
    {
      "trigger": "GetInterferenceZoneMgr\t()",
      "contents": "GetInterferenceZoneMgr()"
    },
    {
      "trigger": "GetInterferenceZoneStatus\tRobInterferenceZone",
      "contents": "GetInterferenceZoneStatus(${1:robinterferencezone})"
    },
    {
      "trigger": "GetInterferenceZones\tRobInterferencePair,Boolean",
      "contents": "GetInterferenceZones(${1:robinterferencepair}, ${2:bool})"
    },
    {
      "trigger": "GetIntermediateRepresentation\tSIMItfSimulation,PIM_IntermediateRepresentation",
      "contents": "GetIntermediateRepresentation(${1:simitfsimulation}, ${2:pim_intermediaterepresentation})"
    },
    {
      "trigger": "GetInterpolationMode\tDNBRobotMotion,Integer",
      "contents": "GetInterpolationMode(${1:dnbrobotmotion}, ${2:int})"
    },
    {
      "trigger": "GetIntersectingElements\tSddOpening,List",
      "contents": "GetIntersectingElements(${1:sddopening}, ${2:list})"
    },
    {
      "trigger": "GetIntersection\tStructure_Panel,Structure_Member,Integer",
      "contents": "GetIntersection(${1:structure_panel}, ${2:structure_member}, ${3:int})"
    },
    {
      "trigger": "GetIntersection\tStructure_Panel,Structure_Member,Integer,Integer",
      "contents": "GetIntersection(${1:structure_panel}, ${2:structure_member}, ${3:int}, ${4:int})"
    },
    {
      "trigger": "GetInulatedSide\tAGTInsulation,Boolean",
      "contents": "GetInulatedSide(${1:agtinsulation}, ${2:bool})"
    },
    {
      "trigger": "GetIsBallast\tAECSubgradeSection",
      "contents": "GetIsBallast(${1:aecsubgradesection})"
    },
    {
      "trigger": "GetIsComputed\tMustBeMadeFrom,Boolean",
      "contents": "GetIsComputed(${1:mustbemadefrom}, ${2:bool})"
    },
    {
      "trigger": "GetIsReservedOnCapableRsc\tPLMConnection,Boolean",
      "contents": "GetIsReservedOnCapableRsc(${1:plmconnection}, ${2:bool})"
    },
    {
      "trigger": "GetItem\tList,Integer",
      "contents": "GetItem(${1:list}, ${2:int})"
    },
    {
      "trigger": "GetItemFromName\tString,ProductOccurrence",
      "contents": "GetItemFromName(${1:name}, ${2:productoccurrence})"
    },
    {
      "trigger": "GetItemModel\tComponentFamilyItem,Boolean",
      "contents": "GetItemModel(${1:componentfamilyitem}, ${2:bool})"
    },
    {
      "trigger": "GetItemSubComponents\tProdSystemOccurrence,ProdSystemOccurrence,List",
      "contents": "GetItemSubComponents(${1:prodsystemoccurrence}, ${2:prodsystemoccurrence}, ${3:list})"
    },
    {
      "trigger": "GetItemsAssociatedWithDCPRow\tPLMSpecifyHowToCollectDataCnx",
      "contents": "GetItemsAssociatedWithDCPRow(${1:plmspecifyhowtocollectdatacnx})"
    },
    {
      "trigger": "GetItemsAssociatedWithInstruction\tProdSystemOccurrence",
      "contents": "GetItemsAssociatedWithInstruction(${1:prodsystemoccurrence})"
    },
    {
      "trigger": "GetItemsFromPlanning\tProdSystemOccurrence",
      "contents": "GetItemsFromPlanning(${1:prodsystemoccurrence})"
    },
    {
      "trigger": "GetItemsResourcesPointedByDressup\tPLMOperation,Feature",
      "contents": "GetItemsResourcesPointedByDressup(${1:plmoperation}, ${2:feat})"
    },
    {
      "trigger": "GetJointNumber\tDNBSpotProfile,Integer",
      "contents": "GetJointNumber(${1:dnbspotprofile}, ${2:int})"
    },
    {
      "trigger": "GetJointTarget\tDNBRobotMotion,List",
      "contents": "GetJointTarget(${1:dnbrobotmotion}, ${2:list})"
    },
    {
      "trigger": "GetKeyPointAcronym\tAECAlignment2DHorizontal,LENGTH",
      "contents": "GetKeyPointAcronym(${1:aecalignment2dhorizontal}, ${2:len})"
    },
    {
      "trigger": "GetKinWizardMgr\tProductOccurrence",
      "contents": "GetKinWizardMgr(${1:productoccurrence})"
    },
    {
      "trigger": "GetKinematicsMgr\tRscController",
      "contents": "GetKinematicsMgr(${1:rsccontroller})"
    },
    {
      "trigger": "GetKweTechObject\t()",
      "contents": "GetKweTechObject()"
    },
    {
      "trigger": "GetLabel\tAECAlignmentPoint",
      "contents": "GetLabel(${1:aecalignmentpoint})"
    },
    {
      "trigger": "GetLabelDisplaySide\tAECAlignment2DHorizontal",
      "contents": "GetLabelDisplaySide(${1:aecalignment2dhorizontal})"
    },
    {
      "trigger": "GetLabelValue\tFTARequirementModel,String",
      "contents": "GetLabelValue(${1:ftarequirementmodel}, ${2:name})"
    },
    {
      "trigger": "GetLaminateElementCustomMaterial\tMLPLaminate,MLPLayerObject",
      "contents": "GetLaminateElementCustomMaterial(${1:mlplaminate}, ${2:mlplayerobject})"
    },
    {
      "trigger": "GetLanesLargestWidthAtStationing\tAECAlignment3D,String",
      "contents": "GetLanesLargestWidthAtStationing(${1:aecalignment3d}, ${2:name})"
    },
    {
      "trigger": "GetLastItem\tList",
      "contents": "GetLastItem(${1:list})"
    },
    {
      "trigger": "GetLastRoutingRuleSet\tElecRoute,RouteRuleSet",
      "contents": "GetLastRoutingRuleSet(${1:elecroute}, ${2:routeruleset})"
    },
    {
      "trigger": "GetLateralClearance\tAECLaneType",
      "contents": "GetLateralClearance(${1:aeclanetype})"
    },
    {
      "trigger": "GetLatitudeAngle\tManufacturingActivity",
      "contents": "GetLatitudeAngle(${1:manufacturingactivity})"
    },
    {
      "trigger": "GetLayerConcreteName\tAECRebarLayer",
      "contents": "GetLayerConcreteName(${1:aecrebarlayer})"
    },
    {
      "trigger": "GetLayerPublishStatus\tInsLayer,ProductOccurrence",
      "contents": "GetLayerPublishStatus(${1:inslayer}, ${2:productoccurrence})"
    },
    {
      "trigger": "GetLayers\tAECRebarGroup",
      "contents": "GetLayers(${1:aecrebargroup})"
    },
    {
      "trigger": "GetLeftShoulder\tAECRoadSurfaceMainCurve",
      "contents": "GetLeftShoulder(${1:aecroadsurfacemaincurve})"
    },
    {
      "trigger": "GetLeftTravelWay\tAECRoadSurfaceMainCurve",
      "contents": "GetLeftTravelWay(${1:aecroadsurfacemaincurve})"
    },
    {
      "trigger": "GetLeftTraveledWayWidth\tAECAlignmentPoint",
      "contents": "GetLeftTraveledWayWidth(${1:aecalignmentpoint})"
    },
    {
      "trigger": "GetLength\tAECAlignment2DHorizontal",
      "contents": "GetLength(${1:aecalignment2dhorizontal})"
    },
    {
      "trigger": "GetLength\tBeadInstance,LENGTH",
      "contents": "GetLength(${1:beadinstance}, ${2:len})"
    },
    {
      "trigger": "GetLengthAlongTangent\tAECHorizontalClothoid",
      "contents": "GetLengthAlongTangent(${1:aechorizontalclothoid})"
    },
    {
      "trigger": "GetLengthCoeff\tElecCableRawMaterialCore,Real",
      "contents": "GetLengthCoeff(${1:eleccablerawmaterialcore}, ${2:real})"
    },
    {
      "trigger": "GetLengthNormalToTangent\tAECHorizontalClothoid",
      "contents": "GetLengthNormalToTangent(${1:aechorizontalclothoid})"
    },
    {
      "trigger": "GetLengthTolerance\tAECRebarLayer",
      "contents": "GetLengthTolerance(${1:aecrebarlayer})"
    },
    {
      "trigger": "GetLimit1Limit2OfLimitLimitScallop\tSddScallop,Feature,Feature",
      "contents": "GetLimit1Limit2OfLimitLimitScallop(${1:sddscallop}, ${2:feat}, ${3:feat})"
    },
    {
      "trigger": "GetLimit\tAGTConnector,AGTProfileExtremity,Feature",
      "contents": "GetLimit(${1:agtconnector}, ${2:agtprofileextremity}, ${3:feat})"
    },
    {
      "trigger": "GetLimitDetailMode\tSddPanel,Integer,Integer",
      "contents": "GetLimitDetailMode(${1:sddpanel}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "GetLimitKey\tSddPanel,Integer,String",
      "contents": "GetLimitKey(${1:sddpanel}, ${2:int}, ${3:name})"
    },
    {
      "trigger": "GetLimitMode\tSldOpening,Integer",
      "contents": "GetLimitMode(${1:sldopening}, ${2:int})"
    },
    {
      "trigger": "GetLimitNormalOffset\tSldPanel,Integer,Feature",
      "contents": "GetLimitNormalOffset(${1:sldpanel}, ${2:int}, ${3:feat})"
    },
    {
      "trigger": "GetLimitOfLimitOffsetScallop\tSddScallop,Feature",
      "contents": "GetLimitOfLimitOffsetScallop(${1:sddscallop}, ${2:feat})"
    },
    {
      "trigger": "GetLimitOffset\tAGTInsulation,Integer,LENGTH",
      "contents": "GetLimitOffset(${1:agtinsulation}, ${2:int}, ${3:len})"
    },
    {
      "trigger": "GetLimitOrientation\tSddPanel,Integer,Integer",
      "contents": "GetLimitOrientation(${1:sddpanel}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "GetLimitType\tSddProfile,Integer,Integer",
      "contents": "GetLimitType(${1:sddprofile}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "GetLimitingObject\tSddPanel,Feature,Integer",
      "contents": "GetLimitingObject(${1:sddpanel}, ${2:feat}, ${3:int})"
    },
    {
      "trigger": "GetLimitingObject\tSldPanel,Feature,Feature,Feature,String,Integer",
      "contents": "GetLimitingObject(${1:sldpanel}, ${2:feat}, ${3:feat}, ${4:feat}, ${5:name}, ${6:int})"
    },
    {
      "trigger": "GetLimitingObjectNormalOffset\tSldProfile,Integer,Feature",
      "contents": "GetLimitingObjectNormalOffset(${1:sldprofile}, ${2:int}, ${3:feat})"
    },
    {
      "trigger": "GetLimitingObjectOffset\tSddProfile,Integer,Feature",
      "contents": "GetLimitingObjectOffset(${1:sddprofile}, ${2:int}, ${3:feat})"
    },
    {
      "trigger": "GetLimits\tSddStiffenerOnFreeEdge,List",
      "contents": "GetLimits(${1:sddstiffeneronfreeedge}, ${2:list})"
    },
    {
      "trigger": "GetLimits\tSddStiffenerOnFreeEdge,List,List,List",
      "contents": "GetLimits(${1:sddstiffeneronfreeedge}, ${2:list}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "GetLine\tMatrix,Integer",
      "contents": "GetLine(${1:matrix}, ${2:int})"
    },
    {
      "trigger": "GetLineAC\tHVAC_Duct_Occurrence",
      "contents": "GetLineAC(${1:hvac_duct_occurrence})"
    },
    {
      "trigger": "GetLineIDName\tHVAC_Duct_Occurrence",
      "contents": "GetLineIDName(${1:hvac_duct_occurrence})"
    },
    {
      "trigger": "GetLineIDObject\tHVAC_Duct_Occurrence",
      "contents": "GetLineIDObject(${1:hvac_duct_occurrence})"
    },
    {
      "trigger": "GetLineOrientation\tFeature",
      "contents": "GetLineOrientation(${1:feat})"
    },
    {
      "trigger": "GetLineType\tElec3DProtectionAnnotation,Integer",
      "contents": "GetLineType(${1:elec3dprotectionannotation}, ${2:int})"
    },
    {
      "trigger": "GetLinearMass\tElecCableRawMaterialCore,LINEMASS",
      "contents": "GetLinearMass(${1:eleccablerawmaterialcore}, ${2:linemass})"
    },
    {
      "trigger": "GetLinkedEndsForRoutedSignal\tSys3D_RouteOccurrence,String,LogicalOccurrence,List,List",
      "contents": "GetLinkedEndsForRoutedSignal(${1:sys3d_routeoccurrence}, ${2:name}, ${3:logicaloccurrence}, ${4:list}, ${5:list})"
    },
    {
      "trigger": "GetLinkedPlanningEntity\tFFS_Activity",
      "contents": "GetLinkedPlanningEntity(${1:ffs_activity})"
    },
    {
      "trigger": "GetLinkedProfiles\tDNBSpotProfile,Integer",
      "contents": "GetLinkedProfiles(${1:dnbspotprofile}, ${2:int})"
    },
    {
      "trigger": "GetLinkedResources\tFFS_Failure",
      "contents": "GetLinkedResources(${1:ffs_failure})"
    },
    {
      "trigger": "GetLinkedRuleBase\tKWEGenericRuleBaseComponent",
      "contents": "GetLinkedRuleBase(${1:kwegenericrulebasecomponent})"
    },
    {
      "trigger": "GetLinks\tObjectType",
      "contents": "GetLinks(${1:objecttype})"
    },
    {
      "trigger": "GetListHomePositionIDs\tRscHomePositionMgr,RscMotionGroup",
      "contents": "GetListHomePositionIDs(${1:rschomepositionmgr}, ${2:rscmotiongroup})"
    },
    {
      "trigger": "GetListOfAllAssignedProcessesAndInLowerScope\tProdSystemOccurrence,List,List,List,List,List,DELFmiFunctionReference",
      "contents": "GetListOfAllAssignedProcessesAndInLowerScope(${1:prodsystemoccurrence}, ${2:list}, ${3:list}, ${4:list}, ${5:list}, ${6:list}, ${7:delfmifunctionreference})"
    },
    {
      "trigger": "GetListOfAllAssignedProcessesAndInLowerScope\tProdSystemOccurrence,List,List,List,List,List,List,DELFmiFunctionReference",
      "contents": "GetListOfAllAssignedProcessesAndInLowerScope(${1:prodsystemoccurrence}, ${2:list}, ${3:list}, ${4:list}, ${5:list}, ${6:list}, ${7:list}, ${8:delfmifunctionreference})"
    },
    {
      "trigger": "GetListOfAssignmentFiltersAndStatus\tMfgProcessOccurrence,List,List,List",
      "contents": "GetListOfAssignmentFiltersAndStatus(${1:mfgprocessoccurrence}, ${2:list}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "GetListOfAssignmentFiltersAndStatus\tMfgProcessOccurrence,ProductOccurrence,List,List,List",
      "contents": "GetListOfAssignmentFiltersAndStatus(${1:mfgprocessoccurrence}, ${2:productoccurrence}, ${3:list}, ${4:list}, ${5:list})"
    },
    {
      "trigger": "GetListOfEventPoints\tAECAlignment2DHorizontal",
      "contents": "GetListOfEventPoints(${1:aecalignment2dhorizontal})"
    },
    {
      "trigger": "GetListOfFailedStatus\tHAReport",
      "contents": "GetListOfFailedStatus(${1:hareport})"
    },
    {
      "trigger": "GetListOfFastenInSessionFromBundle\tVPMReference",
      "contents": "GetListOfFastenInSessionFromBundle(${1:vpmreference})"
    },
    {
      "trigger": "GetListOfFilteredProductOccurrences\tMfgProcessOccurrence,List",
      "contents": "GetListOfFilteredProductOccurrences(${1:mfgprocessoccurrence}, ${2:list})"
    },
    {
      "trigger": "GetListOfGlobalLinkedRequirements\tPLMCoreReference,List,List,Boolean",
      "contents": "GetListOfGlobalLinkedRequirements(${1:plmcorereference}, ${2:list}, ${3:list}, ${4:bool})"
    },
    {
      "trigger": "GetListOfImplementingReferences\tFeature,List,List,List",
      "contents": "GetListOfImplementingReferences(${1:feat}, ${2:list}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "GetListOfImplementingReferencesForGlobalSpecification\tFeature,List,List",
      "contents": "GetListOfImplementingReferencesForGlobalSpecification(${1:feat}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "GetListOfKeyPoints\tAECAlignment2DHorizontal,LENGTH,LENGTH",
      "contents": "GetListOfKeyPoints(${1:aecalignment2dhorizontal}, ${2:len}, ${3:len})"
    },
    {
      "trigger": "GetListOfLinkedRequirements\tPLMCoreReference,List,List,List,Boolean",
      "contents": "GetListOfLinkedRequirements(${1:plmcorereference}, ${2:list}, ${3:list}, ${4:list}, ${5:bool})"
    },
    {
      "trigger": "GetListOfMfgResponsibilityRelations\tPLMCoreReference",
      "contents": "GetListOfMfgResponsibilityRelations(${1:plmcorereference})"
    },
    {
      "trigger": "GetListOfMfgResponsibilityRelationsFromTarget\tOrganization",
      "contents": "GetListOfMfgResponsibilityRelationsFromTarget(${1:organization})"
    },
    {
      "trigger": "GetListOfMfgSubstituteRelations\tDELFmiFunctionInstance",
      "contents": "GetListOfMfgSubstituteRelations(${1:delfmifunctioninstance})"
    },
    {
      "trigger": "GetListOfMfgSubstituteRelationsFromTarget\tDELFmiFunctionReference",
      "contents": "GetListOfMfgSubstituteRelationsFromTarget(${1:delfmifunctionreference})"
    },
    {
      "trigger": "GetListOfNewReferencesFrom\tDELFmiFunctionReference",
      "contents": "GetListOfNewReferencesFrom(${1:delfmifunctionreference})"
    },
    {
      "trigger": "GetListOfNewReferencesFrom\tPLMCoreReference,Integer",
      "contents": "GetListOfNewReferencesFrom(${1:plmcorereference}, ${2:int})"
    },
    {
      "trigger": "GetListOfNewReferencesFromWithNavigate\tDELFmiFunctionReference",
      "contents": "GetListOfNewReferencesFromWithNavigate(${1:delfmifunctionreference})"
    },
    {
      "trigger": "GetListOfPP\tList",
      "contents": "GetListOfPP(${1:list})"
    },
    {
      "trigger": "GetListOfPPTables\tList",
      "contents": "GetListOfPPTables(${1:list})"
    },
    {
      "trigger": "GetListOfPostControllers\tList",
      "contents": "GetListOfPostControllers(${1:list})"
    },
    {
      "trigger": "GetListOfProcessesConnectedAsOutput\tPLMCoreReference,Integer",
      "contents": "GetListOfProcessesConnectedAsOutput(${1:plmcorereference}, ${2:int})"
    },
    {
      "trigger": "GetListOfScopedWorkplans\tDELLmiPPRSystemReference",
      "contents": "GetListOfScopedWorkplans(${1:dellmipprsystemreference})"
    },
    {
      "trigger": "GetListOfScopingSystems\tDELLmiWorkPlanSystemReference",
      "contents": "GetListOfScopingSystems(${1:dellmiworkplansystemreference})"
    },
    {
      "trigger": "GetListOfSegments\tAECAlignment2DHorizontal",
      "contents": "GetListOfSegments(${1:aecalignment2dhorizontal})"
    },
    {
      "trigger": "GetListOfSelected\tKWERuleBaseComponent,String",
      "contents": "GetListOfSelected(${1:kwerulebasecomponent}, ${2:name})"
    },
    {
      "trigger": "GetListOfStatus\tHAReport",
      "contents": "GetListOfStatus(${1:hareport})"
    },
    {
      "trigger": "GetListOfTrayNLSError\tConductor,Integer",
      "contents": "GetListOfTrayNLSError(${1:conductor}, ${2:int})"
    },
    {
      "trigger": "GetListPipelines\tAECAlignmentPoint",
      "contents": "GetListPipelines(${1:aecalignmentpoint})"
    },
    {
      "trigger": "GetListProfileAttributes\tRscApplicativeProfile",
      "contents": "GetListProfileAttributes(${1:rscapplicativeprofile})"
    },
    {
      "trigger": "GetListStiffeners\tAGTInsulation,List",
      "contents": "GetListStiffeners(${1:agtinsulation}, ${2:list})"
    },
    {
      "trigger": "GetListTrayByConductor\tConductor,Integer",
      "contents": "GetListTrayByConductor(${1:conductor}, ${2:int})"
    },
    {
      "trigger": "GetListTrayByListOfSegments\tList",
      "contents": "GetListTrayByListOfSegments(${1:list})"
    },
    {
      "trigger": "GetListWhoResource\tProdSystemOccurrence",
      "contents": "GetListWhoResource(${1:prodsystemoccurrence})"
    },
    {
      "trigger": "GetLoadedItems\tFFS_LoadActivity",
      "contents": "GetLoadedItems(${1:ffs_loadactivity})"
    },
    {
      "trigger": "GetLocalMAS\tManufacturingActivity,MfgMachiningAxisSystem",
      "contents": "GetLocalMAS(${1:manufacturingactivity}, ${2:mfgmachiningaxissystem})"
    },
    {
      "trigger": "GetLocalPlaneElement\tLatheFeature,MfgMachiningAxisSystem",
      "contents": "GetLocalPlaneElement(${1:lathefeature}, ${2:mfgmachiningaxissystem})"
    },
    {
      "trigger": "GetLocalSliceMode\tHVAC_Flexible_Duct,Integer,CATEbm_SlackAndLengthModeEnum",
      "contents": "GetLocalSliceMode(${1:hvac_flexible_duct}, ${2:int}, ${3:catebm_slackandlengthmodeenum})"
    },
    {
      "trigger": "GetLocalSliceValue\tHVAC_Flexible_Duct,Integer,LENGTH",
      "contents": "GetLocalSliceValue(${1:hvac_flexible_duct}, ${2:int}, ${3:len})"
    },
    {
      "trigger": "GetLocalToolAxis\tMfgPatternUsage,Integer,MfgDirection",
      "contents": "GetLocalToolAxis(${1:mfgpatternusage}, ${2:int}, ${3:mfgdirection})"
    },
    {
      "trigger": "GetLockStatus\tDNBTag,List",
      "contents": "GetLockStatus(${1:dnbtag}, ${2:list})"
    },
    {
      "trigger": "GetLogicalRoutable\tFeature,EleLogicalConductorOcc",
      "contents": "GetLogicalRoutable(${1:feat}, ${2:elelogicalconductorocc})"
    },
    {
      "trigger": "GetLogicalRoutingAttributes\tRFLVPMLogicalConnection,String,Real,Real,String,String",
      "contents": "GetLogicalRoutingAttributes(${1:rflvpmlogicalconnection}, ${2:name}, ${3:real}, ${4:real}, ${5:name}, ${6:name})"
    },
    {
      "trigger": "GetLongFramesLocation\tAgtRefComponentInstance,String",
      "contents": "GetLongFramesLocation(${1:agtrefcomponentinstance}, ${2:name})"
    },
    {
      "trigger": "GetLongTangentLength\tAECHorizontalClothoid",
      "contents": "GetLongTangentLength(${1:aechorizontalclothoid})"
    },
    {
      "trigger": "GetLongitudeAngle\tManufacturingActivity",
      "contents": "GetLongitudeAngle(${1:manufacturingactivity})"
    },
    {
      "trigger": "GetLoopDuration\tFFS_TransportRouteGroup",
      "contents": "GetLoopDuration(${1:ffs_transportroutegroup})"
    },
    {
      "trigger": "GetMBOMOfEachScope\tProdSystemOccurrence,List,List,List,List",
      "contents": "GetMBOMOfEachScope(${1:prodsystemoccurrence}, ${2:list}, ${3:list}, ${4:list}, ${5:list})"
    },
    {
      "trigger": "GetMBOMOfEachScope\tVPMReference,Boolean,List,List",
      "contents": "GetMBOMOfEachScope(${1:vpmreference}, ${2:bool}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "GetMTO\tAGTDraughtStop,AGTMTO",
      "contents": "GetMTO(${1:agtdraughtstop}, ${2:agtmto})"
    },
    {
      "trigger": "GetMachinableFeature\tManufacturingFeature,MfgMachinableAreaFeature",
      "contents": "GetMachinableFeature(${1:manufacturingfeature}, ${2:mfgmachinableareafeature})"
    },
    {
      "trigger": "GetMachiningAxisSystem\tManufacturingSetup,MfgMachiningAxisSystem",
      "contents": "GetMachiningAxisSystem(${1:manufacturingsetup}, ${2:mfgmachiningaxissystem})"
    },
    {
      "trigger": "GetMachiningDirection\tManufacturingActivity,MfgDirection",
      "contents": "GetMachiningDirection(${1:manufacturingactivity}, ${2:mfgdirection})"
    },
    {
      "trigger": "GetMachiningProcessList\tNCMachiningTemplate,List",
      "contents": "GetMachiningProcessList(${1:ncmachiningtemplate}, ${2:list})"
    },
    {
      "trigger": "GetMacroMotion\tM3xTo5xConverter,String,MfgMacroMotions",
      "contents": "GetMacroMotion(${1:m3xto5xconverter}, ${2:name}, ${3:mfgmacromotions})"
    },
    {
      "trigger": "GetMacroMotion\tMfgMacroMotions,MfgMacroMotion,Integer,Boolean",
      "contents": "GetMacroMotion(${1:mfgmacromotions}, ${2:mfgmacromotion}, ${3:int}, ${4:bool})"
    },
    {
      "trigger": "GetMadeFromRelations\tVPMReference,List",
      "contents": "GetMadeFromRelations(${1:vpmreference}, ${2:list})"
    },
    {
      "trigger": "GetMadeFromTarget\tMustBeMadeFrom,VPMReference",
      "contents": "GetMadeFromTarget(${1:mustbemadefrom}, ${2:vpmreference})"
    },
    {
      "trigger": "GetMainSequence\tDNBResourceTask,RscLogicSequence",
      "contents": "GetMainSequence(${1:dnbresourcetask}, ${2:rsclogicsequence})"
    },
    {
      "trigger": "GetMappedInstance\tConductor,VPMInstance",
      "contents": "GetMappedInstance(${1:conductor}, ${2:vpminstance})"
    },
    {
      "trigger": "GetMarkedObject\tDELStrMfgMarkingLine",
      "contents": "GetMarkedObject(${1:delstrmfgmarkingline})"
    },
    {
      "trigger": "GetMarkingObject\tDELStrMfgMarkingLine",
      "contents": "GetMarkingObject(${1:delstrmfgmarkingline})"
    },
    {
      "trigger": "GetMass\tElec3DProtectionAnnotation,Magnitude",
      "contents": "GetMass(${1:elec3dprotectionannotation}, ${2:mag})"
    },
    {
      "trigger": "GetMass\tRscToolProfile",
      "contents": "GetMass(${1:rsctoolprofile})"
    },
    {
      "trigger": "GetMaterial\tAECSlopeProtection",
      "contents": "GetMaterial(${1:aecslopeprotection})"
    },
    {
      "trigger": "GetMaterial\tAGTConnector,String",
      "contents": "GetMaterial(${1:agtconnector}, ${2:name})"
    },
    {
      "trigger": "GetMaterialCore\tVPMReference,String,CATMatReference,CATMatConnection",
      "contents": "GetMaterialCore(${1:vpmreference}, ${2:name}, ${3:catmatreference}, ${4:catmatconnection})"
    },
    {
      "trigger": "GetMaterialCovering\tVPMReference,String,List,List",
      "contents": "GetMaterialCovering(${1:vpmreference}, ${2:name}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "GetMaterialInfo\tMLPLayerObject,List",
      "contents": "GetMaterialInfo(${1:mlplayerobject}, ${2:list})"
    },
    {
      "trigger": "GetMaterializationLink\tDELFmiFunctionReference,VPMReference,DELFmiProcessOutputPrereqMaterializationCnx",
      "contents": "GetMaterializationLink(${1:delfmifunctionreference}, ${2:vpmreference}, ${3:delfmiprocessoutputprereqmaterializationcnx})"
    },
    {
      "trigger": "GetMaxDiameter\tElec3DSegmentAnnotation,LENGTH",
      "contents": "GetMaxDiameter(${1:elec3dsegmentannotation}, ${2:len})"
    },
    {
      "trigger": "GetMaxDist3dPointsToAveragePlane\tAECRebarLayer,Integer",
      "contents": "GetMaxDist3dPointsToAveragePlane(${1:aecrebarlayer}, ${2:int})"
    },
    {
      "trigger": "GetMaximumAllowableCantDeficiency\tAECAlignment2DHorizontal",
      "contents": "GetMaximumAllowableCantDeficiency(${1:aecalignment2dhorizontal})"
    },
    {
      "trigger": "GetMaximumAllowableCantExcess\tAECAlignment2DHorizontal",
      "contents": "GetMaximumAllowableCantExcess(${1:aecalignment2dhorizontal})"
    },
    {
      "trigger": "GetMaximumSpeed\tAECAlignment2DHorizontal",
      "contents": "GetMaximumSpeed(${1:aecalignment2dhorizontal})"
    },
    {
      "trigger": "GetMeasure\tMfgMeasureFeature,LENGTH",
      "contents": "GetMeasure(${1:mfgmeasurefeature}, ${2:len})"
    },
    {
      "trigger": "GetMember\tStructure_Member,SddMember",
      "contents": "GetMember(${1:structure_member}, ${2:sddmember})"
    },
    {
      "trigger": "GetMergingDistance\tGSMAssemble,LENGTH",
      "contents": "GetMergingDistance(${1:gsmassemble}, ${2:len})"
    },
    {
      "trigger": "GetMetricsOver\tString,List,List,String,String,Real",
      "contents": "GetMetricsOver(${1:name}, ${2:list}, ${3:list}, ${4:name}, ${5:name}, ${6:real})"
    },
    {
      "trigger": "GetMetricsOverTarget\tString,List,List,Real",
      "contents": "GetMetricsOverTarget(${1:name}, ${2:list}, ${3:list}, ${4:real})"
    },
    {
      "trigger": "GetMfgFeatures\tVPMReference,String",
      "contents": "GetMfgFeatures(${1:vpmreference}, ${2:name})"
    },
    {
      "trigger": "GetMfgItemColor\tPLMOperation,MfgProcessOccurrence",
      "contents": "GetMfgItemColor(${1:plmoperation}, ${2:mfgprocessoccurrence})"
    },
    {
      "trigger": "GetMfgItemPosition\tPLMOperation,MfgProcessOccurrence",
      "contents": "GetMfgItemPosition(${1:plmoperation}, ${2:mfgprocessoccurrence})"
    },
    {
      "trigger": "GetMfgItemVisibility\tPLMOperation,MfgProcessOccurrence",
      "contents": "GetMfgItemVisibility(${1:plmoperation}, ${2:mfgprocessoccurrence})"
    },
    {
      "trigger": "GetMfgMachine\tNCMachine,MfgResource",
      "contents": "GetMfgMachine(${1:ncmachine}, ${2:mfgresource})"
    },
    {
      "trigger": "GetMfgRepresentation\tVPMReference",
      "contents": "GetMfgRepresentation(${1:vpmreference})"
    },
    {
      "trigger": "GetMfgResource\tToolDevice,MfgResource",
      "contents": "GetMfgResource(${1:tooldevice}, ${2:mfgresource})"
    },
    {
      "trigger": "GetMfgSimMSRMgr\tProductOccurrence",
      "contents": "GetMfgSimMSRMgr(${1:productoccurrence})"
    },
    {
      "trigger": "GetMinimumBendRadius\tHVAC_Flexible_Duct,LENGTH",
      "contents": "GetMinimumBendRadius(${1:hvac_flexible_duct}, ${2:len})"
    },
    {
      "trigger": "GetMinimumDistance\tDNBTagMeasure,Real",
      "contents": "GetMinimumDistance(${1:dnbtagmeasure}, ${2:real})"
    },
    {
      "trigger": "GetMinimumSpeed\tAECAlignment2DHorizontal",
      "contents": "GetMinimumSpeed(${1:aecalignment2dhorizontal})"
    },
    {
      "trigger": "GetMinimunStraightLength\tHVAC_Rigid_Duct,LENGTH",
      "contents": "GetMinimunStraightLength(${1:hvac_rigid_duct}, ${2:len})"
    },
    {
      "trigger": "GetMissingMetrics\tString,List,List",
      "contents": "GetMissingMetrics(${1:name}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "GetMode\tMfgDirection,String",
      "contents": "GetMode(${1:mfgdirection}, ${2:name})"
    },
    {
      "trigger": "GetMotionActivities\tDNBResourceTask,List",
      "contents": "GetMotionActivities(${1:dnbresourcetask}, ${2:list})"
    },
    {
      "trigger": "GetMotionBasis\tRscMotionProfile",
      "contents": "GetMotionBasis(${1:rscmotionprofile})"
    },
    {
      "trigger": "GetMotionGroups\tDNBResourceTask,List",
      "contents": "GetMotionGroups(${1:dnbresourcetask}, ${2:list})"
    },
    {
      "trigger": "GetMotionLineDirection\tMfgMacroElementaryMotion,MfgDirection",
      "contents": "GetMotionLineDirection(${1:mfgmacroelementarymotion}, ${2:mfgdirection})"
    },
    {
      "trigger": "GetMotionProfile\tDNBRobotMotion,Feature",
      "contents": "GetMotionProfile(${1:dnbrobotmotion}, ${2:feat})"
    },
    {
      "trigger": "GetMotionTimeValue\tRscMotionProfile",
      "contents": "GetMotionTimeValue(${1:rscmotionprofile})"
    },
    {
      "trigger": "GetMotionType\tDNBRobotMotion,Integer",
      "contents": "GetMotionType(${1:dnbrobotmotion}, ${2:int})"
    },
    {
      "trigger": "GetMountControlEquipments\tRscMountsMgr",
      "contents": "GetMountControlEquipments(${1:rscmountsmgr})"
    },
    {
      "trigger": "GetMountPart\tRscMountsMgr",
      "contents": "GetMountPart(${1:rscmountsmgr})"
    },
    {
      "trigger": "GetMountableResources\tProductOccurrence,String,List",
      "contents": "GetMountableResources(${1:productoccurrence}, ${2:name}, ${3:list})"
    },
    {
      "trigger": "GetMountedResources\tRscMountsMgr,RscMountsType",
      "contents": "GetMountedResources(${1:rscmountsmgr}, ${2:rscmountstype})"
    },
    {
      "trigger": "GetMoveAccelerationProfile\tDNBSpotProfile,DNBSpotAccuracyProfileAndAccelMoves",
      "contents": "GetMoveAccelerationProfile(${1:dnbspotprofile}, ${2:dnbspotaccuracyprofileandaccelmoves})"
    },
    {
      "trigger": "GetMoveAccelerationProfileName\tDNBSpotProfile,DNBSpotAccuracyProfileAndAccelMoves",
      "contents": "GetMoveAccelerationProfileName(${1:dnbspotprofile}, ${2:dnbspotaccuracyprofileandaccelmoves})"
    },
    {
      "trigger": "GetMovingObjects\tDNBFitTrack",
      "contents": "GetMovingObjects(${1:dnbfittrack})"
    },
    {
      "trigger": "GetMovingTipClearance\tDNBSpotProfile,Integer,DNBSpotMovingTipClearanceMoves",
      "contents": "GetMovingTipClearance(${1:dnbspotprofile}, ${2:int}, ${3:dnbspotmovingtipclearancemoves})"
    },
    {
      "trigger": "GetMovingTipClearanceProfile\tDNBSpotProfile,Integer,DNBSpotMovingTipClearanceMoves",
      "contents": "GetMovingTipClearanceProfile(${1:dnbspotprofile}, ${2:int}, ${3:dnbspotmovingtipclearancemoves})"
    },
    {
      "trigger": "GetMovingTipClearanceProfileName\tDNBSpotProfile,Integer,DNBSpotMovingTipClearanceMoves",
      "contents": "GetMovingTipClearanceProfileName(${1:dnbspotprofile}, ${2:int}, ${3:dnbspotmovingtipclearancemoves})"
    },
    {
      "trigger": "GetNCMachineInstance\tManufacturingActivity,VPMRepReference,NCMachineInstance",
      "contents": "GetNCMachineInstance(${1:manufacturingactivity}, ${2:vpmrepreference}, ${3:ncmachineinstance})"
    },
    {
      "trigger": "GetNCOutputParameters\tMfgMachiningAxisSystem,Boolean,Integer,Integer",
      "contents": "GetNCOutputParameters(${1:mfgmachiningaxissystem}, ${2:bool}, ${3:int}, ${4:int})"
    },
    {
      "trigger": "GetName\tAGTConnector,String",
      "contents": "GetName(${1:agtconnector}, ${2:name})"
    },
    {
      "trigger": "GetName\tDNBTag,String,String,String",
      "contents": "GetName(${1:dnbtag}, ${2:name}, ${3:name}, ${4:name})"
    },
    {
      "trigger": "GetNavRepForDocument\tString",
      "contents": "GetNavRepForDocument(${1:name})"
    },
    {
      "trigger": "GetNavRepForSimulationDocument\tString",
      "contents": "GetNavRepForSimulationDocument(${1:name})"
    },
    {
      "trigger": "GetNbGeometries\tMRX,Integer",
      "contents": "GetNbGeometries(${1:mrx}, ${2:int})"
    },
    {
      "trigger": "GetNbInterference\tSIMItfSimulation,Integer",
      "contents": "GetNbInterference(${1:simitfsimulation}, ${2:int})"
    },
    {
      "trigger": "GetNbLanesAtStationing\tAECAlignment3D,String",
      "contents": "GetNbLanesAtStationing(${1:aecalignment3d}, ${2:name})"
    },
    {
      "trigger": "GetNbObjects\tDEL3DState",
      "contents": "GetNbObjects(${1:del3dstate})"
    },
    {
      "trigger": "GetNbOfLimits\tSldPanel,Integer",
      "contents": "GetNbOfLimits(${1:sldpanel}, ${2:int})"
    },
    {
      "trigger": "GetNbOfOldModels\tComponentFamilyItem",
      "contents": "GetNbOfOldModels(${1:componentfamilyitem})"
    },
    {
      "trigger": "GetNbrOfGeometricalComponent\tCATTPSAllAnnotations",
      "contents": "GetNbrOfGeometricalComponent(${1:cattpsallannotations})"
    },
    {
      "trigger": "GetNearSubElements\tGeometricFeature,Integer,GeometricFeature",
      "contents": "GetNearSubElements(${1:geometricfeature}, ${2:int}, ${3:geometricfeature})"
    },
    {
      "trigger": "GetNetGroupExtremity\tLogicalOccurrence,LogicalOccurrence,String,RFLVPMLogicalPort",
      "contents": "GetNetGroupExtremity(${1:logicaloccurrence}, ${2:logicaloccurrence}, ${3:name}, ${4:rflvpmlogicalport})"
    },
    {
      "trigger": "GetNetGroupExtremityFromPins\tList,List,LogicalOccurrence,String,RFLVPMLogicalPort",
      "contents": "GetNetGroupExtremityFromPins(${1:list}, ${2:list}, ${3:logicaloccurrence}, ${4:name}, ${5:rflvpmlogicalport})"
    },
    {
      "trigger": "GetNextArc\tAECHorizontalArc",
      "contents": "GetNextArc(${1:aechorizontalarc})"
    },
    {
      "trigger": "GetNode\tSegmentExtremity,Elec3DNetworkNode",
      "contents": "GetNode(${1:segmentextremity}, ${2:elec3dnetworknode})"
    },
    {
      "trigger": "GetNodeBendRadius\tHVAC_Rigid_Duct,Integer,LENGTH",
      "contents": "GetNodeBendRadius(${1:hvac_rigid_duct}, ${2:int}, ${3:len})"
    },
    {
      "trigger": "GetNodeDeviceRouteElement\tElec3DDeviceRouteElement,Elec3DNetworkNode",
      "contents": "GetNodeDeviceRouteElement(${1:elec3ddevicerouteelement}, ${2:elec3dnetworknode})"
    },
    {
      "trigger": "GetNodeFrom3DPointRouteElement\tElec3DPointRouteElement,Feature",
      "contents": "GetNodeFrom3DPointRouteElement(${1:elec3dpointrouteelement}, ${2:feat})"
    },
    {
      "trigger": "GetNodeType\tHVAC_Flexible_Duct,Integer,HvacNodeType",
      "contents": "GetNodeType(${1:hvac_flexible_duct}, ${2:int}, ${3:hvacnodetype})"
    },
    {
      "trigger": "GetNodes\tElec3DNetworkArc,Elec3DNetworkNode,Elec3DNetworkNode",
      "contents": "GetNodes(${1:elec3dnetworkarc}, ${2:elec3dnetworknode}, ${3:elec3dnetworknode})"
    },
    {
      "trigger": "GetNominalPower\tLogicalOccurrence,Real",
      "contents": "GetNominalPower(${1:logicaloccurrence}, ${2:real})"
    },
    {
      "trigger": "GetNominalValue\tFTARequirementModel,List",
      "contents": "GetNominalValue(${1:ftarequirementmodel}, ${2:list})"
    },
    {
      "trigger": "GetNormalSlope\tAECAlignment2DHorizontal",
      "contents": "GetNormalSlope(${1:aecalignment2dhorizontal})"
    },
    {
      "trigger": "GetNumberLayer\tElec3DProtectionAnnotation,Integer",
      "contents": "GetNumberLayer(${1:elec3dprotectionannotation}, ${2:int})"
    },
    {
      "trigger": "GetNumberOfAxialPlanes\tMfgSequentialAxialOperation,Integer",
      "contents": "GetNumberOfAxialPlanes(${1:mfgsequentialaxialoperation}, ${2:int})"
    },
    {
      "trigger": "GetNumberOfBars\tAECRebarLayer",
      "contents": "GetNumberOfBars(${1:aecrebarlayer})"
    },
    {
      "trigger": "GetNumberOfElementaryMotions\tMfgMacroMotion",
      "contents": "GetNumberOfElementaryMotions(${1:mfgmacromotion})"
    },
    {
      "trigger": "GetNumberOfFireBridges\tAGTInsulation,Integer",
      "contents": "GetNumberOfFireBridges(${1:agtinsulation}, ${2:int})"
    },
    {
      "trigger": "GetNumberOfGroupObjects\tSIMItfSimulation,Integer",
      "contents": "GetNumberOfGroupObjects(${1:simitfsimulation}, ${2:int})"
    },
    {
      "trigger": "GetNumberOfInputs\tSldAdvConnection,Integer",
      "contents": "GetNumberOfInputs(${1:sldadvconnection}, ${2:int})"
    },
    {
      "trigger": "GetNumberOfInstances\tSddOpening,Feature",
      "contents": "GetNumberOfInstances(${1:sddopening}, ${2:feat})"
    },
    {
      "trigger": "GetNumberOfLanes\tAECAlignmentPoint",
      "contents": "GetNumberOfLanes(${1:aecalignmentpoint})"
    },
    {
      "trigger": "GetNumberOfLimits\tAGTDraughtStop,Integer",
      "contents": "GetNumberOfLimits(${1:agtdraughtstop}, ${2:int})"
    },
    {
      "trigger": "GetNumberOfOtherThicknessFaces\tFeature",
      "contents": "GetNumberOfOtherThicknessFaces(${1:feat})"
    },
    {
      "trigger": "GetNumberOfTimeAnalysisLines\tDELTimeAnalysisRepInstance,Integer",
      "contents": "GetNumberOfTimeAnalysisLines(${1:deltimeanalysisrepinstance}, ${2:int})"
    },
    {
      "trigger": "GetNumerOfChildrenFromSolid\tFeature",
      "contents": "GetNumerOfChildrenFromSolid(${1:feat})"
    },
    {
      "trigger": "GetNumerOfObjectsToFillet\tFeature",
      "contents": "GetNumerOfObjectsToFillet(${1:feat})"
    },
    {
      "trigger": "GetOAT\tRscTransform",
      "contents": "GetOAT(${1:rsctransform})"
    },
    {
      "trigger": "GetObject\tDEL3DState,ProductOccurrence",
      "contents": "GetObject(${1:del3dstate}, ${2:productoccurrence})"
    },
    {
      "trigger": "GetObjectProfile\tDNBRobotMotion,Feature",
      "contents": "GetObjectProfile(${1:dnbrobotmotion}, ${2:feat})"
    },
    {
      "trigger": "GetObjects\tDEL3DState",
      "contents": "GetObjects(${1:del3dstate})"
    },
    {
      "trigger": "GetObsoleteGeomElementStatus\tFeature",
      "contents": "GetObsoleteGeomElementStatus(${1:feat})"
    },
    {
      "trigger": "GetOccurrences\tPLMInterferenceGroup,List",
      "contents": "GetOccurrences(${1:plminterferencegroup}, ${2:list})"
    },
    {
      "trigger": "GetOccurrences\tSIMItfContextOfInterference,List,List",
      "contents": "GetOccurrences(${1:simitfcontextofinterference}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "GetOffset\tAECAlignmentPoint",
      "contents": "GetOffset(${1:aecalignmentpoint})"
    },
    {
      "trigger": "GetOffset\tAGTConnector,AGTProfileExtremity,LENGTH",
      "contents": "GetOffset(${1:agtconnector}, ${2:agtprofileextremity}, ${3:len})"
    },
    {
      "trigger": "GetOffsetMode\tSldPlate,Integer",
      "contents": "GetOffsetMode(${1:sldplate}, ${2:int})"
    },
    {
      "trigger": "GetOffsetOfCircularCurveFromTangent\tAECHorizontalClothoid",
      "contents": "GetOffsetOfCircularCurveFromTangent(${1:aechorizontalclothoid})"
    },
    {
      "trigger": "GetOffsetPort\tHVAC_Port,PLMPort",
      "contents": "GetOffsetPort(${1:hvac_port}, ${2:plmport})"
    },
    {
      "trigger": "GetOffsetTargetMode\tRscObjFrameProfile",
      "contents": "GetOffsetTargetMode(${1:rscobjframeprofile})"
    },
    {
      "trigger": "GetOldModels\tComponentFamilyItem",
      "contents": "GetOldModels(${1:componentfamilyitem})"
    },
    {
      "trigger": "GetOlpPositionComment\tDNBRobotMotion,String",
      "contents": "GetOlpPositionComment(${1:dnbrobotmotion}, ${2:name})"
    },
    {
      "trigger": "GetOlpPositionName\tDNBRobotMotion,String",
      "contents": "GetOlpPositionName(${1:dnbrobotmotion}, ${2:name})"
    },
    {
      "trigger": "GetOlpPositionNumber\tDNBRobotMotion,String",
      "contents": "GetOlpPositionNumber(${1:dnbrobotmotion}, ${2:name})"
    },
    {
      "trigger": "GetOlpPositionType\tDNBRobotMotion,String",
      "contents": "GetOlpPositionType(${1:dnbrobotmotion}, ${2:name})"
    },
    {
      "trigger": "GetOpacity\tHVAC_Flexible_Duct,Integer",
      "contents": "GetOpacity(${1:hvac_flexible_duct}, ${2:int})"
    },
    {
      "trigger": "GetOpening\tSddStiffenerOnFreeEdge,Feature",
      "contents": "GetOpening(${1:sddstiffeneronfreeedge}, ${2:feat})"
    },
    {
      "trigger": "GetOpeningAngle\tSddOpening,Feature",
      "contents": "GetOpeningAngle(${1:sddopening}, ${2:feat})"
    },
    {
      "trigger": "GetOpeningAxisSystem\tSddOpening,Feature",
      "contents": "GetOpeningAxisSystem(${1:sddopening}, ${2:feat})"
    },
    {
      "trigger": "GetOpeningAxisSystem\tSldOpening,Feature,Feature,Feature",
      "contents": "GetOpeningAxisSystem(${1:sldopening}, ${2:feat}, ${3:feat}, ${4:feat})"
    },
    {
      "trigger": "GetOpeningDirection\tSddOpening,Feature",
      "contents": "GetOpeningDirection(${1:sddopening}, ${2:feat})"
    },
    {
      "trigger": "GetOpeningParameters\tDELStrMfgOpeningPreparation,List,List",
      "contents": "GetOpeningParameters(${1:delstrmfgopeningpreparation}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "GetOpenings\tSddPanel,List,Integer",
      "contents": "GetOpenings(${1:sddpanel}, ${2:list}, ${3:int})"
    },
    {
      "trigger": "GetOperatedFunction\tSddEndcut,Feature",
      "contents": "GetOperatedFunction(${1:sddendcut}, ${2:feat})"
    },
    {
      "trigger": "GetOperatedFunctionOfSlot\tSddOpening,Feature",
      "contents": "GetOperatedFunctionOfSlot(${1:sddopening}, ${2:feat})"
    },
    {
      "trigger": "GetOperatedObject\tSddOpening,Feature",
      "contents": "GetOperatedObject(${1:sddopening}, ${2:feat})"
    },
    {
      "trigger": "GetOperatedPlate\tSddFlange,Feature",
      "contents": "GetOperatedPlate(${1:sddflange}, ${2:feat})"
    },
    {
      "trigger": "GetOperationSlidesImages\tPLMOperation,String",
      "contents": "GetOperationSlidesImages(${1:plmoperation}, ${2:name})"
    },
    {
      "trigger": "GetOperationsFromCapableRscWithNavigate\tPLMResource",
      "contents": "GetOperationsFromCapableRscWithNavigate(${1:plmresource})"
    },
    {
      "trigger": "GetOptimizationPathJointLocation\tRscOptimizationPathTarget",
      "contents": "GetOptimizationPathJointLocation(${1:rscoptimizationpathtarget})"
    },
    {
      "trigger": "GetOptimizationPathTargetConfig\tRscOptimizationPathTarget",
      "contents": "GetOptimizationPathTargetConfig(${1:rscoptimizationpathtarget})"
    },
    {
      "trigger": "GetOptimizationPathTargetDOFTurns\tRscOptimizationPathTarget",
      "contents": "GetOptimizationPathTargetDOFTurns(${1:rscoptimizationpathtarget})"
    },
    {
      "trigger": "GetOptimizationPathTargetIndex\tRscOptimizationPath,RscOptimizationPathTarget",
      "contents": "GetOptimizationPathTargetIndex(${1:rscoptimizationpath}, ${2:rscoptimizationpathtarget})"
    },
    {
      "trigger": "GetOptimizationPathTargetLocation\tRscOptimizationPathTarget,Integer",
      "contents": "GetOptimizationPathTargetLocation(${1:rscoptimizationpathtarget}, ${2:int})"
    },
    {
      "trigger": "GetOptimizationPathTargetObject\tRscOptimizationPath,Integer",
      "contents": "GetOptimizationPathTargetObject(${1:rscoptimizationpath}, ${2:int})"
    },
    {
      "trigger": "GetOptimizationPathTargetTravelDistance\tRscOptimizationPath",
      "contents": "GetOptimizationPathTargetTravelDistance(${1:rscoptimizationpath})"
    },
    {
      "trigger": "GetOptimizationPathTargetTurns\tRscOptimizationPathTarget,Integer,Integer",
      "contents": "GetOptimizationPathTargetTurns(${1:rscoptimizationpathtarget}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "GetOptimizationPathTargetType\tRscOptimizationPathTarget",
      "contents": "GetOptimizationPathTargetType(${1:rscoptimizationpathtarget})"
    },
    {
      "trigger": "GetOrgResourceFromProcess\tPLMCoreReference,PLMResource,Boolean,String,String",
      "contents": "GetOrgResourceFromProcess(${1:plmcorereference}, ${2:plmresource}, ${3:bool}, ${4:name}, ${5:name})"
    },
    {
      "trigger": "GetOrientation\tSldSketchBasedPlate,Integer,Integer",
      "contents": "GetOrientation(${1:sldsketchbasedplate}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "GetOrientationOffset\tSddPanel,Feature",
      "contents": "GetOrientationOffset(${1:sddpanel}, ${2:feat})"
    },
    {
      "trigger": "GetOrigin\tMfgMachiningAxisSystem,Real,Real,Real",
      "contents": "GetOrigin(${1:mfgmachiningaxissystem}, ${2:real}, ${3:real}, ${4:real})"
    },
    {
      "trigger": "GetOriginalReferencesFrom\tDELFmiFunctionReference,Integer",
      "contents": "GetOriginalReferencesFrom(${1:delfmifunctionreference}, ${2:int})"
    },
    {
      "trigger": "GetOriginalReferencesFrom\tPLMCoreReference",
      "contents": "GetOriginalReferencesFrom(${1:plmcorereference})"
    },
    {
      "trigger": "GetOtherRepresentations\tToolDevice,List",
      "contents": "GetOtherRepresentations(${1:tooldevice}, ${2:list})"
    },
    {
      "trigger": "GetOtherSupportPlates\tSddStiffener,List",
      "contents": "GetOtherSupportPlates(${1:sddstiffener}, ${2:list})"
    },
    {
      "trigger": "GetOutProductZone\tFFS_TransferActivity",
      "contents": "GetOutProductZone(${1:ffs_transferactivity})"
    },
    {
      "trigger": "GetOutTangentEntryToPreviousPILength\tAECHorizontalArc",
      "contents": "GetOutTangentEntryToPreviousPILength(${1:aechorizontalarc})"
    },
    {
      "trigger": "GetOutZoneByName\tString",
      "contents": "GetOutZoneByName(${1:name})"
    },
    {
      "trigger": "GetOutputExternalProductOnly\tFFS_Activity,FFS_Item",
      "contents": "GetOutputExternalProductOnly(${1:ffs_activity}, ${2:ffs_item})"
    },
    {
      "trigger": "GetOutputProductQuantity\tFFS_Activity,FFS_Item",
      "contents": "GetOutputProductQuantity(${1:ffs_activity}, ${2:ffs_item})"
    },
    {
      "trigger": "GetOutputProductZone\tFFS_GenericActivity,FFS_Item",
      "contents": "GetOutputProductZone(${1:ffs_genericactivity}, ${2:ffs_item})"
    },
    {
      "trigger": "GetOutputProfile\tSddOpening,Feature",
      "contents": "GetOutputProfile(${1:sddopening}, ${2:feat})"
    },
    {
      "trigger": "GetOutputProfile\tSldOpening,Feature,Feature,Feature",
      "contents": "GetOutputProfile(${1:sldopening}, ${2:feat}, ${3:feat}, ${4:feat})"
    },
    {
      "trigger": "GetOutputs\tSldAdvConnection,List",
      "contents": "GetOutputs(${1:sldadvconnection}, ${2:list})"
    },
    {
      "trigger": "GetOutsideDiameter\tElecCableRawMaterialCore,LENGTH",
      "contents": "GetOutsideDiameter(${1:eleccablerawmaterialcore}, ${2:len})"
    },
    {
      "trigger": "GetOverlappingLength\tElec3DProtectionAnnotation,LENGTH",
      "contents": "GetOverlappingLength(${1:elec3dprotectionannotation}, ${2:len})"
    },
    {
      "trigger": "GetOwnedResourceOccurrence\tFFS_Resource",
      "contents": "GetOwnedResourceOccurrence(${1:ffs_resource})"
    },
    {
      "trigger": "GetOwner\tDNBTagGroup,ProductOccurrence",
      "contents": "GetOwner(${1:dnbtaggroup}, ${2:productoccurrence})"
    },
    {
      "trigger": "GetOwningSlab\tAGTRampBody,Feature",
      "contents": "GetOwningSlab(${1:agtrampbody}, ${2:feat})"
    },
    {
      "trigger": "GetOwningStory\tAGTDraughtStop,Feature",
      "contents": "GetOwningStory(${1:agtdraughtstop}, ${2:feat})"
    },
    {
      "trigger": "GetPIPoints\tAECHorizontalArc",
      "contents": "GetPIPoints(${1:aechorizontalarc})"
    },
    {
      "trigger": "GetPIStationing\tAECHorizontalArc,String,Boolean,Integer",
      "contents": "GetPIStationing(${1:aechorizontalarc}, ${2:name}, ${3:bool}, ${4:int})"
    },
    {
      "trigger": "GetPIStationing\tAECHorizontalArc,String,Integer,Boolean,Integer",
      "contents": "GetPIStationing(${1:aechorizontalarc}, ${2:name}, ${3:int}, ${4:bool}, ${5:int})"
    },
    {
      "trigger": "GetPLMAttribute\tFastenerComponent,String,String",
      "contents": "GetPLMAttribute(${1:fastenercomponent}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "GetPLMOwner\tObjectType",
      "contents": "GetPLMOwner(${1:objecttype})"
    },
    {
      "trigger": "GetPLMParameters\tDatabaseObjectType",
      "contents": "GetPLMParameters(${1:databaseobjecttype})"
    },
    {
      "trigger": "GetPRMSOLASMaterial\tAGTInsulation,List",
      "contents": "GetPRMSOLASMaterial(${1:agtinsulation}, ${2:list})"
    },
    {
      "trigger": "GetPanel\tStructure_Panel,SddPanel",
      "contents": "GetPanel(${1:structure_panel}, ${2:sddpanel})"
    },
    {
      "trigger": "GetPanelLimitType\tSddPanel,Integer,Integer",
      "contents": "GetPanelLimitType(${1:sddpanel}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "GetParameter\tSddEndcut,String,Feature",
      "contents": "GetParameter(${1:sddendcut}, ${2:name}, ${3:feat})"
    },
    {
      "trigger": "GetParameters\tDELStrMfgEndCut,List,List",
      "contents": "GetParameters(${1:delstrmfgendcut}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "GetParametersConcreteName\tAECRebarLayer",
      "contents": "GetParametersConcreteName(${1:aecrebarlayer})"
    },
    {
      "trigger": "GetParametricSection\tSddProfile,String,String,String",
      "contents": "GetParametricSection(${1:sddprofile}, ${2:name}, ${3:name}, ${4:name})"
    },
    {
      "trigger": "GetParentEPS\tElecRoute,Electrical3DSystem",
      "contents": "GetParentEPS(${1:elecroute}, ${2:electrical3dsystem})"
    },
    {
      "trigger": "GetParentQCC\tFeature,Boolean",
      "contents": "GetParentQCC(${1:feat}, ${2:bool})"
    },
    {
      "trigger": "GetParkingGroupByName\tString",
      "contents": "GetParkingGroupByName(${1:name})"
    },
    {
      "trigger": "GetParkingGroups\tProductOccurrence",
      "contents": "GetParkingGroups(${1:productoccurrence})"
    },
    {
      "trigger": "GetParkingZone\tFFS_TransportRouteGroup",
      "contents": "GetParkingZone(${1:ffs_transportroutegroup})"
    },
    {
      "trigger": "GetPartFeature\tFeature",
      "contents": "GetPartFeature(${1:feat})"
    },
    {
      "trigger": "GetPartOperation\tManufacturingActivity,ManufacturingActivity",
      "contents": "GetPartOperation(${1:manufacturingactivity}, ${2:manufacturingactivity})"
    },
    {
      "trigger": "GetPartRelativePositions\tDNBFitTrack",
      "contents": "GetPartRelativePositions(${1:dnbfittrack})"
    },
    {
      "trigger": "GetPartThicknessProfile\tDNBSpotProfile",
      "contents": "GetPartThicknessProfile(${1:dnbspotprofile})"
    },
    {
      "trigger": "GetPartThicknessProfileName\tDNBSpotProfile",
      "contents": "GetPartThicknessProfileName(${1:dnbspotprofile})"
    },
    {
      "trigger": "GetPartsToDisassemble\tMfgProcessOccurrence,PLMCoreReference",
      "contents": "GetPartsToDisassemble(${1:mfgprocessoccurrence}, ${2:plmcorereference})"
    },
    {
      "trigger": "GetPassingSightDistanceRatio\tAECAlignment2DVertical,LENGTH",
      "contents": "GetPassingSightDistanceRatio(${1:aecalignment2dvertical}, ${2:len})"
    },
    {
      "trigger": "GetPath\tBranch,Elec3DNetworkPath",
      "contents": "GetPath(${1:branch}, ${2:elec3dnetworkpath})"
    },
    {
      "trigger": "GetPath\tConductor,List,Elec3DConductorEnd,Elec3DConductorEnd",
      "contents": "GetPath(${1:conductor}, ${2:list}, ${3:elec3dconductorend}, ${4:elec3dconductorend})"
    },
    {
      "trigger": "GetPathBetweenNodes\tElec3DNetworkPath,Elec3DNetworkPath,Elec3DNetworkNode,Elec3DNetworkNode",
      "contents": "GetPathBetweenNodes(${1:elec3dnetworkpath}, ${2:elec3dnetworkpath}, ${3:elec3dnetworknode}, ${4:elec3dnetworknode})"
    },
    {
      "trigger": "GetPathOfAllParents\tDELStrMfgAttachmentLine,String",
      "contents": "GetPathOfAllParents(${1:delstrmfgattachmentline}, ${2:name})"
    },
    {
      "trigger": "GetPathOfParents\tDELStrMfgAttachmentLine,String,Integer,Integer",
      "contents": "GetPathOfParents(${1:delstrmfgattachmentline}, ${2:name}, ${3:int}, ${4:int})"
    },
    {
      "trigger": "GetPathOfStackParts\tFastenerStacking,List",
      "contents": "GetPathOfStackParts(${1:fastenerstacking}, ${2:list})"
    },
    {
      "trigger": "GetPathPlannerAccuracyProfile\tRscPathPlanner",
      "contents": "GetPathPlannerAccuracyProfile(${1:rscpathplanner})"
    },
    {
      "trigger": "GetPathPlannerDOFCautionZoneCheck\tRscPathPlanner",
      "contents": "GetPathPlannerDOFCautionZoneCheck(${1:rscpathplanner})"
    },
    {
      "trigger": "GetPathPlannerDOFCautionZoneValue\tRscPathPlanner,Integer",
      "contents": "GetPathPlannerDOFCautionZoneValue(${1:rscpathplanner}, ${2:int})"
    },
    {
      "trigger": "GetPathPlannerDOFLimitsTypeCheck\tRscPathPlanner",
      "contents": "GetPathPlannerDOFLimitsTypeCheck(${1:rscpathplanner})"
    },
    {
      "trigger": "GetPathPlannerDOFLimitsValues\tRscPathPlanner,Integer,Integer,Real,Real",
      "contents": "GetPathPlannerDOFLimitsValues(${1:rscpathplanner}, ${2:int}, ${3:int}, ${4:real}, ${5:real})"
    },
    {
      "trigger": "GetPathPlannerDOFOptimizationActivation\tRscPathPlanner,String",
      "contents": "GetPathPlannerDOFOptimizationActivation(${1:rscpathplanner}, ${2:name})"
    },
    {
      "trigger": "GetPathPlannerDynamicRotationLimits\tRscPathPlanner",
      "contents": "GetPathPlannerDynamicRotationLimits(${1:rscpathplanner})"
    },
    {
      "trigger": "GetPathPlannerGlobalClearance\tRscPathPlanner",
      "contents": "GetPathPlannerGlobalClearance(${1:rscpathplanner})"
    },
    {
      "trigger": "GetPathPlannerGuidingPathRadius\tRscPathPlanner",
      "contents": "GetPathPlannerGuidingPathRadius(${1:rscpathplanner})"
    },
    {
      "trigger": "GetPathPlannerGuidingPathUsage\tRscPathPlanner",
      "contents": "GetPathPlannerGuidingPathUsage(${1:rscpathplanner})"
    },
    {
      "trigger": "GetPathPlannerJointInterpolationMode\tRscPathPlanner",
      "contents": "GetPathPlannerJointInterpolationMode(${1:rscpathplanner})"
    },
    {
      "trigger": "GetPathPlannerMotionProfile\tRscPathPlanner",
      "contents": "GetPathPlannerMotionProfile(${1:rscpathplanner})"
    },
    {
      "trigger": "GetPathPlannerMotionType\tRscPathPlanner",
      "contents": "GetPathPlannerMotionType(${1:rscpathplanner})"
    },
    {
      "trigger": "GetPathPlannerMovingObjects\tRscPathPlanner",
      "contents": "GetPathPlannerMovingObjects(${1:rscpathplanner})"
    },
    {
      "trigger": "GetPathPlannerMovingObjectsCount\tRscPathPlanner",
      "contents": "GetPathPlannerMovingObjectsCount(${1:rscpathplanner})"
    },
    {
      "trigger": "GetPathPlannerObstacles\tRscPathPlanner",
      "contents": "GetPathPlannerObstacles(${1:rscpathplanner})"
    },
    {
      "trigger": "GetPathPlannerObstaclesCount\tRscPathPlanner",
      "contents": "GetPathPlannerObstaclesCount(${1:rscpathplanner})"
    },
    {
      "trigger": "GetPathPlannerOptimizedPath\tRscPathPlanner,Integer",
      "contents": "GetPathPlannerOptimizedPath(${1:rscpathplanner}, ${2:int})"
    },
    {
      "trigger": "GetPathPlannerReferenceTask\tRscPathPlanner",
      "contents": "GetPathPlannerReferenceTask(${1:rscpathplanner})"
    },
    {
      "trigger": "GetPathPlannerRscMultiClearance\tRscPathPlanner",
      "contents": "GetPathPlannerRscMultiClearance(${1:rscpathplanner})"
    },
    {
      "trigger": "GetPathPlannerSafetyZoneUsage\tRscPathPlanner",
      "contents": "GetPathPlannerSafetyZoneUsage(${1:rscpathplanner})"
    },
    {
      "trigger": "GetPathPlannerSearchOptionPositionRange\tRscPathPlanner",
      "contents": "GetPathPlannerSearchOptionPositionRange(${1:rscpathplanner})"
    },
    {
      "trigger": "GetPathPlannerSearchOptionRotationRange\tRscPathPlanner",
      "contents": "GetPathPlannerSearchOptionRotationRange(${1:rscpathplanner})"
    },
    {
      "trigger": "GetPathPlannerSolutionOptimizationOptionActivation\tRscPathPlanner,String",
      "contents": "GetPathPlannerSolutionOptimizationOptionActivation(${1:rscpathplanner}, ${2:name})"
    },
    {
      "trigger": "GetPathPlannerSolutionOptimizationOptionValue\tRscPathPlanner,String",
      "contents": "GetPathPlannerSolutionOptimizationOptionValue(${1:rscpathplanner}, ${2:name})"
    },
    {
      "trigger": "GetPathPlannerSolverMaxSolutions\tRscPathPlanner",
      "contents": "GetPathPlannerSolverMaxSolutions(${1:rscpathplanner})"
    },
    {
      "trigger": "GetPathPlannerSolverSamplingDistance\tRscPathPlanner",
      "contents": "GetPathPlannerSolverSamplingDistance(${1:rscpathplanner})"
    },
    {
      "trigger": "GetPathPlannerSolverSegmentTimeOut\tRscPathPlanner",
      "contents": "GetPathPlannerSolverSegmentTimeOut(${1:rscpathplanner})"
    },
    {
      "trigger": "GetPathPlannerViaPointPrefix\tRscPathPlanner",
      "contents": "GetPathPlannerViaPointPrefix(${1:rscpathplanner})"
    },
    {
      "trigger": "GetPathPlannerViaPointType\tRscPathPlanner",
      "contents": "GetPathPlannerViaPointType(${1:rscpathplanner})"
    },
    {
      "trigger": "GetPathwaySpec\tSIMItfSimulation,Boolean",
      "contents": "GetPathwaySpec(${1:simitfsimulation}, ${2:bool})"
    },
    {
      "trigger": "GetPatternDistribution\tAECRebarLayer",
      "contents": "GetPatternDistribution(${1:aecrebarlayer})"
    },
    {
      "trigger": "GetPatternUsage\tManufacturingActivity,MfgPatternUsage",
      "contents": "GetPatternUsage(${1:manufacturingactivity}, ${2:mfgpatternusage})"
    },
    {
      "trigger": "GetPcsPrototypeParamValue\tMfgProcessOccurrence,String,Real",
      "contents": "GetPcsPrototypeParamValue(${1:mfgprocessoccurrence}, ${2:name}, ${3:real})"
    },
    {
      "trigger": "GetPenetratingCompositeProfile\tSddOpening,Feature,Feature",
      "contents": "GetPenetratingCompositeProfile(${1:sddopening}, ${2:feat}, ${3:feat})"
    },
    {
      "trigger": "GetPenetratingCompositeProfile\tSldSlot,Feature,Feature,Feature,Feature,Feature",
      "contents": "GetPenetratingCompositeProfile(${1:sldslot}, ${2:feat}, ${3:feat}, ${4:feat}, ${5:feat}, ${6:feat})"
    },
    {
      "trigger": "GetPenetratingObject\tSddOpening,Feature",
      "contents": "GetPenetratingObject(${1:sddopening}, ${2:feat})"
    },
    {
      "trigger": "GetPenetratingProfile\tSddOpening,Feature",
      "contents": "GetPenetratingProfile(${1:sddopening}, ${2:feat})"
    },
    {
      "trigger": "GetPenetratingProfile\tSldSlot,Feature,Feature,Feature",
      "contents": "GetPenetratingProfile(${1:sldslot}, ${2:feat}, ${3:feat}, ${4:feat})"
    },
    {
      "trigger": "GetPhysicalFTAFeatures\tFTARequirementModel,Requirement Specification,List,List",
      "contents": "GetPhysicalFTAFeatures(${1:ftarequirementmodel}, ${2:requirement specification}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "GetPhysicalId\tDatabaseObjectType",
      "contents": "GetPhysicalId(${1:databaseobjecttype})"
    },
    {
      "trigger": "GetPhysicalRoutable\tEleLogicalConductorOcc,Feature",
      "contents": "GetPhysicalRoutable(${1:elelogicalconductorocc}, ${2:feat})"
    },
    {
      "trigger": "GetPhysicalRoutedLength\tLogicalOccurrence,LENGTH",
      "contents": "GetPhysicalRoutedLength(${1:logicaloccurrence}, ${2:len})"
    },
    {
      "trigger": "GetPhysicalRoutingAttributes\tRFLVPMLogicalConnection,String,Real,Real,String,String",
      "contents": "GetPhysicalRoutingAttributes(${1:rflvpmlogicalconnection}, ${2:name}, ${3:real}, ${4:real}, ${5:name}, ${6:name})"
    },
    {
      "trigger": "GetPipingLogicalEnd\tLogicalOccurrence,RFLVPMLogicalPort,LogicalOccurrence,RFLVPMLogicalPort",
      "contents": "GetPipingLogicalEnd(${1:logicaloccurrence}, ${2:rflvpmlogicalport}, ${3:logicaloccurrence}, ${4:rflvpmlogicalport})"
    },
    {
      "trigger": "GetPitParameters\tPartFeature",
      "contents": "GetPitParameters(${1:partfeature})"
    },
    {
      "trigger": "GetPixel\tBitmap,Integer,Integer",
      "contents": "GetPixel(${1:bitmap}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "GetPixelAlpha\tBitmap,Integer,Integer",
      "contents": "GetPixelAlpha(${1:bitmap}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "GetPixelBlue\tBitmap,Integer,Integer",
      "contents": "GetPixelBlue(${1:bitmap}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "GetPixelGreen\tBitmap,Integer,Integer",
      "contents": "GetPixelGreen(${1:bitmap}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "GetPixelLuminance\tBitmap,Integer,Integer",
      "contents": "GetPixelLuminance(${1:bitmap}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "GetPixelRed\tBitmap,Integer,Integer",
      "contents": "GetPixelRed(${1:bitmap}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "GetPlanningMotionType\tRscMultiRobotPathPlanner",
      "contents": "GetPlanningMotionType(${1:rscmultirobotpathplanner})"
    },
    {
      "trigger": "GetPlate\tStructure_Plate,SddPlate",
      "contents": "GetPlate(${1:structure_plate}, ${2:sddplate})"
    },
    {
      "trigger": "GetPlateSubElements\tSldPlate,Integer,Boolean",
      "contents": "GetPlateSubElements(${1:sldplate}, ${2:int}, ${3:bool})"
    },
    {
      "trigger": "GetPointCloudElement\tProductOccurrence",
      "contents": "GetPointCloudElement(${1:productoccurrence})"
    },
    {
      "trigger": "GetPointCloudRepReference\tDELPointCloudElement",
      "contents": "GetPointCloudRepReference(${1:delpointcloudelement})"
    },
    {
      "trigger": "GetPointCloudRepositoryPath\tDELPointCloudElement",
      "contents": "GetPointCloudRepositoryPath(${1:delpointcloudelement})"
    },
    {
      "trigger": "GetPointCoord\tSMAPoint,Integer,Integer",
      "contents": "GetPointCoord(${1:smapoint}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "GetPointCoordinates\tMfgPtToPtSite,Real,Real,Real",
      "contents": "GetPointCoordinates(${1:mfgpttoptsite}, ${2:real}, ${3:real}, ${4:real})"
    },
    {
      "trigger": "GetPointCount\tDELPointCloudRepReference",
      "contents": "GetPointCount(${1:delpointcloudrepreference})"
    },
    {
      "trigger": "GetPointDistanceFromSurface\tFeature,Feature",
      "contents": "GetPointDistanceFromSurface(${1:feat}, ${2:feat})"
    },
    {
      "trigger": "GetPointFasteningOperation\tDELPointTrajectory,Integer",
      "contents": "GetPointFasteningOperation(${1:delpointtrajectory}, ${2:int})"
    },
    {
      "trigger": "GetPointProfile\tDELPointOperation",
      "contents": "GetPointProfile(${1:delpointoperation})"
    },
    {
      "trigger": "GetPointedAsSourceTimeConstraintsList\tList",
      "contents": "GetPointedAsSourceTimeConstraintsList(${1:list})"
    },
    {
      "trigger": "GetPointedAsTargetTimeConstraintsList\tList",
      "contents": "GetPointedAsTargetTimeConstraintsList(${1:list})"
    },
    {
      "trigger": "GetPointedParmComment\tValuePointer",
      "contents": "GetPointedParmComment(${1:valuepointer})"
    },
    {
      "trigger": "GetPointedProductionSystemEntities\tDNBFitTrack",
      "contents": "GetPointedProductionSystemEntities(${1:dnbfittrack})"
    },
    {
      "trigger": "GetPointingObjects\tPlmParameter",
      "contents": "GetPointingObjects(${1:plmparameter})"
    },
    {
      "trigger": "GetPortType\tHVAC_Port,HvacPort_Types",
      "contents": "GetPortType(${1:hvac_port}, ${2:hvacport_types})"
    },
    {
      "trigger": "GetPosStrategyName\tSddOpening,String",
      "contents": "GetPosStrategyName(${1:sddopening}, ${2:name})"
    },
    {
      "trigger": "GetPosition\tAgtRefComponentInstance,Point",
      "contents": "GetPosition(${1:agtrefcomponentinstance}, ${2:point})"
    },
    {
      "trigger": "GetPositionMode\tSldSketchBasedPanel,Integer",
      "contents": "GetPositionMode(${1:sldsketchbasedpanel}, ${2:int})"
    },
    {
      "trigger": "GetPositionPrimaryResourceUsageList\tProdSystemOccurrence,List",
      "contents": "GetPositionPrimaryResourceUsageList(${1:prodsystemoccurrence}, ${2:list})"
    },
    {
      "trigger": "GetPositionRelativeToParentResource\tFFS_ProductZone",
      "contents": "GetPositionRelativeToParentResource(${1:ffs_productzone})"
    },
    {
      "trigger": "GetPositionSecondaryResourceUsageList\tProdSystemOccurrence,ResourceOccurrence,List",
      "contents": "GetPositionSecondaryResourceUsageList(${1:prodsystemoccurrence}, ${2:resourceoccurrence}, ${3:list})"
    },
    {
      "trigger": "GetPositionedAxis\tSldOpening,Feature",
      "contents": "GetPositionedAxis(${1:sldopening}, ${2:feat})"
    },
    {
      "trigger": "GetPositionedManufacturedItems\tProdSystemOccurrence,List",
      "contents": "GetPositionedManufacturedItems(${1:prodsystemoccurrence}, ${2:list})"
    },
    {
      "trigger": "GetPositioningStrategy\tSldOpening,String",
      "contents": "GetPositioningStrategy(${1:sldopening}, ${2:name})"
    },
    {
      "trigger": "GetPossibleControllerApplicationTypeList\tRscController",
      "contents": "GetPossibleControllerApplicationTypeList(${1:rsccontroller})"
    },
    {
      "trigger": "GetPossibleLabels\tRscLogicGoto",
      "contents": "GetPossibleLabels(${1:rsclogicgoto})"
    },
    {
      "trigger": "GetPossibleUnitsFromDimension\tRscControlLogicMgr,String",
      "contents": "GetPossibleUnitsFromDimension(${1:rsccontrollogicmgr}, ${2:name})"
    },
    {
      "trigger": "GetPostureNameList\tResourceOccurrence,List",
      "contents": "GetPostureNameList(${1:resourceoccurrence}, ${2:list})"
    },
    {
      "trigger": "GetPreAssignedContextProcesses\tPLMResource,List",
      "contents": "GetPreAssignedContextProcesses(${1:plmresource}, ${2:list})"
    },
    {
      "trigger": "GetPreAssignedContextResource\tPLMSystem,PLMResource,Integer,String",
      "contents": "GetPreAssignedContextResource(${1:plmsystem}, ${2:plmresource}, ${3:int}, ${4:name})"
    },
    {
      "trigger": "GetPreAssignedRscLinkFromOperation\tProdSystemOccurrence,AllocatedResourceLink",
      "contents": "GetPreAssignedRscLinkFromOperation(${1:prodsystemoccurrence}, ${2:allocatedresourcelink})"
    },
    {
      "trigger": "GetPreAssignedRscLinkOperation\tPLMSystem,AllocatedResourceLink,List,List,List,Boolean",
      "contents": "GetPreAssignedRscLinkOperation(${1:plmsystem}, ${2:allocatedresourcelink}, ${3:list}, ${4:list}, ${5:list}, ${6:bool})"
    },
    {
      "trigger": "GetPreAssignedRscLinkOwner\tAllocatedResourceLink,PLMSystem",
      "contents": "GetPreAssignedRscLinkOwner(${1:allocatedresourcelink}, ${2:plmsystem})"
    },
    {
      "trigger": "GetPreAssignedRscLinkResource\tAllocatedResourceLink,PLMResource,Integer,String,Boolean",
      "contents": "GetPreAssignedRscLinkResource(${1:allocatedresourcelink}, ${2:plmresource}, ${3:int}, ${4:name}, ${5:bool})"
    },
    {
      "trigger": "GetPreAssignedRscLinksFromResource\tPLMResource,List",
      "contents": "GetPreAssignedRscLinksFromResource(${1:plmresource}, ${2:list})"
    },
    {
      "trigger": "GetPrecedenceNextProcesses\tFProcessOccurrence",
      "contents": "GetPrecedenceNextProcesses(${1:fprocessoccurrence})"
    },
    {
      "trigger": "GetPrecedencePredecessors\tDELFmiFunctionInstance",
      "contents": "GetPrecedencePredecessors(${1:delfmifunctioninstance})"
    },
    {
      "trigger": "GetPrecedencePreviousProcesses\tFProcessOccurrence",
      "contents": "GetPrecedencePreviousProcesses(${1:fprocessoccurrence})"
    },
    {
      "trigger": "GetPrecedenceSuccessors\tDELFmiFunctionInstance",
      "contents": "GetPrecedenceSuccessors(${1:delfmifunctioninstance})"
    },
    {
      "trigger": "GetPreferredCandidateRsc\tPLMCoreReference,PLMResource,ResourceOccurrence,CandidateResourceLink",
      "contents": "GetPreferredCandidateRsc(${1:plmcorereference}, ${2:plmresource}, ${3:resourceoccurrence}, ${4:candidateresourcelink})"
    },
    {
      "trigger": "GetPreferredLength\tElec3DProtectionAnnotation,LENGTH",
      "contents": "GetPreferredLength(${1:elec3dprotectionannotation}, ${2:len})"
    },
    {
      "trigger": "GetPressureMovePushDepth\tDNBSpotProfile,Integer",
      "contents": "GetPressureMovePushDepth(${1:dnbspotprofile}, ${2:int})"
    },
    {
      "trigger": "GetPressureMovePushDepthProfile\tDNBSpotProfile,Integer",
      "contents": "GetPressureMovePushDepthProfile(${1:dnbspotprofile}, ${2:int})"
    },
    {
      "trigger": "GetPressureMovePushDepthProfileName\tDNBSpotProfile,Integer",
      "contents": "GetPressureMovePushDepthProfileName(${1:dnbspotprofile}, ${2:int})"
    },
    {
      "trigger": "GetPressureSpeedFactor\tDNBSpotProfile,Integer",
      "contents": "GetPressureSpeedFactor(${1:dnbspotprofile}, ${2:int})"
    },
    {
      "trigger": "GetPressureSpeedFactorProfile\tDNBSpotProfile,Integer",
      "contents": "GetPressureSpeedFactorProfile(${1:dnbspotprofile}, ${2:int})"
    },
    {
      "trigger": "GetPressureSpeedFactorProfileName\tDNBSpotProfile,Integer",
      "contents": "GetPressureSpeedFactorProfileName(${1:dnbspotprofile}, ${2:int})"
    },
    {
      "trigger": "GetPreviousArc\tAECHorizontalArc",
      "contents": "GetPreviousArc(${1:aechorizontalarc})"
    },
    {
      "trigger": "GetPrimaryFromSecondary\tSecondaryCandidateResourceLink,DELAsmProcessCanUseCnx",
      "contents": "GetPrimaryFromSecondary(${1:secondarycandidateresourcelink}, ${2:delasmprocesscanusecnx})"
    },
    {
      "trigger": "GetPrimaryInterfaces\tSptPrimarySupport,List,List",
      "contents": "GetPrimaryInterfaces(${1:sptprimarysupport}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "GetPrimaryMCA\tDNBResourceTask,Feature",
      "contents": "GetPrimaryMCA(${1:dnbresourcetask}, ${2:feat})"
    },
    {
      "trigger": "GetPriority\tString",
      "contents": "GetPriority(${1:name})"
    },
    {
      "trigger": "GetProbingDirection\tMfgProbingOperation,MfgDirection",
      "contents": "GetProbingDirection(${1:mfgprobingoperation}, ${2:mfgdirection})"
    },
    {
      "trigger": "GetProbingPointCompensation\tMfgProbingMultiPoints,Integer,String",
      "contents": "GetProbingPointCompensation(${1:mfgprobingmultipoints}, ${2:int}, ${3:name})"
    },
    {
      "trigger": "GetProbingPointDirection\tMfgProbingMultiPoints,Integer,MfgDirection",
      "contents": "GetProbingPointDirection(${1:mfgprobingmultipoints}, ${2:int}, ${3:mfgdirection})"
    },
    {
      "trigger": "GetProcessOfEachScope\tFeature",
      "contents": "GetProcessOfEachScope(${1:feat})"
    },
    {
      "trigger": "GetProcessOfEachScope\tPLMCoreReference,List,List,List",
      "contents": "GetProcessOfEachScope(${1:plmcorereference}, ${2:list}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "GetProcessOrGroups\tGroupOfProcessInstance,DELFmiFunctionReference",
      "contents": "GetProcessOrGroups(${1:groupofprocessinstance}, ${2:delfmifunctionreference})"
    },
    {
      "trigger": "GetProcessOrGroupsFirstLevel\tGroupOfProcessInstance,DELFmiFunctionReference",
      "contents": "GetProcessOrGroupsFirstLevel(${1:groupofprocessinstance}, ${2:delfmifunctionreference})"
    },
    {
      "trigger": "GetProcessOutput\tDELFmiFunctionReference",
      "contents": "GetProcessOutput(${1:delfmifunctionreference})"
    },
    {
      "trigger": "GetProcessTag\tDNBTag",
      "contents": "GetProcessTag(${1:dnbtag})"
    },
    {
      "trigger": "GetProcessTrajectory\tDELPointTrajectory",
      "contents": "GetProcessTrajectory(${1:delpointtrajectory})"
    },
    {
      "trigger": "GetProcessesMaterializedBy\tPLMCoreReference",
      "contents": "GetProcessesMaterializedBy(${1:plmcorereference})"
    },
    {
      "trigger": "GetProductFlowByName\tString",
      "contents": "GetProductFlowByName(${1:name})"
    },
    {
      "trigger": "GetProductFlows\tFFS_Resource,List,List",
      "contents": "GetProductFlows(${1:ffs_resource}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "GetProductOccurence\tFFS_Item",
      "contents": "GetProductOccurence(${1:ffs_item})"
    },
    {
      "trigger": "GetProductOfTheScope\tDELFmiFunctionReference,Integer,VPMReference,Integer,Integer",
      "contents": "GetProductOfTheScope(${1:delfmifunctionreference}, ${2:int}, ${3:vpmreference}, ${4:int}, ${5:int})"
    },
    {
      "trigger": "GetProductOrPartOfTheScope\tDELFmiFunctionReference,Integer",
      "contents": "GetProductOrPartOfTheScope(${1:delfmifunctionreference}, ${2:int})"
    },
    {
      "trigger": "GetProductPriority\tFFS_ProductFlow,FFS_Item",
      "contents": "GetProductPriority(${1:ffs_productflow}, ${2:ffs_item})"
    },
    {
      "trigger": "GetProductQualityStatus\tFFS_ProductFlow,FFS_Item",
      "contents": "GetProductQualityStatus(${1:ffs_productflow}, ${2:ffs_item})"
    },
    {
      "trigger": "GetProductScope\tDELFmiFunctionReference",
      "contents": "GetProductScope(${1:delfmifunctionreference})"
    },
    {
      "trigger": "GetProductZone\tFFS_Activity",
      "contents": "GetProductZone(${1:ffs_activity})"
    },
    {
      "trigger": "GetProductZoneFromName\tFFS_Resource,String",
      "contents": "GetProductZoneFromName(${1:ffs_resource}, ${2:name})"
    },
    {
      "trigger": "GetProductZonePostion\tFFS_ProductZone",
      "contents": "GetProductZonePostion(${1:ffs_productzone})"
    },
    {
      "trigger": "GetProductZones\tFFS_Resource",
      "contents": "GetProductZones(${1:ffs_resource})"
    },
    {
      "trigger": "GetProducts\tFFS_ProductZone",
      "contents": "GetProducts(${1:ffs_productzone})"
    },
    {
      "trigger": "GetProfile\tKWEPrecondition",
      "contents": "GetProfile(${1:kweprecondition})"
    },
    {
      "trigger": "GetProfile\tSegment,ElecProfile",
      "contents": "GetProfile(${1:segment}, ${2:elecprofile})"
    },
    {
      "trigger": "GetProfileAttributeDisplayName\tRscApplicativeProfile",
      "contents": "GetProfileAttributeDisplayName(${1:rscapplicativeprofile})"
    },
    {
      "trigger": "GetProfileAttributeType\tRscApplicativeProfile,String",
      "contents": "GetProfileAttributeType(${1:rscapplicativeprofile}, ${2:name})"
    },
    {
      "trigger": "GetProfileAttributeValueBoolean\tRscApplicativeProfile,String",
      "contents": "GetProfileAttributeValueBoolean(${1:rscapplicativeprofile}, ${2:name})"
    },
    {
      "trigger": "GetProfileAttributeValueDouble\tRscApplicativeProfile,String",
      "contents": "GetProfileAttributeValueDouble(${1:rscapplicativeprofile}, ${2:name})"
    },
    {
      "trigger": "GetProfileAttributeValueInteger\tRscApplicativeProfile,String",
      "contents": "GetProfileAttributeValueInteger(${1:rscapplicativeprofile}, ${2:name})"
    },
    {
      "trigger": "GetProfileAttributeValueString\tRscApplicativeProfile,String",
      "contents": "GetProfileAttributeValueString(${1:rscapplicativeprofile}, ${2:name})"
    },
    {
      "trigger": "GetProfileCountQCC\tFeature",
      "contents": "GetProfileCountQCC(${1:feat})"
    },
    {
      "trigger": "GetProfileCuttingLength\tVPMReference",
      "contents": "GetProfileCuttingLength(${1:vpmreference})"
    },
    {
      "trigger": "GetProfileGroupID\tRscApplicativeProfileGroup",
      "contents": "GetProfileGroupID(${1:rscapplicativeprofilegroup})"
    },
    {
      "trigger": "GetProfileTemplateUserAttributeType\tRscApplicativeProfileGroup,String",
      "contents": "GetProfileTemplateUserAttributeType(${1:rscapplicativeprofilegroup}, ${2:name})"
    },
    {
      "trigger": "GetProfileType\tVPMReference",
      "contents": "GetProfileType(${1:vpmreference})"
    },
    {
      "trigger": "GetProgram\tManufacturingActivity",
      "contents": "GetProgram(${1:manufacturingactivity})"
    },
    {
      "trigger": "GetPrograms\tManufacturingSetup,List",
      "contents": "GetPrograms(${1:manufacturingsetup}, ${2:list})"
    },
    {
      "trigger": "GetProjectDisciplines\tString",
      "contents": "GetProjectDisciplines(${1:name})"
    },
    {
      "trigger": "GetProjectedOAT\tDNBTagMeasure,Real,Real,Real",
      "contents": "GetProjectedOAT(${1:dnbtagmeasure}, ${2:real}, ${3:real}, ${4:real})"
    },
    {
      "trigger": "GetProjectedQuaternions\tDNBTagMeasure,Real,Real,Real,Real",
      "contents": "GetProjectedQuaternions(${1:dnbtagmeasure}, ${2:real}, ${3:real}, ${4:real}, ${5:real})"
    },
    {
      "trigger": "GetProjectedRPY\tDNBTagMeasure,Real,Real,Real",
      "contents": "GetProjectedRPY(${1:dnbtagmeasure}, ${2:real}, ${3:real}, ${4:real})"
    },
    {
      "trigger": "GetProjectedXYZ\tDNBTagMeasure,Real,Real,Real",
      "contents": "GetProjectedXYZ(${1:dnbtagmeasure}, ${2:real}, ${3:real}, ${4:real})"
    },
    {
      "trigger": "GetProjectedZYZ\tDNBTagMeasure,Real,Real,Real",
      "contents": "GetProjectedZYZ(${1:dnbtagmeasure}, ${2:real}, ${3:real}, ${4:real})"
    },
    {
      "trigger": "GetProjectionReferential\tDNBTagMeasure,Integer,List",
      "contents": "GetProjectionReferential(${1:dnbtagmeasure}, ${2:int}, ${3:list})"
    },
    {
      "trigger": "GetProtectionExtremities\tInternalProtection,String,Point,Point",
      "contents": "GetProtectionExtremities(${1:internalprotection}, ${2:name}, ${3:point}, ${4:point})"
    },
    {
      "trigger": "GetPrototypeFromConcretization\tPLMCoreReference",
      "contents": "GetPrototypeFromConcretization(${1:plmcorereference})"
    },
    {
      "trigger": "GetProvidedPartTypes\tEnsFilterUnit,List",
      "contents": "GetProvidedPartTypes(${1:ensfilterunit}, ${2:list})"
    },
    {
      "trigger": "GetPtLen_Length\tSddMember,Feature",
      "contents": "GetPtLen_Length(${1:sddmember}, ${2:feat})"
    },
    {
      "trigger": "GetPullingDirElemType\tFeature,String",
      "contents": "GetPullingDirElemType(${1:feat}, ${2:name})"
    },
    {
      "trigger": "GetQuantifier\tPLMPIMMetricReference,LENGTH,LENGTH,LENGTH,LENGTH,LENGTH,LENGTH,LENGTH",
      "contents": "GetQuantifier(${1:plmpimmetricreference}, ${2:len}, ${3:len}, ${4:len}, ${5:len}, ${6:len}, ${7:len}, ${8:len})"
    },
    {
      "trigger": "GetQuaternions\tRscTransform",
      "contents": "GetQuaternions(${1:rsctransform})"
    },
    {
      "trigger": "GetRB\tKWEGenericRuleBaseComponent",
      "contents": "GetRB(${1:kwegenericrulebasecomponent})"
    },
    {
      "trigger": "GetRPY\tRscTransform",
      "contents": "GetRPY(${1:rsctransform})"
    },
    {
      "trigger": "GetRRS1ControllerBackupDir\tRRSConnectionParameters,RRSParameterScope",
      "contents": "GetRRS1ControllerBackupDir(${1:rrsconnectionparameters}, ${2:rrsparameterscope})"
    },
    {
      "trigger": "GetRRS1DebugFile\tRRSConnectionParameters,RRSParameterScope",
      "contents": "GetRRS1DebugFile(${1:rrsconnectionparameters}, ${2:rrsparameterscope})"
    },
    {
      "trigger": "GetRRS1Manipulator\tRRSConnectionParameters,RRSParameterScope",
      "contents": "GetRRS1Manipulator(${1:rrsconnectionparameters}, ${2:rrsparameterscope})"
    },
    {
      "trigger": "GetRRS1RCSControllerVersion\tRRSConnectionParameters,RRSParameterScope",
      "contents": "GetRRS1RCSControllerVersion(${1:rrsconnectionparameters}, ${2:rrsparameterscope})"
    },
    {
      "trigger": "GetRRS1RCSDataHomeDir\tRRSConnectionParameters,RRSParameterScope",
      "contents": "GetRRS1RCSDataHomeDir(${1:rrsconnectionparameters}, ${2:rrsparameterscope})"
    },
    {
      "trigger": "GetRRS1RCSSWVersion\tRRSConnectionParameters,RRSParameterScope",
      "contents": "GetRRS1RCSSWVersion(${1:rrsconnectionparameters}, ${2:rrsparameterscope})"
    },
    {
      "trigger": "GetRRS1RCSSpotEmulation\tRRSConnectionParameters,RRSParameterScope",
      "contents": "GetRRS1RCSSpotEmulation(${1:rrsconnectionparameters}, ${2:rrsparameterscope})"
    },
    {
      "trigger": "GetRRS1RCSTriggerEmulation\tRRSConnectionParameters,RRSParameterScope",
      "contents": "GetRRS1RCSTriggerEmulation(${1:rrsconnectionparameters}, ${2:rrsparameterscope})"
    },
    {
      "trigger": "GetRRS1RCSVersion\tRRSConnectionParameters,RRSParameterScope",
      "contents": "GetRRS1RCSVersion(${1:rrsconnectionparameters}, ${2:rrsparameterscope})"
    },
    {
      "trigger": "GetRRS1RelativeRobotPath\tRRSConnectionParameters,RRSParameterScope",
      "contents": "GetRRS1RelativeRobotPath(${1:rrsconnectionparameters}, ${2:rrsparameterscope})"
    },
    {
      "trigger": "GetRRS1RobotNumber\tRRSConnectionParameters,RRSParameterScope",
      "contents": "GetRRS1RobotNumber(${1:rrsconnectionparameters}, ${2:rrsparameterscope})"
    },
    {
      "trigger": "GetRRS1SamplePeriod\tRRSConnectionParameters,RRSParameterScope",
      "contents": "GetRRS1SamplePeriod(${1:rrsconnectionparameters}, ${2:rrsparameterscope})"
    },
    {
      "trigger": "GetRRS2ControllerConfig\tRRSConnectionParameters,RRSParameterScope",
      "contents": "GetRRS2ControllerConfig(${1:rrsconnectionparameters}, ${2:rrsparameterscope})"
    },
    {
      "trigger": "GetRRS2ControllerSWVersion\tRRSConnectionParameters,RRSParameterScope",
      "contents": "GetRRS2ControllerSWVersion(${1:rrsconnectionparameters}, ${2:rrsparameterscope})"
    },
    {
      "trigger": "GetRRS2FileSystemArchive\tRRSConnectionParameters,RRSParameterScope",
      "contents": "GetRRS2FileSystemArchive(${1:rrsconnectionparameters}, ${2:rrsparameterscope})"
    },
    {
      "trigger": "GetRRS2SamplePeriod\tRRSConnectionParameters,RRSParameterScope",
      "contents": "GetRRS2SamplePeriod(${1:rrsconnectionparameters}, ${2:rrsparameterscope})"
    },
    {
      "trigger": "GetRRS2TriggerOutputLine\tRRSConnectionParameters,RRSParameterScope",
      "contents": "GetRRS2TriggerOutputLine(${1:rrsconnectionparameters}, ${2:rrsparameterscope})"
    },
    {
      "trigger": "GetRRS2UserLanguage\tRRSConnectionParameters,RRSParameterScope",
      "contents": "GetRRS2UserLanguage(${1:rrsconnectionparameters}, ${2:rrsparameterscope})"
    },
    {
      "trigger": "GetRRS2VRCInstDebugFile\tRRSConnectionParameters,RRSParameterScope",
      "contents": "GetRRS2VRCInstDebugFile(${1:rrsconnectionparameters}, ${2:rrsparameterscope})"
    },
    {
      "trigger": "GetRRS2VRCMgrDebugFile\tRRSConnectionParameters,RRSParameterScope",
      "contents": "GetRRS2VRCMgrDebugFile(${1:rrsconnectionparameters}, ${2:rrsparameterscope})"
    },
    {
      "trigger": "GetRRS2VRCProgramName\tRRSConnectionParameters,RRSParameterScope",
      "contents": "GetRRS2VRCProgramName(${1:rrsconnectionparameters}, ${2:rrsparameterscope})"
    },
    {
      "trigger": "GetRRS2VRCProgramPath\tRRSConnectionParameters,RRSParameterScope",
      "contents": "GetRRS2VRCProgramPath(${1:rrsconnectionparameters}, ${2:rrsparameterscope})"
    },
    {
      "trigger": "GetRRSConnectionMgr\tProductOccurrence",
      "contents": "GetRRSConnectionMgr(${1:productoccurrence})"
    },
    {
      "trigger": "GetRRSConnectionParameters\tProductOccurrence",
      "contents": "GetRRSConnectionParameters(${1:productoccurrence})"
    },
    {
      "trigger": "GetRRSControlledMotionGroup\tRRSConnectionParameters,RRSParameterScope",
      "contents": "GetRRSControlledMotionGroup(${1:rrsconnectionparameters}, ${2:rrsparameterscope})"
    },
    {
      "trigger": "GetRRSControlledMotionGroups\tRRSConnectionParameters,RRSParameterScope",
      "contents": "GetRRSControlledMotionGroups(${1:rrsconnectionparameters}, ${2:rrsparameterscope})"
    },
    {
      "trigger": "GetRRSControllerType\tRRSConnectionMgr,String",
      "contents": "GetRRSControllerType(${1:rrsconnectionmgr}, ${2:name})"
    },
    {
      "trigger": "GetRRSServerDecoratedNames\tList",
      "contents": "GetRRSServerDecoratedNames(${1:list})"
    },
    {
      "trigger": "GetRRSServerIndexInList\tList,String",
      "contents": "GetRRSServerIndexInList(${1:list}, ${2:name})"
    },
    {
      "trigger": "GetRRSServerName\tRRSConnectionParameters,RRSParameterScope",
      "contents": "GetRRSServerName(${1:rrsconnectionparameters}, ${2:rrsparameterscope})"
    },
    {
      "trigger": "GetRRSServerProperties\tString,String,String,String,String",
      "contents": "GetRRSServerProperties(${1:name}, ${2:name}, ${3:name}, ${4:name}, ${5:name})"
    },
    {
      "trigger": "GetRRSServerRawName\tString",
      "contents": "GetRRSServerRawName(${1:name})"
    },
    {
      "trigger": "GetRRSServersFileFullName\t()",
      "contents": "GetRRSServersFileFullName()"
    },
    {
      "trigger": "GetRRSShlibVersion\tRRSConnectionParameters,RRSParameterScope",
      "contents": "GetRRSShlibVersion(${1:rrsconnectionparameters}, ${2:rrsparameterscope})"
    },
    {
      "trigger": "GetRadius\tAECAlignment2DHorizontal,LENGTH",
      "contents": "GetRadius(${1:aecalignment2dhorizontal}, ${2:len})"
    },
    {
      "trigger": "GetRadius\tAECHorizontalArc",
      "contents": "GetRadius(${1:aechorizontalarc})"
    },
    {
      "trigger": "GetRadiusAtEnd\tAECHorizontalClothoid",
      "contents": "GetRadiusAtEnd(${1:aechorizontalclothoid})"
    },
    {
      "trigger": "GetRadiusAtStart\tAECHorizontalClothoid",
      "contents": "GetRadiusAtStart(${1:aechorizontalclothoid})"
    },
    {
      "trigger": "GetRadiusAtStationing\tAECAlignment3D,String",
      "contents": "GetRadiusAtStationing(${1:aecalignment3d}, ${2:name})"
    },
    {
      "trigger": "GetRateOfVerticalCurvature\tAECVerticalCurve",
      "contents": "GetRateOfVerticalCurvature(${1:aecverticalcurve})"
    },
    {
      "trigger": "GetRawMaterialQuantity\tElec3DCable,LENGTH",
      "contents": "GetRawMaterialQuantity(${1:elec3dcable}, ${2:len})"
    },
    {
      "trigger": "GetRealOrIntegerAttributeValueOnDR\tMfgProcessOccurrence,MfgProcessOccurrence,String,Real",
      "contents": "GetRealOrIntegerAttributeValueOnDR(${1:mfgprocessoccurrence}, ${2:mfgprocessoccurrence}, ${3:name}, ${4:real})"
    },
    {
      "trigger": "GetReassignedStatus\tDNBTag",
      "contents": "GetReassignedStatus(${1:dnbtag})"
    },
    {
      "trigger": "GetRefAxisSystem\tAxisSystem,Feature,Boolean,Boolean",
      "contents": "GetRefAxisSystem(${1:axissystem}, ${2:feat}, ${3:bool}, ${4:bool})"
    },
    {
      "trigger": "GetReference\tSddProfile,Feature",
      "contents": "GetReference(${1:sddprofile}, ${2:feat})"
    },
    {
      "trigger": "GetReference\tSldProfile,Feature,Feature,Feature",
      "contents": "GetReference(${1:sldprofile}, ${2:feat}, ${3:feat}, ${4:feat})"
    },
    {
      "trigger": "GetReferenceLine\tCATEbm_NodeProfile,Feature",
      "contents": "GetReferenceLine(${1:catebm_nodeprofile}, ${2:feat})"
    },
    {
      "trigger": "GetReferenceName\tMustBeMadeFrom,String",
      "contents": "GetReferenceName(${1:mustbemadefrom}, ${2:name})"
    },
    {
      "trigger": "GetReferenceObjectPosition\tRscObjFrameProfile,RscPositionReferenceType,ProductOccurrence",
      "contents": "GetReferenceObjectPosition(${1:rscobjframeprofile}, ${2:rscpositionreferencetype}, ${3:productoccurrence})"
    },
    {
      "trigger": "GetReferenceOfLimitOffsetScallop\tSddScallop,Feature",
      "contents": "GetReferenceOfLimitOffsetScallop(${1:sddscallop}, ${2:feat})"
    },
    {
      "trigger": "GetReferenceOffsetOfLimitOffsetScallop\tSddScallop,Feature",
      "contents": "GetReferenceOffsetOfLimitOffsetScallop(${1:sddscallop}, ${2:feat})"
    },
    {
      "trigger": "GetReferencePartNumber\tElec3DProtectionAnnotation,String",
      "contents": "GetReferencePartNumber(${1:elec3dprotectionannotation}, ${2:name})"
    },
    {
      "trigger": "GetReferencePlane\tStrStructureCopySpecification,List",
      "contents": "GetReferencePlane(${1:strstructurecopyspecification}, ${2:list})"
    },
    {
      "trigger": "GetReferencePoint\tCATEbm_FixedBranchPoint,CATEbm_ControlPoint",
      "contents": "GetReferencePoint(${1:catebm_fixedbranchpoint}, ${2:catebm_controlpoint})"
    },
    {
      "trigger": "GetReferencePointMode\tGSMPointCoord,Boolean",
      "contents": "GetReferencePointMode(${1:gsmpointcoord}, ${2:bool})"
    },
    {
      "trigger": "GetReferenceProfile\tCATEbm_NodeProfile,CATEbm_ReferenceProfile",
      "contents": "GetReferenceProfile(${1:catebm_nodeprofile}, ${2:catebm_referenceprofile})"
    },
    {
      "trigger": "GetReferenceSupportPlate\tSddStiffener,Feature",
      "contents": "GetReferenceSupportPlate(${1:sddstiffener}, ${2:feat})"
    },
    {
      "trigger": "GetReferentialPositionInfoForRsc\tPLMConnection,ProdSystemOccurrence,String,List,ResourceOccurrence,Boolean,String,String",
      "contents": "GetReferentialPositionInfoForRsc(${1:plmconnection}, ${2:prodsystemoccurrence}, ${3:name}, ${4:list}, ${5:resourceoccurrence}, ${6:bool}, ${7:name}, ${8:name})"
    },
    {
      "trigger": "GetRelatedConnections\tSysConnectable,List",
      "contents": "GetRelatedConnections(${1:sysconnectable}, ${2:list})"
    },
    {
      "trigger": "GetRelatedDomain\tMLPDensityGroup,Feature",
      "contents": "GetRelatedDomain(${1:mlpdensitygroup}, ${2:feat})"
    },
    {
      "trigger": "GetRelatedMatrix\tRscTransform",
      "contents": "GetRelatedMatrix(${1:rsctransform})"
    },
    {
      "trigger": "GetRelatedMotionGroups\tRscController,Boolean",
      "contents": "GetRelatedMotionGroups(${1:rsccontroller}, ${2:bool})"
    },
    {
      "trigger": "GetRelatedObjects\tHVAC_Duct_Occurrence",
      "contents": "GetRelatedObjects(${1:hvac_duct_occurrence})"
    },
    {
      "trigger": "GetRelatedOffset\tRscObjFrameProfile,RscPositionReferenceType,ProductOccurrence",
      "contents": "GetRelatedOffset(${1:rscobjframeprofile}, ${2:rscpositionreferencetype}, ${3:productoccurrence})"
    },
    {
      "trigger": "GetRelatedProcessesFromAlternate\tDELFmiFunctionReference",
      "contents": "GetRelatedProcessesFromAlternate(${1:delfmifunctionreference})"
    },
    {
      "trigger": "GetRelatedSystems\tSysConnectable",
      "contents": "GetRelatedSystems(${1:sysconnectable})"
    },
    {
      "trigger": "GetRelatedSystems\tSysConnection,List,List",
      "contents": "GetRelatedSystems(${1:sysconnection}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "GetRelatedSystems\tSysPort,SysConnectable,List,List",
      "contents": "GetRelatedSystems(${1:sysport}, ${2:sysconnectable}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "GetRelatedSystemsFromInterface\tSysConnectable,List",
      "contents": "GetRelatedSystemsFromInterface(${1:sysconnectable}, ${2:list})"
    },
    {
      "trigger": "GetRelatedSystemsFromPort\tSysConnectable,SysPort,List,List",
      "contents": "GetRelatedSystemsFromPort(${1:sysconnectable}, ${2:sysport}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "GetRelatedTool\tRscToolProfile,ProductOccurrence",
      "contents": "GetRelatedTool(${1:rsctoolprofile}, ${2:productoccurrence})"
    },
    {
      "trigger": "GetRelativePosition\tPLMConnection",
      "contents": "GetRelativePosition(${1:plmconnection})"
    },
    {
      "trigger": "GetRelativePositionForManufacturedItems\tProdSystemOccurrence,List,List",
      "contents": "GetRelativePositionForManufacturedItems(${1:prodsystemoccurrence}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "GetRenderingEffect\tDELPointCloudRepReference",
      "contents": "GetRenderingEffect(${1:delpointcloudrepreference})"
    },
    {
      "trigger": "GetRepairActivity\tFFS_Failure",
      "contents": "GetRepairActivity(${1:ffs_failure})"
    },
    {
      "trigger": "GetReplenishActivity\tFFS_Consumable",
      "contents": "GetReplenishActivity(${1:ffs_consumable})"
    },
    {
      "trigger": "GetRepresentation\tMfgResource,String,String,List",
      "contents": "GetRepresentation(${1:mfgresource}, ${2:name}, ${3:name}, ${4:list})"
    },
    {
      "trigger": "GetRepresentationDataSize\tList",
      "contents": "GetRepresentationDataSize(${1:list})"
    },
    {
      "trigger": "GetRepresentationStrings\tCATTPSBasicDim,List",
      "contents": "GetRepresentationStrings(${1:cattpsbasicdim}, ${2:list})"
    },
    {
      "trigger": "GetReqChildren\tChapter",
      "contents": "GetReqChildren(${1:chapter})"
    },
    {
      "trigger": "GetReqDerivationSources\tRequirement",
      "contents": "GetReqDerivationSources(${1:requirement})"
    },
    {
      "trigger": "GetReqDerivationTargets\tRequirement",
      "contents": "GetReqDerivationTargets(${1:requirement})"
    },
    {
      "trigger": "GetReqImplementors\tRequirement Specification",
      "contents": "GetReqImplementors(${1:requirement specification})"
    },
    {
      "trigger": "GetReqParameters\tRequirement",
      "contents": "GetReqParameters(${1:requirement})"
    },
    {
      "trigger": "GetReqParents\tChapter",
      "contents": "GetReqParents(${1:chapter})"
    },
    {
      "trigger": "GetRequestGroupByName\tString",
      "contents": "GetRequestGroupByName(${1:name})"
    },
    {
      "trigger": "GetRequestGroups\tProductOccurrence",
      "contents": "GetRequestGroups(${1:productoccurrence})"
    },
    {
      "trigger": "GetRequirementFromDCPRow\tPLMSpecifyHowToCollectDataCnx",
      "contents": "GetRequirementFromDCPRow(${1:plmspecifyhowtocollectdatacnx})"
    },
    {
      "trigger": "GetReservationColor\tLiveArchiCeiling,String",
      "contents": "GetReservationColor(${1:livearchiceiling}, ${2:name})"
    },
    {
      "trigger": "GetReservationHeight\tLiveArchiCeiling,LENGTH",
      "contents": "GetReservationHeight(${1:livearchiceiling}, ${2:len})"
    },
    {
      "trigger": "GetReserveWorkerNonPreemptible\tFFS_DestinationProperties",
      "contents": "GetReserveWorkerNonPreemptible(${1:ffs_destinationproperties})"
    },
    {
      "trigger": "GetResource\tDNBResourceTask,ResourceOccurrence",
      "contents": "GetResource(${1:dnbresourcetask}, ${2:resourceoccurrence})"
    },
    {
      "trigger": "GetResource\tFFS_AGVInstance",
      "contents": "GetResource(${1:ffs_agvinstance})"
    },
    {
      "trigger": "GetResourceAttributeBoolean\tProductOccurrence,Boolean,String,Boolean",
      "contents": "GetResourceAttributeBoolean(${1:productoccurrence}, ${2:bool}, ${3:name}, ${4:bool})"
    },
    {
      "trigger": "GetResourceAttributeInteger\tProductOccurrence,Boolean,String,Integer",
      "contents": "GetResourceAttributeInteger(${1:productoccurrence}, ${2:bool}, ${3:name}, ${4:int})"
    },
    {
      "trigger": "GetResourceAttributeReal\tProductOccurrence,Boolean,String,Real",
      "contents": "GetResourceAttributeReal(${1:productoccurrence}, ${2:bool}, ${3:name}, ${4:real})"
    },
    {
      "trigger": "GetResourceAttributeString\tProductOccurrence,Boolean,String,String",
      "contents": "GetResourceAttributeString(${1:productoccurrence}, ${2:bool}, ${3:name}, ${4:name})"
    },
    {
      "trigger": "GetResourceColor\tPLMOperation,ProductOccurrence",
      "contents": "GetResourceColor(${1:plmoperation}, ${2:productoccurrence})"
    },
    {
      "trigger": "GetResourceEntries\tString,String",
      "contents": "GetResourceEntries(${1:name}, ${2:name})"
    },
    {
      "trigger": "GetResourceFromConveyorDecisionPoint\tFFS_ConveyorDecisionPoint",
      "contents": "GetResourceFromConveyorDecisionPoint(${1:ffs_conveyordecisionpoint})"
    },
    {
      "trigger": "GetResourceFromName\tString",
      "contents": "GetResourceFromName(${1:name})"
    },
    {
      "trigger": "GetResourceFromVehicleDecisionPoint\tFFS_VehicleDecisionPoint",
      "contents": "GetResourceFromVehicleDecisionPoint(${1:ffs_vehicledecisionpoint})"
    },
    {
      "trigger": "GetResourceInterferenceTasks\tRobInterferenceZoneMgr,ResourceOccurrence",
      "contents": "GetResourceInterferenceTasks(${1:robinterferencezonemgr}, ${2:resourceoccurrence})"
    },
    {
      "trigger": "GetResourceOccurence\tFFS_Resource",
      "contents": "GetResourceOccurence(${1:ffs_resource})"
    },
    {
      "trigger": "GetResourceOfEachScope\tPLMSystem",
      "contents": "GetResourceOfEachScope(${1:plmsystem})"
    },
    {
      "trigger": "GetResourcePool\tFFS_TransportRouteGroup",
      "contents": "GetResourcePool(${1:ffs_transportroutegroup})"
    },
    {
      "trigger": "GetResourcePoolFromActivity\tFFS_Activity",
      "contents": "GetResourcePoolFromActivity(${1:ffs_activity})"
    },
    {
      "trigger": "GetResourcePoolFromName\tString",
      "contents": "GetResourcePoolFromName(${1:name})"
    },
    {
      "trigger": "GetResourcePoolFromProductFlow\tFFS_ProductFlow",
      "contents": "GetResourcePoolFromProductFlow(${1:ffs_productflow})"
    },
    {
      "trigger": "GetResourcePoolFromResource\tFFS_Resource",
      "contents": "GetResourcePoolFromResource(${1:ffs_resource})"
    },
    {
      "trigger": "GetResourcePosition\tPLMConnection,List",
      "contents": "GetResourcePosition(${1:plmconnection}, ${2:list})"
    },
    {
      "trigger": "GetResourceSubComponents\tProdSystemOccurrence,ProdSystemOccurrence,List",
      "contents": "GetResourceSubComponents(${1:prodsystemoccurrence}, ${2:prodsystemoccurrence}, ${3:list})"
    },
    {
      "trigger": "GetResourceTable\tFeature",
      "contents": "GetResourceTable(${1:feat})"
    },
    {
      "trigger": "GetResourceType\tFFS_Resource",
      "contents": "GetResourceType(${1:ffs_resource})"
    },
    {
      "trigger": "GetResourceUserDefinedName\tFFS_Resource",
      "contents": "GetResourceUserDefinedName(${1:ffs_resource})"
    },
    {
      "trigger": "GetResourceVariantTrajectory\tResourceOccurrence,String,String",
      "contents": "GetResourceVariantTrajectory(${1:resourceoccurrence}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "GetResourceVisibility\tPLMOperation,ProductOccurrence",
      "contents": "GetResourceVisibility(${1:plmoperation}, ${2:productoccurrence})"
    },
    {
      "trigger": "GetResourceZoneFromName\tString",
      "contents": "GetResourceZoneFromName(${1:name})"
    },
    {
      "trigger": "GetResourceZones\tFFS_Resource",
      "contents": "GetResourceZones(${1:ffs_resource})"
    },
    {
      "trigger": "GetResponsibilityRelationOwner\tDELMfgResponsibilityCnx",
      "contents": "GetResponsibilityRelationOwner(${1:delmfgresponsibilitycnx})"
    },
    {
      "trigger": "GetResponsibilityRelationSource\tDELMfgResponsibilityCnx,PLMCoreReference",
      "contents": "GetResponsibilityRelationSource(${1:delmfgresponsibilitycnx}, ${2:plmcorereference})"
    },
    {
      "trigger": "GetResponsibilityRelationTarget\tDELMfgResponsibilityCnx,Organization,Integer,ResponsibilitySRStatus,String",
      "contents": "GetResponsibilityRelationTarget(${1:delmfgresponsibilitycnx}, ${2:organization}, ${3:int}, ${4:responsibilitysrstatus}, ${5:name})"
    },
    {
      "trigger": "GetResultingProductForFilter\tMfgProcessOccurrence,Product Configuration",
      "contents": "GetResultingProductForFilter(${1:mfgprocessoccurrence}, ${2:product configuration})"
    },
    {
      "trigger": "GetResultingProducts\tDELFmiFunctionReference,List,List",
      "contents": "GetResultingProducts(${1:delfmifunctionreference}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "GetReusedTimeAnalysis\tDELTimeAnalysisRepInstance,Integer,DELTimeAnalysisRepInstance",
      "contents": "GetReusedTimeAnalysis(${1:deltimeanalysisrepinstance}, ${2:int}, ${3:deltimeanalysisrepinstance})"
    },
    {
      "trigger": "GetRightOfWay\tAECAlignment2DHorizontal",
      "contents": "GetRightOfWay(${1:aecalignment2dhorizontal})"
    },
    {
      "trigger": "GetRightShoulder\tAECRoadSurfaceMainCurve",
      "contents": "GetRightShoulder(${1:aecroadsurfacemaincurve})"
    },
    {
      "trigger": "GetRightTravelWay\tAECRoadSurfaceMainCurve",
      "contents": "GetRightTravelWay(${1:aecroadsurfacemaincurve})"
    },
    {
      "trigger": "GetRightTraveledWayWidth\tAECAlignmentPoint",
      "contents": "GetRightTraveledWayWidth(${1:aecalignmentpoint})"
    },
    {
      "trigger": "GetRoadSegmentsForLine\tGSMLinePtPt",
      "contents": "GetRoadSegmentsForLine(${1:gsmlineptpt})"
    },
    {
      "trigger": "GetRobArcTaskParam\t()",
      "contents": "GetRobArcTaskParam()"
    },
    {
      "trigger": "GetRobAssignedRobot\tDNBTagGroup",
      "contents": "GetRobAssignedRobot(${1:dnbtaggroup})"
    },
    {
      "trigger": "GetRobDRAccuracyProfile\tRobDrillRivetProfile,ProfileMoves",
      "contents": "GetRobDRAccuracyProfile(${1:robdrillrivetprofile}, ${2:profilemoves})"
    },
    {
      "trigger": "GetRobDRActionAuxiliaryAxisValues\tRobDrillRivetAction,ResourceOccurrence",
      "contents": "GetRobDRActionAuxiliaryAxisValues(${1:robdrillrivetaction}, ${2:resourceoccurrence})"
    },
    {
      "trigger": "GetRobDRActionDrillRivetProfile\tRobDrillRivetAction",
      "contents": "GetRobDRActionDrillRivetProfile(${1:robdrillrivetaction})"
    },
    {
      "trigger": "GetRobDRActionMfgFastener\tRobDrillRivetAction",
      "contents": "GetRobDRActionMfgFastener(${1:robdrillrivetaction})"
    },
    {
      "trigger": "GetRobDRActionObjectProfile\tRobDrillRivetAction",
      "contents": "GetRobDRActionObjectProfile(${1:robdrillrivetaction})"
    },
    {
      "trigger": "GetRobDRActionPositionCoords\tRobDrillRivetAction",
      "contents": "GetRobDRActionPositionCoords(${1:robdrillrivetaction})"
    },
    {
      "trigger": "GetRobDRActionToolProfile\tRobDrillRivetAction",
      "contents": "GetRobDRActionToolProfile(${1:robdrillrivetaction})"
    },
    {
      "trigger": "GetRobDRActionTurnNumbers\tRobDrillRivetAction",
      "contents": "GetRobDRActionTurnNumbers(${1:robdrillrivetaction})"
    },
    {
      "trigger": "GetRobDRActionTurnSigns\tRobDrillRivetAction",
      "contents": "GetRobDRActionTurnSigns(${1:robdrillrivetaction})"
    },
    {
      "trigger": "GetRobDRActionUserProfilesList\tRobDrillRivetAction",
      "contents": "GetRobDRActionUserProfilesList(${1:robdrillrivetaction})"
    },
    {
      "trigger": "GetRobDRApproachClearanceParameter\tRobDrillRivetProfile,String",
      "contents": "GetRobDRApproachClearanceParameter(${1:robdrillrivetprofile}, ${2:name})"
    },
    {
      "trigger": "GetRobDRCycleAccuracyProfile\tRobDrillRivetProfile,ProfileCycles",
      "contents": "GetRobDRCycleAccuracyProfile(${1:robdrillrivetprofile}, ${2:profilecycles})"
    },
    {
      "trigger": "GetRobDRCycleDepth\tRobDrillRivetProfile,ProfileCycles",
      "contents": "GetRobDRCycleDepth(${1:robdrillrivetprofile}, ${2:profilecycles})"
    },
    {
      "trigger": "GetRobDRCycleDepthParameter\tRobDrillRivetProfile,ProfileCycles,String",
      "contents": "GetRobDRCycleDepthParameter(${1:robdrillrivetprofile}, ${2:profilecycles}, ${3:name})"
    },
    {
      "trigger": "GetRobDRCycleDistance\tRobDrillRivetProfile,ProfileCycles",
      "contents": "GetRobDRCycleDistance(${1:robdrillrivetprofile}, ${2:profilecycles})"
    },
    {
      "trigger": "GetRobDRCycleDistanceParameter\tRobDrillRivetProfile,ProfileCycles,String",
      "contents": "GetRobDRCycleDistanceParameter(${1:robdrillrivetprofile}, ${2:profilecycles}, ${3:name})"
    },
    {
      "trigger": "GetRobDRCycleJointDirection\tRobDrillRivetProfile,ProfileCycles",
      "contents": "GetRobDRCycleJointDirection(${1:robdrillrivetprofile}, ${2:profilecycles})"
    },
    {
      "trigger": "GetRobDRCycleJointNumber\tRobDrillRivetProfile,ProfileCycles",
      "contents": "GetRobDRCycleJointNumber(${1:robdrillrivetprofile}, ${2:profilecycles})"
    },
    {
      "trigger": "GetRobDRCycleMotionProfile\tRobDrillRivetProfile,ProfileCycles",
      "contents": "GetRobDRCycleMotionProfile(${1:robdrillrivetprofile}, ${2:profilecycles})"
    },
    {
      "trigger": "GetRobDRCycleName\tRobDrillRivetProfile,ProfileCycles",
      "contents": "GetRobDRCycleName(${1:robdrillrivetprofile}, ${2:profilecycles})"
    },
    {
      "trigger": "GetRobDRCycleSimulationTime\tRobDrillRivetProfile,ProfileCycles",
      "contents": "GetRobDRCycleSimulationTime(${1:robdrillrivetprofile}, ${2:profilecycles})"
    },
    {
      "trigger": "GetRobDRCycleSimulationTimeParameter\tRobDrillRivetProfile,ProfileCycles,String",
      "contents": "GetRobDRCycleSimulationTimeParameter(${1:robdrillrivetprofile}, ${2:profilecycles}, ${3:name})"
    },
    {
      "trigger": "GetRobDRCycleStartJointValues\tRobDrillRivetProfile,ProfileCycles",
      "contents": "GetRobDRCycleStartJointValues(${1:robdrillrivetprofile}, ${2:profilecycles})"
    },
    {
      "trigger": "GetRobDRCycleTCPXOffset\tRobDrillRivetProfile,ProfileCycles",
      "contents": "GetRobDRCycleTCPXOffset(${1:robdrillrivetprofile}, ${2:profilecycles})"
    },
    {
      "trigger": "GetRobDRCycleTCPXOffsetParameter\tRobDrillRivetProfile,ProfileCycles,String",
      "contents": "GetRobDRCycleTCPXOffsetParameter(${1:robdrillrivetprofile}, ${2:profilecycles}, ${3:name})"
    },
    {
      "trigger": "GetRobDRCycleTCPYOffset\tRobDrillRivetProfile,ProfileCycles",
      "contents": "GetRobDRCycleTCPYOffset(${1:robdrillrivetprofile}, ${2:profilecycles})"
    },
    {
      "trigger": "GetRobDRCycleTCPYOffsetParameter\tRobDrillRivetProfile,ProfileCycles,String",
      "contents": "GetRobDRCycleTCPYOffsetParameter(${1:robdrillrivetprofile}, ${2:profilecycles}, ${3:name})"
    },
    {
      "trigger": "GetRobDRCycleTCPZOffset\tRobDrillRivetProfile,ProfileCycles",
      "contents": "GetRobDRCycleTCPZOffset(${1:robdrillrivetprofile}, ${2:profilecycles})"
    },
    {
      "trigger": "GetRobDRCycleTCPZOffsetParameter\tRobDrillRivetProfile,ProfileCycles,String",
      "contents": "GetRobDRCycleTCPZOffsetParameter(${1:robdrillrivetprofile}, ${2:profilecycles}, ${3:name})"
    },
    {
      "trigger": "GetRobDRCycleToolProfile\tRobDrillRivetProfile,ProfileCycles",
      "contents": "GetRobDRCycleToolProfile(${1:robdrillrivetprofile}, ${2:profilecycles})"
    },
    {
      "trigger": "GetRobDRCycles\tRobDrillRivetProfile",
      "contents": "GetRobDRCycles(${1:robdrillrivetprofile})"
    },
    {
      "trigger": "GetRobDRMotionProfile\tRobDrillRivetProfile,ProfileMoves",
      "contents": "GetRobDRMotionProfile(${1:robdrillrivetprofile}, ${2:profilemoves})"
    },
    {
      "trigger": "GetRobDRMoveStatus\tRobDrillRivetProfile,ProfileMoves",
      "contents": "GetRobDRMoveStatus(${1:robdrillrivetprofile}, ${2:profilemoves})"
    },
    {
      "trigger": "GetRobDRRetractDistanceParameter\tRobDrillRivetProfile,String",
      "contents": "GetRobDRRetractDistanceParameter(${1:robdrillrivetprofile}, ${2:name})"
    },
    {
      "trigger": "GetRobDRSeqAuxiliaryAxisValues\tRobDrillRivetAction,Integer,Feature",
      "contents": "GetRobDRSeqAuxiliaryAxisValues(${1:robdrillrivetaction}, ${2:int}, ${3:feat})"
    },
    {
      "trigger": "GetRobDRSeqConfig\tRobDrillRivetSequence,Integer",
      "contents": "GetRobDRSeqConfig(${1:robdrillrivetsequence}, ${2:int})"
    },
    {
      "trigger": "GetRobDRSeqDrillRivetProfile\tRobDrillRivetSequence,Integer",
      "contents": "GetRobDRSeqDrillRivetProfile(${1:robdrillrivetsequence}, ${2:int})"
    },
    {
      "trigger": "GetRobDRSeqElbowAngle\tRobDrillRivetSequence,Integer",
      "contents": "GetRobDRSeqElbowAngle(${1:robdrillrivetsequence}, ${2:int})"
    },
    {
      "trigger": "GetRobDRSeqInterpolMode\tRobDrillRivetSequence,Integer",
      "contents": "GetRobDRSeqInterpolMode(${1:robdrillrivetsequence}, ${2:int})"
    },
    {
      "trigger": "GetRobDRSeqMfgFastener\tRobDrillRivetSequence,Integer",
      "contents": "GetRobDRSeqMfgFastener(${1:robdrillrivetsequence}, ${2:int})"
    },
    {
      "trigger": "GetRobDRSeqMfgPattern\tRobDrillRivetSequence",
      "contents": "GetRobDRSeqMfgPattern(${1:robdrillrivetsequence})"
    },
    {
      "trigger": "GetRobDRSeqMotionType\tRobDrillRivetSequence,Integer",
      "contents": "GetRobDRSeqMotionType(${1:robdrillrivetsequence}, ${2:int})"
    },
    {
      "trigger": "GetRobDRSeqObjectProfile\tRobDrillRivetSequence,Integer",
      "contents": "GetRobDRSeqObjectProfile(${1:robdrillrivetsequence}, ${2:int})"
    },
    {
      "trigger": "GetRobDRSeqPositionCoord\tRobDrillRivetSequence,Integer",
      "contents": "GetRobDRSeqPositionCoord(${1:robdrillrivetsequence}, ${2:int})"
    },
    {
      "trigger": "GetRobDRSeqTCPOrientationMode\tRobDrillRivetSequence,Integer",
      "contents": "GetRobDRSeqTCPOrientationMode(${1:robdrillrivetsequence}, ${2:int})"
    },
    {
      "trigger": "GetRobDRSeqToolProfile\tRobDrillRivetSequence,Integer",
      "contents": "GetRobDRSeqToolProfile(${1:robdrillrivetsequence}, ${2:int})"
    },
    {
      "trigger": "GetRobDRSeqTurnNumbers\tRobDrillRivetSequence,Integer",
      "contents": "GetRobDRSeqTurnNumbers(${1:robdrillrivetsequence}, ${2:int})"
    },
    {
      "trigger": "GetRobDRSeqTurnSigns\tRobDrillRivetSequence,Integer",
      "contents": "GetRobDRSeqTurnSigns(${1:robdrillrivetsequence}, ${2:int})"
    },
    {
      "trigger": "GetRobDRSeqUserProfileList\tRobDrillRivetSequence,Integer",
      "contents": "GetRobDRSeqUserProfileList(${1:robdrillrivetsequence}, ${2:int})"
    },
    {
      "trigger": "GetRobDrillRivetTaskParam\t()",
      "contents": "GetRobDrillRivetTaskParam()"
    },
    {
      "trigger": "GetRobProcessOperation\tDNBTagGroup",
      "contents": "GetRobProcessOperation(${1:dnbtaggroup})"
    },
    {
      "trigger": "GetRobRelatedProcessOperations\tDNBResourceTask",
      "contents": "GetRobRelatedProcessOperations(${1:dnbresourcetask})"
    },
    {
      "trigger": "GetRobRelatedTasks\tDNBTagGroup",
      "contents": "GetRobRelatedTasks(${1:dnbtaggroup})"
    },
    {
      "trigger": "GetRobSpotTaskParam\t()",
      "contents": "GetRobSpotTaskParam()"
    },
    {
      "trigger": "GetRobSurfTaskParam\t()",
      "contents": "GetRobSurfTaskParam()"
    },
    {
      "trigger": "GetRobTaskParam\t()",
      "contents": "GetRobTaskParam()"
    },
    {
      "trigger": "GetRobTrajectoriesAssignedToRobot\tResourceOccurrence",
      "contents": "GetRobTrajectoriesAssignedToRobot(${1:resourceoccurrence})"
    },
    {
      "trigger": "GetRobTrajectory\tProdSystemOccurrence",
      "contents": "GetRobTrajectory(${1:prodsystemoccurrence})"
    },
    {
      "trigger": "GetRobUsedTrajectories\tDNBResourceTask,RobApplicationType",
      "contents": "GetRobUsedTrajectories(${1:dnbresourcetask}, ${2:robapplicationtype})"
    },
    {
      "trigger": "GetRobotProgramID\tDNBResourceTask,String",
      "contents": "GetRobotProgramID(${1:dnbresourcetask}, ${2:name})"
    },
    {
      "trigger": "GetRobotProgramType\tDNBResourceTask,String",
      "contents": "GetRobotProgramType(${1:dnbresourcetask}, ${2:name})"
    },
    {
      "trigger": "GetRobotSelfClrStatus\tPLMSimulationOptionsMgr",
      "contents": "GetRobotSelfClrStatus(${1:plmsimulationoptionsmgr})"
    },
    {
      "trigger": "GetRobotSelfClrValue\tPLMSimulationOptionsMgr",
      "contents": "GetRobotSelfClrValue(${1:plmsimulationoptionsmgr})"
    },
    {
      "trigger": "GetRobotTCPLocation\tRscToolProfile,ProductOccurrence",
      "contents": "GetRobotTCPLocation(${1:rsctoolprofile}, ${2:productoccurrence})"
    },
    {
      "trigger": "GetRole\tProdSystemOccurrence,FProcessOccurrence,String",
      "contents": "GetRole(${1:prodsystemoccurrence}, ${2:fprocessoccurrence}, ${3:name})"
    },
    {
      "trigger": "GetRollingDirections\tMfgProcessOccurrence,Integer,Integer",
      "contents": "GetRollingDirections(${1:mfgprocessoccurrence}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "GetRootUI\t()",
      "contents": "GetRootUI()"
    },
    {
      "trigger": "GetRootsOfFacts\tKWERuleBase",
      "contents": "GetRootsOfFacts(${1:kwerulebase})"
    },
    {
      "trigger": "GetRotationAngle\tCATEbm_NodeProfile,ANGLE,Real,Real,Real",
      "contents": "GetRotationAngle(${1:catebm_nodeprofile}, ${2:angle}, ${3:real}, ${4:real}, ${5:real})"
    },
    {
      "trigger": "GetRotationMode\tAECAlignment2DHorizontal",
      "contents": "GetRotationMode(${1:aecalignment2dhorizontal})"
    },
    {
      "trigger": "GetRoute\tBranch,Curve",
      "contents": "GetRoute(${1:branch}, ${2:curve})"
    },
    {
      "trigger": "GetRoute\tConductor,List,List",
      "contents": "GetRoute(${1:conductor}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "GetRouteBendInformation\tConductor,List,List,List",
      "contents": "GetRouteBendInformation(${1:conductor}, ${2:list}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "GetRouteGroupByName\tString",
      "contents": "GetRouteGroupByName(${1:name})"
    },
    {
      "trigger": "GetRouteGroups\tProductOccurrence",
      "contents": "GetRouteGroups(${1:productoccurrence})"
    },
    {
      "trigger": "GetRouteWithFromToLevelofOptimization\tSys3D_Route,LogicalOccurrence,List",
      "contents": "GetRouteWithFromToLevelofOptimization(${1:sys3d_route}, ${2:logicaloccurrence}, ${3:list})"
    },
    {
      "trigger": "GetRouteWithSignalLevelofOptimization\tSys3D_Route,LogicalOccurrence,List",
      "contents": "GetRouteWithSignalLevelofOptimization(${1:sys3d_route}, ${2:logicaloccurrence}, ${3:list})"
    },
    {
      "trigger": "GetRoutedSignals\tString,ProductOccurrence,LogicalOccurrence,List",
      "contents": "GetRoutedSignals(${1:name}, ${2:productoccurrence}, ${3:logicaloccurrence}, ${4:list})"
    },
    {
      "trigger": "GetRoutedSignals\tSys3DPathwaySegmentArc,List",
      "contents": "GetRoutedSignals(${1:sys3dpathwaysegmentarc}, ${2:list})"
    },
    {
      "trigger": "GetRoutes\tDIFView,List",
      "contents": "GetRoutes(${1:difview}, ${2:list})"
    },
    {
      "trigger": "GetRoutingAttributes\tRFLVPMLogicalConnection,String,Real,Real,String,String",
      "contents": "GetRoutingAttributes(${1:rflvpmlogicalconnection}, ${2:name}, ${3:real}, ${4:real}, ${5:name}, ${6:name})"
    },
    {
      "trigger": "GetRow\tEnsTechnologicalTable,Integer,List",
      "contents": "GetRow(${1:enstechnologicaltable}, ${2:int}, ${3:list})"
    },
    {
      "trigger": "GetRscAssignExpression\tRscLogicAssign",
      "contents": "GetRscAssignExpression(${1:rsclogicassign})"
    },
    {
      "trigger": "GetRscAssignValue\tRscLogicAssign",
      "contents": "GetRscAssignValue(${1:rsclogicassign})"
    },
    {
      "trigger": "GetRscAttachmentList\tRscAttachmentsMgr,Integer",
      "contents": "GetRscAttachmentList(${1:rscattachmentsmgr}, ${2:int})"
    },
    {
      "trigger": "GetRscAttachmentName\tRscAttachmentsMgr,PLMConnection",
      "contents": "GetRscAttachmentName(${1:rscattachmentsmgr}, ${2:plmconnection})"
    },
    {
      "trigger": "GetRscAttachmentObject\tRscAttachmentsMgr,Integer,PLMConnection",
      "contents": "GetRscAttachmentObject(${1:rscattachmentsmgr}, ${2:int}, ${3:plmconnection})"
    },
    {
      "trigger": "GetRscAttachmentOffset\tRscAttachmentsMgr,PLMConnection",
      "contents": "GetRscAttachmentOffset(${1:rscattachmentsmgr}, ${2:plmconnection})"
    },
    {
      "trigger": "GetRscAttachmentsMgr\tProductOccurrence",
      "contents": "GetRscAttachmentsMgr(${1:productoccurrence})"
    },
    {
      "trigger": "GetRscClearanceStatus\tPLMSimulationOptionsMgr,PLMSimRscClrContextEnum,PLMSimRscClrComponentEnum",
      "contents": "GetRscClearanceStatus(${1:plmsimulationoptionsmgr}, ${2:plmsimrscclrcontextenum}, ${3:plmsimrscclrcomponentenum})"
    },
    {
      "trigger": "GetRscClearanceValues\tPLMSimulationOptionsMgr,PLMSimRscClrContextEnum,PLMSimRscClrComponentEnum",
      "contents": "GetRscClearanceValues(${1:plmsimulationoptionsmgr}, ${2:plmsimrscclrcontextenum}, ${3:plmsimrscclrcomponentenum})"
    },
    {
      "trigger": "GetRscClearancesFlag\tDELSimFaultMonitorMgr",
      "contents": "GetRscClearancesFlag(${1:delsimfaultmonitormgr})"
    },
    {
      "trigger": "GetRscConditionExpression\tRscLogicCondition",
      "contents": "GetRscConditionExpression(${1:rsclogiccondition})"
    },
    {
      "trigger": "GetRscConditionSequence\tRscLogicCondition,Integer",
      "contents": "GetRscConditionSequence(${1:rsclogiccondition}, ${2:int})"
    },
    {
      "trigger": "GetRscConstList\tDNBResourceTask,List",
      "contents": "GetRscConstList(${1:dnbresourcetask}, ${2:list})"
    },
    {
      "trigger": "GetRscConstantDescription\tRscModelLogicMgr,String",
      "contents": "GetRscConstantDescription(${1:rscmodellogicmgr}, ${2:name})"
    },
    {
      "trigger": "GetRscConstantNames\tRscModelLogicMgr,Integer",
      "contents": "GetRscConstantNames(${1:rscmodellogicmgr}, ${2:int})"
    },
    {
      "trigger": "GetRscConstantPortNumber\tRscModelLogicMgr,String",
      "contents": "GetRscConstantPortNumber(${1:rscmodellogicmgr}, ${2:name})"
    },
    {
      "trigger": "GetRscConstantType\tRscModelLogicMgr,String",
      "contents": "GetRscConstantType(${1:rscmodellogicmgr}, ${2:name})"
    },
    {
      "trigger": "GetRscConstantValue\tRscModelLogicMgr,String",
      "contents": "GetRscConstantValue(${1:rscmodellogicmgr}, ${2:name})"
    },
    {
      "trigger": "GetRscControlLogicMgr\tProductOccurrence",
      "contents": "GetRscControlLogicMgr(${1:productoccurrence})"
    },
    {
      "trigger": "GetRscControlTimerEntity\tRscLogicControlTimer",
      "contents": "GetRscControlTimerEntity(${1:rsclogiccontroltimer})"
    },
    {
      "trigger": "GetRscControlTimerType\tRscLogicControlTimer",
      "contents": "GetRscControlTimerType(${1:rsclogiccontroltimer})"
    },
    {
      "trigger": "GetRscController\tProductOccurrence",
      "contents": "GetRscController(${1:productoccurrence})"
    },
    {
      "trigger": "GetRscControllerCategory\tRscControllerSynchronization,Integer",
      "contents": "GetRscControllerCategory(${1:rsccontrollersynchronization}, ${2:int})"
    },
    {
      "trigger": "GetRscControllerMgr\tProductOccurrence",
      "contents": "GetRscControllerMgr(${1:productoccurrence})"
    },
    {
      "trigger": "GetRscControllerSyncObjects\tRscControllerSynchronizationCategory,Integer",
      "contents": "GetRscControllerSyncObjects(${1:rsccontrollersynchronizationcategory}, ${2:int})"
    },
    {
      "trigger": "GetRscControllerSyncStatus\tRscControllerSynchronizationCategory",
      "contents": "GetRscControllerSyncStatus(${1:rsccontrollersynchronizationcategory})"
    },
    {
      "trigger": "GetRscControllerSynchronization\tProductOccurrence",
      "contents": "GetRscControllerSynchronization(${1:productoccurrence})"
    },
    {
      "trigger": "GetRscDetachSpecificToolAttach\tRscLogicToolDetach",
      "contents": "GetRscDetachSpecificToolAttach(${1:rsclogictooldetach})"
    },
    {
      "trigger": "GetRscEmptyGeometry\tProductOccurrence,List,Integer",
      "contents": "GetRscEmptyGeometry(${1:productoccurrence}, ${2:list}, ${3:int})"
    },
    {
      "trigger": "GetRscForLoopFrom\tRscLogicForLoop",
      "contents": "GetRscForLoopFrom(${1:rsclogicforloop})"
    },
    {
      "trigger": "GetRscForLoopIndexName\tRscLogicForLoop",
      "contents": "GetRscForLoopIndexName(${1:rsclogicforloop})"
    },
    {
      "trigger": "GetRscForLoopTo\tRscLogicForLoop",
      "contents": "GetRscForLoopTo(${1:rsclogicforloop})"
    },
    {
      "trigger": "GetRscForLoopType\tRscLogicForLoop",
      "contents": "GetRscForLoopType(${1:rsclogicforloop})"
    },
    {
      "trigger": "GetRscGotoLabelInstruction\tRscLogicGoto",
      "contents": "GetRscGotoLabelInstruction(${1:rsclogicgoto})"
    },
    {
      "trigger": "GetRscGotoLabelName\tRscLogicGoto",
      "contents": "GetRscGotoLabelName(${1:rsclogicgoto})"
    },
    {
      "trigger": "GetRscGrabbedElements\tRscLogicGrab,ProductOccurrence",
      "contents": "GetRscGrabbedElements(${1:rsclogicgrab}, ${2:productoccurrence})"
    },
    {
      "trigger": "GetRscGrabbingCurrentPort\tRscLogicGrab",
      "contents": "GetRscGrabbingCurrentPort(${1:rsclogicgrab})"
    },
    {
      "trigger": "GetRscGrabbingCurrentSimulationSensor\tRscLogicGrab",
      "contents": "GetRscGrabbingCurrentSimulationSensor(${1:rsclogicgrab})"
    },
    {
      "trigger": "GetRscGrabbingCurrentTool\tRscLogicGrab,ProductOccurrence",
      "contents": "GetRscGrabbingCurrentTool(${1:rsclogicgrab}, ${2:productoccurrence})"
    },
    {
      "trigger": "GetRscGrabbingInstructions\tRscLogicRelease",
      "contents": "GetRscGrabbingInstructions(${1:rsclogicrelease})"
    },
    {
      "trigger": "GetRscGrabbingMode\tRscLogicGrab",
      "contents": "GetRscGrabbingMode(${1:rsclogicgrab})"
    },
    {
      "trigger": "GetRscGrabbingPorts\tRscLogicGrab,ProductOccurrence",
      "contents": "GetRscGrabbingPorts(${1:rsclogicgrab}, ${2:productoccurrence})"
    },
    {
      "trigger": "GetRscGrabbingSimulationSensorDetection\tRscLogicGrab",
      "contents": "GetRscGrabbingSimulationSensorDetection(${1:rsclogicgrab})"
    },
    {
      "trigger": "GetRscGrabbingSimulationSensors\tRscLogicGrab",
      "contents": "GetRscGrabbingSimulationSensors(${1:rsclogicgrab})"
    },
    {
      "trigger": "GetRscGrabbingTools\tRscLogicGrab,ProductOccurrence",
      "contents": "GetRscGrabbingTools(${1:rsclogicgrab}, ${2:productoccurrence})"
    },
    {
      "trigger": "GetRscIOSignalDefaultValue\tRscModelLogicMgr,String",
      "contents": "GetRscIOSignalDefaultValue(${1:rscmodellogicmgr}, ${2:name})"
    },
    {
      "trigger": "GetRscIOSignalDescription\tRscModelLogicMgr,String",
      "contents": "GetRscIOSignalDescription(${1:rscmodellogicmgr}, ${2:name})"
    },
    {
      "trigger": "GetRscIOSignalDirection\tRscModelLogicMgr,String",
      "contents": "GetRscIOSignalDirection(${1:rscmodellogicmgr}, ${2:name})"
    },
    {
      "trigger": "GetRscIOSignalNames\tRscModelLogicMgr,Integer",
      "contents": "GetRscIOSignalNames(${1:rscmodellogicmgr}, ${2:int})"
    },
    {
      "trigger": "GetRscIOSignalPortNumber\tRscModelLogicMgr,String",
      "contents": "GetRscIOSignalPortNumber(${1:rscmodellogicmgr}, ${2:name})"
    },
    {
      "trigger": "GetRscIOSignalType\tRscModelLogicMgr,String",
      "contents": "GetRscIOSignalType(${1:rscmodellogicmgr}, ${2:name})"
    },
    {
      "trigger": "GetRscInstructionCommentStatus\tRscLogicInstruction",
      "contents": "GetRscInstructionCommentStatus(${1:rsclogicinstruction})"
    },
    {
      "trigger": "GetRscInstructionDisplayName\tRscLogicInstruction",
      "contents": "GetRscInstructionDisplayName(${1:rsclogicinstruction})"
    },
    {
      "trigger": "GetRscInstructionIndex\tRscLogicInstruction",
      "contents": "GetRscInstructionIndex(${1:rsclogicinstruction})"
    },
    {
      "trigger": "GetRscInstructionLabel\tRscLogicInstruction",
      "contents": "GetRscInstructionLabel(${1:rsclogicinstruction})"
    },
    {
      "trigger": "GetRscLinkDetailsFromCapableRsc\tPLMConnection,ProdSystemOccurrence,List",
      "contents": "GetRscLinkDetailsFromCapableRsc(${1:plmconnection}, ${2:prodsystemoccurrence}, ${3:list})"
    },
    {
      "trigger": "GetRscLocalConstantDescription\tRscLogicTask,String",
      "contents": "GetRscLocalConstantDescription(${1:rsclogictask}, ${2:name})"
    },
    {
      "trigger": "GetRscLocalConstantNames\tRscLogicTask,Integer",
      "contents": "GetRscLocalConstantNames(${1:rsclogictask}, ${2:int})"
    },
    {
      "trigger": "GetRscLocalConstantPortNumber\tRscLogicTask,String",
      "contents": "GetRscLocalConstantPortNumber(${1:rsclogictask}, ${2:name})"
    },
    {
      "trigger": "GetRscLocalConstantType\tRscLogicTask,String",
      "contents": "GetRscLocalConstantType(${1:rsclogictask}, ${2:name})"
    },
    {
      "trigger": "GetRscLocalConstantValue\tRscLogicTask,String",
      "contents": "GetRscLocalConstantValue(${1:rsclogictask}, ${2:name})"
    },
    {
      "trigger": "GetRscLocalIOSignalDefaultValue\tRscLogicTask,String",
      "contents": "GetRscLocalIOSignalDefaultValue(${1:rsclogictask}, ${2:name})"
    },
    {
      "trigger": "GetRscLocalIOSignalDescription\tRscLogicTask,String",
      "contents": "GetRscLocalIOSignalDescription(${1:rsclogictask}, ${2:name})"
    },
    {
      "trigger": "GetRscLocalIOSignalDirection\tRscLogicTask,String",
      "contents": "GetRscLocalIOSignalDirection(${1:rsclogictask}, ${2:name})"
    },
    {
      "trigger": "GetRscLocalIOSignalNames\tRscLogicTask,Integer",
      "contents": "GetRscLocalIOSignalNames(${1:rsclogictask}, ${2:int})"
    },
    {
      "trigger": "GetRscLocalIOSignalPortNumber\tRscLogicTask,String",
      "contents": "GetRscLocalIOSignalPortNumber(${1:rsclogictask}, ${2:name})"
    },
    {
      "trigger": "GetRscLocalIOSignalType\tRscLogicTask,String",
      "contents": "GetRscLocalIOSignalType(${1:rsclogictask}, ${2:name})"
    },
    {
      "trigger": "GetRscLocalVarList\tDNBResourceTask,List",
      "contents": "GetRscLocalVarList(${1:dnbresourcetask}, ${2:list})"
    },
    {
      "trigger": "GetRscLocalVariableDescription\tRscLogicTask,String",
      "contents": "GetRscLocalVariableDescription(${1:rsclogictask}, ${2:name})"
    },
    {
      "trigger": "GetRscLocalVariableNames\tRscLogicTask,Integer",
      "contents": "GetRscLocalVariableNames(${1:rsclogictask}, ${2:int})"
    },
    {
      "trigger": "GetRscLocalVariablePortNumber\tRscLogicTask,String",
      "contents": "GetRscLocalVariablePortNumber(${1:rsclogictask}, ${2:name})"
    },
    {
      "trigger": "GetRscLocalVariableType\tRscLogicTask,String",
      "contents": "GetRscLocalVariableType(${1:rsclogictask}, ${2:name})"
    },
    {
      "trigger": "GetRscLocalVariableValue\tRscLogicTask,String",
      "contents": "GetRscLocalVariableValue(${1:rsclogictask}, ${2:name})"
    },
    {
      "trigger": "GetRscLogicMessage\tRscLogicEntity",
      "contents": "GetRscLogicMessage(${1:rsclogicentity})"
    },
    {
      "trigger": "GetRscLogicSimSensorBeamDirection\tRscLogicSimSensor",
      "contents": "GetRscLogicSimSensorBeamDirection(${1:rsclogicsimsensor})"
    },
    {
      "trigger": "GetRscLogicSimSensorBeamLength\tRscLogicSimSensor",
      "contents": "GetRscLogicSimSensorBeamLength(${1:rsclogicsimsensor})"
    },
    {
      "trigger": "GetRscLogicSimSensorBeamOffset\tRscLogicSimSensor",
      "contents": "GetRscLogicSimSensorBeamOffset(${1:rsclogicsimsensor})"
    },
    {
      "trigger": "GetRscLogicStatus\tRscLogicEntity",
      "contents": "GetRscLogicStatus(${1:rsclogicentity})"
    },
    {
      "trigger": "GetRscModelLogicMgr\tProductOccurrence",
      "contents": "GetRscModelLogicMgr(${1:productoccurrence})"
    },
    {
      "trigger": "GetRscModelType\tRscControllerMgr",
      "contents": "GetRscModelType(${1:rsccontrollermgr})"
    },
    {
      "trigger": "GetRscModelTypeID\tRscControllerMgr",
      "contents": "GetRscModelTypeID(${1:rsccontrollermgr})"
    },
    {
      "trigger": "GetRscMotionGroupControllers\tRscMotionGroup,Integer,ProductOccurrence",
      "contents": "GetRscMotionGroupControllers(${1:rscmotiongroup}, ${2:int}, ${3:productoccurrence})"
    },
    {
      "trigger": "GetRscMotionGroupPrimaryResource\tRscMotionGroup,ProductOccurrence",
      "contents": "GetRscMotionGroupPrimaryResource(${1:rscmotiongroup}, ${2:productoccurrence})"
    },
    {
      "trigger": "GetRscMotionGroupResources\tRscMotionGroup,Integer,ProductOccurrence",
      "contents": "GetRscMotionGroupResources(${1:rscmotiongroup}, ${2:int}, ${3:productoccurrence})"
    },
    {
      "trigger": "GetRscMounts\tProductOccurrence",
      "contents": "GetRscMounts(${1:productoccurrence})"
    },
    {
      "trigger": "GetRscMultiRobotPathPlanner\tProductOccurrence",
      "contents": "GetRscMultiRobotPathPlanner(${1:productoccurrence})"
    },
    {
      "trigger": "GetRscNodeVisibilityStatus\tFeature,Integer,List",
      "contents": "GetRscNodeVisibilityStatus(${1:feat}, ${2:int}, ${3:list})"
    },
    {
      "trigger": "GetRscObjectSpecificID\tFeature",
      "contents": "GetRscObjectSpecificID(${1:feat})"
    },
    {
      "trigger": "GetRscOccMoveFlag\tProductOccurrence,Integer",
      "contents": "GetRscOccMoveFlag(${1:productoccurrence}, ${2:int})"
    },
    {
      "trigger": "GetRscOwningTask\tRscLogicInstruction",
      "contents": "GetRscOwningTask(${1:rsclogicinstruction})"
    },
    {
      "trigger": "GetRscParentInstruction\tRscLogicInstruction",
      "contents": "GetRscParentInstruction(${1:rsclogicinstruction})"
    },
    {
      "trigger": "GetRscPathPlanner\tProductOccurrence,RscMotionGroup",
      "contents": "GetRscPathPlanner(${1:productoccurrence}, ${2:rscmotiongroup})"
    },
    {
      "trigger": "GetRscPerformRemoveRobotAreaOptions\t()",
      "contents": "GetRscPerformRemoveRobotAreaOptions()"
    },
    {
      "trigger": "GetRscPortAxis\tRscPortsMgr,VPMPort",
      "contents": "GetRscPortAxis(${1:rscportsmgr}, ${2:vpmport})"
    },
    {
      "trigger": "GetRscPortName\tRscPortsMgr,VPMPort",
      "contents": "GetRscPortName(${1:rscportsmgr}, ${2:vpmport})"
    },
    {
      "trigger": "GetRscPortObjects\tRscPortsMgr,Integer",
      "contents": "GetRscPortObjects(${1:rscportsmgr}, ${2:int})"
    },
    {
      "trigger": "GetRscPortPart\tRscPortsMgr,VPMPort",
      "contents": "GetRscPortPart(${1:rscportsmgr}, ${2:vpmport})"
    },
    {
      "trigger": "GetRscPortTransfo\tRscPortsMgr,VPMPort,Integer",
      "contents": "GetRscPortTransfo(${1:rscportsmgr}, ${2:vpmport}, ${3:int})"
    },
    {
      "trigger": "GetRscPorts\tProductOccurrence",
      "contents": "GetRscPorts(${1:productoccurrence})"
    },
    {
      "trigger": "GetRscPulseDelay\tRscLogicPulse",
      "contents": "GetRscPulseDelay(${1:rsclogicpulse})"
    },
    {
      "trigger": "GetRscPulseDuration\tRscLogicPulse",
      "contents": "GetRscPulseDuration(${1:rsclogicpulse})"
    },
    {
      "trigger": "GetRscPulseEntity\tRscLogicPulse",
      "contents": "GetRscPulseEntity(${1:rsclogicpulse})"
    },
    {
      "trigger": "GetRscPulseInvertMode\tRscLogicPulse",
      "contents": "GetRscPulseInvertMode(${1:rsclogicpulse})"
    },
    {
      "trigger": "GetRscPulseValue\tRscLogicPulse",
      "contents": "GetRscPulseValue(${1:rsclogicpulse})"
    },
    {
      "trigger": "GetRscReleaseSpecificGrabbing\tRscLogicRelease",
      "contents": "GetRscReleaseSpecificGrabbing(${1:rsclogicrelease})"
    },
    {
      "trigger": "GetRscReleaseSpecificReleaseElements\tRscLogicRelease,ProductOccurrence,ProductOccurrence",
      "contents": "GetRscReleaseSpecificReleaseElements(${1:rsclogicrelease}, ${2:productoccurrence}, ${3:productoccurrence})"
    },
    {
      "trigger": "GetRscReleasingType\tRscLogicRelease",
      "contents": "GetRscReleasingType(${1:rsclogicrelease})"
    },
    {
      "trigger": "GetRscRunArgumentIDs\tRscLogicRun",
      "contents": "GetRscRunArgumentIDs(${1:rsclogicrun})"
    },
    {
      "trigger": "GetRscRunArgumentValue\tRscLogicRun,String",
      "contents": "GetRscRunArgumentValue(${1:rsclogicrun}, ${2:name})"
    },
    {
      "trigger": "GetRscRunArgumentValues\tRscLogicRun",
      "contents": "GetRscRunArgumentValues(${1:rsclogicrun})"
    },
    {
      "trigger": "GetRscSequence\tRscLogicTask",
      "contents": "GetRscSequence(${1:rsclogictask})"
    },
    {
      "trigger": "GetRscServiceName\tRscLogicServiceCall",
      "contents": "GetRscServiceName(${1:rsclogicservicecall})"
    },
    {
      "trigger": "GetRscSweptVolumeMgr\tProductOccurrence",
      "contents": "GetRscSweptVolumeMgr(${1:productoccurrence})"
    },
    {
      "trigger": "GetRscTaskCycleTime\tDNBResourceTask",
      "contents": "GetRscTaskCycleTime(${1:dnbresourcetask})"
    },
    {
      "trigger": "GetRscTaskName\tRscLogicRunTask",
      "contents": "GetRscTaskName(${1:rsclogicruntask})"
    },
    {
      "trigger": "GetRscTaskType\tRscLogicTask",
      "contents": "GetRscTaskType(${1:rsclogictask})"
    },
    {
      "trigger": "GetRscTimerDescription\tRscModelLogicMgr,String",
      "contents": "GetRscTimerDescription(${1:rscmodellogicmgr}, ${2:name})"
    },
    {
      "trigger": "GetRscTimerNames\tRscModelLogicMgr",
      "contents": "GetRscTimerNames(${1:rscmodellogicmgr})"
    },
    {
      "trigger": "GetRscTimerPortNumber\tRscModelLogicMgr,String",
      "contents": "GetRscTimerPortNumber(${1:rscmodellogicmgr}, ${2:name})"
    },
    {
      "trigger": "GetRscToolAttachCurrentPort\tRscLogicToolAttach",
      "contents": "GetRscToolAttachCurrentPort(${1:rsclogictoolattach})"
    },
    {
      "trigger": "GetRscToolAttachInstructions\tRscLogicToolDetach",
      "contents": "GetRscToolAttachInstructions(${1:rsclogictooldetach})"
    },
    {
      "trigger": "GetRscToolAttachPorts\tRscLogicToolAttach",
      "contents": "GetRscToolAttachPorts(${1:rsclogictoolattach})"
    },
    {
      "trigger": "GetRscToolAttachResources\tRscLogicToolAttach,ProductOccurrence",
      "contents": "GetRscToolAttachResources(${1:rsclogictoolattach}, ${2:productoccurrence})"
    },
    {
      "trigger": "GetRscToolDetachMode\tRscLogicToolDetach",
      "contents": "GetRscToolDetachMode(${1:rsclogictooldetach})"
    },
    {
      "trigger": "GetRscTransform\t()",
      "contents": "GetRscTransform()"
    },
    {
      "trigger": "GetRscTransformAbsPosition\tFeature",
      "contents": "GetRscTransformAbsPosition(${1:feat})"
    },
    {
      "trigger": "GetRscUsageFromCapableRscLink\tPLMConnection,ProdSystemOccurrence,VPMInstance",
      "contents": "GetRscUsageFromCapableRscLink(${1:plmconnection}, ${2:prodsystemoccurrence}, ${3:vpminstance})"
    },
    {
      "trigger": "GetRscVariableDescription\tRscModelLogicMgr,String",
      "contents": "GetRscVariableDescription(${1:rscmodellogicmgr}, ${2:name})"
    },
    {
      "trigger": "GetRscVariableNames\tRscModelLogicMgr,Integer",
      "contents": "GetRscVariableNames(${1:rscmodellogicmgr}, ${2:int})"
    },
    {
      "trigger": "GetRscVariablePortNumber\tRscModelLogicMgr,String",
      "contents": "GetRscVariablePortNumber(${1:rscmodellogicmgr}, ${2:name})"
    },
    {
      "trigger": "GetRscVariableType\tRscModelLogicMgr,String",
      "contents": "GetRscVariableType(${1:rscmodellogicmgr}, ${2:name})"
    },
    {
      "trigger": "GetRscVariableValue\tRscModelLogicMgr,String",
      "contents": "GetRscVariableValue(${1:rscmodellogicmgr}, ${2:name})"
    },
    {
      "trigger": "GetRscWaitCondition\tRscLogicWait",
      "contents": "GetRscWaitCondition(${1:rsclogicwait})"
    },
    {
      "trigger": "GetRscWaitTimeOut\tRscLogicWait",
      "contents": "GetRscWaitTimeOut(${1:rsclogicwait})"
    },
    {
      "trigger": "GetRscWhileLoopCondition\tRscLogicWhileLoop",
      "contents": "GetRscWhileLoopCondition(${1:rsclogicwhileloop})"
    },
    {
      "trigger": "GetRscWhileLoopType\tRscLogicWhileLoop",
      "contents": "GetRscWhileLoopType(${1:rsclogicwhileloop})"
    },
    {
      "trigger": "GetRuleBase\tKWEGenericRuleBaseComponent",
      "contents": "GetRuleBase(${1:kwegenericrulebasecomponent})"
    },
    {
      "trigger": "GetRuleSet\tSys3D_Route,Sys3DRoutingRuleSet",
      "contents": "GetRuleSet(${1:sys3d_route}, ${2:sys3droutingruleset})"
    },
    {
      "trigger": "GetRuleSetName\tSIMItfSimulation,String",
      "contents": "GetRuleSetName(${1:simitfsimulation}, ${2:name})"
    },
    {
      "trigger": "GetSamplingAccuracyLevel\tRscMultiRobotPathPlanner",
      "contents": "GetSamplingAccuracyLevel(${1:rscmultirobotpathplanner})"
    },
    {
      "trigger": "GetScallops\tSddPanel,List",
      "contents": "GetScallops(${1:sddpanel}, ${2:list})"
    },
    {
      "trigger": "GetScenarioAnalysisStatus\tDELMfgSimTSAScenario,String",
      "contents": "GetScenarioAnalysisStatus(${1:delmfgsimtsascenario}, ${2:name})"
    },
    {
      "trigger": "GetScenarioParametersValues\tDELMfgSimTSAScenario,String",
      "contents": "GetScenarioParametersValues(${1:delmfgsimtsascenario}, ${2:name})"
    },
    {
      "trigger": "GetScenarioRootSequence\tDELMfgSimScenario",
      "contents": "GetScenarioRootSequence(${1:delmfgsimscenario})"
    },
    {
      "trigger": "GetSchActiveSheetAndView\tDIFSheet,DIFViewInstance",
      "contents": "GetSchActiveSheetAndView(${1:difsheet}, ${2:difviewinstance})"
    },
    {
      "trigger": "GetSchSheetConnectorInformations\tPLMCoreInstance,List",
      "contents": "GetSchSheetConnectorInformations(${1:plmcoreinstance}, ${2:list})"
    },
    {
      "trigger": "GetSchSymbolInformations\tPLMCoreInstance,List,List,List",
      "contents": "GetSchSymbolInformations(${1:plmcoreinstance}, ${2:list}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "GetSchematicRoutedLengthPerView\tPLMCoreInstance,List,List,List",
      "contents": "GetSchematicRoutedLengthPerView(${1:plmcoreinstance}, ${2:list}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "GetScopedProduct\tDELFmiFunctionReference",
      "contents": "GetScopedProduct(${1:delfmifunctionreference})"
    },
    {
      "trigger": "GetSecondFeatureID\tPLMPIMMetricReference,String",
      "contents": "GetSecondFeatureID(${1:plmpimmetricreference}, ${2:name})"
    },
    {
      "trigger": "GetSecondFeatureName\tPLMPIMMetricReference,String",
      "contents": "GetSecondFeatureName(${1:plmpimmetricreference}, ${2:name})"
    },
    {
      "trigger": "GetSecondOffset\tSddOpening,Feature",
      "contents": "GetSecondOffset(${1:sddopening}, ${2:feat})"
    },
    {
      "trigger": "GetSecondPI\tAECAlignmentPoint",
      "contents": "GetSecondPI(${1:aecalignmentpoint})"
    },
    {
      "trigger": "GetSecondSupportOffset\tSddProfile,Feature",
      "contents": "GetSecondSupportOffset(${1:sddprofile}, ${2:feat})"
    },
    {
      "trigger": "GetSecondSurface\tSddProfile,Feature",
      "contents": "GetSecondSurface(${1:sddprofile}, ${2:feat})"
    },
    {
      "trigger": "GetSecondSurface\tSldProfile,Feature,Feature,Feature",
      "contents": "GetSecondSurface(${1:sldprofile}, ${2:feat}, ${3:feat}, ${4:feat})"
    },
    {
      "trigger": "GetSecondVPIPoint\tAECVerticalCurve",
      "contents": "GetSecondVPIPoint(${1:aecverticalcurve})"
    },
    {
      "trigger": "GetSecondaryCapableResourceLink\tPLMCoreReference,List,List,List,List",
      "contents": "GetSecondaryCapableResourceLink(${1:plmcorereference}, ${2:list}, ${3:list}, ${4:list}, ${5:list})"
    },
    {
      "trigger": "GetSecondaryFromPrimary\tDELAsmProcessCanUseCnx",
      "contents": "GetSecondaryFromPrimary(${1:delasmprocesscanusecnx})"
    },
    {
      "trigger": "GetSecondaryOwnershipVector\tFeature,List,List,List,List,List",
      "contents": "GetSecondaryOwnershipVector(${1:feat}, ${2:list}, ${3:list}, ${4:list}, ${5:list}, ${6:list})"
    },
    {
      "trigger": "GetSecondaryStacking\tSpotAssyFastenerOccurrence,FastenerStackingDirection",
      "contents": "GetSecondaryStacking(${1:spotassyfasteneroccurrence}, ${2:fastenerstackingdirection})"
    },
    {
      "trigger": "GetSectionArea\tElecCableRawMaterialCore,AREA",
      "contents": "GetSectionArea(${1:eleccablerawmaterialcore}, ${2:area})"
    },
    {
      "trigger": "GetSectionName\tAGTConnector,String",
      "contents": "GetSectionName(${1:agtconnector}, ${2:name})"
    },
    {
      "trigger": "GetSectionName\tSldProfile,String,String",
      "contents": "GetSectionName(${1:sldprofile}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "GetSectionOrientation\tHVAC_Rigid_Duct,HvacOrientation",
      "contents": "GetSectionOrientation(${1:hvac_rigid_duct}, ${2:hvacorientation})"
    },
    {
      "trigger": "GetSectionProperties\tPathwaySegment,String,Real,Real",
      "contents": "GetSectionProperties(${1:pathwaysegment}, ${2:name}, ${3:real}, ${4:real})"
    },
    {
      "trigger": "GetSeparationCode\tElec3DSegmentAnnotation,String",
      "contents": "GetSeparationCode(${1:elec3dsegmentannotation}, ${2:name})"
    },
    {
      "trigger": "GetSetupAssembly\tMfgSetupPosition,VPMInstance",
      "contents": "GetSetupAssembly(${1:mfgsetupposition}, ${2:vpminstance})"
    },
    {
      "trigger": "GetSetupPosition\tManufacturingSetup,String,MfgSetupPosition",
      "contents": "GetSetupPosition(${1:manufacturingsetup}, ${2:name}, ${3:mfgsetupposition})"
    },
    {
      "trigger": "GetShapeBody\tMechanicalFeature",
      "contents": "GetShapeBody(${1:mechanicalfeature})"
    },
    {
      "trigger": "GetShapeCode\tAECRebarLayer",
      "contents": "GetShapeCode(${1:aecrebarlayer})"
    },
    {
      "trigger": "GetShapeReference\tAGTDraughtStop,Feature",
      "contents": "GetShapeReference(${1:agtdraughtstop}, ${2:feat})"
    },
    {
      "trigger": "GetShapes\tDIFView,List",
      "contents": "GetShapes(${1:difview}, ${2:list})"
    },
    {
      "trigger": "GetShortTangentLength\tAECHorizontalClothoid",
      "contents": "GetShortTangentLength(${1:aechorizontalclothoid})"
    },
    {
      "trigger": "GetSignal\tSys3D_Route,Feature",
      "contents": "GetSignal(${1:sys3d_route}, ${2:feat})"
    },
    {
      "trigger": "GetSignalIdentifier\tElec3DCableCore,String",
      "contents": "GetSignalIdentifier(${1:elec3dcablecore}, ${2:name})"
    },
    {
      "trigger": "GetSimClashSpecs\t()",
      "contents": "GetSimClashSpecs()"
    },
    {
      "trigger": "GetSimClashSpecsDetectionMode\tPLMSimClashSpecsType,Integer",
      "contents": "GetSimClashSpecsDetectionMode(${1:plmsimclashspecstype}, ${2:int})"
    },
    {
      "trigger": "GetSimClashSpecsFeedbackMode\tPLMSimClashSpecsType,Integer",
      "contents": "GetSimClashSpecsFeedbackMode(${1:plmsimclashspecstype}, ${2:int})"
    },
    {
      "trigger": "GetSimScenarioFromName\tString",
      "contents": "GetSimScenarioFromName(${1:name})"
    },
    {
      "trigger": "GetSimulatedModel\tSIMObjSimulationObjectGeneric",
      "contents": "GetSimulatedModel(${1:simobjsimulationobjectgeneric})"
    },
    {
      "trigger": "GetSimulatedRobotConfigs\tDELMfgSimTSAScenario,ResourceOccurrence",
      "contents": "GetSimulatedRobotConfigs(${1:delmfgsimtsascenario}, ${2:resourceoccurrence})"
    },
    {
      "trigger": "GetSimulationEndDate\tFFS_ShiftModel,Integer,Integer,Integer,Integer,Integer,Integer",
      "contents": "GetSimulationEndDate(${1:ffs_shiftmodel}, ${2:int}, ${3:int}, ${4:int}, ${5:int}, ${6:int}, ${7:int})"
    },
    {
      "trigger": "GetSimulationResult\tModelicaAllTypes,String,List",
      "contents": "GetSimulationResult(${1:modelicaalltypes}, ${2:name}, ${3:list})"
    },
    {
      "trigger": "GetSimulationStartDate\tFFS_ShiftModel,Integer,Integer,Integer,Integer,Integer,Integer",
      "contents": "GetSimulationStartDate(${1:ffs_shiftmodel}, ${2:int}, ${3:int}, ${4:int}, ${5:int}, ${6:int}, ${7:int})"
    },
    {
      "trigger": "GetSimulationTime\tManufacturingActivity",
      "contents": "GetSimulationTime(${1:manufacturingactivity})"
    },
    {
      "trigger": "GetSize\tEnsTechnologicalTable,Integer,Integer",
      "contents": "GetSize(${1:enstechnologicaltable}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "GetSketch\tSddContourBased,Feature",
      "contents": "GetSketch(${1:sddcontourbased}, ${2:feat})"
    },
    {
      "trigger": "GetSketchedLaw\t()",
      "contents": "GetSketchedLaw()"
    },
    {
      "trigger": "GetSlope\tAECSlopeProtection",
      "contents": "GetSlope(${1:aecslopeprotection})"
    },
    {
      "trigger": "GetSlotParameter\tSddOpening,String,Feature",
      "contents": "GetSlotParameter(${1:sddopening}, ${2:name}, ${3:feat})"
    },
    {
      "trigger": "GetSlots\tSddPanel,List",
      "contents": "GetSlots(${1:sddpanel}, ${2:list})"
    },
    {
      "trigger": "GetSource\tDNBTagMeasure,Feature,ProductOccurrence",
      "contents": "GetSource(${1:dnbtagmeasure}, ${2:feat}, ${3:productoccurrence})"
    },
    {
      "trigger": "GetSourceOAT\tDNBTagMeasure,Real,Real,Real",
      "contents": "GetSourceOAT(${1:dnbtagmeasure}, ${2:real}, ${3:real}, ${4:real})"
    },
    {
      "trigger": "GetSourceQuaternions\tDNBTagMeasure,Real,Real,Real,Real",
      "contents": "GetSourceQuaternions(${1:dnbtagmeasure}, ${2:real}, ${3:real}, ${4:real}, ${5:real})"
    },
    {
      "trigger": "GetSourceRPY\tDNBTagMeasure,Real,Real,Real",
      "contents": "GetSourceRPY(${1:dnbtagmeasure}, ${2:real}, ${3:real}, ${4:real})"
    },
    {
      "trigger": "GetSourceReferential\tDNBTagMeasure,Integer,List",
      "contents": "GetSourceReferential(${1:dnbtagmeasure}, ${2:int}, ${3:list})"
    },
    {
      "trigger": "GetSourceXYZ\tDNBTagMeasure,Real,Real,Real",
      "contents": "GetSourceXYZ(${1:dnbtagmeasure}, ${2:real}, ${3:real}, ${4:real})"
    },
    {
      "trigger": "GetSourceZYZ\tDNBTagMeasure,Real,Real,Real",
      "contents": "GetSourceZYZ(${1:dnbtagmeasure}, ${2:real}, ${3:real}, ${4:real})"
    },
    {
      "trigger": "GetSpaceClone\tProductOccurrence",
      "contents": "GetSpaceClone(${1:productoccurrence})"
    },
    {
      "trigger": "GetSpaceType\tLiveArchiSpace,AGTSpaceType",
      "contents": "GetSpaceType(${1:livearchispace}, ${2:agtspacetype})"
    },
    {
      "trigger": "GetSpaceWallThickness\tLiveArchiSpace,LENGTH,LENGTH",
      "contents": "GetSpaceWallThickness(${1:livearchispace}, ${2:len}, ${3:len})"
    },
    {
      "trigger": "GetSpacing\tAECRebarLayer",
      "contents": "GetSpacing(${1:aecrebarlayer})"
    },
    {
      "trigger": "GetSpacingOffset\tSddOpening,Feature",
      "contents": "GetSpacingOffset(${1:sddopening}, ${2:feat})"
    },
    {
      "trigger": "GetSpatialOwner\tDNBTag,Feature,Feature",
      "contents": "GetSpatialOwner(${1:dnbtag}, ${2:feat}, ${3:feat})"
    },
    {
      "trigger": "GetSpecName\tHVAC_Duct_Occurrence",
      "contents": "GetSpecName(${1:hvac_duct_occurrence})"
    },
    {
      "trigger": "GetSpecificProfileType\tRscControllerProfile,String",
      "contents": "GetSpecificProfileType(${1:rsccontrollerprofile}, ${2:name})"
    },
    {
      "trigger": "GetSpecificationContent\tEnsSpecification,String,List",
      "contents": "GetSpecificationContent(${1:ensspecification}, ${2:name}, ${3:list})"
    },
    {
      "trigger": "GetSpecificationObject\tHVAC_Duct_Occurrence",
      "contents": "GetSpecificationObject(${1:hvac_duct_occurrence})"
    },
    {
      "trigger": "GetSpecificationType\tSIMItfSimulation,PIM_StandardSpec",
      "contents": "GetSpecificationType(${1:simitfsimulation}, ${2:pim_standardspec})"
    },
    {
      "trigger": "GetSpecifiedTrain\tFFS_TransportRouteGroup",
      "contents": "GetSpecifiedTrain(${1:ffs_transportroutegroup})"
    },
    {
      "trigger": "GetSpeed\tAECAlignment2DHorizontal,LENGTH",
      "contents": "GetSpeed(${1:aecalignment2dhorizontal}, ${2:len})"
    },
    {
      "trigger": "GetSpeed\tAECAlignmentPoint",
      "contents": "GetSpeed(${1:aecalignmentpoint})"
    },
    {
      "trigger": "GetSpeedUnit\tRscMotionProfile,RscMotionType",
      "contents": "GetSpeedUnit(${1:rscmotionprofile}, ${2:rscmotiontype})"
    },
    {
      "trigger": "GetSpeedValue\tRscMotionProfile,RscMotionType",
      "contents": "GetSpeedValue(${1:rscmotionprofile}, ${2:rscmotiontype})"
    },
    {
      "trigger": "GetSpiralA\tAECHorizontalClothoid",
      "contents": "GetSpiralA(${1:aechorizontalclothoid})"
    },
    {
      "trigger": "GetSplitplates\tSddPanel,List",
      "contents": "GetSplitplates(${1:sddpanel}, ${2:list})"
    },
    {
      "trigger": "GetSpoolMembers\tHVAC_Spool_Occurrence",
      "contents": "GetSpoolMembers(${1:hvac_spool_occurrence})"
    },
    {
      "trigger": "GetSpoolMode\tHVAC_Spool_Occurrence",
      "contents": "GetSpoolMode(${1:hvac_spool_occurrence})"
    },
    {
      "trigger": "GetSpoolName\tHVAC_Duct_Occurrence",
      "contents": "GetSpoolName(${1:hvac_duct_occurrence})"
    },
    {
      "trigger": "GetSpoolObject\tHVAC_Duct_Occurrence",
      "contents": "GetSpoolObject(${1:hvac_duct_occurrence})"
    },
    {
      "trigger": "GetSpotMoveStatus\tDNBSpotProfile,DNBSpotMoves",
      "contents": "GetSpotMoveStatus(${1:dnbspotprofile}, ${2:dnbspotmoves})"
    },
    {
      "trigger": "GetSpotMoveStatusProfile\tDNBSpotProfile,DNBSpotMoves",
      "contents": "GetSpotMoveStatusProfile(${1:dnbspotprofile}, ${2:dnbspotmoves})"
    },
    {
      "trigger": "GetSpotMoveStatusProfileName\tDNBSpotProfile,DNBSpotMoves",
      "contents": "GetSpotMoveStatusProfileName(${1:dnbspotprofile}, ${2:dnbspotmoves})"
    },
    {
      "trigger": "GetSpotTrajectoryType\tDELPointTrajectory",
      "contents": "GetSpotTrajectoryType(${1:delpointtrajectory})"
    },
    {
      "trigger": "GetStackParts\tFastenerStacking,List",
      "contents": "GetStackParts(${1:fastenerstacking}, ${2:list})"
    },
    {
      "trigger": "GetStackThickness\tSpotInstance,LENGTH",
      "contents": "GetStackThickness(${1:spotinstance}, ${2:len})"
    },
    {
      "trigger": "GetStackings\tBundleFastenerAbstract,List",
      "contents": "GetStackings(${1:bundlefastenerabstract}, ${2:list})"
    },
    {
      "trigger": "GetStackings\tFastenerInstance,Boolean,List",
      "contents": "GetStackings(${1:fastenerinstance}, ${2:bool}, ${3:list})"
    },
    {
      "trigger": "GetStandardCeilingPanels\tLiveArchiCeiling,List",
      "contents": "GetStandardCeilingPanels(${1:livearchiceiling}, ${2:list})"
    },
    {
      "trigger": "GetStandardContourParms\tSddOpening,String,String,Feature",
      "contents": "GetStandardContourParms(${1:sddopening}, ${2:name}, ${3:name}, ${4:feat})"
    },
    {
      "trigger": "GetStandardModeType\tSldOpening,Integer",
      "contents": "GetStandardModeType(${1:sldopening}, ${2:int})"
    },
    {
      "trigger": "GetStartElevation\tAECVerticalCurve",
      "contents": "GetStartElevation(${1:aecverticalcurve})"
    },
    {
      "trigger": "GetStartEndCutAngle\tSddFlange,Feature",
      "contents": "GetStartEndCutAngle(${1:sddflange}, ${2:feat})"
    },
    {
      "trigger": "GetStartEndCutDistance\tSddFlange,Feature",
      "contents": "GetStartEndCutDistance(${1:sddflange}, ${2:feat})"
    },
    {
      "trigger": "GetStartEndCutOffset\tSddFlange,Feature",
      "contents": "GetStartEndCutOffset(${1:sddflange}, ${2:feat})"
    },
    {
      "trigger": "GetStartEndCutRadius\tSddFlange,Feature",
      "contents": "GetStartEndCutRadius(${1:sddflange}, ${2:feat})"
    },
    {
      "trigger": "GetStartHomePositionName\tFFS_Activity",
      "contents": "GetStartHomePositionName(${1:ffs_activity})"
    },
    {
      "trigger": "GetStartHomePositionName\tFFS_Activity,FFS_ResourcePool",
      "contents": "GetStartHomePositionName(${1:ffs_activity}, ${2:ffs_resourcepool})"
    },
    {
      "trigger": "GetStartOffset\tSddChamfer,Feature",
      "contents": "GetStartOffset(${1:sddchamfer}, ${2:feat})"
    },
    {
      "trigger": "GetStartPointDistance\tAECAlignment2DVertical",
      "contents": "GetStartPointDistance(${1:aecalignment2dvertical})"
    },
    {
      "trigger": "GetStartPosition\tAECVerticalCurve,LENGTH,LENGTH",
      "contents": "GetStartPosition(${1:aecverticalcurve}, ${2:len}, ${3:len})"
    },
    {
      "trigger": "GetStartPt\tSddMember,Feature",
      "contents": "GetStartPt(${1:sddmember}, ${2:feat})"
    },
    {
      "trigger": "GetStartPt\tSldMember,Feature,Feature,Feature",
      "contents": "GetStartPt(${1:sldmember}, ${2:feat}, ${3:feat}, ${4:feat})"
    },
    {
      "trigger": "GetStartStation\tAECVerticalCurve",
      "contents": "GetStartStation(${1:aecverticalcurve})"
    },
    {
      "trigger": "GetStationaryTipClearanceProfile\tDNBSpotProfile,DNBSpotStationaryTipClearanceMoves",
      "contents": "GetStationaryTipClearanceProfile(${1:dnbspotprofile}, ${2:dnbspotstationarytipclearancemoves})"
    },
    {
      "trigger": "GetStationaryTipClearanceProfileName\tDNBSpotProfile,DNBSpotStationaryTipClearanceMoves",
      "contents": "GetStationaryTipClearanceProfileName(${1:dnbspotprofile}, ${2:dnbspotstationarytipclearancemoves})"
    },
    {
      "trigger": "GetStationing\tAECAlignmentPoint,String,Boolean,Integer",
      "contents": "GetStationing(${1:aecalignmentpoint}, ${2:name}, ${3:bool}, ${4:int})"
    },
    {
      "trigger": "GetStationing\tAECAlignmentPoint,String,Integer,Boolean,Integer",
      "contents": "GetStationing(${1:aecalignmentpoint}, ${2:name}, ${3:int}, ${4:bool}, ${5:int})"
    },
    {
      "trigger": "GetStationingFrom3D\tFeature,Feature,String,Boolean,Integer",
      "contents": "GetStationingFrom3D(${1:feat}, ${2:feat}, ${3:name}, ${4:bool}, ${5:int})"
    },
    {
      "trigger": "GetStationingFrom3D\tFeature,Feature,String,Integer,Boolean,Integer",
      "contents": "GetStationingFrom3D(${1:feat}, ${2:feat}, ${3:name}, ${4:int}, ${5:bool}, ${6:int})"
    },
    {
      "trigger": "GetStiffener\tStructure_Stiffener,SddStiffener",
      "contents": "GetStiffener(${1:structure_stiffener}, ${2:sddstiffener})"
    },
    {
      "trigger": "GetStiffenerOnFreeEdge\tStructure_StiffenerOnFreeEdge,SddStiffenerOnFreeEdge",
      "contents": "GetStiffenerOnFreeEdge(${1:structure_stiffeneronfreeedge}, ${2:sddstiffeneronfreeedge})"
    },
    {
      "trigger": "GetStiffeners\tSldPanel,List",
      "contents": "GetStiffeners(${1:sldpanel}, ${2:list})"
    },
    {
      "trigger": "GetStoredItem\tFFS_BufferActivity",
      "contents": "GetStoredItem(${1:ffs_bufferactivity})"
    },
    {
      "trigger": "GetStrainRatiosWithArea\tMLPElastics,List,List",
      "contents": "GetStrainRatiosWithArea(${1:mlpelastics}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "GetStrokeCount\tDELSurfaceTrajectory",
      "contents": "GetStrokeCount(${1:delsurfacetrajectory})"
    },
    {
      "trigger": "GetStructureDesignObject\tVPMReference",
      "contents": "GetStructureDesignObject(${1:vpmreference})"
    },
    {
      "trigger": "GetStudy\tDELPointTrajectory",
      "contents": "GetStudy(${1:delpointtrajectory})"
    },
    {
      "trigger": "GetSubConcepts\tString,Boolean",
      "contents": "GetSubConcepts(${1:name}, ${2:bool})"
    },
    {
      "trigger": "GetSubElements\tGeometricFeature,Integer,Boolean",
      "contents": "GetSubElements(${1:geometricfeature}, ${2:int}, ${3:bool})"
    },
    {
      "trigger": "GetSubFloorColor\tLiveArchiCovering,String",
      "contents": "GetSubFloorColor(${1:livearchicovering}, ${2:name})"
    },
    {
      "trigger": "GetSubFloorMaterial\tLiveArchiCovering,String",
      "contents": "GetSubFloorMaterial(${1:livearchicovering}, ${2:name})"
    },
    {
      "trigger": "GetSubString\tString,Integer,Integer",
      "contents": "GetSubString(${1:name}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "GetSubTuples\tKWETuple,Boolean",
      "contents": "GetSubTuples(${1:kwetuple}, ${2:bool})"
    },
    {
      "trigger": "GetSubType\tElec3DBranchableAnnotation,String",
      "contents": "GetSubType(${1:elec3dbranchableannotation}, ${2:name})"
    },
    {
      "trigger": "GetSubfloorThickness\tLiveArchiCovering,LENGTH",
      "contents": "GetSubfloorThickness(${1:livearchicovering}, ${2:len})"
    },
    {
      "trigger": "GetSubstituteRelationOwner\tDELFmiMfgSubstituteCnx",
      "contents": "GetSubstituteRelationOwner(${1:delfmimfgsubstitutecnx})"
    },
    {
      "trigger": "GetSubstituteRelationSource\tDELFmiMfgSubstituteCnx,DELFmiFunctionInstance,SubstituteSRStatus,String",
      "contents": "GetSubstituteRelationSource(${1:delfmimfgsubstitutecnx}, ${2:delfmifunctioninstance}, ${3:substitutesrstatus}, ${4:name})"
    },
    {
      "trigger": "GetSubstituteRelationTarget\tDELFmiMfgSubstituteCnx,DELFmiFunctionReference,SubstituteSRStatus,Integer,String",
      "contents": "GetSubstituteRelationTarget(${1:delfmimfgsubstitutecnx}, ${2:delfmifunctionreference}, ${3:substitutesrstatus}, ${4:int}, ${5:name})"
    },
    {
      "trigger": "GetSupport\tSddPanel,Feature",
      "contents": "GetSupport(${1:sddpanel}, ${2:feat})"
    },
    {
      "trigger": "GetSupport\tSldPanel,Feature,Feature,Feature",
      "contents": "GetSupport(${1:sldpanel}, ${2:feat}, ${3:feat}, ${4:feat})"
    },
    {
      "trigger": "GetSupportLimitingObject\tSldFlange,Feature",
      "contents": "GetSupportLimitingObject(${1:sldflange}, ${2:feat})"
    },
    {
      "trigger": "GetSupportLimitingObjects\tSldStiffenerOnFreeEdge,List",
      "contents": "GetSupportLimitingObjects(${1:sldstiffeneronfreeedge}, ${2:list})"
    },
    {
      "trigger": "GetSupportOffset\tSddPanel,Feature",
      "contents": "GetSupportOffset(${1:sddpanel}, ${2:feat})"
    },
    {
      "trigger": "GetSupportRouteElement\tElec3DSupportRouteElement,SharedSupportPartOccurrence",
      "contents": "GetSupportRouteElement(${1:elec3dsupportrouteelement}, ${2:sharedsupportpartoccurrence})"
    },
    {
      "trigger": "GetSurfaceOrientation\tFeature",
      "contents": "GetSurfaceOrientation(${1:feat})"
    },
    {
      "trigger": "GetSweptPathWidth\tAECVehicleType,LENGTH",
      "contents": "GetSweptPathWidth(${1:aecvehicletype}, ${2:len})"
    },
    {
      "trigger": "GetSweptVolumeOptions\tDELRscSweptVolumeMgr,RscSweptVolumeOptionType,List",
      "contents": "GetSweptVolumeOptions(${1:delrscsweptvolumemgr}, ${2:rscsweptvolumeoptiontype}, ${3:list})"
    },
    {
      "trigger": "GetSymbols\tDIFView,List",
      "contents": "GetSymbols(${1:difview}, ${2:list})"
    },
    {
      "trigger": "GetSysConnectable\tSysItfInContext",
      "contents": "GetSysConnectable(${1:sysitfincontext})"
    },
    {
      "trigger": "GetSysInterfaces\tSysItfInContext",
      "contents": "GetSysInterfaces(${1:sysitfincontext})"
    },
    {
      "trigger": "GetSystemInfo\tString",
      "contents": "GetSystemInfo(${1:name})"
    },
    {
      "trigger": "GetSystemOfEachScope\tDELFmiFunctionReference",
      "contents": "GetSystemOfEachScope(${1:delfmifunctionreference})"
    },
    {
      "trigger": "GetSystemPortPosition\tDELLmiProdSystemIOPort",
      "contents": "GetSystemPortPosition(${1:dellmiprodsystemioport})"
    },
    {
      "trigger": "GetSystemsAndOperationsConnectedAsOutputWithNavigate\tDELFmiFunctionReference",
      "contents": "GetSystemsAndOperationsConnectedAsOutputWithNavigate(${1:delfmifunctionreference})"
    },
    {
      "trigger": "GetSystemsAndOperationsFromProcessConnectedAsOutput\tPLMCoreReference,DELFmiFunctionReference",
      "contents": "GetSystemsAndOperationsFromProcessConnectedAsOutput(${1:plmcorereference}, ${2:delfmifunctionreference})"
    },
    {
      "trigger": "GetSystemsFromCapableRscWithNavigate\tPLMResource",
      "contents": "GetSystemsFromCapableRscWithNavigate(${1:plmresource})"
    },
    {
      "trigger": "GetTCPAccelerationTime\tRscKinematicsMgr,RscMotionGroup,RscSpeedAccelType",
      "contents": "GetTCPAccelerationTime(${1:rsckinematicsmgr}, ${2:rscmotiongroup}, ${3:rscspeedacceltype})"
    },
    {
      "trigger": "GetTCPMaxAcceleration\tRscKinematicsMgr,RscMotionGroup,RscSpeedAccelType",
      "contents": "GetTCPMaxAcceleration(${1:rsckinematicsmgr}, ${2:rscmotiongroup}, ${3:rscspeedacceltype})"
    },
    {
      "trigger": "GetTCPMaxSpeed\tRscKinematicsMgr,RscMotionGroup,RscSpeedAccelType",
      "contents": "GetTCPMaxSpeed(${1:rsckinematicsmgr}, ${2:rscmotiongroup}, ${3:rscspeedacceltype})"
    },
    {
      "trigger": "GetTCPOffset\tRscToolProfile",
      "contents": "GetTCPOffset(${1:rsctoolprofile})"
    },
    {
      "trigger": "GetTPTime\tManufacturingOperation,Real,Real,Real,Real,Real",
      "contents": "GetTPTime(${1:manufacturingoperation}, ${2:real}, ${3:real}, ${4:real}, ${5:real}, ${6:real})"
    },
    {
      "trigger": "GetTPointColor\tDNBFitTrack,Integer",
      "contents": "GetTPointColor(${1:dnbfittrack}, ${2:int})"
    },
    {
      "trigger": "GetTPointDuration\tDNBFitTrack,Integer",
      "contents": "GetTPointDuration(${1:dnbfittrack}, ${2:int})"
    },
    {
      "trigger": "GetTPointPattern\tDNBFitTrack,Integer",
      "contents": "GetTPointPattern(${1:dnbfittrack}, ${2:int})"
    },
    {
      "trigger": "GetTPointPosition\tDNBFitTrack,Integer",
      "contents": "GetTPointPosition(${1:dnbfittrack}, ${2:int})"
    },
    {
      "trigger": "GetTPointTransforms\tDNBFitTrack,Integer,List,List",
      "contents": "GetTPointTransforms(${1:dnbfittrack}, ${2:int}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "GetTStoArcCenterDistanceAlongTangent\tAECHorizontalClothoid",
      "contents": "GetTStoArcCenterDistanceAlongTangent(${1:aechorizontalclothoid})"
    },
    {
      "trigger": "GetTableType\tFeature",
      "contents": "GetTableType(${1:feat})"
    },
    {
      "trigger": "GetTableValue\tSMATable,Integer,Integer",
      "contents": "GetTableValue(${1:smatable}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "GetTableValues\tString,List,List",
      "contents": "GetTableValues(${1:name}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "GetTagAtIndex\tDNBTagGroup,Integer,DNBTag",
      "contents": "GetTagAtIndex(${1:dnbtaggroup}, ${2:int}, ${3:dnbtag})"
    },
    {
      "trigger": "GetTagGroup\tDNBTag,List",
      "contents": "GetTagGroup(${1:dnbtag}, ${2:list})"
    },
    {
      "trigger": "GetTagList\tDNBTagGroup,List",
      "contents": "GetTagList(${1:dnbtaggroup}, ${2:list})"
    },
    {
      "trigger": "GetTagMeasure\t()",
      "contents": "GetTagMeasure()"
    },
    {
      "trigger": "GetTagTarget\tDNBRobotMotion,DNBTag,ProductOccurrence",
      "contents": "GetTagTarget(${1:dnbrobotmotion}, ${2:dnbtag}, ${3:productoccurrence})"
    },
    {
      "trigger": "GetTailSideTorqueValues\tFastenerEngineeringSpecData,TORQUE,TORQUE,TORQUE",
      "contents": "GetTailSideTorqueValues(${1:fastenerengineeringspecdata}, ${2:torque}, ${3:torque}, ${4:torque})"
    },
    {
      "trigger": "GetTangentLength\tAECHorizontalArc",
      "contents": "GetTangentLength(${1:aechorizontalarc})"
    },
    {
      "trigger": "GetTapeLength\tElec3DProtectionAnnotation,LENGTH",
      "contents": "GetTapeLength(${1:elec3dprotectionannotation}, ${2:len})"
    },
    {
      "trigger": "GetTapeThickness\tElec3DProtectionAnnotation,LENGTH",
      "contents": "GetTapeThickness(${1:elec3dprotectionannotation}, ${2:len})"
    },
    {
      "trigger": "GetTapeWidth\tElec3DProtectionAnnotation,LENGTH",
      "contents": "GetTapeWidth(${1:elec3dprotectionannotation}, ${2:len})"
    },
    {
      "trigger": "GetTapingAngle\tElec3DProtectionAnnotation,ANGLE",
      "contents": "GetTapingAngle(${1:elec3dprotectionannotation}, ${2:angle})"
    },
    {
      "trigger": "GetTarget\tDNBTagMeasure,Feature,ProductOccurrence",
      "contents": "GetTarget(${1:dnbtagmeasure}, ${2:feat}, ${3:productoccurrence})"
    },
    {
      "trigger": "GetTargetOAT\tDNBTagMeasure,Real,Real,Real",
      "contents": "GetTargetOAT(${1:dnbtagmeasure}, ${2:real}, ${3:real}, ${4:real})"
    },
    {
      "trigger": "GetTargetQuaternions\tDNBTagMeasure,Real,Real,Real,Real",
      "contents": "GetTargetQuaternions(${1:dnbtagmeasure}, ${2:real}, ${3:real}, ${4:real}, ${5:real})"
    },
    {
      "trigger": "GetTargetRPY\tDNBTagMeasure,Real,Real,Real",
      "contents": "GetTargetRPY(${1:dnbtagmeasure}, ${2:real}, ${3:real}, ${4:real})"
    },
    {
      "trigger": "GetTargetReferential\tDNBTagMeasure,Integer,List",
      "contents": "GetTargetReferential(${1:dnbtagmeasure}, ${2:int}, ${3:list})"
    },
    {
      "trigger": "GetTargetType\tDNBRobotMotion,Integer",
      "contents": "GetTargetType(${1:dnbrobotmotion}, ${2:int})"
    },
    {
      "trigger": "GetTargetXYZ\tDNBTagMeasure,Real,Real,Real",
      "contents": "GetTargetXYZ(${1:dnbtagmeasure}, ${2:real}, ${3:real}, ${4:real})"
    },
    {
      "trigger": "GetTargetZYZ\tDNBTagMeasure,Real,Real,Real",
      "contents": "GetTargetZYZ(${1:dnbtagmeasure}, ${2:real}, ${3:real}, ${4:real})"
    },
    {
      "trigger": "GetTaskList\tDNBTaskManager,List",
      "contents": "GetTaskList(${1:dnbtaskmanager}, ${2:list})"
    },
    {
      "trigger": "GetTaskManager\tResourceOccurrence",
      "contents": "GetTaskManager(${1:resourceoccurrence})"
    },
    {
      "trigger": "GetTaskType\tDNBResourceTask,String",
      "contents": "GetTaskType(${1:dnbresourcetask}, ${2:name})"
    },
    {
      "trigger": "GetTerminalBlock\tLogicalOccurrence,LogicalOccurrence",
      "contents": "GetTerminalBlock(${1:logicaloccurrence}, ${2:logicaloccurrence})"
    },
    {
      "trigger": "GetTerminalGroup\tLogicalOccurrence,LogicalOccurrence",
      "contents": "GetTerminalGroup(${1:logicaloccurrence}, ${2:logicaloccurrence})"
    },
    {
      "trigger": "GetTextMarkerEmoticon\tPLMOperation,Feature",
      "contents": "GetTextMarkerEmoticon(${1:plmoperation}, ${2:feat})"
    },
    {
      "trigger": "GetThickSurfaceOffset\tFeature",
      "contents": "GetThickSurfaceOffset(${1:feat})"
    },
    {
      "trigger": "GetThickness1Value\tSurface",
      "contents": "GetThickness1Value(${1:surface})"
    },
    {
      "trigger": "GetThickness2Value\tSurface",
      "contents": "GetThickness2Value(${1:surface})"
    },
    {
      "trigger": "GetThickness\tAGTDraughtStop,LENGTH",
      "contents": "GetThickness(${1:agtdraughtstop}, ${2:len})"
    },
    {
      "trigger": "GetThreadDescription\tFeature",
      "contents": "GetThreadDescription(${1:feat})"
    },
    {
      "trigger": "GetThreadType\tFeature",
      "contents": "GetThreadType(${1:feat})"
    },
    {
      "trigger": "GetThrowOrientation\tSldPlate,Integer",
      "contents": "GetThrowOrientation(${1:sldplate}, ${2:int})"
    },
    {
      "trigger": "GetTimeAnalysisLineFormulaAndParameter\tDELTimeAnalysisRepInstance,Integer,List,String",
      "contents": "GetTimeAnalysisLineFormulaAndParameter(${1:deltimeanalysisrepinstance}, ${2:int}, ${3:list}, ${4:name})"
    },
    {
      "trigger": "GetTimeAnalysisLineProperty\tDELTimeAnalysisRepInstance,Integer,String,String",
      "contents": "GetTimeAnalysisLineProperty(${1:deltimeanalysisrepinstance}, ${2:int}, ${3:name}, ${4:name})"
    },
    {
      "trigger": "GetTimeAnalysisLinePropertyAsDouble\tDELTimeAnalysisRepInstance,Integer,String,Real",
      "contents": "GetTimeAnalysisLinePropertyAsDouble(${1:deltimeanalysisrepinstance}, ${2:int}, ${3:name}, ${4:real})"
    },
    {
      "trigger": "GetTimeAnalysisLinePropertyAsInteger\tDELTimeAnalysisRepInstance,Integer,String,Integer",
      "contents": "GetTimeAnalysisLinePropertyAsInteger(${1:deltimeanalysisrepinstance}, ${2:int}, ${3:name}, ${4:int})"
    },
    {
      "trigger": "GetTimeAnalysisLines\tDELTimeAnalysisRepInstance",
      "contents": "GetTimeAnalysisLines(${1:deltimeanalysisrepinstance})"
    },
    {
      "trigger": "GetTimeAnalysisProperty\tDELTimeAnalysisRepInstance,String,String",
      "contents": "GetTimeAnalysisProperty(${1:deltimeanalysisrepinstance}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "GetTimeAnalysisPropertyAsDouble\tDELTimeAnalysisRepInstance,String,Real",
      "contents": "GetTimeAnalysisPropertyAsDouble(${1:deltimeanalysisrepinstance}, ${2:name}, ${3:real})"
    },
    {
      "trigger": "GetTimeAnalysisPropertyAsInteger\tDELTimeAnalysisRepInstance,String,Integer",
      "contents": "GetTimeAnalysisPropertyAsInteger(${1:deltimeanalysisrepinstance}, ${2:name}, ${3:int})"
    },
    {
      "trigger": "GetTimeConstraintInfo\tProdSystemOccurrence,ProdSystemOccurrence,DELLmiTimeConstraintCnx,Integer,Real",
      "contents": "GetTimeConstraintInfo(${1:prodsystemoccurrence}, ${2:prodsystemoccurrence}, ${3:dellmitimeconstraintcnx}, ${4:int}, ${5:real})"
    },
    {
      "trigger": "GetTimeConstraintInfo\tProdSystemOccurrence,ProdSystemOccurrence,Integer,Real",
      "contents": "GetTimeConstraintInfo(${1:prodsystemoccurrence}, ${2:prodsystemoccurrence}, ${3:int}, ${4:real})"
    },
    {
      "trigger": "GetTimeConstraintSource\tDELLmiTimeConstraintCnx",
      "contents": "GetTimeConstraintSource(${1:dellmitimeconstraintcnx})"
    },
    {
      "trigger": "GetTimeConstraintTarget\tDELLmiTimeConstraintCnx",
      "contents": "GetTimeConstraintTarget(${1:dellmitimeconstraintcnx})"
    },
    {
      "trigger": "GetTimeDistribution\tFFS_Activity",
      "contents": "GetTimeDistribution(${1:ffs_activity})"
    },
    {
      "trigger": "GetTimeforNextTraintoStart\tFFS_ResourcePool",
      "contents": "GetTimeforNextTraintoStart(${1:ffs_resourcepool})"
    },
    {
      "trigger": "GetTo\tElec3DCable,ProductOccurrence,Elec3DCavity,Integer",
      "contents": "GetTo(${1:elec3dcable}, ${2:productoccurrence}, ${3:elec3dcavity}, ${4:int})"
    },
    {
      "trigger": "GetTo\tElecRoute,ProductOccurrence,VPMPort",
      "contents": "GetTo(${1:elecroute}, ${2:productoccurrence}, ${3:vpmport})"
    },
    {
      "trigger": "GetToResource\tFFS_ProductFlow,FFS_Resource",
      "contents": "GetToResource(${1:ffs_productflow}, ${2:ffs_resource})"
    },
    {
      "trigger": "GetToleranceZoneValue\tFTARequirementModel,LENGTH",
      "contents": "GetToleranceZoneValue(${1:ftarequirementmodel}, ${2:len})"
    },
    {
      "trigger": "GetTool\tManufacturingOperation",
      "contents": "GetTool(${1:manufacturingoperation})"
    },
    {
      "trigger": "GetToolAnalysisHomePositions\tDELMfgSimTSAScenario,ResourceOccurrence,String",
      "contents": "GetToolAnalysisHomePositions(${1:delmfgsimtsascenario}, ${2:resourceoccurrence}, ${3:name})"
    },
    {
      "trigger": "GetToolAnalysisOptions\tDELMfgSimTSAScenario,ResourceOccurrence,String,ScenarioParameteres",
      "contents": "GetToolAnalysisOptions(${1:delmfgsimtsascenario}, ${2:resourceoccurrence}, ${3:name}, ${4:scenarioparameteres})"
    },
    {
      "trigger": "GetToolAndAssembly\tManufacturingOperation,ToolDevice,ToolDevice",
      "contents": "GetToolAndAssembly(${1:manufacturingoperation}, ${2:tooldevice}, ${3:tooldevice})"
    },
    {
      "trigger": "GetToolAxisDirection\tManufacturingActivity,MfgDirection",
      "contents": "GetToolAxisDirection(${1:manufacturingactivity}, ${2:mfgdirection})"
    },
    {
      "trigger": "GetToolDiameter\tManufacturingOperation",
      "contents": "GetToolDiameter(${1:manufacturingoperation})"
    },
    {
      "trigger": "GetToolHomePositionsID\tDELMfgSimTSAScenario,ResourceOccurrence,String",
      "contents": "GetToolHomePositionsID(${1:delmfgsimtsascenario}, ${2:resourceoccurrence}, ${3:name})"
    },
    {
      "trigger": "GetToolLengthCut\tManufacturingOperation",
      "contents": "GetToolLengthCut(${1:manufacturingoperation})"
    },
    {
      "trigger": "GetToolName\tManufacturingOperation",
      "contents": "GetToolName(${1:manufacturingoperation})"
    },
    {
      "trigger": "GetToolNumber\tManufacturingOperation",
      "contents": "GetToolNumber(${1:manufacturingoperation})"
    },
    {
      "trigger": "GetToolProfile\tDNBRobotMotion,Feature",
      "contents": "GetToolProfile(${1:dnbrobotmotion}, ${2:feat})"
    },
    {
      "trigger": "GetToolProfileMobility\tRscToolProfile",
      "contents": "GetToolProfileMobility(${1:rsctoolprofile})"
    },
    {
      "trigger": "GetToolSearchToolingEquipments\tDELMfgSimTSAScenario",
      "contents": "GetToolSearchToolingEquipments(${1:delmfgsimtsascenario})"
    },
    {
      "trigger": "GetToolType\tManufacturingOperation",
      "contents": "GetToolType(${1:manufacturingoperation})"
    },
    {
      "trigger": "GetTopCenterOfProductOccurence\tProductOccurrence",
      "contents": "GetTopCenterOfProductOccurence(${1:productoccurrence})"
    },
    {
      "trigger": "GetTopPlaneDepthOffsetBasedOnIntermediateStock\tAxialMachiningOperation,Integer,Real",
      "contents": "GetTopPlaneDepthOffsetBasedOnIntermediateStock(${1:axialmachiningoperation}, ${2:int}, ${3:real})"
    },
    {
      "trigger": "GetTopPlaneNormalBasedOnIntermediateStock\tAxialMachiningOperation,Integer,Real,Real,Real",
      "contents": "GetTopPlaneNormalBasedOnIntermediateStock(${1:axialmachiningoperation}, ${2:int}, ${3:real}, ${4:real}, ${5:real})"
    },
    {
      "trigger": "GetTotalLoadToDepart\tFFS_DestinationProperties",
      "contents": "GetTotalLoadToDepart(${1:ffs_destinationproperties})"
    },
    {
      "trigger": "GetTotalUnloadToDepart\tFFS_DestinationProperties",
      "contents": "GetTotalUnloadToDepart(${1:ffs_destinationproperties})"
    },
    {
      "trigger": "GetTraceOffset\tSddStiffenerOnFreeEdge,Feature",
      "contents": "GetTraceOffset(${1:sddstiffeneronfreeedge}, ${2:feat})"
    },
    {
      "trigger": "GetTrackType\tAECSubgradeSection",
      "contents": "GetTrackType(${1:aecsubgradesection})"
    },
    {
      "trigger": "GetTrackWidth\tAECAlignment2DHorizontal",
      "contents": "GetTrackWidth(${1:aecalignment2dhorizontal})"
    },
    {
      "trigger": "GetTrainBehaviorFromName\tString",
      "contents": "GetTrainBehaviorFromName(${1:name})"
    },
    {
      "trigger": "GetTrajectoryReference\tDNBResourceTask,DNBTagGroup,ProductOccurrence",
      "contents": "GetTrajectoryReference(${1:dnbresourcetask}, ${2:dnbtaggroup}, ${3:productoccurrence})"
    },
    {
      "trigger": "GetTransferActivities\tFFS_ProductFlow",
      "contents": "GetTransferActivities(${1:ffs_productflow})"
    },
    {
      "trigger": "GetTransferedItem\tFFS_TransferActivity",
      "contents": "GetTransferedItem(${1:ffs_transferactivity})"
    },
    {
      "trigger": "GetTransformCoefficients\tRscTransform",
      "contents": "GetTransformCoefficients(${1:rsctransform})"
    },
    {
      "trigger": "GetTransformInputItems\tFFS_TransformActivity",
      "contents": "GetTransformInputItems(${1:ffs_transformactivity})"
    },
    {
      "trigger": "GetTransformOutputItems\tFFS_TransformActivity",
      "contents": "GetTransformOutputItems(${1:ffs_transformactivity})"
    },
    {
      "trigger": "GetTransitionCentralAngle\tAECHorizontalArc",
      "contents": "GetTransitionCentralAngle(${1:aechorizontalarc})"
    },
    {
      "trigger": "GetTransitionTime\tManufacturingActivity",
      "contents": "GetTransitionTime(${1:manufacturingactivity})"
    },
    {
      "trigger": "GetTranslationOffset\tStrStructureCopySpecification,Feature",
      "contents": "GetTranslationOffset(${1:strstructurecopyspecification}, ${2:feat})"
    },
    {
      "trigger": "GetTransportRouteByName\tString",
      "contents": "GetTransportRouteByName(${1:name})"
    },
    {
      "trigger": "GetTraveledWayLaneDistribution\tAECHorizontalArc,List,List,List",
      "contents": "GetTraveledWayLaneDistribution(${1:aechorizontalarc}, ${2:list}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "GetTraveledWayType\tAECAlignment2DHorizontal",
      "contents": "GetTraveledWayType(${1:aecalignment2dhorizontal})"
    },
    {
      "trigger": "GetTravelingDirection\tAECLaneType",
      "contents": "GetTravelingDirection(${1:aeclanetype})"
    },
    {
      "trigger": "GetTruckDetailByID\tFFS_RoadSegment,String,Boolean",
      "contents": "GetTruckDetailByID(${1:ffs_roadsegment}, ${2:name}, ${3:bool})"
    },
    {
      "trigger": "GetTuples\tKWECheck,Boolean",
      "contents": "GetTuples(${1:kwecheck}, ${2:bool})"
    },
    {
      "trigger": "GetTurnNumbers\tDNBRobotMotion,List",
      "contents": "GetTurnNumbers(${1:dnbrobotmotion}, ${2:list})"
    },
    {
      "trigger": "GetTurnSigns\tDNBRobotMotion,List",
      "contents": "GetTurnSigns(${1:dnbrobotmotion}, ${2:list})"
    },
    {
      "trigger": "GetTurningAngle\tAECAlignmentPoint",
      "contents": "GetTurningAngle(${1:aecalignmentpoint})"
    },
    {
      "trigger": "GetTwistStatus\tHVAC_Duct_Occurrence",
      "contents": "GetTwistStatus(${1:hvac_duct_occurrence})"
    },
    {
      "trigger": "GetType\tAECRailwaySurfaceMainCurve",
      "contents": "GetType(${1:aecrailwaysurfacemaincurve})"
    },
    {
      "trigger": "GetType\tDNBDataEntity,Integer",
      "contents": "GetType(${1:dnbdataentity}, ${2:int})"
    },
    {
      "trigger": "GetTypeCharacteristics\tFTARequirementModel,String,String",
      "contents": "GetTypeCharacteristics(${1:ftarequirementmodel}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "GetTypeOfGeometries\tSIMItfSimulation,PIM_TypeGeometry",
      "contents": "GetTypeOfGeometries(${1:simitfsimulation}, ${2:pim_typegeometry})"
    },
    {
      "trigger": "GetUOffset\tSddOpening,Feature",
      "contents": "GetUOffset(${1:sddopening}, ${2:feat})"
    },
    {
      "trigger": "GetURef\tSddOpening,Feature",
      "contents": "GetURef(${1:sddopening}, ${2:feat})"
    },
    {
      "trigger": "GetURef\tSldOpening,Feature,Feature,Feature",
      "contents": "GetURef(${1:sldopening}, ${2:feat}, ${3:feat}, ${4:feat})"
    },
    {
      "trigger": "GetURefMidDist\tSddOpening,Feature,Feature",
      "contents": "GetURefMidDist(${1:sddopening}, ${2:feat}, ${3:feat})"
    },
    {
      "trigger": "GetUniqueKey\tString",
      "contents": "GetUniqueKey(${1:name})"
    },
    {
      "trigger": "GetUniqueKeyFromString\tString",
      "contents": "GetUniqueKeyFromString(${1:name})"
    },
    {
      "trigger": "GetUnloadedItem\tFFS_UnloadActivity",
      "contents": "GetUnloadedItem(${1:ffs_unloadactivity})"
    },
    {
      "trigger": "GetUpToLimit\tSddMember,Feature",
      "contents": "GetUpToLimit(${1:sddmember}, ${2:feat})"
    },
    {
      "trigger": "GetUsagePointSourceFromTarget\tFProcessOccurrence,PLMCoreReference,List,List",
      "contents": "GetUsagePointSourceFromTarget(${1:fprocessoccurrence}, ${2:plmcorereference}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "GetUsagePointTarget\tMfgProductionPlanning,DELFmiFunctionReference,List,List,List",
      "contents": "GetUsagePointTarget(${1:mfgproductionplanning}, ${2:delfmifunctionreference}, ${3:list}, ${4:list}, ${5:list})"
    },
    {
      "trigger": "GetUsagePointTargetFromSource\tProdSystemOccurrence,DELFmiFunctionReference,MfgProductionPlanning,List,List,List",
      "contents": "GetUsagePointTargetFromSource(${1:prodsystemoccurrence}, ${2:delfmifunctionreference}, ${3:mfgproductionplanning}, ${4:list}, ${5:list}, ${6:list})"
    },
    {
      "trigger": "GetUseAccuracyProfile\tDNBRobotMotion,Boolean",
      "contents": "GetUseAccuracyProfile(${1:dnbrobotmotion}, ${2:bool})"
    },
    {
      "trigger": "GetUseMotionProfile\tDNBRobotMotion,Boolean",
      "contents": "GetUseMotionProfile(${1:dnbrobotmotion}, ${2:bool})"
    },
    {
      "trigger": "GetUseObjectProfile\tDNBRobotMotion,Boolean",
      "contents": "GetUseObjectProfile(${1:dnbrobotmotion}, ${2:bool})"
    },
    {
      "trigger": "GetUseToolProfile\tDNBRobotMotion,Boolean",
      "contents": "GetUseToolProfile(${1:dnbrobotmotion}, ${2:bool})"
    },
    {
      "trigger": "GetUsedParameters\tDatabaseObjectType",
      "contents": "GetUsedParameters(${1:databaseobjecttype})"
    },
    {
      "trigger": "GetUserAttributeValue\tFFS_Item,String,String",
      "contents": "GetUserAttributeValue(${1:ffs_item}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "GetUserLogicByName\tString",
      "contents": "GetUserLogicByName(${1:name})"
    },
    {
      "trigger": "GetUserProfileList\tDNBRobotMotion,List",
      "contents": "GetUserProfileList(${1:dnbrobotmotion}, ${2:list})"
    },
    {
      "trigger": "GetUserWeight\tAGTRampBody,MASS",
      "contents": "GetUserWeight(${1:agtrampbody}, ${2:mass})"
    },
    {
      "trigger": "GetVOffset\tSddOpening,Feature",
      "contents": "GetVOffset(${1:sddopening}, ${2:feat})"
    },
    {
      "trigger": "GetVPI\tAECVerticalCurve,LENGTH,LENGTH",
      "contents": "GetVPI(${1:aecverticalcurve}, ${2:len}, ${3:len})"
    },
    {
      "trigger": "GetVPIElevation\tAECVerticalCurve",
      "contents": "GetVPIElevation(${1:aecverticalcurve})"
    },
    {
      "trigger": "GetVPIPoint\tAECVerticalCurve",
      "contents": "GetVPIPoint(${1:aecverticalcurve})"
    },
    {
      "trigger": "GetVPIStation\tAECVerticalCurve",
      "contents": "GetVPIStation(${1:aecverticalcurve})"
    },
    {
      "trigger": "GetVPMRefFromFTARequirementSpecification\tRequirement Specification,VPMReference",
      "contents": "GetVPMRefFromFTARequirementSpecification(${1:requirement specification}, ${2:vpmreference})"
    },
    {
      "trigger": "GetVRef\tSddOpening,Feature",
      "contents": "GetVRef(${1:sddopening}, ${2:feat})"
    },
    {
      "trigger": "GetVRef\tSldOpening,Feature,Feature,Feature",
      "contents": "GetVRef(${1:sldopening}, ${2:feat}, ${3:feat}, ${4:feat})"
    },
    {
      "trigger": "GetVRefMidDist\tSddOpening,Feature,Feature",
      "contents": "GetVRefMidDist(${1:sddopening}, ${2:feat}, ${3:feat})"
    },
    {
      "trigger": "GetValidationStatus\tDELPointTrajectory",
      "contents": "GetValidationStatus(${1:delpointtrajectory})"
    },
    {
      "trigger": "GetValue\tDNBConst,String",
      "contents": "GetValue(${1:dnbconst}, ${2:name})"
    },
    {
      "trigger": "GetValueAddedCatalogDetails\tDELTimeAnalysisRepInstance,List,List,List,List,List,List,List,List,Real",
      "contents": "GetValueAddedCatalogDetails(${1:deltimeanalysisrepinstance}, ${2:list}, ${3:list}, ${4:list}, ${5:list}, ${6:list}, ${7:list}, ${8:list}, ${9:list}, ${10:real})"
    },
    {
      "trigger": "GetValueList\tKWERuleBaseComponent,String",
      "contents": "GetValueList(${1:kwerulebasecomponent}, ${2:name})"
    },
    {
      "trigger": "GetVariablesValuesFromFrame\tCATKwdFrameUsage,String",
      "contents": "GetVariablesValuesFromFrame(${1:catkwdframeusage}, ${2:name})"
    },
    {
      "trigger": "GetVariant\tDELPointTrajectory",
      "contents": "GetVariant(${1:delpointtrajectory})"
    },
    {
      "trigger": "GetVector\tRscTransform,Integer",
      "contents": "GetVector(${1:rsctransform}, ${2:int})"
    },
    {
      "trigger": "GetVehicleDecisionPointByName\tProductOccurrence,String",
      "contents": "GetVehicleDecisionPointByName(${1:productoccurrence}, ${2:name})"
    },
    {
      "trigger": "GetVehicleDecisionPointByName\tString",
      "contents": "GetVehicleDecisionPointByName(${1:name})"
    },
    {
      "trigger": "GetVehicleDecisionPointPosition\tFFS_VehicleDecisionPoint,Real,Real,Real",
      "contents": "GetVehicleDecisionPointPosition(${1:ffs_vehicledecisionpoint}, ${2:real}, ${3:real}, ${4:real})"
    },
    {
      "trigger": "GetVehicleDecisionPoints\tFFS_RoadSegment",
      "contents": "GetVehicleDecisionPoints(${1:ffs_roadsegment})"
    },
    {
      "trigger": "GetVehicleSegments\tProductOccurrence",
      "contents": "GetVehicleSegments(${1:productoccurrence})"
    },
    {
      "trigger": "GetVerticalAligment\tAECTangentGrade",
      "contents": "GetVerticalAligment(${1:aectangentgrade})"
    },
    {
      "trigger": "GetVerticalAlignment\tAECAlignment",
      "contents": "GetVerticalAlignment(${1:aecalignment})"
    },
    {
      "trigger": "GetVerticalAlignmentSegmentInfo\t2DCurve,LENGTH,LENGTH,LENGTH,Ratio,LENGTH,Boolean",
      "contents": "GetVerticalAlignmentSegmentInfo(${1:2dcurve}, ${2:len}, ${3:len}, ${4:len}, ${5:ratio}, ${6:len}, ${7:bool})"
    },
    {
      "trigger": "GetVerticalAlignments\tAECAlignment2DHorizontal",
      "contents": "GetVerticalAlignments(${1:aecalignment2dhorizontal})"
    },
    {
      "trigger": "GetViewAnnotations\tDIFView,List",
      "contents": "GetViewAnnotations(${1:difview}, ${2:list})"
    },
    {
      "trigger": "GetViewDirection\tMfgMultiAxisOperation,MfgDirection",
      "contents": "GetViewDirection(${1:mfgmultiaxisoperation}, ${2:mfgdirection})"
    },
    {
      "trigger": "GetViewMode\tMLPStacking",
      "contents": "GetViewMode(${1:mlpstacking})"
    },
    {
      "trigger": "GetViewpoint\tPLMOperation,List,List,List,Real,Real,Real,Boolean",
      "contents": "GetViewpoint(${1:plmoperation}, ${2:list}, ${3:list}, ${4:list}, ${5:real}, ${6:real}, ${7:real}, ${8:bool})"
    },
    {
      "trigger": "GetViewsOrDressupsLinkedWithDCPRow\tPLMSpecifyHowToCollectDataCnx",
      "contents": "GetViewsOrDressupsLinkedWithDCPRow(${1:plmspecifyhowtocollectdatacnx})"
    },
    {
      "trigger": "GetViewsOrDressupsLinkedWithWI\tProdSystemOccurrence",
      "contents": "GetViewsOrDressupsLinkedWithWI(${1:prodsystemoccurrence})"
    },
    {
      "trigger": "GetVisibility\tManufacturingActivity,Boolean",
      "contents": "GetVisibility(${1:manufacturingactivity}, ${2:bool})"
    },
    {
      "trigger": "GetWaitingTimeDistribution\tFFS_BufferActivity",
      "contents": "GetWaitingTimeDistribution(${1:ffs_bufferactivity})"
    },
    {
      "trigger": "GetWall\tAGTSill,Feature",
      "contents": "GetWall(${1:agtsill}, ${2:feat})"
    },
    {
      "trigger": "GetWallDirectionOption\tLiveArchiSpace,AGTDirectionOption",
      "contents": "GetWallDirectionOption(${1:livearchispace}, ${2:agtdirectionoption})"
    },
    {
      "trigger": "GetWallType\tLiveArchiWall,AGTType",
      "contents": "GetWallType(${1:livearchiwall}, ${2:agttype})"
    },
    {
      "trigger": "GetWaypointParameters\tDNBRobotMotion,String,String",
      "contents": "GetWaypointParameters(${1:dnbrobotmotion}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "GetWebAnchorPointOffset\tAGTConnector,LENGTH",
      "contents": "GetWebAnchorPointOffset(${1:agtconnector}, ${2:len})"
    },
    {
      "trigger": "GetWebOrientation\tSldProfile,Integer",
      "contents": "GetWebOrientation(${1:sldprofile}, ${2:int})"
    },
    {
      "trigger": "GetWeight\tFFS_Item",
      "contents": "GetWeight(${1:ffs_item})"
    },
    {
      "trigger": "GetWeldDelay\tDNBSpotProfile,Integer",
      "contents": "GetWeldDelay(${1:dnbspotprofile}, ${2:int})"
    },
    {
      "trigger": "GetWeldDelayProfile\tDNBSpotProfile,Integer",
      "contents": "GetWeldDelayProfile(${1:dnbspotprofile}, ${2:int})"
    },
    {
      "trigger": "GetWeldDelayProfileName\tDNBSpotProfile,Integer",
      "contents": "GetWeldDelayProfileName(${1:dnbspotprofile}, ${2:int})"
    },
    {
      "trigger": "GetWeldPressureStabilizationTime\tDNBSpotProfile,Integer",
      "contents": "GetWeldPressureStabilizationTime(${1:dnbspotprofile}, ${2:int})"
    },
    {
      "trigger": "GetWeldPressureStabilizationTimeProfile\tDNBSpotProfile,Integer",
      "contents": "GetWeldPressureStabilizationTimeProfile(${1:dnbspotprofile}, ${2:int})"
    },
    {
      "trigger": "GetWeldPressureStabilizationTimeProfileName\tDNBSpotProfile,Integer",
      "contents": "GetWeldPressureStabilizationTimeProfileName(${1:dnbspotprofile}, ${2:int})"
    },
    {
      "trigger": "GetWhereResource\tProdSystemOccurrence",
      "contents": "GetWhereResource(${1:prodsystemoccurrence})"
    },
    {
      "trigger": "GetWhoResource\tProdSystemOccurrence",
      "contents": "GetWhoResource(${1:prodsystemoccurrence})"
    },
    {
      "trigger": "GetWholeQuantityOnDR\tMfgProcessOccurrence,MfgProcessOccurrence,Integer",
      "contents": "GetWholeQuantityOnDR(${1:mfgprocessoccurrence}, ${2:mfgprocessoccurrence}, ${3:int})"
    },
    {
      "trigger": "GetWidth\tAECLaneType",
      "contents": "GetWidth(${1:aeclanetype})"
    },
    {
      "trigger": "GetWidth\tAGTFireBridge,LENGTH",
      "contents": "GetWidth(${1:agtfirebridge}, ${2:len})"
    },
    {
      "trigger": "GetWidthMeasurementType\tSddFlange,Integer",
      "contents": "GetWidthMeasurementType(${1:sddflange}, ${2:int})"
    },
    {
      "trigger": "GetWithResource\tProdSystemOccurrence",
      "contents": "GetWithResource(${1:prodsystemoccurrence})"
    },
    {
      "trigger": "GetWorkPieceMountPositionMat\tProductOccurrence,String,List",
      "contents": "GetWorkPieceMountPositionMat(${1:productoccurrence}, ${2:name}, ${3:list})"
    },
    {
      "trigger": "GetWorkPieceMountPositionYPR\tProductOccurrence,String,List",
      "contents": "GetWorkPieceMountPositionYPR(${1:productoccurrence}, ${2:name}, ${3:list})"
    },
    {
      "trigger": "GetXYZ\tRscTransform",
      "contents": "GetXYZ(${1:rsctransform})"
    },
    {
      "trigger": "GetZTopValue\tManufacturingActivity",
      "contents": "GetZTopValue(${1:manufacturingactivity})"
    },
    {
      "trigger": "GetZYZ\tRscTransform",
      "contents": "GetZYZ(${1:rsctransform})"
    },
    {
      "trigger": "GlobalLinkToRequirement\tPLMCoreReference,Feature",
      "contents": "GlobalLinkToRequirement(${1:plmcorereference}, ${2:feat})"
    },
    {
      "trigger": "GraphEmptyValue\t()",
      "contents": "GraphEmptyValue()"
    },
    {
      "trigger": "GraphErrorValue\t()",
      "contents": "GraphErrorValue()"
    },
    {
      "trigger": "GraphPublish\tGeometricObject,Wireframe,Boolean",
      "contents": "GraphPublish(${1:geometricobject}, ${2:wireframe}, ${3:bool})"
    },
    {
      "trigger": "GraphPublishGenericFeature\tFeature,Feature",
      "contents": "GraphPublishGenericFeature(${1:feat}, ${2:feat})"
    },
    {
      "trigger": "Grey\tBitmap",
      "contents": "Grey(${1:bitmap})"
    },
    {
      "trigger": "Group\tList,Integer,Boolean,Boolean",
      "contents": "Group(${1:list}, ${2:int}, ${3:bool}, ${4:bool})"
    },
    {
      "trigger": "Group\tRegex,Integer",
      "contents": "Group(${1:regex}, ${2:int})"
    },
    {
      "trigger": "GroupCount\tRegex",
      "contents": "GroupCount(${1:regex})"
    },
    {
      "trigger": "HELP\tCATKwdDialogWindow",
      "contents": "HELP(${1:catkwddialogwindow})"
    },
    {
      "trigger": "HasARepresentation\tProduct,String",
      "contents": "HasARepresentation(${1:product}, ${2:name})"
    },
    {
      "trigger": "HasBaseboard\tLiveArchiCovering,Boolean",
      "contents": "HasBaseboard(${1:livearchicovering}, ${2:bool})"
    },
    {
      "trigger": "HasComputedInterferenceResults\tRobInterferencePair",
      "contents": "HasComputedInterferenceResults(${1:robinterferencepair})"
    },
    {
      "trigger": "HasControllerSupport\tProductOccurrence",
      "contents": "HasControllerSupport(${1:productoccurrence})"
    },
    {
      "trigger": "HasControllerUserAttributeAuthorizedValues\tRscController,String",
      "contents": "HasControllerUserAttributeAuthorizedValues(${1:rsccontroller}, ${2:name})"
    },
    {
      "trigger": "HasCoupler\tAECRebarLayer",
      "contents": "HasCoupler(${1:aecrebarlayer})"
    },
    {
      "trigger": "HasInverseKinematics\tProductOccurrence",
      "contents": "HasInverseKinematics(${1:productoccurrence})"
    },
    {
      "trigger": "HasOOTBExtension\tDELFmiFunctionInstance,String,Boolean",
      "contents": "HasOOTBExtension(${1:delfmifunctioninstance}, ${2:name}, ${3:bool})"
    },
    {
      "trigger": "HasPrecedenceWithCurrentMO\tManufacturingActivity",
      "contents": "HasPrecedenceWithCurrentMO(${1:manufacturingactivity})"
    },
    {
      "trigger": "HasThinAttrInvertOrientation\tSurface",
      "contents": "HasThinAttrInvertOrientation(${1:surface})"
    },
    {
      "trigger": "HasThinAttribute\tSurface",
      "contents": "HasThinAttribute(${1:surface})"
    },
    {
      "trigger": "Height\tBitmap",
      "contents": "Height(${1:bitmap})"
    },
    {
      "trigger": "Ids\tPLMRouteSet,String",
      "contents": "Ids(${1:plmrouteset}, ${2:name})"
    },
    {
      "trigger": "IfInteger\tBoolean,Integer,Integer",
      "contents": "IfInteger(${1:bool}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "IfReal\tBoolean,Real,Real",
      "contents": "IfReal(${1:bool}, ${2:real}, ${3:real})"
    },
    {
      "trigger": "IfString\tBoolean,String,String",
      "contents": "IfString(${1:bool}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "ImplementsOperation\tPLMEntity,String",
      "contents": "ImplementsOperation(${1:plmentity}, ${2:name})"
    },
    {
      "trigger": "ImportAttributes\tDTSheetType,Feature",
      "contents": "ImportAttributes(${1:dtsheettype}, ${2:feat})"
    },
    {
      "trigger": "ImportModelicaFile\tString",
      "contents": "ImportModelicaFile(${1:name})"
    },
    {
      "trigger": "ImportPathPlannerSpecifications\tRscPathPlanner,String",
      "contents": "ImportPathPlannerSpecifications(${1:rscpathplanner}, ${2:name})"
    },
    {
      "trigger": "ImportPointCloud\tProductOccurrence,String,DELPC_CRSReferentials,DELPC_Units,DELPC_CRSReferentials,Boolean,DELPointCloudElement",
      "contents": "ImportPointCloud(${1:productoccurrence}, ${2:name}, ${3:delpc_crsreferentials}, ${4:delpc_units}, ${5:delpc_crsreferentials}, ${6:bool}, ${7:delpointcloudelement})"
    },
    {
      "trigger": "ImportProcessPoints\tDNBSPMOperation,String",
      "contents": "ImportProcessPoints(${1:dnbspmoperation}, ${2:name})"
    },
    {
      "trigger": "ImportRscIOSignalMappings\tRscModelLogicMgr,String,Boolean",
      "contents": "ImportRscIOSignalMappings(${1:rscmodellogicmgr}, ${2:name}, ${3:bool})"
    },
    {
      "trigger": "InValidate\tElecRoute",
      "contents": "InValidate(${1:elecroute})"
    },
    {
      "trigger": "IndexOf\tList,ObjectType,Integer",
      "contents": "IndexOf(${1:list}, ${2:objecttype}, ${3:int})"
    },
    {
      "trigger": "InertiaAxis1\tGeometricObject",
      "contents": "InertiaAxis1(${1:geometricobject})"
    },
    {
      "trigger": "InertiaAxis2\tGeometricObject",
      "contents": "InertiaAxis2(${1:geometricobject})"
    },
    {
      "trigger": "InertiaAxis3\tGeometricObject",
      "contents": "InertiaAxis3(${1:geometricobject})"
    },
    {
      "trigger": "Inf\tLiteral,Real,ENOCLG_ClassReference",
      "contents": "Inf(${1:literal}, ${2:real}, ${3:enoclg_classreference})"
    },
    {
      "trigger": "InferiorRange\tReal",
      "contents": "InferiorRange(${1:real})"
    },
    {
      "trigger": "Init\tCATKwdWindow",
      "contents": "Init(${1:catkwdwindow})"
    },
    {
      "trigger": "Init\tList,Integer,ObjectType",
      "contents": "Init(${1:list}, ${2:int}, ${3:objecttype})"
    },
    {
      "trigger": "InitAutoSequenceOperationTypePriorities\t()",
      "contents": "InitAutoSequenceOperationTypePriorities()"
    },
    {
      "trigger": "InitByName\tSddEndcut,String",
      "contents": "InitByName(${1:sddendcut}, ${2:name})"
    },
    {
      "trigger": "InitContext\tVPMReference",
      "contents": "InitContext(${1:vpmreference})"
    },
    {
      "trigger": "InitFromMatrix\tRscTransform,Matrix",
      "contents": "InitFromMatrix(${1:rsctransform}, ${2:matrix})"
    },
    {
      "trigger": "InitFromUdf\tSddEndcut,String,Boolean",
      "contents": "InitFromUdf(${1:sddendcut}, ${2:name}, ${3:bool})"
    },
    {
      "trigger": "InitSlotFromUdf\tSddOpening,String,Boolean",
      "contents": "InitSlotFromUdf(${1:sddopening}, ${2:name}, ${3:bool})"
    },
    {
      "trigger": "InitializeControllerSynchronization\tRscControllerSynchronization",
      "contents": "InitializeControllerSynchronization(${1:rsccontrollersynchronization})"
    },
    {
      "trigger": "InitializeSweptVolumeComputation\tDELRscSweptVolumeMgr",
      "contents": "InitializeSweptVolumeComputation(${1:delrscsweptvolumemgr})"
    },
    {
      "trigger": "Insert\tVPMInstance",
      "contents": "Insert(${1:vpminstance})"
    },
    {
      "trigger": "InsertActivity\tManufacturingActivity,String,ManufacturingOperation",
      "contents": "InsertActivity(${1:manufacturingactivity}, ${2:name}, ${3:manufacturingoperation})"
    },
    {
      "trigger": "InsertAfter\tMLPObject,MLPObject",
      "contents": "InsertAfter(${1:mlpobject}, ${2:mlpobject})"
    },
    {
      "trigger": "InsertBefore\tMLPObject,MLPObject",
      "contents": "InsertBefore(${1:mlpobject}, ${2:mlpobject})"
    },
    {
      "trigger": "InsertDisassemble\tMfgProcessOccurrence,MfgProcessOccurrence,DELFmiFunctionReference,DELFmiFunctionReference",
      "contents": "InsertDisassemble(${1:mfgprocessoccurrence}, ${2:mfgprocessoccurrence}, ${3:delfmifunctionreference}, ${4:delfmifunctionreference})"
    },
    {
      "trigger": "InsertElementaryMotion2\tMfgMacroMotion,Integer,String,Integer",
      "contents": "InsertElementaryMotion2(${1:mfgmacromotion}, ${2:int}, ${3:name}, ${4:int})"
    },
    {
      "trigger": "InsertElementaryMotion\tMfgMacroMotion,Integer,MfgMacroElementaryMotion,Integer",
      "contents": "InsertElementaryMotion(${1:mfgmacromotion}, ${2:int}, ${3:mfgmacroelementarymotion}, ${4:int})"
    },
    {
      "trigger": "InsertExistingOperation\tProdSystemOccurrence,PLMEntity",
      "contents": "InsertExistingOperation(${1:prodsystemoccurrence}, ${2:plmentity})"
    },
    {
      "trigger": "InsertExistingResource\tPLMResource,PLMResource",
      "contents": "InsertExistingResource(${1:plmresource}, ${2:plmresource})"
    },
    {
      "trigger": "InsertExistingSystem\tProdSystemOccurrence,PLMEntity",
      "contents": "InsertExistingSystem(${1:prodsystemoccurrence}, ${2:plmentity})"
    },
    {
      "trigger": "InsertExistingWorkInstruction\tProdSystemOccurrence,PLMEntity",
      "contents": "InsertExistingWorkInstruction(${1:prodsystemoccurrence}, ${2:plmentity})"
    },
    {
      "trigger": "InsertFitTPoint\tDNBFitTrack,Integer,List,List,Real",
      "contents": "InsertFitTPoint(${1:dnbfittrack}, ${2:int}, ${3:list}, ${4:list}, ${5:real})"
    },
    {
      "trigger": "InsertItem\tList,ObjectType,Integer",
      "contents": "InsertItem(${1:list}, ${2:objecttype}, ${3:int})"
    },
    {
      "trigger": "InsertManufacturingProgram\tManufacturingActivity,ManufacturingProgram",
      "contents": "InsertManufacturingProgram(${1:manufacturingactivity}, ${2:manufacturingprogram})"
    },
    {
      "trigger": "InsertManufacturingSetup\tManufacturingActivity,ManufacturingSetup",
      "contents": "InsertManufacturingSetup(${1:manufacturingactivity}, ${2:manufacturingsetup})"
    },
    {
      "trigger": "InsertNewOperation\tPLMOperation,String",
      "contents": "InsertNewOperation(${1:plmoperation}, ${2:name})"
    },
    {
      "trigger": "InsertNewResource\tPLMResource,String",
      "contents": "InsertNewResource(${1:plmresource}, ${2:name})"
    },
    {
      "trigger": "InsertNewSystem\tPLMSystem,String",
      "contents": "InsertNewSystem(${1:plmsystem}, ${2:name})"
    },
    {
      "trigger": "InsertParmIntoList\tList,String,Literal",
      "contents": "InsertParmIntoList(${1:list}, ${2:name}, ${3:literal})"
    },
    {
      "trigger": "InsertPredecessor\tMfgProcessOccurrence,DELFmiFunctionReference",
      "contents": "InsertPredecessor(${1:mfgprocessoccurrence}, ${2:delfmifunctionreference})"
    },
    {
      "trigger": "InsertPredecessorBetween\tMfgProcessOccurrence,MfgProcessOccurrence,DELFmiFunctionReference,DELFmiFunctionReference",
      "contents": "InsertPredecessorBetween(${1:mfgprocessoccurrence}, ${2:mfgprocessoccurrence}, ${3:delfmifunctionreference}, ${4:delfmifunctionreference})"
    },
    {
      "trigger": "Inserted\tVPMInstance",
      "contents": "Inserted(${1:vpminstance})"
    },
    {
      "trigger": "InstanciateProtectionCenteredOnPoint\tSegment,String,LENGTH,Point,InternalProtection",
      "contents": "InstanciateProtectionCenteredOnPoint(${1:segment}, ${2:name}, ${3:len}, ${4:point}, ${5:internalprotection})"
    },
    {
      "trigger": "InstanciateProtectionOnProtection\tString,InternalProtection,LENGTH,List",
      "contents": "InstanciateProtectionOnProtection(${1:name}, ${2:internalprotection}, ${3:len}, ${4:list})"
    },
    {
      "trigger": "InstanciateProtectionOnSegmentExtremity\tSegmentExtremity,String,LENGTH,InternalProtection",
      "contents": "InstanciateProtectionOnSegmentExtremity(${1:segmentextremity}, ${2:name}, ${3:len}, ${4:internalprotection})"
    },
    {
      "trigger": "Instantiate\tMachiningProcess,ManufacturingActivity,ManufacturingFeature,ProductOccurrence",
      "contents": "Instantiate(${1:machiningprocess}, ${2:manufacturingactivity}, ${3:manufacturingfeature}, ${4:productoccurrence})"
    },
    {
      "trigger": "InstantiateAnnLabelWithLink\tDIFView,DrwObject,Real,Real,DrwObject",
      "contents": "InstantiateAnnLabelWithLink(${1:difview}, ${2:drwobject}, ${3:real}, ${4:real}, ${5:drwobject})"
    },
    {
      "trigger": "InstantiateAnnTemplate\tDIFView,DrwObject,Real,Real,DrwObject",
      "contents": "InstantiateAnnTemplate(${1:difview}, ${2:drwobject}, ${3:real}, ${4:real}, ${5:drwobject})"
    },
    {
      "trigger": "InstantiateProtectionExtremityToExtremity\tSegment,String,LENGTH,LENGTH,InternalProtection",
      "contents": "InstantiateProtectionExtremityToExtremity(${1:segment}, ${2:name}, ${3:len}, ${4:len}, ${5:internalprotection})"
    },
    {
      "trigger": "InstantiateTemplate\tObjectType,Feature,TemplateInstantiationOptionsType",
      "contents": "InstantiateTemplate(${1:objecttype}, ${2:feat}, ${3:templateinstantiationoptionstype})"
    },
    {
      "trigger": "Instantiation\tFeature",
      "contents": "Instantiation(${1:feat})"
    },
    {
      "trigger": "IntToReal\tInteger",
      "contents": "IntToReal(${1:int})"
    },
    {
      "trigger": "Intersect\tList,List,String,String",
      "contents": "Intersect(${1:list}, ${2:list}, ${3:name}, ${4:name})"
    },
    {
      "trigger": "Inverse\tRscTransform",
      "contents": "Inverse(${1:rsctransform})"
    },
    {
      "trigger": "Invert\tMatrix",
      "contents": "Invert(${1:matrix})"
    },
    {
      "trigger": "InvertDirection\tMfgDirection",
      "contents": "InvertDirection(${1:mfgdirection})"
    },
    {
      "trigger": "InvertFlangeOrientation\tAGTConnector",
      "contents": "InvertFlangeOrientation(${1:agtconnector})"
    },
    {
      "trigger": "InvertInsulatedSide\tAGTInsulation",
      "contents": "InvertInsulatedSide(${1:agtinsulation})"
    },
    {
      "trigger": "InvertLimit\tAGTConnector",
      "contents": "InvertLimit(${1:agtconnector})"
    },
    {
      "trigger": "InvertLimit\tAGTDraughtStop,Integer",
      "contents": "InvertLimit(${1:agtdraughtstop}, ${2:int})"
    },
    {
      "trigger": "InvertMachiningSide\tMfg2DMAFeature",
      "contents": "InvertMachiningSide(${1:mfg2dmafeature})"
    },
    {
      "trigger": "InvertProfile\tSddProfile",
      "contents": "InvertProfile(${1:sddprofile})"
    },
    {
      "trigger": "InvertWebOrientation\tAGTConnector",
      "contents": "InvertWebOrientation(${1:agtconnector})"
    },
    {
      "trigger": "IsAConstructionElement\tAECRebarLayer",
      "contents": "IsAConstructionElement(${1:aecrebarlayer})"
    },
    {
      "trigger": "IsADatumFeat\tFeature",
      "contents": "IsADatumFeat(${1:feat})"
    },
    {
      "trigger": "IsAFstMcx\tMCX",
      "contents": "IsAFstMcx(${1:mcx})"
    },
    {
      "trigger": "IsARscUsage\tVPMInstance,Boolean",
      "contents": "IsARscUsage(${1:vpminstance}, ${2:bool})"
    },
    {
      "trigger": "IsASecondaryFastener\tFastenerOccurrence",
      "contents": "IsASecondaryFastener(${1:fasteneroccurrence})"
    },
    {
      "trigger": "IsASortOf\tFeature,String",
      "contents": "IsASortOf(${1:feat}, ${2:name})"
    },
    {
      "trigger": "IsATailOnlyWithSecondaryFastener\tSpotAssyFastenerOccurrence",
      "contents": "IsATailOnlyWithSecondaryFastener(${1:spotassyfasteneroccurrence})"
    },
    {
      "trigger": "IsActive\tMfgMacroElementaryMotion",
      "contents": "IsActive(${1:mfgmacroelementarymotion})"
    },
    {
      "trigger": "IsActiveComputeQuantifier\tSIMItfSimulation,PIM_ComputeQuantifier",
      "contents": "IsActiveComputeQuantifier(${1:simitfsimulation}, ${2:pim_computequantifier})"
    },
    {
      "trigger": "IsActiveForSimulation\tFFS_ShiftModel",
      "contents": "IsActiveForSimulation(${1:ffs_shiftmodel})"
    },
    {
      "trigger": "IsActiveItfSpecificationTypeEngCnx\tSIMItfSimulation,PIM_SpecEngCnx",
      "contents": "IsActiveItfSpecificationTypeEngCnx(${1:simitfsimulation}, ${2:pim_specengcnx})"
    },
    {
      "trigger": "IsAllowedPositioning\tVPMInstance,Vector",
      "contents": "IsAllowedPositioning(${1:vpminstance}, ${2:vector})"
    },
    {
      "trigger": "IsAssignedProcessAndInUpperScope\tFProcessOccurrence,List,List,List,List,List,PLMSystem",
      "contents": "IsAssignedProcessAndInUpperScope(${1:fprocessoccurrence}, ${2:list}, ${3:list}, ${4:list}, ${5:list}, ${6:list}, ${7:plmsystem})"
    },
    {
      "trigger": "IsAssignedProcessAndInUpperScope\tFProcessOccurrence,List,List,List,List,PLMSystem",
      "contents": "IsAssignedProcessAndInUpperScope(${1:fprocessoccurrence}, ${2:list}, ${3:list}, ${4:list}, ${5:list}, ${6:plmsystem})"
    },
    {
      "trigger": "IsAxisSystemActive\tAxisSystem,Boolean",
      "contents": "IsAxisSystemActive(${1:axissystem}, ${2:bool})"
    },
    {
      "trigger": "IsBefore\tManufacturingActivity,ManufacturingActivity",
      "contents": "IsBefore(${1:manufacturingactivity}, ${2:manufacturingactivity})"
    },
    {
      "trigger": "IsCartesianPositionDefined\tRscHomePositionMgr,RscMotionGroup,String",
      "contents": "IsCartesianPositionDefined(${1:rschomepositionmgr}, ${2:rscmotiongroup}, ${3:name})"
    },
    {
      "trigger": "IsClashOrContact\tVPMInstance,VPMInstance,PIM_TypeOfResult",
      "contents": "IsClashOrContact(${1:vpminstance}, ${2:vpminstance}, ${3:pim_typeofresult})"
    },
    {
      "trigger": "IsClearance\tVPMInstance,VPMInstance,LENGTH,PIM_TypeOfResult,LENGTH",
      "contents": "IsClearance(${1:vpminstance}, ${2:vpminstance}, ${3:len}, ${4:pim_typeofresult}, ${5:len})"
    },
    {
      "trigger": "IsClosed\tGeometricCurve",
      "contents": "IsClosed(${1:geometriccurve})"
    },
    {
      "trigger": "IsConnectedTo\tElec3DNetworkPath,Elec3DNetworkPath,Integer",
      "contents": "IsConnectedTo(${1:elec3dnetworkpath}, ${2:elec3dnetworkpath}, ${3:int})"
    },
    {
      "trigger": "IsConsistent\tSharedSupportPartOccurrence,Boolean,Boolean",
      "contents": "IsConsistent(${1:sharedsupportpartoccurrence}, ${2:bool}, ${3:bool})"
    },
    {
      "trigger": "IsConstraintRespected\tElecRoute,Boolean",
      "contents": "IsConstraintRespected(${1:elecroute}, ${2:bool})"
    },
    {
      "trigger": "IsContaining\tProductOccurrence,Feature,String",
      "contents": "IsContaining(${1:productoccurrence}, ${2:feat}, ${3:name})"
    },
    {
      "trigger": "IsDeviceConnexionPossible\tProductOccurrence,ProductOccurrence,Boolean",
      "contents": "IsDeviceConnexionPossible(${1:productoccurrence}, ${2:productoccurrence}, ${3:bool})"
    },
    {
      "trigger": "IsDriving\tLiteral",
      "contents": "IsDriving(${1:literal})"
    },
    {
      "trigger": "IsEditable\tRscControllerObject,RscEditabilityScopeType",
      "contents": "IsEditable(${1:rsccontrollerobject}, ${2:rsceditabilityscopetype})"
    },
    {
      "trigger": "IsEmpty\tGroupOfProcessInstance",
      "contents": "IsEmpty(${1:groupofprocessinstance})"
    },
    {
      "trigger": "IsEndOfFile\tTextFile",
      "contents": "IsEndOfFile(${1:textfile})"
    },
    {
      "trigger": "IsEqual\tElecItinerary,ElecItinerary",
      "contents": "IsEqual(${1:elecitinerary}, ${2:elecitinerary})"
    },
    {
      "trigger": "IsEqualObject\tFeature,Feature",
      "contents": "IsEqualObject(${1:feat}, ${2:feat})"
    },
    {
      "trigger": "IsEqualTo\tRscTransform,RscTransform",
      "contents": "IsEqualTo(${1:rsctransform}, ${2:rsctransform})"
    },
    {
      "trigger": "IsExpanded\tObjectType",
      "contents": "IsExpanded(${1:objecttype})"
    },
    {
      "trigger": "IsFSConfigModifiedLocally\tProductOccurrence,String,String,String,String",
      "contents": "IsFSConfigModifiedLocally(${1:productoccurrence}, ${2:name}, ${3:name}, ${4:name}, ${5:name})"
    },
    {
      "trigger": "IsFeatureDeactivated\tFeature",
      "contents": "IsFeatureDeactivated(${1:feat})"
    },
    {
      "trigger": "IsFlexible\tDatabaseObjectType",
      "contents": "IsFlexible(${1:databaseobjecttype})"
    },
    {
      "trigger": "IsHPI\tAECAlignmentPoint",
      "contents": "IsHPI(${1:aecalignmentpoint})"
    },
    {
      "trigger": "IsIncluded\tPositioned3DObject,Positioned3DObject",
      "contents": "IsIncluded(${1:positioned3dobject}, ${2:positioned3dobject})"
    },
    {
      "trigger": "IsInfinite\tBody,Boolean",
      "contents": "IsInfinite(${1:body}, ${2:bool})"
    },
    {
      "trigger": "IsIsometricMatrix\tVPMInstance",
      "contents": "IsIsometricMatrix(${1:vpminstance})"
    },
    {
      "trigger": "IsLimitExpression\tRscKinematicsMgr,RscMotionGroup,Integer",
      "contents": "IsLimitExpression(${1:rsckinematicsmgr}, ${2:rscmotiongroup}, ${3:int})"
    },
    {
      "trigger": "IsLocked\tDNBTag,Boolean",
      "contents": "IsLocked(${1:dnbtag}, ${2:bool})"
    },
    {
      "trigger": "IsMTVNormalToSurface\tFeature,Feature,Real",
      "contents": "IsMTVNormalToSurface(${1:feat}, ${2:feat}, ${3:real})"
    },
    {
      "trigger": "IsMachiningSideInverted\tMfg2DMAFeature",
      "contents": "IsMachiningSideInverted(${1:mfg2dmafeature})"
    },
    {
      "trigger": "IsModifiedLocally\tProductOccurrence,String",
      "contents": "IsModifiedLocally(${1:productoccurrence}, ${2:name})"
    },
    {
      "trigger": "IsMounted\tProductOccurrence,ProductOccurrence,String",
      "contents": "IsMounted(${1:productoccurrence}, ${2:productoccurrence}, ${3:name})"
    },
    {
      "trigger": "IsObjectInsertionAuthorized\tGroupOfProcessInstance,Feature,GroupProcessDiagnostic",
      "contents": "IsObjectInsertionAuthorized(${1:groupofprocessinstance}, ${2:feat}, ${3:groupprocessdiagnostic})"
    },
    {
      "trigger": "IsObjectRemovalAuthorized\tGroupOfProcessInstance,Feature,GroupProcessDiagnostic",
      "contents": "IsObjectRemovalAuthorized(${1:groupofprocessinstance}, ${2:feat}, ${3:groupprocessdiagnostic})"
    },
    {
      "trigger": "IsOwnedBy\tFeature,Feature",
      "contents": "IsOwnedBy(${1:feat}, ${2:feat})"
    },
    {
      "trigger": "IsOwnedByString\tFeature,String",
      "contents": "IsOwnedByString(${1:feat}, ${2:name})"
    },
    {
      "trigger": "IsPatternInstanceLocked\tFeature",
      "contents": "IsPatternInstanceLocked(${1:feat})"
    },
    {
      "trigger": "IsPinReserved\tRFLVPMLogicalPort,RFLVPMLogicalInstance,Boolean,List",
      "contents": "IsPinReserved(${1:rflvpmlogicalport}, ${2:rflvpmlogicalinstance}, ${3:bool}, ${4:list})"
    },
    {
      "trigger": "IsPlanar\tGeometricCurve",
      "contents": "IsPlanar(${1:geometriccurve})"
    },
    {
      "trigger": "IsPliesGroupNonStructural\tFeature",
      "contents": "IsPliesGroupNonStructural(${1:feat})"
    },
    {
      "trigger": "IsPlySkinSwapped\tFeature",
      "contents": "IsPlySkinSwapped(${1:feat})"
    },
    {
      "trigger": "IsPlySymmetrical\tFeature",
      "contents": "IsPlySymmetrical(${1:feat})"
    },
    {
      "trigger": "IsPointedByAtLeat1MCX\tVPMInstance,Boolean",
      "contents": "IsPointedByAtLeat1MCX(${1:vpminstance}, ${2:bool})"
    },
    {
      "trigger": "IsPointingPubs\tMCX,Boolean",
      "contents": "IsPointingPubs(${1:mcx}, ${2:bool})"
    },
    {
      "trigger": "IsPointingToFeature\tPLMPIMMetricReference,Boolean",
      "contents": "IsPointingToFeature(${1:plmpimmetricreference}, ${2:bool})"
    },
    {
      "trigger": "IsRRSConnected\tRRSConnectionMgr",
      "contents": "IsRRSConnected(${1:rrsconnectionmgr})"
    },
    {
      "trigger": "IsRRSEnabled\tRRSConnectionParameters,RRSParameterScope",
      "contents": "IsRRSEnabled(${1:rrsconnectionparameters}, ${2:rrsparameterscope})"
    },
    {
      "trigger": "IsRRSServer\tString",
      "contents": "IsRRSServer(${1:name})"
    },
    {
      "trigger": "IsRawMaterial\tVPMInstance",
      "contents": "IsRawMaterial(${1:vpminstance})"
    },
    {
      "trigger": "IsSecondPI\tAECAlignmentPoint",
      "contents": "IsSecondPI(${1:aecalignmentpoint})"
    },
    {
      "trigger": "IsSequenced\tManufacturingActivity",
      "contents": "IsSequenced(${1:manufacturingactivity})"
    },
    {
      "trigger": "IsSequencedWith\tManufacturingActivity,ManufacturingActivity",
      "contents": "IsSequencedWith(${1:manufacturingactivity}, ${2:manufacturingactivity})"
    },
    {
      "trigger": "IsSet\tObjectType",
      "contents": "IsSet(${1:objecttype})"
    },
    {
      "trigger": "IsSubGroup\tGroupOfProcessInstance",
      "contents": "IsSubGroup(${1:groupofprocessinstance})"
    },
    {
      "trigger": "IsSupporting\tFeature,String",
      "contents": "IsSupporting(${1:feat}, ${2:name})"
    },
    {
      "trigger": "IsSynchronizeAvailable\tElec3DCable,ElecRoute,Boolean",
      "contents": "IsSynchronizeAvailable(${1:elec3dcable}, ${2:elecroute}, ${3:bool})"
    },
    {
      "trigger": "IsThereSequenceDefinedForConveyor\tFFS_Resource",
      "contents": "IsThereSequenceDefinedForConveyor(${1:ffs_resource})"
    },
    {
      "trigger": "IsTranslationMatrix\tVPMInstance",
      "contents": "IsTranslationMatrix(${1:vpminstance})"
    },
    {
      "trigger": "IsUpToDate\tFeature",
      "contents": "IsUpToDate(${1:feat})"
    },
    {
      "trigger": "IsUserGroup\tRscApplicativeProfileGroup",
      "contents": "IsUserGroup(${1:rscapplicativeprofilegroup})"
    },
    {
      "trigger": "IsVPI\tAECVerticalAlignmentPoint",
      "contents": "IsVPI(${1:aecverticalalignmentpoint})"
    },
    {
      "trigger": "IsValid\tRscController",
      "contents": "IsValid(${1:rsccontroller})"
    },
    {
      "trigger": "IsVisiblePublishedElement\tDatabaseObjectType,List,List,List",
      "contents": "IsVisiblePublishedElement(${1:databaseobjecttype}, ${2:list}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "IsZeroDOF\tProductOccurrence",
      "contents": "IsZeroDOF(${1:productoccurrence})"
    },
    {
      "trigger": "Junction\tList,List,String,String,String",
      "contents": "Junction(${1:list}, ${2:list}, ${3:name}, ${4:name}, ${5:name})"
    },
    {
      "trigger": "KeepGraphicalModifications\tProductOccurrence",
      "contents": "KeepGraphicalModifications(${1:productoccurrence})"
    },
    {
      "trigger": "LPDGetCustomMaterial\tMLPLayerObject",
      "contents": "LPDGetCustomMaterial(${1:mlplayerobject})"
    },
    {
      "trigger": "LPDHasCustomMaterial\tMLPLayerObject",
      "contents": "LPDHasCustomMaterial(${1:mlplayerobject})"
    },
    {
      "trigger": "LPDIsDisconnected\tMLPObject",
      "contents": "LPDIsDisconnected(${1:mlpobject})"
    },
    {
      "trigger": "LPDIsolateView\tList",
      "contents": "LPDIsolateView(${1:list})"
    },
    {
      "trigger": "LPDResetView\tMLPObject",
      "contents": "LPDResetView(${1:mlpobject})"
    },
    {
      "trigger": "LPDSetConnectionMode\tMLPObject,Boolean",
      "contents": "LPDSetConnectionMode(${1:mlpobject}, ${2:bool})"
    },
    {
      "trigger": "LPDUpdateDisconnectedElement\tMLPObject",
      "contents": "LPDUpdateDisconnectedElement(${1:mlpobject})"
    },
    {
      "trigger": "LPDUpgrade\tMLPStacking",
      "contents": "LPDUpgrade(${1:mlpstacking})"
    },
    {
      "trigger": "LRand\t()",
      "contents": "LRand()"
    },
    {
      "trigger": "LaunchMIPLICommandApplyAutoSession\tMfgProcessOccurrence,String",
      "contents": "LaunchMIPLICommandApplyAutoSession(${1:mfgprocessoccurrence}, ${2:name})"
    },
    {
      "trigger": "LaunchOperation\tFeature,String",
      "contents": "LaunchOperation(${1:feat}, ${2:name})"
    },
    {
      "trigger": "Length\tGeometricCurve",
      "contents": "Length(${1:geometriccurve})"
    },
    {
      "trigger": "LinearInterpolation\tReal,Real,Real",
      "contents": "LinearInterpolation(${1:real}, ${2:real}, ${3:real})"
    },
    {
      "trigger": "Link\tHTTPClient,String,DataTreeNode",
      "contents": "Link(${1:httpclient}, ${2:name}, ${3:datatreenode})"
    },
    {
      "trigger": "LinkDCPRowWithViewsOrDressups\tPLMSpecifyHowToCollectDataCnx,List",
      "contents": "LinkDCPRowWithViewsOrDressups(${1:plmspecifyhowtocollectdatacnx}, ${2:list})"
    },
    {
      "trigger": "LinkElectricalGeometries\tElectrical3DSystem,List",
      "contents": "LinkElectricalGeometries(${1:electrical3dsystem}, ${2:list})"
    },
    {
      "trigger": "LinkInstructionWithViewsOrDressups\tProdSystemOccurrence,List",
      "contents": "LinkInstructionWithViewsOrDressups(${1:prodsystemoccurrence}, ${2:list})"
    },
    {
      "trigger": "LinkToRequirement\tPLMCoreReference,Feature,String,Boolean",
      "contents": "LinkToRequirement(${1:plmcorereference}, ${2:feat}, ${3:name}, ${4:bool})"
    },
    {
      "trigger": "LinkToRequirement\tPLMOperation,Requirement",
      "contents": "LinkToRequirement(${1:plmoperation}, ${2:requirement})"
    },
    {
      "trigger": "LinkedSpecification\tVPMInstance,Conductor",
      "contents": "LinkedSpecification(${1:vpminstance}, ${2:conductor})"
    },
    {
      "trigger": "List\tObjectType",
      "contents": "List(${1:objecttype})"
    },
    {
      "trigger": "ListAllOuterLayerObjects\tFeature,Real,List,Integer",
      "contents": "ListAllOuterLayerObjects(${1:feat}, ${2:real}, ${3:list}, ${4:int})"
    },
    {
      "trigger": "ListAlternateParts\tPart",
      "contents": "ListAlternateParts(${1:part})"
    },
    {
      "trigger": "ListAlternateProcesses\tDELFmiFunctionReference",
      "contents": "ListAlternateProcesses(${1:delfmifunctionreference})"
    },
    {
      "trigger": "ListArc\tSharedSupportPartOccurrence,List,Integer",
      "contents": "ListArc(${1:sharedsupportpartoccurrence}, ${2:list}, ${3:int})"
    },
    {
      "trigger": "ListAssociatedRoutables\tLogicalOccurrence",
      "contents": "ListAssociatedRoutables(${1:logicaloccurrence})"
    },
    {
      "trigger": "ListAttributeNames2\tFeature",
      "contents": "ListAttributeNames2(${1:feat})"
    },
    {
      "trigger": "ListAttributeNames\tFeature,String,Boolean",
      "contents": "ListAttributeNames(${1:feat}, ${2:name}, ${3:bool})"
    },
    {
      "trigger": "ListAttributesValuePointers\tFeature,String",
      "contents": "ListAttributesValuePointers(${1:feat}, ${2:name})"
    },
    {
      "trigger": "ListBenchSupports\tBenchSupportGroup",
      "contents": "ListBenchSupports(${1:benchsupportgroup})"
    },
    {
      "trigger": "ListBendWithPosition\tElec3DNetworkPath,List,List,List",
      "contents": "ListBendWithPosition(${1:elec3dnetworkpath}, ${2:list}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "ListBranchPoint\tBranch,List",
      "contents": "ListBranchPoint(${1:branch}, ${2:list})"
    },
    {
      "trigger": "ListBranchPoints\tCATEbm_Branch,List",
      "contents": "ListBranchPoints(${1:catebm_branch}, ${2:list})"
    },
    {
      "trigger": "ListBreakOffs\tPartFeature",
      "contents": "ListBreakOffs(${1:partfeature})"
    },
    {
      "trigger": "ListCables\tProductOccurrence,List,List",
      "contents": "ListCables(${1:productoccurrence}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "ListCablewaySegmentByTray\tRaceway_Tray_Occurrence",
      "contents": "ListCablewaySegmentByTray(${1:raceway_tray_occurrence})"
    },
    {
      "trigger": "ListChildren\tVisualizable",
      "contents": "ListChildren(${1:visualizable})"
    },
    {
      "trigger": "ListConnectedDevices\tProductOccurrence,List,List,List",
      "contents": "ListConnectedDevices(${1:productoccurrence}, ${2:list}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "ListConnectedNodes\tProductOccurrence,List",
      "contents": "ListConnectedNodes(${1:productoccurrence}, ${2:list})"
    },
    {
      "trigger": "ListControlPoints\tCATEbm_Branch,List",
      "contents": "ListControlPoints(${1:catebm_branch}, ${2:list})"
    },
    {
      "trigger": "ListCores\tElec3DCable,List",
      "contents": "ListCores(${1:elec3dcable}, ${2:list})"
    },
    {
      "trigger": "ListCrossedSpaces\tSegment,List",
      "contents": "ListCrossedSpaces(${1:segment}, ${2:list})"
    },
    {
      "trigger": "ListDeclineRamps\tPartFeature",
      "contents": "ListDeclineRamps(${1:partfeature})"
    },
    {
      "trigger": "ListDirectlyCoveredObjects\tFeature,List",
      "contents": "ListDirectlyCoveredObjects(${1:feat}, ${2:list})"
    },
    {
      "trigger": "ListDirectlyOuterLayerObjects\tFeature,List",
      "contents": "ListDirectlyOuterLayerObjects(${1:feat}, ${2:list})"
    },
    {
      "trigger": "ListDocuments\tPLMEntity",
      "contents": "ListDocuments(${1:plmentity})"
    },
    {
      "trigger": "ListElecComponents\tBranch,List,Boolean",
      "contents": "ListElecComponents(${1:branch}, ${2:list}, ${3:bool})"
    },
    {
      "trigger": "ListElecGuideCurves\tElec3DDuct,List",
      "contents": "ListElecGuideCurves(${1:elec3dduct}, ${2:list})"
    },
    {
      "trigger": "ListElectricalConnectedObjects\tVPMInstance,String,List,List,List",
      "contents": "ListElectricalConnectedObjects(${1:vpminstance}, ${2:name}, ${3:list}, ${4:list}, ${5:list})"
    },
    {
      "trigger": "ListElectricalConnectionPoints\tVPMReference,List,List",
      "contents": "ListElectricalConnectionPoints(${1:vpmreference}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "ListElectricalConnectionPointsNames\tVPMInstance,List,List",
      "contents": "ListElectricalConnectionPointsNames(${1:vpminstance}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "ListElectricalWires\tVPMInstance,List,List",
      "contents": "ListElectricalWires(${1:vpminstance}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "ListExtensionGuideCurves\tElectricalBranchGeometry,List",
      "contents": "ListExtensionGuideCurves(${1:electricalbranchgeometry}, ${2:list})"
    },
    {
      "trigger": "ListFiles\tDocument",
      "contents": "ListFiles(${1:document})"
    },
    {
      "trigger": "ListHeadings\tPartFeature",
      "contents": "ListHeadings(${1:partfeature})"
    },
    {
      "trigger": "ListIncludingZones\tDIFSheet,String,List",
      "contents": "ListIncludingZones(${1:difsheet}, ${2:name}, ${3:list})"
    },
    {
      "trigger": "ListInstances\tElec3DConductor,List",
      "contents": "ListInstances(${1:elec3dconductor}, ${2:list})"
    },
    {
      "trigger": "ListLinkedElectricalGeometries\tElectrical3DSystem,List",
      "contents": "ListLinkedElectricalGeometries(${1:electrical3dsystem}, ${2:list})"
    },
    {
      "trigger": "ListLogPipingPortsSizeFromPipingPart\tPipLogicalPartOcc,List,List",
      "contents": "ListLogPipingPortsSizeFromPipingPart(${1:piplogicalpartocc}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "ListLogicInstructions\tRscLogicSequence",
      "contents": "ListLogicInstructions(${1:rsclogicsequence})"
    },
    {
      "trigger": "ListLogicalLineFromMember\tLogicalOccurrence,List",
      "contents": "ListLogicalLineFromMember(${1:logicaloccurrence}, ${2:list})"
    },
    {
      "trigger": "ListMaterialsInContext\tVPMReference,List",
      "contents": "ListMaterialsInContext(${1:vpmreference}, ${2:list})"
    },
    {
      "trigger": "ListNetworkPathElement\tElec3DNetworkPath,List",
      "contents": "ListNetworkPathElement(${1:elec3dnetworkpath}, ${2:list})"
    },
    {
      "trigger": "ListNetworkPathElements\tSys3DNetworkPath,List",
      "contents": "ListNetworkPathElements(${1:sys3dnetworkpath}, ${2:list})"
    },
    {
      "trigger": "ListNodeProfiles\tCATEbm_BranchPoint,List",
      "contents": "ListNodeProfiles(${1:catebm_branchpoint}, ${2:list})"
    },
    {
      "trigger": "ListNodeWithPosition\tElec3DNetworkPath,List,List",
      "contents": "ListNodeWithPosition(${1:elec3dnetworkpath}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "ListOccurrences\tPLMCoreReference,Feature",
      "contents": "ListOccurrences(${1:plmcorereference}, ${2:feat})"
    },
    {
      "trigger": "ListOrderedJunctionDevices\tElec3DCable,List,List,List",
      "contents": "ListOrderedJunctionDevices(${1:elec3dcable}, ${2:list}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "ListOrderedRoutes\tElec3DCable,List,List",
      "contents": "ListOrderedRoutes(${1:elec3dcable}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "ListOrphanRoutes\tElectrical3DSystem,List",
      "contents": "ListOrphanRoutes(${1:electrical3dsystem}, ${2:list})"
    },
    {
      "trigger": "ListOuterLayerProtections\tPoint,List",
      "contents": "ListOuterLayerProtections(${1:point}, ${2:list})"
    },
    {
      "trigger": "ListParallelSequences\tRscLogicParallel",
      "contents": "ListParallelSequences(${1:rsclogicparallel})"
    },
    {
      "trigger": "ListParents\tVisualizable",
      "contents": "ListParents(${1:visualizable})"
    },
    {
      "trigger": "ListPathwayConnectionPoints\tSys3D_AbstractVolume,List",
      "contents": "ListPathwayConnectionPoints(${1:sys3d_abstractvolume}, ${2:list})"
    },
    {
      "trigger": "ListPathwaySegments\tSys3DPathwayBranch,List",
      "contents": "ListPathwaySegments(${1:sys3dpathwaybranch}, ${2:list})"
    },
    {
      "trigger": "ListPipingConnectedComponents\tPLMCoreInstance,String,List",
      "contents": "ListPipingConnectedComponents(${1:plmcoreinstance}, ${2:name}, ${3:list})"
    },
    {
      "trigger": "ListPipingLineIDMembers\tLogicalOccurrence",
      "contents": "ListPipingLineIDMembers(${1:logicaloccurrence})"
    },
    {
      "trigger": "ListPits\tPartFeature",
      "contents": "ListPits(${1:partfeature})"
    },
    {
      "trigger": "ListPrimaryParts\tPart",
      "contents": "ListPrimaryParts(${1:part})"
    },
    {
      "trigger": "ListProfileTemplateUserAttributes\tRscApplicativeProfileGroup",
      "contents": "ListProfileTemplateUserAttributes(${1:rscapplicativeprofilegroup})"
    },
    {
      "trigger": "ListProtection\tElec3DNetworkPath,List",
      "contents": "ListProtection(${1:elec3dnetworkpath}, ${2:list})"
    },
    {
      "trigger": "ListProtectionsFromExtremity\tSegmentExtremity,List",
      "contents": "ListProtectionsFromExtremity(${1:segmentextremity}, ${2:list})"
    },
    {
      "trigger": "ListProtectionsWithTotalLength\tElectricalBranchGeometry,List,List",
      "contents": "ListProtectionsWithTotalLength(${1:electricalbranchgeometry}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "ListPublications\tDatabaseObjectType",
      "contents": "ListPublications(${1:databaseobjecttype})"
    },
    {
      "trigger": "ListRobDRActionInstruction\tRobDrillRivetAction",
      "contents": "ListRobDRActionInstruction(${1:robdrillrivetaction})"
    },
    {
      "trigger": "ListRouteElement\tElec3DNetworkPath,Elec3DNetworkNode,List",
      "contents": "ListRouteElement(${1:elec3dnetworkpath}, ${2:elec3dnetworknode}, ${3:list})"
    },
    {
      "trigger": "ListRoutes\tProductOccurrence,List,List",
      "contents": "ListRoutes(${1:productoccurrence}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "ListRoutingElements\tCATEbm_Branch,List",
      "contents": "ListRoutingElements(${1:catebm_branch}, ${2:list})"
    },
    {
      "trigger": "ListRscLogicSimSensors\tRscModelLogicMgr",
      "contents": "ListRscLogicSimSensors(${1:rscmodellogicmgr})"
    },
    {
      "trigger": "ListRscLogicTasks\tRscModelLogicMgr,Integer",
      "contents": "ListRscLogicTasks(${1:rscmodellogicmgr}, ${2:int})"
    },
    {
      "trigger": "ListRunnableTasks\tRscLogicSequence",
      "contents": "ListRunnableTasks(${1:rsclogicsequence})"
    },
    {
      "trigger": "ListSecondaryConnectionPositions\tSegment,String,List,List,List",
      "contents": "ListSecondaryConnectionPositions(${1:segment}, ${2:name}, ${3:list}, ${4:list}, ${5:list})"
    },
    {
      "trigger": "ListSegments\tSharedSupportPartOccurrence,List,List,List",
      "contents": "ListSegments(${1:sharedsupportpartoccurrence}, ${2:list}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "ListSelectedFeaturesIdentifier\tProduct Configuration,String,Integer,List",
      "contents": "ListSelectedFeaturesIdentifier(${1:product configuration}, ${2:name}, ${3:int}, ${4:list})"
    },
    {
      "trigger": "ListSelectedOptions\tProduct Configuration,String,Integer,List",
      "contents": "ListSelectedOptions(${1:product configuration}, ${2:name}, ${3:int}, ${4:list})"
    },
    {
      "trigger": "ListSelectedParametersIdentifier\tProduct Configuration,String,List",
      "contents": "ListSelectedParametersIdentifier(${1:product configuration}, ${2:name}, ${3:list})"
    },
    {
      "trigger": "ListSheetsAndViewsFromObject\tPLMCoreInstance,List,List",
      "contents": "ListSheetsAndViewsFromObject(${1:plmcoreinstance}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "ListSheetsFromObject\tPLMCoreInstance,List",
      "contents": "ListSheetsFromObject(${1:plmcoreinstance}, ${2:list})"
    },
    {
      "trigger": "ListSpacesFromZones\tDIFSheet,List,List",
      "contents": "ListSpacesFromZones(${1:difsheet}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "ListSupport\tElec3DNetworkPath,List",
      "contents": "ListSupport(${1:elec3dnetworkpath}, ${2:list})"
    },
    {
      "trigger": "ListSupportWithPosition\tElec3DNetworkPath,List,List,List",
      "contents": "ListSupportWithPosition(${1:elec3dnetworkpath}, ${2:list}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "ListSymbolReferenceNamesFromPLMReference\tPLMCoreReference,List",
      "contents": "ListSymbolReferenceNamesFromPLMReference(${1:plmcorereference}, ${2:list})"
    },
    {
      "trigger": "ListTSAScenarioFasteningObjects\tDELMfgSimTSAScenario,Integer",
      "contents": "ListTSAScenarioFasteningObjects(${1:delmfgsimtsascenario}, ${2:int})"
    },
    {
      "trigger": "ListTrayByCablewaySegment\tSegment",
      "contents": "ListTrayByCablewaySegment(${1:segment})"
    },
    {
      "trigger": "ListUsedSupports\tSegment,List",
      "contents": "ListUsedSupports(${1:segment}, ${2:list})"
    },
    {
      "trigger": "ListUsedSupportsWithAbscissa\tFeature,List,List,List",
      "contents": "ListUsedSupportsWithAbscissa(${1:feat}, ${2:list}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "ListZonesFromSheet\tDIFSheet,List",
      "contents": "ListZonesFromSheet(${1:difsheet}, ${2:list})"
    },
    {
      "trigger": "LoadActivateVRCProgram\tRRSConnectionMgr,String,String",
      "contents": "LoadActivateVRCProgram(${1:rrsconnectionmgr}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "LoadCandidateRscScopeOrSecondary\tDELLmiCandidateResourcesCnx,Integer,Integer,String",
      "contents": "LoadCandidateRscScopeOrSecondary(${1:dellmicandidateresourcescnx}, ${2:int}, ${3:int}, ${4:name})"
    },
    {
      "trigger": "LoadCapablePrimaryResources\tPLMCoreReference,Integer,List,List",
      "contents": "LoadCapablePrimaryResources(${1:plmcorereference}, ${2:int}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "LoadRelatedObjects\tConductor",
      "contents": "LoadRelatedObjects(${1:conductor})"
    },
    {
      "trigger": "LoadRelatedObjects\tList,List",
      "contents": "LoadRelatedObjects(${1:list}, ${2:list})"
    },
    {
      "trigger": "LoadResult\tPLMQueryResult,Boolean",
      "contents": "LoadResult(${1:plmqueryresult}, ${2:bool})"
    },
    {
      "trigger": "LoadResult\tPLMQueryResult,PLMQueryResultLoadMode,PLMQueryResultExpandMode",
      "contents": "LoadResult(${1:plmqueryresult}, ${2:plmqueryresultloadmode}, ${3:plmqueryresultexpandmode})"
    },
    {
      "trigger": "Locate\tList,ObjectType,Integer,Boolean",
      "contents": "Locate(${1:list}, ${2:objecttype}, ${3:int}, ${4:bool})"
    },
    {
      "trigger": "LocateInColumn\tDTSheetType,Integer,Literal",
      "contents": "LocateInColumn(${1:dtsheettype}, ${2:int}, ${3:literal})"
    },
    {
      "trigger": "LocateInRow\tDTSheetType,Integer,Literal",
      "contents": "LocateInRow(${1:dtsheettype}, ${2:int}, ${3:literal})"
    },
    {
      "trigger": "LockPatternInstance\tFeature,Boolean",
      "contents": "LockPatternInstance(${1:feat}, ${2:bool})"
    },
    {
      "trigger": "LogicalGlobalCopySetTo\tCATTPSSet,PartFeature,List,Boolean,String,Boolean",
      "contents": "LogicalGlobalCopySetTo(${1:cattpsset}, ${2:partfeature}, ${3:list}, ${4:bool}, ${5:name}, ${6:bool})"
    },
    {
      "trigger": "LogicalRouteOfRoutableObject\tRFLVPMLogicalConnection",
      "contents": "LogicalRouteOfRoutableObject(${1:rflvpmlogicalconnection})"
    },
    {
      "trigger": "Lookup\tLiteral,Real,Literal,Literal",
      "contents": "Lookup(${1:literal}, ${2:real}, ${3:literal}, ${4:literal})"
    },
    {
      "trigger": "LoopDetection\tElectricalGeometryOccurrence,List",
      "contents": "LoopDetection(${1:electricalgeometryoccurrence}, ${2:list})"
    },
    {
      "trigger": "MainFastener\tFastenerOccurrence",
      "contents": "MainFastener(${1:fasteneroccurrence})"
    },
    {
      "trigger": "ManageInstance\tDatabaseObjectType,String,String,String",
      "contents": "ManageInstance(${1:databaseobjecttype}, ${2:name}, ${3:name}, ${4:name})"
    },
    {
      "trigger": "MapSchSymbolWithGivenInstance\tDifSymbol,List,List,List",
      "contents": "MapSchSymbolWithGivenInstance(${1:difsymbol}, ${2:list}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "Match\tRegex,String",
      "contents": "Match(${1:regex}, ${2:name})"
    },
    {
      "trigger": "MatchPattern\tString,String",
      "contents": "MatchPattern(${1:name}, ${2:name})"
    },
    {
      "trigger": "Matrix\tGeometricPlane",
      "contents": "Matrix(${1:geometricplane})"
    },
    {
      "trigger": "Matrix\tInteger,Integer,Real",
      "contents": "Matrix(${1:int}, ${2:int}, ${3:real})"
    },
    {
      "trigger": "MatrixFromString\tString",
      "contents": "MatrixFromString(${1:name})"
    },
    {
      "trigger": "MatrixIdent\tInteger",
      "contents": "MatrixIdent(${1:int})"
    },
    {
      "trigger": "MaxInColumn\tDTSheetType,Integer",
      "contents": "MaxInColumn(${1:dtsheettype}, ${2:int})"
    },
    {
      "trigger": "MergePipingLineIDs\tLogicalOccurrence,LogicalOccurrence",
      "contents": "MergePipingLineIDs(${1:logicaloccurrence}, ${2:logicaloccurrence})"
    },
    {
      "trigger": "Message\tString,Literal",
      "contents": "Message(${1:name}, ${2:literal})"
    },
    {
      "trigger": "Middle\tGeometricCurve",
      "contents": "Middle(${1:geometriccurve})"
    },
    {
      "trigger": "MigratePrecedenceLinksToPrecedenceConstraints\t()",
      "contents": "MigratePrecedenceLinksToPrecedenceConstraints()"
    },
    {
      "trigger": "MinInColumn\tDTSheetType,Integer",
      "contents": "MinInColumn(${1:dtsheettype}, ${2:int})"
    },
    {
      "trigger": "ModifyHomePositionIndex\tRscHomePositionMgr,RscMotionGroup,String,Integer",
      "contents": "ModifyHomePositionIndex(${1:rschomepositionmgr}, ${2:rscmotiongroup}, ${3:name}, ${4:int})"
    },
    {
      "trigger": "ModifyObject\tDEL3DState,ProductOccurrence,DEL3DStActionTypeEnum,List",
      "contents": "ModifyObject(${1:del3dstate}, ${2:productoccurrence}, ${3:del3dstactiontypeenum}, ${4:list})"
    },
    {
      "trigger": "ModifySimplifiedRepresentation\tList,Boolean",
      "contents": "ModifySimplifiedRepresentation(${1:list}, ${2:bool})"
    },
    {
      "trigger": "MountComponent\tResourceNCAssembly,VPMInstance,VPMInstance,String",
      "contents": "MountComponent(${1:resourcencassembly}, ${2:vpminstance}, ${3:vpminstance}, ${4:name})"
    },
    {
      "trigger": "MountResource\tProductOccurrence,String,ProductOccurrence,ProductOccurrence",
      "contents": "MountResource(${1:productoccurrence}, ${2:name}, ${3:productoccurrence}, ${4:productoccurrence})"
    },
    {
      "trigger": "MountResource\tProductOccurrence,String,VPMInstance",
      "contents": "MountResource(${1:productoccurrence}, ${2:name}, ${3:vpminstance})"
    },
    {
      "trigger": "MountResourcePortAs\tRscMountsMgr,RscControllerUsageType,VPMPort,ProductOccurrence,VPMPort,VPMPort,ProductOccurrence,RscTransform,Boolean",
      "contents": "MountResourcePortAs(${1:rscmountsmgr}, ${2:rsccontrollerusagetype}, ${3:vpmport}, ${4:productoccurrence}, ${5:vpmport}, ${6:vpmport}, ${7:productoccurrence}, ${8:rsctransform}, ${9:bool})"
    },
    {
      "trigger": "MountResourceTransfoAs\tRscMountsMgr,RscControllerUsageType,VPMPort,ProductOccurrence,VPMPort,RscTransform,ProductOccurrence,RscTransform,Boolean",
      "contents": "MountResourceTransfoAs(${1:rscmountsmgr}, ${2:rsccontrollerusagetype}, ${3:vpmport}, ${4:productoccurrence}, ${5:vpmport}, ${6:rsctransform}, ${7:productoccurrence}, ${8:rsctransform}, ${9:bool})"
    },
    {
      "trigger": "MountWorkPiece\tProductOccurrence,String,ProductOccurrence,String,List,List",
      "contents": "MountWorkPiece(${1:productoccurrence}, ${2:name}, ${3:productoccurrence}, ${4:name}, ${5:list}, ${6:list})"
    },
    {
      "trigger": "MoveAfter\tDNBResourceTask,DNBResourceTask",
      "contents": "MoveAfter(${1:dnbresourcetask}, ${2:dnbresourcetask})"
    },
    {
      "trigger": "MoveBefore\tDNBResourceTask,DNBResourceTask",
      "contents": "MoveBefore(${1:dnbresourcetask}, ${2:dnbresourcetask})"
    },
    {
      "trigger": "MoveInside\tMLPObject,MLPObject",
      "contents": "MoveInside(${1:mlpobject}, ${2:mlpobject})"
    },
    {
      "trigger": "MoveOperation\tManufacturingProgram,ManufacturingOperation,ManufacturingOperation",
      "contents": "MoveOperation(${1:manufacturingprogram}, ${2:manufacturingoperation}, ${3:manufacturingoperation})"
    },
    {
      "trigger": "MoveOperationsWithFineBalancing\tList,ProdSystemOccurrence",
      "contents": "MoveOperationsWithFineBalancing(${1:list}, ${2:prodsystemoccurrence})"
    },
    {
      "trigger": "MoveOptimizationPathTargetIndex\tRscOptimizationPath,Integer,Integer",
      "contents": "MoveOptimizationPathTargetIndex(${1:rscoptimizationpath}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "MoveRscInstruction\tRscLogicInstruction,Integer",
      "contents": "MoveRscInstruction(${1:rsclogicinstruction}, ${2:int})"
    },
    {
      "trigger": "MoveRscInstructionToSequence\tRscLogicInstruction,RscLogicSequence,Integer",
      "contents": "MoveRscInstructionToSequence(${1:rsclogicinstruction}, ${2:rsclogicsequence}, ${3:int})"
    },
    {
      "trigger": "MoveRscMotionGroupResource\tRscMotionGroup,ProductOccurrence,Boolean,ProductOccurrence",
      "contents": "MoveRscMotionGroupResource(${1:rscmotiongroup}, ${2:productoccurrence}, ${3:bool}, ${4:productoccurrence})"
    },
    {
      "trigger": "MoveRscTask\tRscLogicTask,Integer",
      "contents": "MoveRscTask(${1:rsclogictask}, ${2:int})"
    },
    {
      "trigger": "MoveRscTaskAfter\tRscLogicTask,RscLogicTask",
      "contents": "MoveRscTaskAfter(${1:rsclogictask}, ${2:rsclogictask})"
    },
    {
      "trigger": "MoveRscTaskBefore\tRscLogicTask,RscLogicTask",
      "contents": "MoveRscTaskBefore(${1:rsclogictask}, ${2:rsclogictask})"
    },
    {
      "trigger": "Multiply\tRscTransform,RscTransform",
      "contents": "Multiply(${1:rsctransform}, ${2:rsctransform})"
    },
    {
      "trigger": "Name\tFeature",
      "contents": "Name(${1:feat})"
    },
    {
      "trigger": "NameChange\tUserFeature",
      "contents": "NameChange(${1:userfeature})"
    },
    {
      "trigger": "NavigateFromPartOrPrdToProcessThroughScopeLink\tPart",
      "contents": "NavigateFromPartOrPrdToProcessThroughScopeLink(${1:part})"
    },
    {
      "trigger": "NavigateFromPrdToProcessThroughImplementLink\tVPMInstance",
      "contents": "NavigateFromPrdToProcessThroughImplementLink(${1:vpminstance})"
    },
    {
      "trigger": "Negative\tBitmap",
      "contents": "Negative(${1:bitmap})"
    },
    {
      "trigger": "NewFunctionCheckPreexisting\tBoolean",
      "contents": "NewFunctionCheckPreexisting(${1:bool})"
    },
    {
      "trigger": "NewObjectGraph\tString,String,Integer,Feature",
      "contents": "NewObjectGraph(${1:name}, ${2:name}, ${3:int}, ${4:feat})"
    },
    {
      "trigger": "NextArcs\tElec3DNetworkNode,Elec3DNetworkArc,List",
      "contents": "NextArcs(${1:elec3dnetworknode}, ${2:elec3dnetworkarc}, ${3:list})"
    },
    {
      "trigger": "NextError\tGeometryCheckOpe",
      "contents": "NextError(${1:geometrycheckope})"
    },
    {
      "trigger": "NextNode\tElec3DNetworkArc,Elec3DNetworkNode,Elec3DNetworkNode",
      "contents": "NextNode(${1:elec3dnetworkarc}, ${2:elec3dnetworknode}, ${3:elec3dnetworknode})"
    },
    {
      "trigger": "Norm\tVector",
      "contents": "Norm(${1:vector})"
    },
    {
      "trigger": "Normal\tGeometricCircle",
      "contents": "Normal(${1:geometriccircle})"
    },
    {
      "trigger": "NormalizedLength\tString",
      "contents": "NormalizedLength(${1:name})"
    },
    {
      "trigger": "NotConnectedPorts\tRFLPLMFunctionalInstance",
      "contents": "NotConnectedPorts(${1:rflplmfunctionalinstance})"
    },
    {
      "trigger": "NotNextInSequence\tManufacturingActivity,ManufacturingActivity",
      "contents": "NotNextInSequence(${1:manufacturingactivity}, ${2:manufacturingactivity})"
    },
    {
      "trigger": "Notify\tString,Literal",
      "contents": "Notify(${1:name}, ${2:literal})"
    },
    {
      "trigger": "NumbersBetween\tReal,Real,Integer,Boolean",
      "contents": "NumbersBetween(${1:real}, ${2:real}, ${3:int}, ${4:bool})"
    },
    {
      "trigger": "NumbersBetweenByStep\tReal,Real,Real,Boolean",
      "contents": "NumbersBetweenByStep(${1:real}, ${2:real}, ${3:real}, ${4:bool})"
    },
    {
      "trigger": "OK\tCATKwdDialogWindow",
      "contents": "OK(${1:catkwddialogwindow})"
    },
    {
      "trigger": "Open\tBitmap,Integer",
      "contents": "Open(${1:bitmap}, ${2:int})"
    },
    {
      "trigger": "Open\tPLMEntityID,LoadMode,ExpandMode",
      "contents": "Open(${1:plmentityid}, ${2:loadmode}, ${3:expandmode})"
    },
    {
      "trigger": "OpenImage\tString",
      "contents": "OpenImage(${1:name})"
    },
    {
      "trigger": "OpenSpecificationContent\tEnsSpecification",
      "contents": "OpenSpecificationContent(${1:ensspecification})"
    },
    {
      "trigger": "OpenTextFile\tString,String",
      "contents": "OpenTextFile(${1:name}, ${2:name})"
    },
    {
      "trigger": "Origin\tGeometricPlane",
      "contents": "Origin(${1:geometricplane})"
    },
    {
      "trigger": "PLMTemplateInstantiation\tList",
      "contents": "PLMTemplateInstantiation(${1:list})"
    },
    {
      "trigger": "PPRGetAllPartsIsAlternateOfWithNavigate\tPart",
      "contents": "PPRGetAllPartsIsAlternateOfWithNavigate(${1:part})"
    },
    {
      "trigger": "PREVIEW\tCATKwdDialogWindow",
      "contents": "PREVIEW(${1:catkwddialogwindow})"
    },
    {
      "trigger": "Parse\tJSONNode,String",
      "contents": "Parse(${1:jsonnode}, ${2:name})"
    },
    {
      "trigger": "Patch\tHTTPClient,String,String,String,DataTreeNode",
      "contents": "Patch(${1:httpclient}, ${2:name}, ${3:name}, ${4:name}, ${5:datatreenode})"
    },
    {
      "trigger": "PerformMergeRobotKinDressups\tProductOccurrence,Integer",
      "contents": "PerformMergeRobotKinDressups(${1:productoccurrence}, ${2:int})"
    },
    {
      "trigger": "PerformPrecheck\tDELMfgSimTSAScenario",
      "contents": "PerformPrecheck(${1:delmfgsimtsascenario})"
    },
    {
      "trigger": "PerformRemoveRobotArea\tProductOccurrence,RscPerformRemoveRobotAreaOptionsType",
      "contents": "PerformRemoveRobotArea(${1:productoccurrence}, ${2:rscperformremoverobotareaoptionstype})"
    },
    {
      "trigger": "PerlinNoise\tInteger,Real,Real,Real,List,List,List,Integer",
      "contents": "PerlinNoise(${1:int}, ${2:real}, ${3:real}, ${4:real}, ${5:list}, ${6:list}, ${7:list}, ${8:int})"
    },
    {
      "trigger": "PhysicalRouteOfRoutableObject\tRFLVPMLogicalConnection",
      "contents": "PhysicalRouteOfRoutableObject(${1:rflvpmlogicalconnection})"
    },
    {
      "trigger": "PlaceSchSymbolFromInstance\tList,DIFViewInstance,Real,Real,String",
      "contents": "PlaceSchSymbolFromInstance(${1:list}, ${2:difviewinstance}, ${3:real}, ${4:real}, ${5:name})"
    },
    {
      "trigger": "PopupMessage\tString,Literal",
      "contents": "PopupMessage(${1:name}, ${2:literal})"
    },
    {
      "trigger": "PositionAllAnnotationFTAView\tCATTPSSet,CATTPSView",
      "contents": "PositionAllAnnotationFTAView(${1:cattpsset}, ${2:cattpsview})"
    },
    {
      "trigger": "PositionOn\tMLPFormulation,String",
      "contents": "PositionOn(${1:mlpformulation}, ${2:name})"
    },
    {
      "trigger": "PositionResourceAt\tMachineInstruction,Integer,Boolean",
      "contents": "PositionResourceAt(${1:machineinstruction}, ${2:int}, ${3:bool})"
    },
    {
      "trigger": "Post\tHTTPClient,String,String,String,DataTreeNode",
      "contents": "Post(${1:httpclient}, ${2:name}, ${3:name}, ${4:name}, ${5:datatreenode})"
    },
    {
      "trigger": "ProcessGroupFather\tGroupOfProcessInstance",
      "contents": "ProcessGroupFather(${1:groupofprocessinstance})"
    },
    {
      "trigger": "ProcessGroupOwner\tGroupOfProcessInstance",
      "contents": "ProcessGroupOwner(${1:groupofprocessinstance})"
    },
    {
      "trigger": "ProduceTurtleView\tFeature,Boolean,String",
      "contents": "ProduceTurtleView(${1:feat}, ${2:bool}, ${3:name})"
    },
    {
      "trigger": "ProgressBarNextStep\t()",
      "contents": "ProgressBarNextStep()"
    },
    {
      "trigger": "ProgressBarSetMaxStep\tInteger",
      "contents": "ProgressBarSetMaxStep(${1:int})"
    },
    {
      "trigger": "ProgressBarSetNextValue\tReal",
      "contents": "ProgressBarSetNextValue(${1:real})"
    },
    {
      "trigger": "ProgressBarSetText\tString",
      "contents": "ProgressBarSetText(${1:name})"
    },
    {
      "trigger": "ProgressBarSetValue\tReal",
      "contents": "ProgressBarSetValue(${1:real})"
    },
    {
      "trigger": "ProjectedArea\tSolid,AxisSystem",
      "contents": "ProjectedArea(${1:solid}, ${2:axissystem})"
    },
    {
      "trigger": "PromoteToReferencePlate\tSddStiffener,Feature",
      "contents": "PromoteToReferencePlate(${1:sddstiffener}, ${2:feat})"
    },
    {
      "trigger": "Propagate3DState\tDEL3DState,ProductOccurrence",
      "contents": "Propagate3DState(${1:del3dstate}, ${2:productoccurrence})"
    },
    {
      "trigger": "PropagateReferenceToGeometry\tHVAC_Rigid_Duct_Inst",
      "contents": "PropagateReferenceToGeometry(${1:hvac_rigid_duct_inst})"
    },
    {
      "trigger": "PropagateRscIOSignalMappings\tRscModelLogicMgr,List,ProductOccurrence,Boolean",
      "contents": "PropagateRscIOSignalMappings(${1:rscmodellogicmgr}, ${2:list}, ${3:productoccurrence}, ${4:bool})"
    },
    {
      "trigger": "PublicatedElements\tDatabaseObjectType,List,List,List",
      "contents": "PublicatedElements(${1:databaseobjecttype}, ${2:list}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "Put\tHTTPClient,String,String,String,DataTreeNode",
      "contents": "Put(${1:httpclient}, ${2:name}, ${3:name}, ${4:name}, ${5:datatreenode})"
    },
    {
      "trigger": "PutInErrorState\tBaseConcept,Boolean",
      "contents": "PutInErrorState(${1:baseconcept}, ${2:bool})"
    },
    {
      "trigger": "PutVariablesValuesToFrame\tCATKwdFrameUsage,String",
      "contents": "PutVariablesValuesToFrame(${1:catkwdframeusage}, ${2:name})"
    },
    {
      "trigger": "QCCBodyNameParameterSet1\tBodyFeature,String,Integer,Integer,Boolean,Boolean,String,Integer",
      "contents": "QCCBodyNameParameterSet1(${1:bodyfeature}, ${2:name}, ${3:int}, ${4:int}, ${5:bool}, ${6:bool}, ${7:name}, ${8:int})"
    },
    {
      "trigger": "Query\tFeature,String,String",
      "contents": "Query(${1:feat}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "QueryObjects\tProductOccurrence,PLMCoreReference,Integer,LENGTH,String,List",
      "contents": "QueryObjects(${1:productoccurrence}, ${2:plmcorereference}, ${3:int}, ${4:len}, ${5:name}, ${6:list})"
    },
    {
      "trigger": "QuerySpaces\tLogicalOccurrence,SPP_SpaceConceptRoot,Integer,LENGTH,String,String,List",
      "contents": "QuerySpaces(${1:logicaloccurrence}, ${2:spp_spaceconceptroot}, ${3:int}, ${4:len}, ${5:name}, ${6:name}, ${7:list})"
    },
    {
      "trigger": "QueryTool\tString,String,String,LENGTH,Integer",
      "contents": "QueryTool(${1:name}, ${2:name}, ${3:name}, ${4:len}, ${5:int})"
    },
    {
      "trigger": "Question\tString,Literal",
      "contents": "Question(${1:name}, ${2:literal})"
    },
    {
      "trigger": "QuickGetItem\tMatrix,Integer,Integer",
      "contents": "QuickGetItem(${1:matrix}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "QuickGetItem\tVector,Integer",
      "contents": "QuickGetItem(${1:vector}, ${2:int})"
    },
    {
      "trigger": "QuickSetItem\tMatrix,Real,Integer,Integer",
      "contents": "QuickSetItem(${1:matrix}, ${2:real}, ${3:int}, ${4:int})"
    },
    {
      "trigger": "QuickSetItem\tVector,Real,Integer",
      "contents": "QuickSetItem(${1:vector}, ${2:real}, ${3:int})"
    },
    {
      "trigger": "RFLPAttachToEditor\tPLMEntity",
      "contents": "RFLPAttachToEditor(${1:plmentity})"
    },
    {
      "trigger": "RRSDisconnect\tRRSConnectionMgr",
      "contents": "RRSDisconnect(${1:rrsconnectionmgr})"
    },
    {
      "trigger": "Radius\tGeometricCircle",
      "contents": "Radius(${1:geometriccircle})"
    },
    {
      "trigger": "Rand\t()",
      "contents": "Rand()"
    },
    {
      "trigger": "RangeLookup\tReal,Real,Real,Real",
      "contents": "RangeLookup(${1:real}, ${2:real}, ${3:real}, ${4:real})"
    },
    {
      "trigger": "Read\tTextFile,String,ObjectType",
      "contents": "Read(${1:textfile}, ${2:name}, ${3:objecttype})"
    },
    {
      "trigger": "ReadCatalogRsc\tString",
      "contents": "ReadCatalogRsc(${1:name})"
    },
    {
      "trigger": "ReadCells\tDTSheetType,Integer,Integer,Integer",
      "contents": "ReadCells(${1:dtsheettype}, ${2:int}, ${3:int}, ${4:int})"
    },
    {
      "trigger": "RealToInteger\tReal",
      "contents": "RealToInteger(${1:real})"
    },
    {
      "trigger": "Recapture3DState\tDEL3DState,ProductOccurrence",
      "contents": "Recapture3DState(${1:del3dstate}, ${2:productoccurrence})"
    },
    {
      "trigger": "ReframeOn\tObjectType,ObjectType",
      "contents": "ReframeOn(${1:objecttype}, ${2:objecttype})"
    },
    {
      "trigger": "Refresh\tDELSurfaceTrajectory",
      "contents": "Refresh(${1:delsurfacetrajectory})"
    },
    {
      "trigger": "RefreshActivityInImmersiveView\tString,Feature,Boolean",
      "contents": "RefreshActivityInImmersiveView(${1:name}, ${2:feat}, ${3:bool})"
    },
    {
      "trigger": "RefreshCuttingLength\tElec3DCable",
      "contents": "RefreshCuttingLength(${1:elec3dcable})"
    },
    {
      "trigger": "RefreshEntities\tList,Boolean",
      "contents": "RefreshEntities(${1:list}, ${2:bool})"
    },
    {
      "trigger": "RefreshFamilyForTableModifications\tComponentFamily,Boolean",
      "contents": "RefreshFamilyForTableModifications(${1:componentfamily}, ${2:bool})"
    },
    {
      "trigger": "RefreshImmersiveView\tString",
      "contents": "RefreshImmersiveView(${1:name})"
    },
    {
      "trigger": "Regex\tString",
      "contents": "Regex(${1:name})"
    },
    {
      "trigger": "Remove\tConductor",
      "contents": "Remove(${1:conductor})"
    },
    {
      "trigger": "Remove\tMap,ObjectType",
      "contents": "Remove(${1:map}, ${2:objecttype})"
    },
    {
      "trigger": "RemoveActivity\tFFS_GroupActivity,FFS_Activity",
      "contents": "RemoveActivity(${1:ffs_groupactivity}, ${2:ffs_activity})"
    },
    {
      "trigger": "RemoveActivityFromDestination\tFFS_DestinationProperties",
      "contents": "RemoveActivityFromDestination(${1:ffs_destinationproperties})"
    },
    {
      "trigger": "RemoveActivityToAsPerSpecifiedTableDepartRequirement\tFFS_DestinationProperties,FFS_Activity",
      "contents": "RemoveActivityToAsPerSpecifiedTableDepartRequirement(${1:ffs_destinationproperties}, ${2:ffs_activity})"
    },
    {
      "trigger": "RemoveAdvConnection\tSldAdvConnection",
      "contents": "RemoveAdvConnection(${1:sldadvconnection})"
    },
    {
      "trigger": "RemoveAll\tList",
      "contents": "RemoveAll(${1:list})"
    },
    {
      "trigger": "RemoveAllActivities\tFFS_GroupActivity",
      "contents": "RemoveAllActivities(${1:ffs_groupactivity})"
    },
    {
      "trigger": "RemoveAllActivitiesFromSequence\tFFS_GroupActivity",
      "contents": "RemoveAllActivitiesFromSequence(${1:ffs_groupactivity})"
    },
    {
      "trigger": "RemoveAllAlternateProcesses\tDELFmiFunctionReference",
      "contents": "RemoveAllAlternateProcesses(${1:delfmifunctionreference})"
    },
    {
      "trigger": "RemoveAllAssignedConsumables\tFFS_Activity",
      "contents": "RemoveAllAssignedConsumables(${1:ffs_activity})"
    },
    {
      "trigger": "RemoveAllCandidateResourceLinks\tProdSystemOccurrence",
      "contents": "RemoveAllCandidateResourceLinks(${1:prodsystemoccurrence})"
    },
    {
      "trigger": "RemoveAllFailures\tFFS_Resource",
      "contents": "RemoveAllFailures(${1:ffs_resource})"
    },
    {
      "trigger": "RemoveAllLinkedResources\tFFS_Failure",
      "contents": "RemoveAllLinkedResources(${1:ffs_failure})"
    },
    {
      "trigger": "RemoveAllMfgResponsibilityRelations\tPLMCoreReference",
      "contents": "RemoveAllMfgResponsibilityRelations(${1:plmcorereference})"
    },
    {
      "trigger": "RemoveAllMfgSubstituteRelations\tDELFmiFunctionInstance",
      "contents": "RemoveAllMfgSubstituteRelations(${1:delfmifunctioninstance})"
    },
    {
      "trigger": "RemoveAllPartPositions\tProdSystemOccurrence",
      "contents": "RemoveAllPartPositions(${1:prodsystemoccurrence})"
    },
    {
      "trigger": "RemoveAllPrecedence\tFFS_Activity",
      "contents": "RemoveAllPrecedence(${1:ffs_activity})"
    },
    {
      "trigger": "RemoveAllProcessGroups\tMfgProcessOccurrence",
      "contents": "RemoveAllProcessGroups(${1:mfgprocessoccurrence})"
    },
    {
      "trigger": "RemoveAllRequirements\tPLMOperation",
      "contents": "RemoveAllRequirements(${1:plmoperation})"
    },
    {
      "trigger": "RemoveAllResourcePositions\tProdSystemOccurrence",
      "contents": "RemoveAllResourcePositions(${1:prodsystemoccurrence})"
    },
    {
      "trigger": "RemoveAllSymbol\tObjectType",
      "contents": "RemoveAllSymbol(${1:objecttype})"
    },
    {
      "trigger": "RemoveAllTimeAnalysisLines\tDELTimeAnalysisRepInstance",
      "contents": "RemoveAllTimeAnalysisLines(${1:deltimeanalysisrepinstance})"
    },
    {
      "trigger": "RemoveAlternateProcess\tDELFmiFunctionReference,DELFmiFunctionReference",
      "contents": "RemoveAlternateProcess(${1:delfmifunctionreference}, ${2:delfmifunctionreference})"
    },
    {
      "trigger": "RemoveApplicativeProfile\tRscApplicativeProfileGroup,String",
      "contents": "RemoveApplicativeProfile(${1:rscapplicativeprofilegroup}, ${2:name})"
    },
    {
      "trigger": "RemoveAsPerSpecifiedTableDepartRequirement\tFFS_DestinationProperties",
      "contents": "RemoveAsPerSpecifiedTableDepartRequirement(${1:ffs_destinationproperties})"
    },
    {
      "trigger": "RemoveAssignedConsumable\tFFS_Activity,FFS_Consumable",
      "contents": "RemoveAssignedConsumable(${1:ffs_activity}, ${2:ffs_consumable})"
    },
    {
      "trigger": "RemoveAssignmentFilter\tMfgProcessOccurrence,ProductOccurrence",
      "contents": "RemoveAssignmentFilter(${1:mfgprocessoccurrence}, ${2:productoccurrence})"
    },
    {
      "trigger": "RemoveAssignmentFilterFromAlias\tMfgProcessOccurrence,String",
      "contents": "RemoveAssignmentFilterFromAlias(${1:mfgprocessoccurrence}, ${2:name})"
    },
    {
      "trigger": "RemoveAssociatedFlow\tRFLPLMFunctionalConnector",
      "contents": "RemoveAssociatedFlow(${1:rflplmfunctionalconnector})"
    },
    {
      "trigger": "RemoveAssociatedSystemType\tRFLVPMLogicalPort",
      "contents": "RemoveAssociatedSystemType(${1:rflvpmlogicalport})"
    },
    {
      "trigger": "RemoveAssociationBetweenDCPRowAndCapableResources\tPLMSpecifyHowToCollectDataCnx,List",
      "contents": "RemoveAssociationBetweenDCPRowAndCapableResources(${1:plmspecifyhowtocollectdatacnx}, ${2:list})"
    },
    {
      "trigger": "RemoveAssociationBetweenDCPRowAndItems\tPLMSpecifyHowToCollectDataCnx,List",
      "contents": "RemoveAssociationBetweenDCPRowAndItems(${1:plmspecifyhowtocollectdatacnx}, ${2:list})"
    },
    {
      "trigger": "RemoveAssociationBetweenInstructionAndCapableResources\tProdSystemOccurrence,List",
      "contents": "RemoveAssociationBetweenInstructionAndCapableResources(${1:prodsystemoccurrence}, ${2:list})"
    },
    {
      "trigger": "RemoveAssociationBetweenInstructionAndItems\tProdSystemOccurrence,List",
      "contents": "RemoveAssociationBetweenInstructionAndItems(${1:prodsystemoccurrence}, ${2:list})"
    },
    {
      "trigger": "RemoveAttribute\tDNBTag,String",
      "contents": "RemoveAttribute(${1:dnbtag}, ${2:name})"
    },
    {
      "trigger": "RemoveAxialPlane\tMfgSequentialAxialOperation,Integer",
      "contents": "RemoveAxialPlane(${1:mfgsequentialaxialoperation}, ${2:int})"
    },
    {
      "trigger": "RemoveBaseBoard\tLiveArchiCovering",
      "contents": "RemoveBaseBoard(${1:livearchicovering})"
    },
    {
      "trigger": "RemoveBracket\tSldSketchBasedPlate",
      "contents": "RemoveBracket(${1:sldsketchbasedplate})"
    },
    {
      "trigger": "RemoveBrokenAllocationConnections\tProductOccurrence",
      "contents": "RemoveBrokenAllocationConnections(${1:productoccurrence})"
    },
    {
      "trigger": "RemoveBuildUpPosition\tPLMConnection",
      "contents": "RemoveBuildUpPosition(${1:plmconnection})"
    },
    {
      "trigger": "RemoveBuildupRelativePosition\tProdSystemOccurrence",
      "contents": "RemoveBuildupRelativePosition(${1:prodsystemoccurrence})"
    },
    {
      "trigger": "RemoveCandidateResourceLink\tProdSystemOccurrence,ResourceOccurrence",
      "contents": "RemoveCandidateResourceLink(${1:prodsystemoccurrence}, ${2:resourceoccurrence})"
    },
    {
      "trigger": "RemoveCandidateResourceScopeLink\tProdSystemOccurrence",
      "contents": "RemoveCandidateResourceScopeLink(${1:prodsystemoccurrence})"
    },
    {
      "trigger": "RemoveCapableResourceDocument\tDELFmiFunctionReference,PLMResource,PLMCoreReference",
      "contents": "RemoveCapableResourceDocument(${1:delfmifunctionreference}, ${2:plmresource}, ${3:plmcorereference})"
    },
    {
      "trigger": "RemoveCapableResourceLink\tDELLmiCandidateResourcesCnx",
      "contents": "RemoveCapableResourceLink(${1:dellmicandidateresourcescnx})"
    },
    {
      "trigger": "RemoveCapableResources\tDELFmiFunctionReference,PLMResource",
      "contents": "RemoveCapableResources(${1:delfmifunctionreference}, ${2:plmresource})"
    },
    {
      "trigger": "RemoveCapableRscDetail\tPLMConnection,PLMCoreReference",
      "contents": "RemoveCapableRscDetail(${1:plmconnection}, ${2:plmcorereference})"
    },
    {
      "trigger": "RemoveCategoryConditionExtension\tDELLmiTimeConstraintCnx",
      "contents": "RemoveCategoryConditionExtension(${1:dellmitimeconstraintcnx})"
    },
    {
      "trigger": "RemoveCollar\tSldSlot,Feature",
      "contents": "RemoveCollar(${1:sldslot}, ${2:feat})"
    },
    {
      "trigger": "RemoveComputeQuantifier\tSIMItfSimulation,PIM_ComputeQuantifier",
      "contents": "RemoveComputeQuantifier(${1:simitfsimulation}, ${2:pim_computequantifier})"
    },
    {
      "trigger": "RemoveConnection\tCSELayer",
      "contents": "RemoveConnection(${1:cselayer})"
    },
    {
      "trigger": "RemoveConstraint\tElecRoute,List",
      "contents": "RemoveConstraint(${1:elecroute}, ${2:list})"
    },
    {
      "trigger": "RemoveControllerUserAttribute\tRscController,String",
      "contents": "RemoveControllerUserAttribute(${1:rsccontroller}, ${2:name})"
    },
    {
      "trigger": "RemoveCore\tElec3DCable,Elec3DCableCore",
      "contents": "RemoveCore(${1:elec3dcable}, ${2:elec3dcablecore})"
    },
    {
      "trigger": "RemoveCorrector\tProductOccurrence,String,Boolean",
      "contents": "RemoveCorrector(${1:productoccurrence}, ${2:name}, ${3:bool})"
    },
    {
      "trigger": "RemoveDecisionZone\tFFS_ClaimGroup,List",
      "contents": "RemoveDecisionZone(${1:ffs_claimgroup}, ${2:list})"
    },
    {
      "trigger": "RemoveDeclaredSpaceAssignment\tPLMCoreInstance,SPP_SpaceRef",
      "contents": "RemoveDeclaredSpaceAssignment(${1:plmcoreinstance}, ${2:spp_spaceref})"
    },
    {
      "trigger": "RemoveDestinationZone\tFFS_TransportRouteGroup,FFS_VehicleDecisionPoint",
      "contents": "RemoveDestinationZone(${1:ffs_transportroutegroup}, ${2:ffs_vehicledecisionpoint})"
    },
    {
      "trigger": "RemoveDetailingTask\tResourceOccurrence,ProdSystemOccurrence",
      "contents": "RemoveDetailingTask(${1:resourceoccurrence}, ${2:prodsystemoccurrence})"
    },
    {
      "trigger": "RemoveDeviceDistantLinks\tProductOccurrence,List",
      "contents": "RemoveDeviceDistantLinks(${1:productoccurrence}, ${2:list})"
    },
    {
      "trigger": "RemoveDuplicates\tList",
      "contents": "RemoveDuplicates(${1:list})"
    },
    {
      "trigger": "RemoveEndHomePositionName\tFFS_Activity",
      "contents": "RemoveEndHomePositionName(${1:ffs_activity})"
    },
    {
      "trigger": "RemoveEndcut\tSddProfile,Integer",
      "contents": "RemoveEndcut(${1:sddprofile}, ${2:int})"
    },
    {
      "trigger": "RemoveExcitationFromScenario\tDELMfgSimScenario,Feature",
      "contents": "RemoveExcitationFromScenario(${1:delmfgsimscenario}, ${2:feat})"
    },
    {
      "trigger": "RemoveExtension\tFeature,String",
      "contents": "RemoveExtension(${1:feat}, ${2:name})"
    },
    {
      "trigger": "RemoveFailure\tFFS_Resource,FFS_Failure",
      "contents": "RemoveFailure(${1:ffs_resource}, ${2:ffs_failure})"
    },
    {
      "trigger": "RemoveFeature\tManufacturingActivity,Feature",
      "contents": "RemoveFeature(${1:manufacturingactivity}, ${2:feat})"
    },
    {
      "trigger": "RemoveFile\tDocument,String",
      "contents": "RemoveFile(${1:document}, ${2:name})"
    },
    {
      "trigger": "RemoveFilter\tPLMInterferenceGroup",
      "contents": "RemoveFilter(${1:plminterferencegroup})"
    },
    {
      "trigger": "RemoveFlange\tSldPlate,Feature",
      "contents": "RemoveFlange(${1:sldplate}, ${2:feat})"
    },
    {
      "trigger": "RemoveFlowItems\tFFS_ProductFlow,List",
      "contents": "RemoveFlowItems(${1:ffs_productflow}, ${2:list})"
    },
    {
      "trigger": "RemoveFromElecGroup\tRFLVPMLogicalInstance,RFLVPMLogicalInstance",
      "contents": "RemoveFromElecGroup(${1:rflvpmlogicalinstance}, ${2:rflvpmlogicalinstance})"
    },
    {
      "trigger": "RemoveFromHarness\tLogicalOccurrence,LogicalOccurrence,RFLVPMLogicalPort",
      "contents": "RemoveFromHarness(${1:logicaloccurrence}, ${2:logicaloccurrence}, ${3:rflvpmlogicalport})"
    },
    {
      "trigger": "RemoveFromZoneFromDestination\tFFS_DestinationProperties,FFS_VehicleDecisionPoint",
      "contents": "RemoveFromZoneFromDestination(${1:ffs_destinationproperties}, ${2:ffs_vehicledecisionpoint})"
    },
    {
      "trigger": "RemoveGaugeInsertDefinition\tMfgBaseTool,MfgInsertDefinition",
      "contents": "RemoveGaugeInsertDefinition(${1:mfgbasetool}, ${2:mfginsertdefinition})"
    },
    {
      "trigger": "RemoveGenericProfile\tRscControllerProfileMgr,RscGenericProfileType,String",
      "contents": "RemoveGenericProfile(${1:rsccontrollerprofilemgr}, ${2:rscgenericprofiletype}, ${3:name})"
    },
    {
      "trigger": "RemoveGeometries\tManufacturingActivity,String",
      "contents": "RemoveGeometries(${1:manufacturingactivity}, ${2:name})"
    },
    {
      "trigger": "RemoveGlobalLinkToRequirement\tPLMCoreReference,Feature",
      "contents": "RemoveGlobalLinkToRequirement(${1:plmcorereference}, ${2:feat})"
    },
    {
      "trigger": "RemoveGroupObjects\tSIMItfSimulation,Integer",
      "contents": "RemoveGroupObjects(${1:simitfsimulation}, ${2:int})"
    },
    {
      "trigger": "RemoveHistoLinkBetweenReferences\tPLMCoreReference,PLMCoreReference",
      "contents": "RemoveHistoLinkBetweenReferences(${1:plmcorereference}, ${2:plmcorereference})"
    },
    {
      "trigger": "RemoveHolderAttachmentType\tMfgToolHolder,Boolean,Boolean",
      "contents": "RemoveHolderAttachmentType(${1:mfgtoolholder}, ${2:bool}, ${3:bool})"
    },
    {
      "trigger": "RemoveHolders\tResourceNCAssembly,List",
      "contents": "RemoveHolders(${1:resourcencassembly}, ${2:list})"
    },
    {
      "trigger": "RemoveHomePosition\tRscHomePositionMgr,RscMotionGroup,String",
      "contents": "RemoveHomePosition(${1:rschomepositionmgr}, ${2:rscmotiongroup}, ${3:name})"
    },
    {
      "trigger": "RemoveIOSignalFromCommand\tRscControlLogicMgr,Integer,Integer",
      "contents": "RemoveIOSignalFromCommand(${1:rsccontrollogicmgr}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "RemoveIOSignalMapping\tRscModelLogicMgr,String,ProductOccurrence,String,ProductOccurrence",
      "contents": "RemoveIOSignalMapping(${1:rscmodellogicmgr}, ${2:name}, ${3:productoccurrence}, ${4:name}, ${5:productoccurrence})"
    },
    {
      "trigger": "RemoveImplLinkUsageExt\tMfgProductionPlanning",
      "contents": "RemoveImplLinkUsageExt(${1:mfgproductionplanning})"
    },
    {
      "trigger": "RemoveImplementLinkOnSystemOccAndProcessOcc\tProdSystemOccurrence,FProcessOccurrence",
      "contents": "RemoveImplementLinkOnSystemOccAndProcessOcc(${1:prodsystemoccurrence}, ${2:fprocessoccurrence})"
    },
    {
      "trigger": "RemoveImplementLinkOnSystemOccAndWorkplanOcc\tProdSystemOccurrence,ProdSystemOccurrence",
      "contents": "RemoveImplementLinkOnSystemOccAndWorkplanOcc(${1:prodsystemoccurrence}, ${2:prodsystemoccurrence})"
    },
    {
      "trigger": "RemoveInsert\tResourceNCAssembly,ToolDevice",
      "contents": "RemoveInsert(${1:resourcencassembly}, ${2:tooldevice})"
    },
    {
      "trigger": "RemoveInstance\tDatabaseObjectType,String",
      "contents": "RemoveInstance(${1:databaseobjecttype}, ${2:name})"
    },
    {
      "trigger": "RemoveIntersectingElement\tSddOpening,Feature",
      "contents": "RemoveIntersectingElement(${1:sddopening}, ${2:feat})"
    },
    {
      "trigger": "RemoveItem\tList,Integer",
      "contents": "RemoveItem(${1:list}, ${2:int})"
    },
    {
      "trigger": "RemoveItemSubComponents\tProdSystemOccurrence,ProdSystemOccurrence,List,List",
      "contents": "RemoveItemSubComponents(${1:prodsystemoccurrence}, ${2:prodsystemoccurrence}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "RemoveItemSubComponentsEx\tProdSystemOccurrence,ProdSystemOccurrence,List,List,Boolean",
      "contents": "RemoveItemSubComponentsEx(${1:prodsystemoccurrence}, ${2:prodsystemoccurrence}, ${3:list}, ${4:list}, ${5:bool})"
    },
    {
      "trigger": "RemoveItfSpecificationTypeEngCnx\tSIMItfSimulation,PIM_SpecEngCnx",
      "contents": "RemoveItfSpecificationTypeEngCnx(${1:simitfsimulation}, ${2:pim_specengcnx})"
    },
    {
      "trigger": "RemoveJunctionDeviceAtPosition\tElec3DCable,Integer,Boolean",
      "contents": "RemoveJunctionDeviceAtPosition(${1:elec3dcable}, ${2:int}, ${3:bool})"
    },
    {
      "trigger": "RemoveLimit\tAGTConnector,AGTProfileExtremity",
      "contents": "RemoveLimit(${1:agtconnector}, ${2:agtprofileextremity})"
    },
    {
      "trigger": "RemoveLinkBetDCPRowAndViewsOrDressups\tPLMSpecifyHowToCollectDataCnx,List",
      "contents": "RemoveLinkBetDCPRowAndViewsOrDressups(${1:plmspecifyhowtocollectdatacnx}, ${2:list})"
    },
    {
      "trigger": "RemoveLinkBetWIAndViewsOrDressups\tProdSystemOccurrence,List",
      "contents": "RemoveLinkBetWIAndViewsOrDressups(${1:prodsystemoccurrence}, ${2:list})"
    },
    {
      "trigger": "RemoveLinkToRequirement\tPLMCoreReference,Feature,String,Boolean",
      "contents": "RemoveLinkToRequirement(${1:plmcorereference}, ${2:feat}, ${3:name}, ${4:bool})"
    },
    {
      "trigger": "RemoveLinkedResource\tFFS_Failure,FFS_Resource",
      "contents": "RemoveLinkedResource(${1:ffs_failure}, ${2:ffs_resource})"
    },
    {
      "trigger": "RemoveLocalPlaneElement\tLatheFeature,Integer",
      "contents": "RemoveLocalPlaneElement(${1:lathefeature}, ${2:int})"
    },
    {
      "trigger": "RemoveLocalProfile\tSys3DPathwayBranch,CATEbm_ControlPoint",
      "contents": "RemoveLocalProfile(${1:sys3dpathwaybranch}, ${2:catebm_controlpoint})"
    },
    {
      "trigger": "RemoveLogicInstruction\tRscLogicSequence,RscLogicInstruction",
      "contents": "RemoveLogicInstruction(${1:rsclogicsequence}, ${2:rsclogicinstruction})"
    },
    {
      "trigger": "RemoveMadeFromRelation\tVPMReference,MustBeMadeFrom",
      "contents": "RemoveMadeFromRelation(${1:vpmreference}, ${2:mustbemadefrom})"
    },
    {
      "trigger": "RemoveMaterial\tCATMatConnection",
      "contents": "RemoveMaterial(${1:catmatconnection})"
    },
    {
      "trigger": "RemoveMaterialFlow\tProdSystemOccurrence,ProdSystemOccurrence",
      "contents": "RemoveMaterialFlow(${1:prodsystemoccurrence}, ${2:prodsystemoccurrence})"
    },
    {
      "trigger": "RemoveMemberFromPipingLineID\tLogicalOccurrence,LogicalOccurrence",
      "contents": "RemoveMemberFromPipingLineID(${1:logicaloccurrence}, ${2:logicaloccurrence})"
    },
    {
      "trigger": "RemoveMovingObject\tDNBFitTrack,FProcessOccurrence",
      "contents": "RemoveMovingObject(${1:dnbfittrack}, ${2:fprocessoccurrence})"
    },
    {
      "trigger": "RemoveNextProcess\tMfgProcessOccurrence,MfgProcessOccurrence",
      "contents": "RemoveNextProcess(${1:mfgprocessoccurrence}, ${2:mfgprocessoccurrence})"
    },
    {
      "trigger": "RemoveNode\tHVAC_Flexible_Duct,List",
      "contents": "RemoveNode(${1:hvac_flexible_duct}, ${2:list})"
    },
    {
      "trigger": "RemoveOOTBExtension\tDELFmiFunctionInstance,String",
      "contents": "RemoveOOTBExtension(${1:delfmifunctioninstance}, ${2:name})"
    },
    {
      "trigger": "RemoveObject\tDEL3DState,ProductOccurrence",
      "contents": "RemoveObject(${1:del3dstate}, ${2:productoccurrence})"
    },
    {
      "trigger": "RemoveOccurrence\tPLMInterferenceGroup,ProductOccurrence",
      "contents": "RemoveOccurrence(${1:plminterferencegroup}, ${2:productoccurrence})"
    },
    {
      "trigger": "RemoveOpening\tSddPanel,Feature",
      "contents": "RemoveOpening(${1:sddpanel}, ${2:feat})"
    },
    {
      "trigger": "RemoveOperationTimeDistribution\tPLMOperation",
      "contents": "RemoveOperationTimeDistribution(${1:plmoperation})"
    },
    {
      "trigger": "RemoveOptimizationPathTarget\tRscOptimizationPath,Integer",
      "contents": "RemoveOptimizationPathTarget(${1:rscoptimizationpath}, ${2:int})"
    },
    {
      "trigger": "RemoveOtherSupportPlate\tSddStiffener,Feature",
      "contents": "RemoveOtherSupportPlate(${1:sddstiffener}, ${2:feat})"
    },
    {
      "trigger": "RemoveOverlapQuantityExtension\tDELLmiTimeConstraintCnx",
      "contents": "RemoveOverlapQuantityExtension(${1:dellmitimeconstraintcnx})"
    },
    {
      "trigger": "RemoveParallelSequence\tRscLogicParallel,RscLogicSequence",
      "contents": "RemoveParallelSequence(${1:rsclogicparallel}, ${2:rsclogicsequence})"
    },
    {
      "trigger": "RemoveParkingZone\tFFS_TransportRouteGroup,FFS_VehicleDecisionPoint",
      "contents": "RemoveParkingZone(${1:ffs_transportroutegroup}, ${2:ffs_vehicledecisionpoint})"
    },
    {
      "trigger": "RemovePartToDisassemble\tMfgProcessOccurrence,ProductOccurrence",
      "contents": "RemovePartToDisassemble(${1:mfgprocessoccurrence}, ${2:productoccurrence})"
    },
    {
      "trigger": "RemovePathPlannerMovingObjects\tRscPathPlanner,List",
      "contents": "RemovePathPlannerMovingObjects(${1:rscpathplanner}, ${2:list})"
    },
    {
      "trigger": "RemovePathPlannerObstacles\tRscPathPlanner,List",
      "contents": "RemovePathPlannerObstacles(${1:rscpathplanner}, ${2:list})"
    },
    {
      "trigger": "RemovePictureFromFormula\tDELTimeAnalysisRepInstance,Integer",
      "contents": "RemovePictureFromFormula(${1:deltimeanalysisrepinstance}, ${2:int})"
    },
    {
      "trigger": "RemovePicturesOfAllFormulas\tDELTimeAnalysisRepInstance",
      "contents": "RemovePicturesOfAllFormulas(${1:deltimeanalysisrepinstance})"
    },
    {
      "trigger": "RemovePoint\tDELPointTrajectory,Integer",
      "contents": "RemovePoint(${1:delpointtrajectory}, ${2:int})"
    },
    {
      "trigger": "RemovePositionForManufacturedItems\tProdSystemOccurrence,List",
      "contents": "RemovePositionForManufacturedItems(${1:prodsystemoccurrence}, ${2:list})"
    },
    {
      "trigger": "RemovePreAssignedRscContextLink\tPLMSystem,Integer",
      "contents": "RemovePreAssignedRscContextLink(${1:plmsystem}, ${2:int})"
    },
    {
      "trigger": "RemovePreAssignedRscLink\tAllocatedResourceLink",
      "contents": "RemovePreAssignedRscLink(${1:allocatedresourcelink})"
    },
    {
      "trigger": "RemovePredecessor\tMfgProcessOccurrence,MfgProcessOccurrence",
      "contents": "RemovePredecessor(${1:mfgprocessoccurrence}, ${2:mfgprocessoccurrence})"
    },
    {
      "trigger": "RemovePrimaryCapableResourceLink\tPLMCoreReference,PLMResource",
      "contents": "RemovePrimaryCapableResourceLink(${1:plmcorereference}, ${2:plmresource})"
    },
    {
      "trigger": "RemoveProbeFromScenario\tDELMfgSimScenario,Feature",
      "contents": "RemoveProbeFromScenario(${1:delmfgsimscenario}, ${2:feat})"
    },
    {
      "trigger": "RemoveProcessGroup\tMfgProcessOccurrence,GroupOfProcessInstance",
      "contents": "RemoveProcessGroup(${1:mfgprocessoccurrence}, ${2:groupofprocessinstance})"
    },
    {
      "trigger": "RemoveProcessOrGroup\tGroupOfProcessInstance,Feature,GroupProcessDiagnostic",
      "contents": "RemoveProcessOrGroup(${1:groupofprocessinstance}, ${2:feat}, ${3:groupprocessdiagnostic})"
    },
    {
      "trigger": "RemoveProcessOutput\tMfgProcessOccurrence",
      "contents": "RemoveProcessOutput(${1:mfgprocessoccurrence})"
    },
    {
      "trigger": "RemoveProduct\tFFS_Activity,FFS_Item,Boolean",
      "contents": "RemoveProduct(${1:ffs_activity}, ${2:ffs_item}, ${3:bool})"
    },
    {
      "trigger": "RemoveProduct\tFFS_ProductZone,FFS_Item",
      "contents": "RemoveProduct(${1:ffs_productzone}, ${2:ffs_item})"
    },
    {
      "trigger": "RemoveProductUserAttributes\tList,List",
      "contents": "RemoveProductUserAttributes(${1:list}, ${2:list})"
    },
    {
      "trigger": "RemoveProfileGroup\tRscApplicativeProfileMgr,String",
      "contents": "RemoveProfileGroup(${1:rscapplicativeprofilemgr}, ${2:name})"
    },
    {
      "trigger": "RemoveProfileTemplateUserAttributes\tRscApplicativeProfileGroup,String",
      "contents": "RemoveProfileTemplateUserAttributes(${1:rscapplicativeprofilegroup}, ${2:name})"
    },
    {
      "trigger": "RemoveRequirement\tPLMOperation,Requirement",
      "contents": "RemoveRequirement(${1:plmoperation}, ${2:requirement})"
    },
    {
      "trigger": "RemoveResource\tFFS_Break,FFS_Resource",
      "contents": "RemoveResource(${1:ffs_break}, ${2:ffs_resource})"
    },
    {
      "trigger": "RemoveResourcePool\tFFS_ParkingGroup",
      "contents": "RemoveResourcePool(${1:ffs_parkinggroup})"
    },
    {
      "trigger": "RemoveResourcePosition\tPLMConnection",
      "contents": "RemoveResourcePosition(${1:plmconnection})"
    },
    {
      "trigger": "RemoveResourcePosition\tProdSystemOccurrence,ResourceOccurrence",
      "contents": "RemoveResourcePosition(${1:prodsystemoccurrence}, ${2:resourceoccurrence})"
    },
    {
      "trigger": "RemoveResourceSubComponents\tProdSystemOccurrence,ProdSystemOccurrence,List,List",
      "contents": "RemoveResourceSubComponents(${1:prodsystemoccurrence}, ${2:prodsystemoccurrence}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "RemoveResourceSubComponentsEx\tProdSystemOccurrence,ProdSystemOccurrence,List,List,Boolean",
      "contents": "RemoveResourceSubComponentsEx(${1:prodsystemoccurrence}, ${2:prodsystemoccurrence}, ${3:list}, ${4:list}, ${5:bool})"
    },
    {
      "trigger": "RemoveResponsibilityRelation\tDELMfgResponsibilityCnx",
      "contents": "RemoveResponsibilityRelation(${1:delmfgresponsibilitycnx})"
    },
    {
      "trigger": "RemoveResultingProductForFilter\tMfgProcessOccurrence,Product Configuration",
      "contents": "RemoveResultingProductForFilter(${1:mfgprocessoccurrence}, ${2:product configuration})"
    },
    {
      "trigger": "RemoveRobDRActionInstruction\tRobDrillRivetAction,Feature",
      "contents": "RemoveRobDRActionInstruction(${1:robdrillrivetaction}, ${2:feat})"
    },
    {
      "trigger": "RemoveRobDRUserCycle\tRobDrillRivetProfile,ProfileCycles",
      "contents": "RemoveRobDRUserCycle(${1:robdrillrivetprofile}, ${2:profilecycles})"
    },
    {
      "trigger": "RemoveRscAttachment\tRscAttachmentsMgr,PLMConnection",
      "contents": "RemoveRscAttachment(${1:rscattachmentsmgr}, ${2:plmconnection})"
    },
    {
      "trigger": "RemoveRscConstant\tRscModelLogicMgr,String",
      "contents": "RemoveRscConstant(${1:rscmodellogicmgr}, ${2:name})"
    },
    {
      "trigger": "RemoveRscGrabbedElement\tRscLogicGrab,ProductOccurrence,ProductOccurrence",
      "contents": "RemoveRscGrabbedElement(${1:rsclogicgrab}, ${2:productoccurrence}, ${3:productoccurrence})"
    },
    {
      "trigger": "RemoveRscIOSignal\tRscModelLogicMgr,String",
      "contents": "RemoveRscIOSignal(${1:rscmodellogicmgr}, ${2:name})"
    },
    {
      "trigger": "RemoveRscLocalConstant\tRscLogicTask,String",
      "contents": "RemoveRscLocalConstant(${1:rsclogictask}, ${2:name})"
    },
    {
      "trigger": "RemoveRscLocalIOSignal\tRscLogicTask,String",
      "contents": "RemoveRscLocalIOSignal(${1:rsclogictask}, ${2:name})"
    },
    {
      "trigger": "RemoveRscLocalVariable\tRscLogicTask,String",
      "contents": "RemoveRscLocalVariable(${1:rsclogictask}, ${2:name})"
    },
    {
      "trigger": "RemoveRscLogicSimSensor\tRscModelLogicMgr,RscLogicSimSensor",
      "contents": "RemoveRscLogicSimSensor(${1:rscmodellogicmgr}, ${2:rsclogicsimsensor})"
    },
    {
      "trigger": "RemoveRscLogicTask\tRscModelLogicMgr,RscLogicTask",
      "contents": "RemoveRscLogicTask(${1:rscmodellogicmgr}, ${2:rsclogictask})"
    },
    {
      "trigger": "RemoveRscMotionGroup\tRscController,RscMotionGroup",
      "contents": "RemoveRscMotionGroup(${1:rsccontroller}, ${2:rscmotiongroup})"
    },
    {
      "trigger": "RemoveRscMotionGroupResource\tRscMotionGroup,ProductOccurrence",
      "contents": "RemoveRscMotionGroupResource(${1:rscmotiongroup}, ${2:productoccurrence})"
    },
    {
      "trigger": "RemoveRscTimer\tRscModelLogicMgr,String",
      "contents": "RemoveRscTimer(${1:rscmodellogicmgr}, ${2:name})"
    },
    {
      "trigger": "RemoveRscToolAttachResource\tRscLogicToolAttach,ProductOccurrence,ProductOccurrence",
      "contents": "RemoveRscToolAttachResource(${1:rsclogictoolattach}, ${2:productoccurrence}, ${3:productoccurrence})"
    },
    {
      "trigger": "RemoveRscVariable\tRscModelLogicMgr,String",
      "contents": "RemoveRscVariable(${1:rscmodellogicmgr}, ${2:name})"
    },
    {
      "trigger": "RemoveRuleSet\tSIMItfSimulation",
      "contents": "RemoveRuleSet(${1:simitfsimulation})"
    },
    {
      "trigger": "RemoveScallop\tSddPanel,Feature",
      "contents": "RemoveScallop(${1:sddpanel}, ${2:feat})"
    },
    {
      "trigger": "RemoveScope\tMfgProcessOccurrence",
      "contents": "RemoveScope(${1:mfgprocessoccurrence})"
    },
    {
      "trigger": "RemoveScope\tProdSystemOccurrence,FProcessOccurrence",
      "contents": "RemoveScope(${1:prodsystemoccurrence}, ${2:fprocessoccurrence})"
    },
    {
      "trigger": "RemoveScopeToWorkplan\tProdSystemOccurrence,ProdSystemOccurrence",
      "contents": "RemoveScopeToWorkplan(${1:prodsystemoccurrence}, ${2:prodsystemoccurrence})"
    },
    {
      "trigger": "RemoveScopeWithContext\tMfgProcessOccurrence,Boolean,VPMReference,List,List,VPMReference,DELFmiFunctionReference",
      "contents": "RemoveScopeWithContext(${1:mfgprocessoccurrence}, ${2:bool}, ${3:vpmreference}, ${4:list}, ${5:list}, ${6:vpmreference}, ${7:delfmifunctionreference})"
    },
    {
      "trigger": "RemoveSetupAssembly\tMfgSetupPosition",
      "contents": "RemoveSetupAssembly(${1:mfgsetupposition})"
    },
    {
      "trigger": "RemoveSetupPosition\tManufacturingSetup,String",
      "contents": "RemoveSetupPosition(${1:manufacturingsetup}, ${2:name})"
    },
    {
      "trigger": "RemoveSlot\tSddPanel,Feature",
      "contents": "RemoveSlot(${1:sddpanel}, ${2:feat})"
    },
    {
      "trigger": "RemoveSpecificProfileType\tRscControllerProfile,String",
      "contents": "RemoveSpecificProfileType(${1:rsccontrollerprofile}, ${2:name})"
    },
    {
      "trigger": "RemoveSpecifiedTrain\tFFS_TransportRouteGroup,FFS_TrainBehavior",
      "contents": "RemoveSpecifiedTrain(${1:ffs_transportroutegroup}, ${2:ffs_trainbehavior})"
    },
    {
      "trigger": "RemoveStartHomePositionName\tFFS_Activity",
      "contents": "RemoveStartHomePositionName(${1:ffs_activity})"
    },
    {
      "trigger": "RemoveStateFromScenario\tDELMfgSimScenario,DEL3DState",
      "contents": "RemoveStateFromScenario(${1:delmfgsimscenario}, ${2:del3dstate})"
    },
    {
      "trigger": "RemoveStiffenerToInsulate\tAGTInsulation,Feature",
      "contents": "RemoveStiffenerToInsulate(${1:agtinsulation}, ${2:feat})"
    },
    {
      "trigger": "RemoveSubOperationOrSubSystem\tProdSystemOccurrence,ProdSystemOccurrence",
      "contents": "RemoveSubOperationOrSubSystem(${1:prodsystemoccurrence}, ${2:prodsystemoccurrence})"
    },
    {
      "trigger": "RemoveSubstituteRelation\tDELFmiMfgSubstituteCnx",
      "contents": "RemoveSubstituteRelation(${1:delfmimfgsubstitutecnx})"
    },
    {
      "trigger": "RemoveSystemComponent\tSys3DAllocationConnection,LogicalOccurrence",
      "contents": "RemoveSystemComponent(${1:sys3dallocationconnection}, ${2:logicaloccurrence})"
    },
    {
      "trigger": "RemoveSystemOrOperationOutputToProcess\tPLMCoreReference,DELFmiFunctionReference",
      "contents": "RemoveSystemOrOperationOutputToProcess(${1:plmcorereference}, ${2:delfmifunctionreference})"
    },
    {
      "trigger": "RemoveSystemPorts\tSys3DAllocationConnection,List,LogicalOccurrence",
      "contents": "RemoveSystemPorts(${1:sys3dallocationconnection}, ${2:list}, ${3:logicaloccurrence})"
    },
    {
      "trigger": "RemoveTPoint\tDNBFitTrack,Integer",
      "contents": "RemoveTPoint(${1:dnbfittrack}, ${2:int})"
    },
    {
      "trigger": "RemoveTSAScenarioFasteningObject\tDELMfgSimTSAScenario,Feature,ResourceOccurrence",
      "contents": "RemoveTSAScenarioFasteningObject(${1:delmfgsimtsascenario}, ${2:feat}, ${3:resourceoccurrence})"
    },
    {
      "trigger": "RemoveTimeConstraint\tDELLmiTimeConstraintCnx",
      "contents": "RemoveTimeConstraint(${1:dellmitimeconstraintcnx})"
    },
    {
      "trigger": "RemoveTimeConstraint\tProdSystemOccurrence,ProdSystemOccurrence",
      "contents": "RemoveTimeConstraint(${1:prodsystemoccurrence}, ${2:prodsystemoccurrence})"
    },
    {
      "trigger": "RemoveTool\tResourceNCAssembly,ToolDevice",
      "contents": "RemoveTool(${1:resourcencassembly}, ${2:tooldevice})"
    },
    {
      "trigger": "RemoveToolAttachmentType\tMfgBaseTool,String,List",
      "contents": "RemoveToolAttachmentType(${1:mfgbasetool}, ${2:name}, ${3:list})"
    },
    {
      "trigger": "RemoveUserLogic\tFFS_Activity,FFS_UserLogic",
      "contents": "RemoveUserLogic(${1:ffs_activity}, ${2:ffs_userlogic})"
    },
    {
      "trigger": "Rename3DState\tDEL3DState,String",
      "contents": "Rename3DState(${1:del3dstate}, ${2:name})"
    },
    {
      "trigger": "RenameRscConstant\tRscModelLogicMgr,String,String",
      "contents": "RenameRscConstant(${1:rscmodellogicmgr}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "RenameRscIOSignal\tRscModelLogicMgr,String,String",
      "contents": "RenameRscIOSignal(${1:rscmodellogicmgr}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "RenameRscLocalConstant\tRscLogicTask,String,String",
      "contents": "RenameRscLocalConstant(${1:rsclogictask}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "RenameRscLocalIOSignal\tRscLogicTask,String,String",
      "contents": "RenameRscLocalIOSignal(${1:rsclogictask}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "RenameRscLocalVariable\tRscLogicTask,String,String",
      "contents": "RenameRscLocalVariable(${1:rsclogictask}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "RenameRscTimer\tRscModelLogicMgr,String,String",
      "contents": "RenameRscTimer(${1:rscmodellogicmgr}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "RenameRscVariable\tRscModelLogicMgr,String,String",
      "contents": "RenameRscVariable(${1:rscmodellogicmgr}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "ReorderBasedOnProximity\tDNBTagGroup",
      "contents": "ReorderBasedOnProximity(${1:dnbtaggroup})"
    },
    {
      "trigger": "ReorderItem\tList,Integer,Integer",
      "contents": "ReorderItem(${1:list}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "ReorderTPoint\tDNBFitTrack,Integer,Integer",
      "contents": "ReorderTPoint(${1:dnbfittrack}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "RepairDeleteInvalidFTAFeatures\tCATTPSSet,Integer",
      "contents": "RepairDeleteInvalidFTAFeatures(${1:cattpsset}, ${2:int})"
    },
    {
      "trigger": "RepairJunctionAssociation\tElec3DCable",
      "contents": "RepairJunctionAssociation(${1:elec3dcable})"
    },
    {
      "trigger": "Repeat\tString,Integer",
      "contents": "Repeat(${1:name}, ${2:int})"
    },
    {
      "trigger": "Replace\tMap,ObjectType,ObjectType",
      "contents": "Replace(${1:map}, ${2:objecttype}, ${3:objecttype})"
    },
    {
      "trigger": "Replace\tRegex,String,String,Integer",
      "contents": "Replace(${1:regex}, ${2:name}, ${3:name}, ${4:int})"
    },
    {
      "trigger": "ReplaceAdvancedConnectionPoint\tElecPortV5,ElecPort",
      "contents": "ReplaceAdvancedConnectionPoint(${1:elecportv5}, ${2:elecport})"
    },
    {
      "trigger": "ReplaceAll\tString,String,String",
      "contents": "ReplaceAll(${1:name}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "ReplaceCnxEvent\tVPMReference,CATMatConnection",
      "contents": "ReplaceCnxEvent(${1:vpmreference}, ${2:catmatconnection})"
    },
    {
      "trigger": "ReplaceInstance\tDatabaseObjectType,DatabaseObjectType",
      "contents": "ReplaceInstance(${1:databaseobjecttype}, ${2:databaseobjecttype})"
    },
    {
      "trigger": "ReplaceItem\tFFS_Activity,FFS_Item,FFS_Item,Boolean",
      "contents": "ReplaceItem(${1:ffs_activity}, ${2:ffs_item}, ${3:ffs_item}, ${4:bool})"
    },
    {
      "trigger": "ReplaceJunctionDeviceAtPosition\tElec3DCable,Integer,ProductOccurrence,Elec3DJunctionPoint",
      "contents": "ReplaceJunctionDeviceAtPosition(${1:elec3dcable}, ${2:int}, ${3:productoccurrence}, ${4:elec3djunctionpoint})"
    },
    {
      "trigger": "ReplaceRscAttachmentElements\tRscAttachmentsMgr,Integer,PLMConnection,ProductOccurrence,VPMPort",
      "contents": "ReplaceRscAttachmentElements(${1:rscattachmentsmgr}, ${2:int}, ${3:plmconnection}, ${4:productoccurrence}, ${5:vpmport})"
    },
    {
      "trigger": "ReplaceSimilarRscEquipment\tProductOccurrence,VPMReference,String,Integer",
      "contents": "ReplaceSimilarRscEquipment(${1:productoccurrence}, ${2:vpmreference}, ${3:name}, ${4:int})"
    },
    {
      "trigger": "ReplaceSubText\tString,String,String",
      "contents": "ReplaceSubText(${1:name}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "ReplaceSymbolInSchematicView\tLogicalOccurrence,String,DIFViewInstance",
      "contents": "ReplaceSymbolInSchematicView(${1:logicaloccurrence}, ${2:name}, ${3:difviewinstance})"
    },
    {
      "trigger": "ReplaceSymbolInSchematicView\tPLMCoreInstance,String,String,DIFView",
      "contents": "ReplaceSymbolInSchematicView(${1:plmcoreinstance}, ${2:name}, ${3:name}, ${4:difview})"
    },
    {
      "trigger": "Report\tString,String,String,Literal",
      "contents": "Report(${1:name}, ${2:name}, ${3:name}, ${4:literal})"
    },
    {
      "trigger": "ReroutePointedProductionSystemEntity\tDNBFitTrack,ProdSystemOccurrence,ProdSystemOccurrence",
      "contents": "ReroutePointedProductionSystemEntity(${1:dnbfittrack}, ${2:prodsystemoccurrence}, ${3:prodsystemoccurrence})"
    },
    {
      "trigger": "ResetAllGraphicalProperties\tProductOccurrence",
      "contents": "ResetAllGraphicalProperties(${1:productoccurrence})"
    },
    {
      "trigger": "ResetAllRscClearance\tPLMSimulationOptionsMgr",
      "contents": "ResetAllRscClearance(${1:plmsimulationoptionsmgr})"
    },
    {
      "trigger": "ResetContext\t()",
      "contents": "ResetContext()"
    },
    {
      "trigger": "ResetDeletedRoutes\tElec3DCable",
      "contents": "ResetDeletedRoutes(${1:elec3dcable})"
    },
    {
      "trigger": "ResetDensityGridData\tMLPLayerObject",
      "contents": "ResetDensityGridData(${1:mlplayerobject})"
    },
    {
      "trigger": "ResetElectricalNetworkGraph\t()",
      "contents": "ResetElectricalNetworkGraph()"
    },
    {
      "trigger": "ResetGraphicProperties\tVisualizable,Boolean",
      "contents": "ResetGraphicProperties(${1:visualizable}, ${2:bool})"
    },
    {
      "trigger": "ResetLocalBendRadius\tCATEbm_Branch",
      "contents": "ResetLocalBendRadius(${1:catebm_branch})"
    },
    {
      "trigger": "ResetLocalProfile\tCATEbm_Branch",
      "contents": "ResetLocalProfile(${1:catebm_branch})"
    },
    {
      "trigger": "ResetNodeBendRadiustoDefault\tHVAC_Rigid_Duct,Integer",
      "contents": "ResetNodeBendRadiustoDefault(${1:hvac_rigid_duct}, ${2:int})"
    },
    {
      "trigger": "ResetPathPlannerDOFLimits\tRscPathPlanner",
      "contents": "ResetPathPlannerDOFLimits(${1:rscpathplanner})"
    },
    {
      "trigger": "ResetReferenceProfile\tCATEbm_NodeProfile",
      "contents": "ResetReferenceProfile(${1:catebm_nodeprofile})"
    },
    {
      "trigger": "ResetTransientGraphicalProperties\tProductOccurrence",
      "contents": "ResetTransientGraphicalProperties(${1:productoccurrence})"
    },
    {
      "trigger": "ResizeImage\tBitmap,Integer,Integer",
      "contents": "ResizeImage(${1:bitmap}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "ResizeStroke\tDELSurfaceTrajectory,Integer,DELSurfaceTrajectoryStrokeEnd,Real",
      "contents": "ResizeStroke(${1:delsurfacetrajectory}, ${2:int}, ${3:delsurfacetrajectorystrokeend}, ${4:real})"
    },
    {
      "trigger": "ResizeTrajectory\tDELSurfaceTrajectory,DELSurfaceTrajectoryExtentDirection,Real",
      "contents": "ResizeTrajectory(${1:delsurfacetrajectory}, ${2:delsurfacetrajectoryextentdirection}, ${3:real})"
    },
    {
      "trigger": "ResolveItems\tComponentFamily,List",
      "contents": "ResolveItems(${1:componentfamily}, ${2:list})"
    },
    {
      "trigger": "ResolveTagLinks\tDELPointTrajectory",
      "contents": "ResolveTagLinks(${1:delpointtrajectory})"
    },
    {
      "trigger": "RestoreAllProperties\tPLMOperation,List",
      "contents": "RestoreAllProperties(${1:plmoperation}, ${2:list})"
    },
    {
      "trigger": "RestoreDesign\tProductOccurrence",
      "contents": "RestoreDesign(${1:productoccurrence})"
    },
    {
      "trigger": "RestoreSpecificProperties\tPLMOperation,List,List",
      "contents": "RestoreSpecificProperties(${1:plmoperation}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "Restrict\tPLMIDSet,String",
      "contents": "Restrict(${1:plmidset}, ${2:name})"
    },
    {
      "trigger": "Retrieve3DState\tProductOccurrence,String",
      "contents": "Retrieve3DState(${1:productoccurrence}, ${2:name})"
    },
    {
      "trigger": "Retrieve3DStateX\tProductOccurrence,String,List",
      "contents": "Retrieve3DStateX(${1:productoccurrence}, ${2:name}, ${3:list})"
    },
    {
      "trigger": "RetrieveActiveCameraViewers\tDEL3DAnimationCameraViewerMgr,List",
      "contents": "RetrieveActiveCameraViewers(${1:del3danimationcameraviewermgr}, ${2:list})"
    },
    {
      "trigger": "RetrieveAllCameraViewers\tDEL3DAnimationCameraViewerMgr,List",
      "contents": "RetrieveAllCameraViewers(${1:del3danimationcameraviewermgr}, ${2:list})"
    },
    {
      "trigger": "RetrieveAllManufacturingScenarios\tDELMfgSimMSR,List",
      "contents": "RetrieveAllManufacturingScenarios(${1:delmfgsimmsr}, ${2:list})"
    },
    {
      "trigger": "RetrieveAllStates\tProductOccurrence",
      "contents": "RetrieveAllStates(${1:productoccurrence})"
    },
    {
      "trigger": "RetrieveAllStatesX\tProductOccurrence,List",
      "contents": "RetrieveAllStatesX(${1:productoccurrence}, ${2:list})"
    },
    {
      "trigger": "RetrieveDate\tInteger,Integer,Integer",
      "contents": "RetrieveDate(${1:int}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "RetrieveExtremitiesInArrageJunction\tElectricalBranchGeometry,List,List",
      "contents": "RetrieveExtremitiesInArrageJunction(${1:electricalbranchgeometry}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "RetrieveFTARequirementSpecificationFromVPMRef\tVPMReference,Requirement Specification,Integer",
      "contents": "RetrieveFTARequirementSpecificationFromVPMRef(${1:vpmreference}, ${2:requirement specification}, ${3:int})"
    },
    {
      "trigger": "RetrieveFasteners\tProductOccurrence",
      "contents": "RetrieveFasteners(${1:productoccurrence})"
    },
    {
      "trigger": "RetrieveFastenersInContext\tProductOccurrence,VPMReference",
      "contents": "RetrieveFastenersInContext(${1:productoccurrence}, ${2:vpmreference})"
    },
    {
      "trigger": "RetrieveFeatureFromUri\tFeature,String",
      "contents": "RetrieveFeatureFromUri(${1:feat}, ${2:name})"
    },
    {
      "trigger": "RetrieveImpactedOfMCX\tMCX,Integer",
      "contents": "RetrieveImpactedOfMCX(${1:mcx}, ${2:int})"
    },
    {
      "trigger": "RetrieveNamingParameters\tString,String,String,String",
      "contents": "RetrieveNamingParameters(${1:name}, ${2:name}, ${3:name}, ${4:name})"
    },
    {
      "trigger": "RetrieveNamingParametersWithSeparator\tString,String,String,String,String,String",
      "contents": "RetrieveNamingParametersWithSeparator(${1:name}, ${2:name}, ${3:name}, ${4:name}, ${5:name}, ${6:name})"
    },
    {
      "trigger": "RetrieveNewObject\tStrStructureCopySpecification,Feature,Feature",
      "contents": "RetrieveNewObject(${1:strstructurecopyspecification}, ${2:feat}, ${3:feat})"
    },
    {
      "trigger": "RetrieveOntology\tString",
      "contents": "RetrieveOntology(${1:name})"
    },
    {
      "trigger": "RetrieveResourceFromProductOccurence\tProductOccurrence",
      "contents": "RetrieveResourceFromProductOccurence(${1:productoccurrence})"
    },
    {
      "trigger": "RetrieveResourcesForSweeping\tDELRscSweptVolumeMgr,List",
      "contents": "RetrieveResourcesForSweeping(${1:delrscsweptvolumemgr}, ${2:list})"
    },
    {
      "trigger": "RetrieveResourcesWithTasks\tDELMfgSimMSR,ProductOccurrence,List",
      "contents": "RetrieveResourcesWithTasks(${1:delmfgsimmsr}, ${2:productoccurrence}, ${3:list})"
    },
    {
      "trigger": "RetrieveSweepableTasks\tDELRscSweptVolumeMgr,ProductOccurrence,List",
      "contents": "RetrieveSweepableTasks(${1:delrscsweptvolumemgr}, ${2:productoccurrence}, ${3:list})"
    },
    {
      "trigger": "RetrieveSystemPreference\tString",
      "contents": "RetrieveSystemPreference(${1:name})"
    },
    {
      "trigger": "RetrieveSystemSetting\tString",
      "contents": "RetrieveSystemSetting(${1:name})"
    },
    {
      "trigger": "RetrieveTasks\tDELMfgSimMSR,ProductOccurrence,List",
      "contents": "RetrieveTasks(${1:delmfgsimmsr}, ${2:productoccurrence}, ${3:list})"
    },
    {
      "trigger": "Reverse\tDNBFitTrack",
      "contents": "Reverse(${1:dnbfittrack})"
    },
    {
      "trigger": "ReverseDirection\tSddMember",
      "contents": "ReverseDirection(${1:sddmember})"
    },
    {
      "trigger": "Revise\tElecRoute",
      "contents": "Revise(${1:elecroute})"
    },
    {
      "trigger": "RobAssignRobot\tDNBTagGroup,ResourceOccurrence",
      "contents": "RobAssignRobot(${1:dnbtaggroup}, ${2:resourceoccurrence})"
    },
    {
      "trigger": "RobGenerateTask\tRobTaskParam,DNBResourceTask",
      "contents": "RobGenerateTask(${1:robtaskparam}, ${2:dnbresourcetask})"
    },
    {
      "trigger": "RobUnassignRobot\tDNBTagGroup,ResourceOccurrence",
      "contents": "RobUnassignRobot(${1:dnbtaggroup}, ${2:resourceoccurrence})"
    },
    {
      "trigger": "Rotate\tRscTransform,Integer,Real",
      "contents": "Rotate(${1:rsctransform}, ${2:int}, ${3:real})"
    },
    {
      "trigger": "RoutableObjectsRoutedTogether\tRFLVPMLogicalConnection",
      "contents": "RoutableObjectsRoutedTogether(${1:rflvpmlogicalconnection})"
    },
    {
      "trigger": "RouteOfRoutableObject\tRFLVPMLogicalConnection",
      "contents": "RouteOfRoutableObject(${1:rflvpmlogicalconnection})"
    },
    {
      "trigger": "RscCheckCollisionStatus\tProductOccurrence,PLMSimClashSpecsType,Integer",
      "contents": "RscCheckCollisionStatus(${1:productoccurrence}, ${2:plmsimclashspecstype}, ${3:int})"
    },
    {
      "trigger": "RscCompareGeometry\tProductOccurrence,ProductOccurrence,Real,List,List",
      "contents": "RscCompareGeometry(${1:productoccurrence}, ${2:productoccurrence}, ${3:real}, ${4:list}, ${5:list})"
    },
    {
      "trigger": "RscGenerateFrom\tProductOccurrence,Integer,String,Integer",
      "contents": "RscGenerateFrom(${1:productoccurrence}, ${2:int}, ${3:name}, ${4:int})"
    },
    {
      "trigger": "RscGetRelatedControlledTool\tRscKinematicsMgr,List,List",
      "contents": "RscGetRelatedControlledTool(${1:rsckinematicsmgr}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "RscRenameKinCommands\tRscKinematicsMgr,Integer,String,Integer",
      "contents": "RscRenameKinCommands(${1:rsckinematicsmgr}, ${2:int}, ${3:name}, ${4:int})"
    },
    {
      "trigger": "RscRenameSpecificKinCommand\tRscKinematicsMgr,Integer,String",
      "contents": "RscRenameSpecificKinCommand(${1:rsckinematicsmgr}, ${2:int}, ${3:name})"
    },
    {
      "trigger": "RscRepositionCellElements\tProductOccurrence,RscTransform,Boolean",
      "contents": "RscRepositionCellElements(${1:productoccurrence}, ${2:rsctransform}, ${3:bool})"
    },
    {
      "trigger": "Run\tAdvisorAction,ObjectType",
      "contents": "Run(${1:advisoraction}, ${2:objecttype})"
    },
    {
      "trigger": "Run\tCATDistribute",
      "contents": "Run(${1:catdistribute})"
    },
    {
      "trigger": "RunCheck\tGeometryCheckOpe",
      "contents": "RunCheck(${1:geometrycheckope})"
    },
    {
      "trigger": "RunManufacturingScenario\tDELMfgSimScenario",
      "contents": "RunManufacturingScenario(${1:delmfgsimscenario})"
    },
    {
      "trigger": "RunManufacturingSimulation\tDELMfgSimMSR",
      "contents": "RunManufacturingSimulation(${1:delmfgsimmsr})"
    },
    {
      "trigger": "RunQuery\tPLMQuery",
      "contents": "RunQuery(${1:plmquery})"
    },
    {
      "trigger": "RunUserfeatureRecognition\tBodyFeature,List,List,List,List,List,List,Integer,List,List,List,List,List,List",
      "contents": "RunUserfeatureRecognition(${1:bodyfeature}, ${2:list}, ${3:list}, ${4:list}, ${5:list}, ${6:list}, ${7:list}, ${8:int}, ${9:list}, ${10:list}, ${11:list}, ${12:list}, ${13:list}, ${14:list})"
    },
    {
      "trigger": "SHMFoldedDistance\tSHMDistance,SHMDistance",
      "contents": "SHMFoldedDistance(${1:shmdistance}, ${2:shmdistance})"
    },
    {
      "trigger": "SHMUnfoldedDistance\tSHMDistance,SHMDistance",
      "contents": "SHMUnfoldedDistance(${1:shmdistance}, ${2:shmdistance})"
    },
    {
      "trigger": "SRand\tInteger",
      "contents": "SRand(${1:int})"
    },
    {
      "trigger": "STAutoNumber\tString,Integer",
      "contents": "STAutoNumber(${1:name}, ${2:int})"
    },
    {
      "trigger": "STAutoNumbers\tString,Integer,String,String",
      "contents": "STAutoNumbers(${1:name}, ${2:int}, ${3:name}, ${4:name})"
    },
    {
      "trigger": "STMinorRevisionAuthoringCommands\t()",
      "contents": "STMinorRevisionAuthoringCommands()"
    },
    {
      "trigger": "STMinorRevisionPolicyChoice\t()",
      "contents": "STMinorRevisionPolicyChoice()"
    },
    {
      "trigger": "STMultiContextModification\tString",
      "contents": "STMultiContextModification(${1:name})"
    },
    {
      "trigger": "STMultiContextPrivateApplicability\tString",
      "contents": "STMultiContextPrivateApplicability(${1:name})"
    },
    {
      "trigger": "STMultiContextPrivateReadability\tString",
      "contents": "STMultiContextPrivateReadability(${1:name})"
    },
    {
      "trigger": "STPublicOrProtectedProject\tString",
      "contents": "STPublicOrProtectedProject(${1:name})"
    },
    {
      "trigger": "STPublicProject\tString",
      "contents": "STPublicProject(${1:name})"
    },
    {
      "trigger": "STRecoverNumber\tString",
      "contents": "STRecoverNumber(${1:name})"
    },
    {
      "trigger": "STSiteNumber\t()",
      "contents": "STSiteNumber()"
    },
    {
      "trigger": "STStandardProject\tString",
      "contents": "STStandardProject(${1:name})"
    },
    {
      "trigger": "STStrictLockingOnDefinition\t()",
      "contents": "STStrictLockingOnDefinition()"
    },
    {
      "trigger": "STStrictOwnershipOnDefinition\t()",
      "contents": "STStrictOwnershipOnDefinition()"
    },
    {
      "trigger": "STStrictOwnershipOnEvaluation\t()",
      "contents": "STStrictOwnershipOnEvaluation()"
    },
    {
      "trigger": "STTypePrefix\tString",
      "contents": "STTypePrefix(${1:name})"
    },
    {
      "trigger": "STTypeSiteAffix\tString",
      "contents": "STTypeSiteAffix(${1:name})"
    },
    {
      "trigger": "STTypeSuffix\tString",
      "contents": "STTypeSuffix(${1:name})"
    },
    {
      "trigger": "Sampling2D\tInteger,Real,Vector,Vector,Vector,Integer,List,List",
      "contents": "Sampling2D(${1:int}, ${2:real}, ${3:vector}, ${4:vector}, ${5:vector}, ${6:int}, ${7:list}, ${8:list})"
    },
    {
      "trigger": "Sampling3D\tInteger,Real,Vector,Vector,Vector,Integer,List,List,List",
      "contents": "Sampling3D(${1:int}, ${2:real}, ${3:vector}, ${4:vector}, ${5:vector}, ${6:int}, ${7:list}, ${8:list}, ${9:list})"
    },
    {
      "trigger": "Save\tBitmap,String,String",
      "contents": "Save(${1:bitmap}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "Save\tJSONDocument",
      "contents": "Save(${1:jsondocument})"
    },
    {
      "trigger": "ScalarProduct\tVector,Vector",
      "contents": "ScalarProduct(${1:vector}, ${2:vector})"
    },
    {
      "trigger": "ScaleDensityGridData\tMLPLayerObject",
      "contents": "ScaleDensityGridData(${1:mlplayerobject})"
    },
    {
      "trigger": "Search\tOntology,String,String",
      "contents": "Search(${1:ontology}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "Search\tRegex,String",
      "contents": "Search(${1:regex}, ${2:name})"
    },
    {
      "trigger": "Search\tString,String,Integer,Boolean",
      "contents": "Search(${1:name}, ${2:name}, ${3:int}, ${4:bool})"
    },
    {
      "trigger": "SearchForBreak\tInteger,Integer,Integer,Integer,Integer,Integer,String",
      "contents": "SearchForBreak(${1:int}, ${2:int}, ${3:int}, ${4:int}, ${5:int}, ${6:int}, ${7:name})"
    },
    {
      "trigger": "SearchForShift\tInteger,Integer,Integer,Integer,Integer,Integer,String",
      "contents": "SearchForShift(${1:int}, ${2:int}, ${3:int}, ${4:int}, ${5:int}, ${6:int}, ${7:name})"
    },
    {
      "trigger": "SearchPattern\tString,String",
      "contents": "SearchPattern(${1:name}, ${2:name})"
    },
    {
      "trigger": "SemanticDimLowerLimit\tReal",
      "contents": "SemanticDimLowerLimit(${1:real})"
    },
    {
      "trigger": "SemanticDimSimpleLimit\tReal",
      "contents": "SemanticDimSimpleLimit(${1:real})"
    },
    {
      "trigger": "SemanticDimTabValue\tReal",
      "contents": "SemanticDimTabValue(${1:real})"
    },
    {
      "trigger": "SemanticDimUpperLimit\tReal",
      "contents": "SemanticDimUpperLimit(${1:real})"
    },
    {
      "trigger": "SendSpecialEvent\tCATKwdDialog,String",
      "contents": "SendSpecialEvent(${1:catkwddialog}, ${2:name})"
    },
    {
      "trigger": "SequencedBefore\tManufacturingActivity,ManufacturingActivity",
      "contents": "SequencedBefore(${1:manufacturingactivity}, ${2:manufacturingactivity})"
    },
    {
      "trigger": "SessionUniqueIndex\tString",
      "contents": "SessionUniqueIndex(${1:name})"
    },
    {
      "trigger": "Set3DAxisSystem\tSddContourBased,Feature",
      "contents": "Set3DAxisSystem(${1:sddcontourbased}, ${2:feat})"
    },
    {
      "trigger": "Set3DAxisSystem\tSldSketchBasedPanel,Feature,Feature,Feature",
      "contents": "Set3DAxisSystem(${1:sldsketchbasedpanel}, ${2:feat}, ${3:feat}, ${4:feat})"
    },
    {
      "trigger": "Set3DMarkerLeaderPositions\tPLMOperation,Feature,List",
      "contents": "Set3DMarkerLeaderPositions(${1:plmoperation}, ${2:feat}, ${3:list})"
    },
    {
      "trigger": "Set3DMarkerPosition\tPLMOperation,Feature,List",
      "contents": "Set3DMarkerPosition(${1:plmoperation}, ${2:feat}, ${3:list})"
    },
    {
      "trigger": "Set3DTextMarkerProperties\tPLMOperation,Feature,List",
      "contents": "Set3DTextMarkerProperties(${1:plmoperation}, ${2:feat}, ${3:list})"
    },
    {
      "trigger": "Set3To5xConverterActiveStatus\tManufacturingActivity,Boolean,M3xTo5xConverter",
      "contents": "Set3To5xConverterActiveStatus(${1:manufacturingactivity}, ${2:bool}, ${3:m3xto5xconverter})"
    },
    {
      "trigger": "Set\tMatrix,Integer,Integer,Real",
      "contents": "Set(${1:matrix}, ${2:int}, ${3:int}, ${4:real})"
    },
    {
      "trigger": "SetAbsoluteAxis\tDNBTag,ProductOccurrence,ProductOccurrence,List",
      "contents": "SetAbsoluteAxis(${1:dnbtag}, ${2:productoccurrence}, ${3:productoccurrence}, ${4:list})"
    },
    {
      "trigger": "SetAccelerationUnit\tRscMotionProfile,RscMotionType,RscMotionUnitType",
      "contents": "SetAccelerationUnit(${1:rscmotionprofile}, ${2:rscmotiontype}, ${3:rscmotionunittype})"
    },
    {
      "trigger": "SetAccelerationValue\tRscMotionProfile,RscMotionType,Real",
      "contents": "SetAccelerationValue(${1:rscmotionprofile}, ${2:rscmotiontype}, ${3:real})"
    },
    {
      "trigger": "SetAccuracyProfile\tDNBRobotMotion,Feature",
      "contents": "SetAccuracyProfile(${1:dnbrobotmotion}, ${2:feat})"
    },
    {
      "trigger": "SetAccuracyProfile\tDNBSpotProfile,DNBSpotAccuracyProfileAndAccelMoves,Feature",
      "contents": "SetAccuracyProfile(${1:dnbspotprofile}, ${2:dnbspotaccuracyprofileandaccelmoves}, ${3:feat})"
    },
    {
      "trigger": "SetAccuracyType\tRscAccuracyProfile,RscAccuracyType",
      "contents": "SetAccuracyType(${1:rscaccuracyprofile}, ${2:rscaccuracytype})"
    },
    {
      "trigger": "SetAccuracyValue\tRscAccuracyProfile,Real",
      "contents": "SetAccuracyValue(${1:rscaccuracyprofile}, ${2:real})"
    },
    {
      "trigger": "SetActionRuleName\tSldAdvConnection,String",
      "contents": "SetActionRuleName(${1:sldadvconnection}, ${2:name})"
    },
    {
      "trigger": "SetActive3DState\tDEL3DState,Integer",
      "contents": "SetActive3DState(${1:del3dstate}, ${2:int})"
    },
    {
      "trigger": "SetActive\tMfgMacroElementaryMotion",
      "contents": "SetActive(${1:mfgmacroelementarymotion})"
    },
    {
      "trigger": "SetActiveAutoSequenceRules\tList,List",
      "contents": "SetActiveAutoSequenceRules(${1:list}, ${2:list})"
    },
    {
      "trigger": "SetActiveForSimulation\tFFS_ShiftModel,Boolean",
      "contents": "SetActiveForSimulation(${1:ffs_shiftmodel}, ${2:bool})"
    },
    {
      "trigger": "SetActiveMacro\tMfgMacroMotions",
      "contents": "SetActiveMacro(${1:mfgmacromotions})"
    },
    {
      "trigger": "SetActiveOperation\tPLMOperation",
      "contents": "SetActiveOperation(${1:plmoperation})"
    },
    {
      "trigger": "SetActiveOperationOrSystem\tProdSystemOccurrence",
      "contents": "SetActiveOperationOrSystem(${1:prodsystemoccurrence})"
    },
    {
      "trigger": "SetActiveSystem\tDELLmiPPRSystemReference",
      "contents": "SetActiveSystem(${1:dellmipprsystemreference})"
    },
    {
      "trigger": "SetActivitiesInSequence\tFFS_GroupActivity,List",
      "contents": "SetActivitiesInSequence(${1:ffs_groupactivity}, ${2:list})"
    },
    {
      "trigger": "SetActivityAttribute\tFFS_SimScenario,FFS_Activity,String,Real",
      "contents": "SetActivityAttribute(${1:ffs_simscenario}, ${2:ffs_activity}, ${3:name}, ${4:real})"
    },
    {
      "trigger": "SetActivityInitialState\tFFS_Resource,FFS_Activity,String",
      "contents": "SetActivityInitialState(${1:ffs_resource}, ${2:ffs_activity}, ${3:name})"
    },
    {
      "trigger": "SetActivityMaxValueToAsPerSpecifiedTableDepartRequirement\tFFS_DestinationProperties,FFS_Activity,Integer",
      "contents": "SetActivityMaxValueToAsPerSpecifiedTableDepartRequirement(${1:ffs_destinationproperties}, ${2:ffs_activity}, ${3:int})"
    },
    {
      "trigger": "SetActivityMinValueToAsPerSpecifiedTableDepartRequirement\tFFS_DestinationProperties,FFS_Activity,Integer",
      "contents": "SetActivityMinValueToAsPerSpecifiedTableDepartRequirement(${1:ffs_destinationproperties}, ${2:ffs_activity}, ${3:int})"
    },
    {
      "trigger": "SetActivitySelectionMode\tFFS_Resource,String",
      "contents": "SetActivitySelectionMode(${1:ffs_resource}, ${2:name})"
    },
    {
      "trigger": "SetActivitySetupPositions\tManufacturingActivity,List",
      "contents": "SetActivitySetupPositions(${1:manufacturingactivity}, ${2:list})"
    },
    {
      "trigger": "SetAdvanceGanttDuringSimulation\tFFS_Resource,Boolean",
      "contents": "SetAdvanceGanttDuringSimulation(${1:ffs_resource}, ${2:bool})"
    },
    {
      "trigger": "SetAlignToFlange\tSddOpening,Integer",
      "contents": "SetAlignToFlange(${1:sddopening}, ${2:int})"
    },
    {
      "trigger": "SetAnchorPoint\tAGTConnector,String",
      "contents": "SetAnchorPoint(${1:agtconnector}, ${2:name})"
    },
    {
      "trigger": "SetAnchorPointProfileOpening\tSddOpening,String",
      "contents": "SetAnchorPointProfileOpening(${1:sddopening}, ${2:name})"
    },
    {
      "trigger": "SetAnchorPosition\tDNBFitTrack,List",
      "contents": "SetAnchorPosition(${1:dnbfittrack}, ${2:list})"
    },
    {
      "trigger": "SetAngle\tAGTConnector,ANGLE",
      "contents": "SetAngle(${1:agtconnector}, ${2:angle})"
    },
    {
      "trigger": "SetAngleMode\tSddProfile,Integer",
      "contents": "SetAngleMode(${1:sddprofile}, ${2:int})"
    },
    {
      "trigger": "SetApplicabilityModeOnCapRscOrRscDetail\tPLMConnection,String",
      "contents": "SetApplicabilityModeOnCapRscOrRscDetail(${1:plmconnection}, ${2:name})"
    },
    {
      "trigger": "SetApplicativeAttribute\tFeature,String,String",
      "contents": "SetApplicativeAttribute(${1:feat}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "SetApproachDistance\tDELSurfaceTrajectory,DELSurfaceTrajectoryAppoachType,Real",
      "contents": "SetApproachDistance(${1:delsurfacetrajectory}, ${2:delsurfacetrajectoryappoachtype}, ${3:real})"
    },
    {
      "trigger": "SetArcFlareStart\tRobArcTrajectory,Real,Real",
      "contents": "SetArcFlareStart(${1:robarctrajectory}, ${2:real}, ${3:real})"
    },
    {
      "trigger": "SetArcFlareStop\tRobArcTrajectory,Real,Real",
      "contents": "SetArcFlareStop(${1:robarctrajectory}, ${2:real}, ${3:real})"
    },
    {
      "trigger": "SetArcGlobalBRR\tRobArcTrajectory,Real,Real,Real",
      "contents": "SetArcGlobalBRR(${1:robarctrajectory}, ${2:real}, ${3:real}, ${4:real})"
    },
    {
      "trigger": "SetAsMobileStorage\tFFS_Resource,FFS_ProductZone,Boolean",
      "contents": "SetAsMobileStorage(${1:ffs_resource}, ${2:ffs_productzone}, ${3:bool})"
    },
    {
      "trigger": "SetAssociatedFlow\tRFLPLMFunctionalConnector,RFLPLMFlowReference",
      "contents": "SetAssociatedFlow(${1:rflplmfunctionalconnector}, ${2:rflplmflowreference})"
    },
    {
      "trigger": "SetAssociatedSystemType\tRFLVPMLogicalPort,RFLVPMSystemTypeReference",
      "contents": "SetAssociatedSystemType(${1:rflvpmlogicalport}, ${2:rflvpmsystemtypereference})"
    },
    {
      "trigger": "SetAssociativityMode\tCATDistribute,AssociativityModeEnum",
      "contents": "SetAssociativityMode(${1:catdistribute}, ${2:associativitymodeenum})"
    },
    {
      "trigger": "SetAttachmentStatus\tRscToolProfile,Boolean",
      "contents": "SetAttachmentStatus(${1:rsctoolprofile}, ${2:bool})"
    },
    {
      "trigger": "SetAttachmentTransformation\tRscToolProfile,RscTransform",
      "contents": "SetAttachmentTransformation(${1:rsctoolprofile}, ${2:rsctransform})"
    },
    {
      "trigger": "SetAttributeAny\tFeature,String,UndefinedType",
      "contents": "SetAttributeAny(${1:feat}, ${2:name}, ${3:undefinedtype})"
    },
    {
      "trigger": "SetAttributeBoolean\tFeature,String,Boolean",
      "contents": "SetAttributeBoolean(${1:feat}, ${2:name}, ${3:bool})"
    },
    {
      "trigger": "SetAttributeDate\tFeature,String,Date",
      "contents": "SetAttributeDate(${1:feat}, ${2:name}, ${3:date})"
    },
    {
      "trigger": "SetAttributeDimension\tFeature,String,Real,String",
      "contents": "SetAttributeDimension(${1:feat}, ${2:name}, ${3:real}, ${4:name})"
    },
    {
      "trigger": "SetAttributeInteger\tFeature,String,Integer",
      "contents": "SetAttributeInteger(${1:feat}, ${2:name}, ${3:int})"
    },
    {
      "trigger": "SetAttributeIntegerOnDCPRow\tPLMSpecifyHowToCollectDataCnx,String,Integer",
      "contents": "SetAttributeIntegerOnDCPRow(${1:plmspecifyhowtocollectdatacnx}, ${2:name}, ${3:int})"
    },
    {
      "trigger": "SetAttributeListOnDCPRow\tPLMSpecifyHowToCollectDataCnx,String,List",
      "contents": "SetAttributeListOnDCPRow(${1:plmspecifyhowtocollectdatacnx}, ${2:name}, ${3:list})"
    },
    {
      "trigger": "SetAttributeObject\tFeature,String,Feature",
      "contents": "SetAttributeObject(${1:feat}, ${2:name}, ${3:feat})"
    },
    {
      "trigger": "SetAttributeReal\tFeature,String,Real",
      "contents": "SetAttributeReal(${1:feat}, ${2:name}, ${3:real})"
    },
    {
      "trigger": "SetAttributeRealOnDCPRow\tPLMSpecifyHowToCollectDataCnx,String,Real",
      "contents": "SetAttributeRealOnDCPRow(${1:plmspecifyhowtocollectdatacnx}, ${2:name}, ${3:real})"
    },
    {
      "trigger": "SetAttributeString\tFeature,String,String",
      "contents": "SetAttributeString(${1:feat}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "SetAttributeStringOnDCPRow\tPLMSpecifyHowToCollectDataCnx,String,String",
      "contents": "SetAttributeStringOnDCPRow(${1:plmspecifyhowtocollectdatacnx}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "SetAttributeValue\tDNBTag,String,String",
      "contents": "SetAttributeValue(${1:dnbtag}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "SetAutomaticName\tSddFunction,Boolean",
      "contents": "SetAutomaticName(${1:sddfunction}, ${2:bool})"
    },
    {
      "trigger": "SetAuxillaryAxisHome\tDNBRobotMotion,Feature,String",
      "contents": "SetAuxillaryAxisHome(${1:dnbrobotmotion}, ${2:feat}, ${3:name})"
    },
    {
      "trigger": "SetAuxillaryAxisValues\tDNBRobotMotion,Feature,List",
      "contents": "SetAuxillaryAxisValues(${1:dnbrobotmotion}, ${2:feat}, ${3:list})"
    },
    {
      "trigger": "SetAvailabilityModeOnResourceDetail\tPLMConnection,String",
      "contents": "SetAvailabilityModeOnResourceDetail(${1:plmconnection}, ${2:name})"
    },
    {
      "trigger": "SetAxialPlane\tMfgSequentialAxialOperation,Integer,Visualizable,ProductOccurrence",
      "contents": "SetAxialPlane(${1:mfgsequentialaxialoperation}, ${2:int}, ${3:visualizable}, ${4:productoccurrence})"
    },
    {
      "trigger": "SetAxialPlaneDistance\tMfgSequentialAxialOperation,Integer,Real",
      "contents": "SetAxialPlaneDistance(${1:mfgsequentialaxialoperation}, ${2:int}, ${3:real})"
    },
    {
      "trigger": "SetAxis\tDNBTag,List",
      "contents": "SetAxis(${1:dnbtag}, ${2:list})"
    },
    {
      "trigger": "SetAxisInvolvement\tMachineInstruction,String,Integer",
      "contents": "SetAxisInvolvement(${1:machineinstruction}, ${2:name}, ${3:int})"
    },
    {
      "trigger": "SetAxisSystem\tElecPort,Vector,Vector,Vector,Vector",
      "contents": "SetAxisSystem(${1:elecport}, ${2:vector}, ${3:vector}, ${4:vector}, ${5:vector})"
    },
    {
      "trigger": "SetAxisValues\tMachineInstruction,String,Real",
      "contents": "SetAxisValues(${1:machineinstruction}, ${2:name}, ${3:real})"
    },
    {
      "trigger": "SetBackupMoveStroke\tDNBSpotProfile,Integer,Real",
      "contents": "SetBackupMoveStroke(${1:dnbspotprofile}, ${2:int}, ${3:real})"
    },
    {
      "trigger": "SetBackupMoveStrokeProfile\tDNBSpotProfile,Integer,Feature,String",
      "contents": "SetBackupMoveStrokeProfile(${1:dnbspotprofile}, ${2:int}, ${3:feat}, ${4:name})"
    },
    {
      "trigger": "SetBaseboardHeight\tLiveArchiCovering,LENGTH",
      "contents": "SetBaseboardHeight(${1:livearchicovering}, ${2:len})"
    },
    {
      "trigger": "SetBenchParameter\tBenchSupport,BenchParameter",
      "contents": "SetBenchParameter(${1:benchsupport}, ${2:benchparameter})"
    },
    {
      "trigger": "SetBendRadius\tBranch,LENGTH",
      "contents": "SetBendRadius(${1:branch}, ${2:len})"
    },
    {
      "trigger": "SetBendRadiusRatio\tBranch,Real",
      "contents": "SetBendRadiusRatio(${1:branch}, ${2:real})"
    },
    {
      "trigger": "SetBottomClearance\tLiveArchiCeiling,LENGTH",
      "contents": "SetBottomClearance(${1:livearchiceiling}, ${2:len})"
    },
    {
      "trigger": "SetBuildAlgorithm\tHVAC_Flexible_Duct,CATEbm_BranchTypeEnum",
      "contents": "SetBuildAlgorithm(${1:hvac_flexible_duct}, ${2:catebm_branchtypeenum})"
    },
    {
      "trigger": "SetBuildMode\tBranch,String",
      "contents": "SetBuildMode(${1:branch}, ${2:name})"
    },
    {
      "trigger": "SetBuildUpPosition\tPLMConnection,ProdSystemOccurrence,List,ResourceOccurrence",
      "contents": "SetBuildUpPosition(${1:plmconnection}, ${2:prodsystemoccurrence}, ${3:list}, ${4:resourceoccurrence})"
    },
    {
      "trigger": "SetBuildupRelativePosition\tProdSystemOccurrence,ResourceOccurrence,List",
      "contents": "SetBuildupRelativePosition(${1:prodsystemoccurrence}, ${2:resourceoccurrence}, ${3:list})"
    },
    {
      "trigger": "SetCapableResourceQuantity\tDELFmiFunctionReference,PLMResource,Integer",
      "contents": "SetCapableResourceQuantity(${1:delfmifunctionreference}, ${2:plmresource}, ${3:int})"
    },
    {
      "trigger": "SetCapableResourcesAssociatedWithDCPRow\tPLMSpecifyHowToCollectDataCnx,List",
      "contents": "SetCapableResourcesAssociatedWithDCPRow(${1:plmspecifyhowtocollectdatacnx}, ${2:list})"
    },
    {
      "trigger": "SetCapableResourcesAssociatedWithInstruction\tProdSystemOccurrence,List",
      "contents": "SetCapableResourcesAssociatedWithInstruction(${1:prodsystemoccurrence}, ${2:list})"
    },
    {
      "trigger": "SetCapableRscGroupIndex\tDELAsmProcessCanUseCnx,Integer,SetCapableRscGroupIndexStatus",
      "contents": "SetCapableRscGroupIndex(${1:delasmprocesscanusecnx}, ${2:int}, ${3:setcapablerscgroupindexstatus})"
    },
    {
      "trigger": "SetCapacityAndInitialStockForTrain\tFFS_Resource,List,List,List",
      "contents": "SetCapacityAndInitialStockForTrain(${1:ffs_resource}, ${2:list}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "SetCartesianTarget\tDNBRobotMotion,List",
      "contents": "SetCartesianTarget(${1:dnbrobotmotion}, ${2:list})"
    },
    {
      "trigger": "SetCategory\tAGTConnector,String",
      "contents": "SetCategory(${1:agtconnector}, ${2:name})"
    },
    {
      "trigger": "SetCategoryConditionExt\tDELLmiTimeConstraintCnx,String",
      "contents": "SetCategoryConditionExt(${1:dellmitimeconstraintcnx}, ${2:name})"
    },
    {
      "trigger": "SetCategoryConditionExtension\tDELLmiTimeConstraintCnx,Integer",
      "contents": "SetCategoryConditionExtension(${1:dellmitimeconstraintcnx}, ${2:int})"
    },
    {
      "trigger": "SetCeilingThickness\tLiveArchiCeiling,LENGTH",
      "contents": "SetCeilingThickness(${1:livearchiceiling}, ${2:len})"
    },
    {
      "trigger": "SetCeilingType\tLiveArchiCeiling,AGTType",
      "contents": "SetCeilingType(${1:livearchiceiling}, ${2:agttype})"
    },
    {
      "trigger": "SetCell\tDTSheetType,Integer,Integer,Literal",
      "contents": "SetCell(${1:dtsheettype}, ${2:int}, ${3:int}, ${4:literal})"
    },
    {
      "trigger": "SetCentroid\tRscToolProfile,List",
      "contents": "SetCentroid(${1:rsctoolprofile}, ${2:list})"
    },
    {
      "trigger": "SetCharacteristicValues\tHumanActivityCharacteristicValue,String,String",
      "contents": "SetCharacteristicValues(${1:humanactivitycharacteristicvalue}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "SetClashGeometries\tSIMItfSimulation,PIM_ClashGeometry",
      "contents": "SetClashGeometries(${1:simitfsimulation}, ${2:pim_clashgeometry})"
    },
    {
      "trigger": "SetClashQuantifiers\tSIMItfSimulation,PIM_ClashQuantifier",
      "contents": "SetClashQuantifiers(${1:simitfsimulation}, ${2:pim_clashquantifier})"
    },
    {
      "trigger": "SetClassificationValue\tDELPointCloudRepReference,Real",
      "contents": "SetClassificationValue(${1:delpointcloudrepreference}, ${2:real})"
    },
    {
      "trigger": "SetClearanceGeometries\tSIMItfSimulation,PIM_ClearanceGeometry",
      "contents": "SetClearanceGeometries(${1:simitfsimulation}, ${2:pim_clearancegeometry})"
    },
    {
      "trigger": "SetClearanceQuantifiers\tSIMItfSimulation,PIM_ClearanceQuantifier",
      "contents": "SetClearanceQuantifiers(${1:simitfsimulation}, ${2:pim_clearancequantifier})"
    },
    {
      "trigger": "SetClearanceValue\tSIMItfSimulation,Real",
      "contents": "SetClearanceValue(${1:simitfsimulation}, ${2:real})"
    },
    {
      "trigger": "SetClosedJointValue\tDNBSpotProfile,Integer,Real",
      "contents": "SetClosedJointValue(${1:dnbspotprofile}, ${2:int}, ${3:real})"
    },
    {
      "trigger": "SetCollarMaterial\tSddCollarSurface,String",
      "contents": "SetCollarMaterial(${1:sddcollarsurface}, ${2:name})"
    },
    {
      "trigger": "SetCollarThrowOrientation\tSddCollarSurface,Integer",
      "contents": "SetCollarThrowOrientation(${1:sddcollarsurface}, ${2:int})"
    },
    {
      "trigger": "SetCollisionAccuracyLevel\tRscMultiRobotPathPlanner,Integer",
      "contents": "SetCollisionAccuracyLevel(${1:rscmultirobotpathplanner}, ${2:int})"
    },
    {
      "trigger": "SetColor\tAGTConnector,String",
      "contents": "SetColor(${1:agtconnector}, ${2:name})"
    },
    {
      "trigger": "SetColor\tHVAC_Flexible_Duct,Integer,Integer,Integer",
      "contents": "SetColor(${1:hvac_flexible_duct}, ${2:int}, ${3:int}, ${4:int})"
    },
    {
      "trigger": "SetColumn\tEnsTechnologicalTable,Integer,List",
      "contents": "SetColumn(${1:enstechnologicaltable}, ${2:int}, ${3:list})"
    },
    {
      "trigger": "SetCommandAccelerationTime\tRscKinematicsMgr,RscMotionGroup,Integer,Real",
      "contents": "SetCommandAccelerationTime(${1:rsckinematicsmgr}, ${2:rscmotiongroup}, ${3:int}, ${4:real})"
    },
    {
      "trigger": "SetCommandCautionZone\tRscKinematicsMgr,RscMotionGroup,Integer,Real",
      "contents": "SetCommandCautionZone(${1:rsckinematicsmgr}, ${2:rscmotiongroup}, ${3:int}, ${4:real})"
    },
    {
      "trigger": "SetCommandCautionZoneMode\tRscKinematicsMgr,RscMotionGroup,Integer",
      "contents": "SetCommandCautionZoneMode(${1:rsckinematicsmgr}, ${2:rscmotiongroup}, ${3:int})"
    },
    {
      "trigger": "SetCommandLowerLimit\tRscKinematicsMgr,RscMotionGroup,Integer,RscTravelLimitsType,Real",
      "contents": "SetCommandLowerLimit(${1:rsckinematicsmgr}, ${2:rscmotiongroup}, ${3:int}, ${4:rsctravellimitstype}, ${5:real})"
    },
    {
      "trigger": "SetCommandLowerLimitExpression\tRscKinematicsMgr,RscMotionGroup,Integer,String",
      "contents": "SetCommandLowerLimitExpression(${1:rsckinematicsmgr}, ${2:rscmotiongroup}, ${3:int}, ${4:name})"
    },
    {
      "trigger": "SetCommandMaxAcceleration\tRscKinematicsMgr,RscMotionGroup,Integer,Real",
      "contents": "SetCommandMaxAcceleration(${1:rsckinematicsmgr}, ${2:rscmotiongroup}, ${3:int}, ${4:real})"
    },
    {
      "trigger": "SetCommandMaxSpeed\tRscKinematicsMgr,RscMotionGroup,Integer,Real",
      "contents": "SetCommandMaxSpeed(${1:rsckinematicsmgr}, ${2:rscmotiongroup}, ${3:int}, ${4:real})"
    },
    {
      "trigger": "SetCommandUpperLimit\tRscKinematicsMgr,RscMotionGroup,Integer,RscTravelLimitsType,Real",
      "contents": "SetCommandUpperLimit(${1:rsckinematicsmgr}, ${2:rscmotiongroup}, ${3:int}, ${4:rsctravellimitstype}, ${5:real})"
    },
    {
      "trigger": "SetCommandUpperLimitExpression\tRscKinematicsMgr,RscMotionGroup,Integer,String",
      "contents": "SetCommandUpperLimitExpression(${1:rsckinematicsmgr}, ${2:rscmotiongroup}, ${3:int}, ${4:name})"
    },
    {
      "trigger": "SetComment\tManufacturingOperation,String",
      "contents": "SetComment(${1:manufacturingoperation}, ${2:name})"
    },
    {
      "trigger": "SetComparison\tSIMItfSimulation,PIM_Comparison",
      "contents": "SetComparison(${1:simitfsimulation}, ${2:pim_comparison})"
    },
    {
      "trigger": "SetComputeMinNumberUnloadAutomatically\tFFS_DestinationProperties,Boolean",
      "contents": "SetComputeMinNumberUnloadAutomatically(${1:ffs_destinationproperties}, ${2:bool})"
    },
    {
      "trigger": "SetConfig\tDNBRobotMotion,Integer",
      "contents": "SetConfig(${1:dnbrobotmotion}, ${2:int})"
    },
    {
      "trigger": "SetConsumptionRateForAssignedConsumable\tFFS_Activity,FFS_Consumable,Real",
      "contents": "SetConsumptionRateForAssignedConsumable(${1:ffs_activity}, ${2:ffs_consumable}, ${3:real})"
    },
    {
      "trigger": "SetContactGeometries\tSIMItfSimulation,PIM_ContactGeometry",
      "contents": "SetContactGeometries(${1:simitfsimulation}, ${2:pim_contactgeometry})"
    },
    {
      "trigger": "SetContinuousFlowLineForConveyor\tFFS_Resource,Boolean",
      "contents": "SetContinuousFlowLineForConveyor(${1:ffs_resource}, ${2:bool})"
    },
    {
      "trigger": "SetContour\tLiveArchiCeiling,Feature",
      "contents": "SetContour(${1:livearchiceiling}, ${2:feat})"
    },
    {
      "trigger": "SetContour\tSddOpening,String,String,List",
      "contents": "SetContour(${1:sddopening}, ${2:name}, ${3:name}, ${4:list})"
    },
    {
      "trigger": "SetContourOffset\tLiveArchiCeiling,LENGTH",
      "contents": "SetContourOffset(${1:livearchiceiling}, ${2:len})"
    },
    {
      "trigger": "SetControllerIOMappingStrategy\tRscController,String",
      "contents": "SetControllerIOMappingStrategy(${1:rsccontroller}, ${2:name})"
    },
    {
      "trigger": "SetControllerObjectName\tRscControllerObject,String",
      "contents": "SetControllerObjectName(${1:rsccontrollerobject}, ${2:name})"
    },
    {
      "trigger": "SetControllerRobotID\tRscController,String",
      "contents": "SetControllerRobotID(${1:rsccontroller}, ${2:name})"
    },
    {
      "trigger": "SetControllerUserAttributeAuthorizedValuesInteger\tRscController,String,List",
      "contents": "SetControllerUserAttributeAuthorizedValuesInteger(${1:rsccontroller}, ${2:name}, ${3:list})"
    },
    {
      "trigger": "SetControllerUserAttributeAuthorizedValuesReal\tRscController,String,List",
      "contents": "SetControllerUserAttributeAuthorizedValuesReal(${1:rsccontroller}, ${2:name}, ${3:list})"
    },
    {
      "trigger": "SetControllerUserAttributeAuthorizedValuesString\tRscController,String,List",
      "contents": "SetControllerUserAttributeAuthorizedValuesString(${1:rsccontroller}, ${2:name}, ${3:list})"
    },
    {
      "trigger": "SetControllerUserAttributeValueBoolean\tRscController,String,Boolean",
      "contents": "SetControllerUserAttributeValueBoolean(${1:rsccontroller}, ${2:name}, ${3:bool})"
    },
    {
      "trigger": "SetControllerUserAttributeValueInteger\tRscController,String,Integer",
      "contents": "SetControllerUserAttributeValueInteger(${1:rsccontroller}, ${2:name}, ${3:int})"
    },
    {
      "trigger": "SetControllerUserAttributeValueReal\tRscController,String,Real",
      "contents": "SetControllerUserAttributeValueReal(${1:rsccontroller}, ${2:name}, ${3:real})"
    },
    {
      "trigger": "SetControllerUserAttributeValueString\tRscController,String,String",
      "contents": "SetControllerUserAttributeValueString(${1:rsccontroller}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "SetConveyorCapacity\tFFS_Resource,Integer",
      "contents": "SetConveyorCapacity(${1:ffs_resource}, ${2:int})"
    },
    {
      "trigger": "SetConveyorDefaultSpeed\tFFS_Resource,Real",
      "contents": "SetConveyorDefaultSpeed(${1:ffs_resource}, ${2:real})"
    },
    {
      "trigger": "SetConveyorFlowType\tFFS_Resource,String",
      "contents": "SetConveyorFlowType(${1:ffs_resource}, ${2:name})"
    },
    {
      "trigger": "SetConveyorPartSpacing\tFFS_Resource,Real",
      "contents": "SetConveyorPartSpacing(${1:ffs_resource}, ${2:real})"
    },
    {
      "trigger": "SetCorrectorValue\tProductOccurrence,Boolean,String,String,Literal",
      "contents": "SetCorrectorValue(${1:productoccurrence}, ${2:bool}, ${3:name}, ${4:name}, ${5:literal})"
    },
    {
      "trigger": "SetCount\tVerticalSignageMarker,Integer",
      "contents": "SetCount(${1:verticalsignagemarker}, ${2:int})"
    },
    {
      "trigger": "SetCoveringType\tLiveArchiCovering,AGTType",
      "contents": "SetCoveringType(${1:livearchicovering}, ${2:agttype})"
    },
    {
      "trigger": "SetCreationAs3DPart\tVPMReference,Boolean",
      "contents": "SetCreationAs3DPart(${1:vpmreference}, ${2:bool})"
    },
    {
      "trigger": "SetCurrent\tRscControllerProfile",
      "contents": "SetCurrent(${1:rsccontrollerprofile})"
    },
    {
      "trigger": "SetCurrentControllerApplicationType\tRscController,String",
      "contents": "SetCurrentControllerApplicationType(${1:rsccontroller}, ${2:name})"
    },
    {
      "trigger": "SetCurrentDiscipline\tString",
      "contents": "SetCurrentDiscipline(${1:name})"
    },
    {
      "trigger": "SetCurrentGenericProfile\tRscControllerProfileMgr,RscGenericProfileType,String",
      "contents": "SetCurrentGenericProfile(${1:rsccontrollerprofilemgr}, ${2:rscgenericprofiletype}, ${3:name})"
    },
    {
      "trigger": "SetCurve\tAGTConnector,Feature",
      "contents": "SetCurve(${1:agtconnector}, ${2:feat})"
    },
    {
      "trigger": "SetCurve\tSldProfile,Feature,Feature,Feature",
      "contents": "SetCurve(${1:sldprofile}, ${2:feat}, ${3:feat}, ${4:feat})"
    },
    {
      "trigger": "SetCuttingElement\tSddOpening3DObjectPanel,Feature",
      "contents": "SetCuttingElement(${1:sddopening3dobjectpanel}, ${2:feat})"
    },
    {
      "trigger": "SetCuttingElement\tSldOpening,Feature,Feature,Feature",
      "contents": "SetCuttingElement(${1:sldopening}, ${2:feat}, ${3:feat}, ${4:feat})"
    },
    {
      "trigger": "SetCuttingElements\tSldPanel,List",
      "contents": "SetCuttingElements(${1:sldpanel}, ${2:list})"
    },
    {
      "trigger": "SetDSTFeatureAttributeIntoList\tList,String,Literal",
      "contents": "SetDSTFeatureAttributeIntoList(${1:list}, ${2:name}, ${3:literal})"
    },
    {
      "trigger": "SetDateAsHoliday\tFFS_ShiftModel,Integer,Integer,Integer,Boolean",
      "contents": "SetDateAsHoliday(${1:ffs_shiftmodel}, ${2:int}, ${3:int}, ${4:int}, ${5:bool})"
    },
    {
      "trigger": "SetDecelerationUnit\tRscMotionProfile,RscMotionType,RscMotionUnitType",
      "contents": "SetDecelerationUnit(${1:rscmotionprofile}, ${2:rscmotiontype}, ${3:rscmotionunittype})"
    },
    {
      "trigger": "SetDecelerationValue\tRscMotionProfile,RscMotionType,Real",
      "contents": "SetDecelerationValue(${1:rscmotionprofile}, ${2:rscmotiontype}, ${3:real})"
    },
    {
      "trigger": "SetDefaultBendRadius\tHVAC_Rigid_Duct,LENGTH",
      "contents": "SetDefaultBendRadius(${1:hvac_rigid_duct}, ${2:len})"
    },
    {
      "trigger": "SetDefaultValue\tDNBLocalVar,String",
      "contents": "SetDefaultValue(${1:dnblocalvar}, ${2:name})"
    },
    {
      "trigger": "SetDefaultZone\tFFS_ResourcePool,FFS_VehicleDecisionPoint",
      "contents": "SetDefaultZone(${1:ffs_resourcepool}, ${2:ffs_vehicledecisionpoint})"
    },
    {
      "trigger": "SetDensityGridData\tMLPLayerObject,DTSheetType,String",
      "contents": "SetDensityGridData(${1:mlplayerobject}, ${2:dtsheettype}, ${3:name})"
    },
    {
      "trigger": "SetDensityGridDataCache\tMLPLayerObject,DTSheetType,String",
      "contents": "SetDensityGridDataCache(${1:mlplayerobject}, ${2:dtsheettype}, ${3:name})"
    },
    {
      "trigger": "SetDepartRequirementToAsPerSpecifiedTable\tFFS_DestinationProperties",
      "contents": "SetDepartRequirementToAsPerSpecifiedTable(${1:ffs_destinationproperties})"
    },
    {
      "trigger": "SetDesignOnPOLevel\tM3xOperation,Boolean",
      "contents": "SetDesignOnPOLevel(${1:m3xoperation}, ${2:bool})"
    },
    {
      "trigger": "SetDevice\tMachineInstruction,VPMInstance",
      "contents": "SetDevice(${1:machineinstruction}, ${2:vpminstance})"
    },
    {
      "trigger": "SetDeviceAxisInvolvement\tMachineInstruction,VPMInstance,String,Integer",
      "contents": "SetDeviceAxisInvolvement(${1:machineinstruction}, ${2:vpminstance}, ${3:name}, ${4:int})"
    },
    {
      "trigger": "SetDeviceAxisPriority\tMachineInstruction,VPMInstance,String,Integer",
      "contents": "SetDeviceAxisPriority(${1:machineinstruction}, ${2:vpminstance}, ${3:name}, ${4:int})"
    },
    {
      "trigger": "SetDeviceAxisValues\tMachineInstruction,VPMInstance,String,Real",
      "contents": "SetDeviceAxisValues(${1:machineinstruction}, ${2:vpminstance}, ${3:name}, ${4:real})"
    },
    {
      "trigger": "SetDeviceJointNumber\tDNBSpotProfile,Integer,Integer",
      "contents": "SetDeviceJointNumber(${1:dnbspotprofile}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "SetDeviceList\tMachineInstruction,List",
      "contents": "SetDeviceList(${1:machineinstruction}, ${2:list})"
    },
    {
      "trigger": "SetDeviceMCA\tDNBSpotProfile,Integer,Feature",
      "contents": "SetDeviceMCA(${1:dnbspotprofile}, ${2:int}, ${3:feat})"
    },
    {
      "trigger": "SetDirection\tMCX,Integer,CATMCXDirection",
      "contents": "SetDirection(${1:mcx}, ${2:int}, ${3:catmcxdirection})"
    },
    {
      "trigger": "SetDirection\tMfgDirection,String,Real,Real,Real",
      "contents": "SetDirection(${1:mfgdirection}, ${2:name}, ${3:real}, ${4:real}, ${5:real})"
    },
    {
      "trigger": "SetDirection\tSddMember,Feature",
      "contents": "SetDirection(${1:sddmember}, ${2:feat})"
    },
    {
      "trigger": "SetDressupName\tPLMOperation,Feature,String",
      "contents": "SetDressupName(${1:plmoperation}, ${2:feat}, ${3:name})"
    },
    {
      "trigger": "SetDressupText\tPLMOperation,Feature,List",
      "contents": "SetDressupText(${1:plmoperation}, ${2:feat}, ${3:list})"
    },
    {
      "trigger": "SetDressupVisibility\tPLMOperation,Feature,Boolean",
      "contents": "SetDressupVisibility(${1:plmoperation}, ${2:feat}, ${3:bool})"
    },
    {
      "trigger": "SetDriverConstruction\tCATDistribute,ProductOccurrence",
      "contents": "SetDriverConstruction(${1:catdistribute}, ${2:productoccurrence})"
    },
    {
      "trigger": "SetDriverPerformsallActivitiesinSpecifiedTable\tFFS_TransportRouteGroup,Boolean",
      "contents": "SetDriverPerformsallActivitiesinSpecifiedTable(${1:ffs_transportroutegroup}, ${2:bool})"
    },
    {
      "trigger": "SetDuration\tFFS_Activity,Real",
      "contents": "SetDuration(${1:ffs_activity}, ${2:real})"
    },
    {
      "trigger": "SetEdge\tSddFlange,Feature",
      "contents": "SetEdge(${1:sddflange}, ${2:feat})"
    },
    {
      "trigger": "SetEffectivity\tVPMInstance,String,String,Boolean",
      "contents": "SetEffectivity(${1:vpminstance}, ${2:name}, ${3:name}, ${4:bool})"
    },
    {
      "trigger": "SetElbowAngle\tDNBRobotMotion,Real",
      "contents": "SetElbowAngle(${1:dnbrobotmotion}, ${2:real})"
    },
    {
      "trigger": "SetElectricalSpec\tSIMItfSimulation,Boolean",
      "contents": "SetElectricalSpec(${1:simitfsimulation}, ${2:bool})"
    },
    {
      "trigger": "SetElevOffset\tVerticalSignageMarker,LENGTH",
      "contents": "SetElevOffset(${1:verticalsignagemarker}, ${2:len})"
    },
    {
      "trigger": "SetEndHomePositionName\tFFS_Activity,String",
      "contents": "SetEndHomePositionName(${1:ffs_activity}, ${2:name})"
    },
    {
      "trigger": "SetEndHomePositionName\tFFS_Activity,String,FFS_ResourcePool",
      "contents": "SetEndHomePositionName(${1:ffs_activity}, ${2:name}, ${3:ffs_resourcepool})"
    },
    {
      "trigger": "SetEndPt\tSddMember,Feature",
      "contents": "SetEndPt(${1:sddmember}, ${2:feat})"
    },
    {
      "trigger": "SetEndPt\tSldMember,Feature,Feature,Feature",
      "contents": "SetEndPt(${1:sldmember}, ${2:feat}, ${3:feat}, ${4:feat})"
    },
    {
      "trigger": "SetEnterpriseItemNumber\tDELFmiFunctionReference,String",
      "contents": "SetEnterpriseItemNumber(${1:delfmifunctionreference}, ${2:name})"
    },
    {
      "trigger": "SetEstimatedLength\tElec3DCable,ElecRoute,LENGTH",
      "contents": "SetEstimatedLength(${1:elec3dcable}, ${2:elecroute}, ${3:len})"
    },
    {
      "trigger": "SetExponentialTimeDistribution\tFFS_Activity,Real",
      "contents": "SetExponentialTimeDistribution(${1:ffs_activity}, ${2:real})"
    },
    {
      "trigger": "SetFSConfigAttributeValue\tProductOccurrence,String,String,String,Boolean,String,Literal",
      "contents": "SetFSConfigAttributeValue(${1:productoccurrence}, ${2:name}, ${3:name}, ${4:name}, ${5:bool}, ${6:name}, ${7:literal})"
    },
    {
      "trigger": "SetFSConfigLocalModificationState\tProductOccurrence,String,String,String,String,Boolean",
      "contents": "SetFSConfigLocalModificationState(${1:productoccurrence}, ${2:name}, ${3:name}, ${4:name}, ${5:name}, ${6:bool})"
    },
    {
      "trigger": "SetFactoryFlowSimulationContext\tProductOccurrence",
      "contents": "SetFactoryFlowSimulationContext(${1:productoccurrence})"
    },
    {
      "trigger": "SetFastenerSpec\tSIMItfSimulation,PIM_FastenerSpec",
      "contents": "SetFastenerSpec(${1:simitfsimulation}, ${2:pim_fastenerspec})"
    },
    {
      "trigger": "SetFaultMonActiveFlag\tDELSimFaultMonitor,Boolean,Integer",
      "contents": "SetFaultMonActiveFlag(${1:delsimfaultmonitor}, ${2:bool}, ${3:int})"
    },
    {
      "trigger": "SetFeature\tManufacturingActivity,Feature,ProductOccurrence",
      "contents": "SetFeature(${1:manufacturingactivity}, ${2:feat}, ${3:productoccurrence})"
    },
    {
      "trigger": "SetFeedRateMode\tMachineInstruction,Integer",
      "contents": "SetFeedRateMode(${1:machineinstruction}, ${2:int})"
    },
    {
      "trigger": "SetFeedRateValues\tMachineInstruction,Real,Real",
      "contents": "SetFeedRateValues(${1:machineinstruction}, ${2:real}, ${3:real})"
    },
    {
      "trigger": "SetFilter\tPLMInterferenceGroup,Feature,SIMItfSimulation",
      "contents": "SetFilter(${1:plminterferencegroup}, ${2:feat}, ${3:simitfsimulation})"
    },
    {
      "trigger": "SetFilter\tSIMItfSimulation,Feature",
      "contents": "SetFilter(${1:simitfsimulation}, ${2:feat})"
    },
    {
      "trigger": "SetFindNumber\tVPMInstance,String",
      "contents": "SetFindNumber(${1:vpminstance}, ${2:name})"
    },
    {
      "trigger": "SetFinishingFSConfig\tManufacturingActivity,String,String,String",
      "contents": "SetFinishingFSConfig(${1:manufacturingactivity}, ${2:name}, ${3:name}, ${4:name})"
    },
    {
      "trigger": "SetFirstSurface\tSddProfile,Feature,Feature,Feature",
      "contents": "SetFirstSurface(${1:sddprofile}, ${2:feat}, ${3:feat}, ${4:feat})"
    },
    {
      "trigger": "SetFirstSurface\tSldProfile,Feature",
      "contents": "SetFirstSurface(${1:sldprofile}, ${2:feat})"
    },
    {
      "trigger": "SetFlangeAnchorPointOffset\tAGTConnector,LENGTH",
      "contents": "SetFlangeAnchorPointOffset(${1:agtconnector}, ${2:len})"
    },
    {
      "trigger": "SetFlangeEndLimit\tSddFlange,Feature",
      "contents": "SetFlangeEndLimit(${1:sddflange}, ${2:feat})"
    },
    {
      "trigger": "SetFlangeExtrusionMode\tSddOpening,Integer",
      "contents": "SetFlangeExtrusionMode(${1:sddopening}, ${2:int})"
    },
    {
      "trigger": "SetFlangeLimits\tSldFlange,Feature,Feature",
      "contents": "SetFlangeLimits(${1:sldflange}, ${2:feat}, ${3:feat})"
    },
    {
      "trigger": "SetFlangeOrientation\tSddProfile,Integer",
      "contents": "SetFlangeOrientation(${1:sddprofile}, ${2:int})"
    },
    {
      "trigger": "SetFlangeStartLimit\tSddFlange,Feature",
      "contents": "SetFlangeStartLimit(${1:sddflange}, ${2:feat})"
    },
    {
      "trigger": "SetFloorColor\tLiveArchiCovering,String",
      "contents": "SetFloorColor(${1:livearchicovering}, ${2:name})"
    },
    {
      "trigger": "SetFloorMaterial\tLiveArchiCovering,String",
      "contents": "SetFloorMaterial(${1:livearchicovering}, ${2:name})"
    },
    {
      "trigger": "SetFloorThickness\tLiveArchiCovering,LENGTH",
      "contents": "SetFloorThickness(${1:livearchicovering}, ${2:len})"
    },
    {
      "trigger": "SetFlowItems\tFFS_ProductFlow,List",
      "contents": "SetFlowItems(${1:ffs_productflow}, ${2:list})"
    },
    {
      "trigger": "SetFlowModeOut\tFFS_Resource,String",
      "contents": "SetFlowModeOut(${1:ffs_resource}, ${2:name})"
    },
    {
      "trigger": "SetFocus\tCATKwdDialog,CATKwdControl",
      "contents": "SetFocus(${1:catkwddialog}, ${2:catkwdcontrol})"
    },
    {
      "trigger": "SetFolderNamingSpace\tInteger",
      "contents": "SetFolderNamingSpace(${1:int})"
    },
    {
      "trigger": "SetFollowerSpacing\tFFS_TrainBehavior,Real",
      "contents": "SetFollowerSpacing(${1:ffs_trainbehavior}, ${2:real})"
    },
    {
      "trigger": "SetFollowerSpacingMode\tFFS_TrainBehavior,Boolean",
      "contents": "SetFollowerSpacingMode(${1:ffs_trainbehavior}, ${2:bool})"
    },
    {
      "trigger": "SetFormingMode\tSddOpening,Integer",
      "contents": "SetFormingMode(${1:sddopening}, ${2:int})"
    },
    {
      "trigger": "SetFrequency\tFFS_TransportRouteGroup,Integer",
      "contents": "SetFrequency(${1:ffs_transportroutegroup}, ${2:int})"
    },
    {
      "trigger": "SetFrom\tElec3DCable,ProductOccurrence,Elec3DCavity",
      "contents": "SetFrom(${1:elec3dcable}, ${2:productoccurrence}, ${3:elec3dcavity})"
    },
    {
      "trigger": "SetFromTo\tConductor,ProductOccurrence,ElecPort,ProductOccurrence,ElecPort",
      "contents": "SetFromTo(${1:conductor}, ${2:productoccurrence}, ${3:elecport}, ${4:productoccurrence}, ${5:elecport})"
    },
    {
      "trigger": "SetGage\tProductOccurrence,Boolean,String,Real",
      "contents": "SetGage(${1:productoccurrence}, ${2:bool}, ${3:name}, ${4:real})"
    },
    {
      "trigger": "SetGauge\tElecCableRawMaterialCore,String",
      "contents": "SetGauge(${1:eleccablerawmaterialcore}, ${2:name})"
    },
    {
      "trigger": "SetGaugeInsertDefinitionsInInsertHolder\tMfgBaseTool,List",
      "contents": "SetGaugeInsertDefinitionsInInsertHolder(${1:mfgbasetool}, ${2:list})"
    },
    {
      "trigger": "SetGeometricalComponentName\tCATTPSAllAnnotations,Integer,String,Boolean",
      "contents": "SetGeometricalComponentName(${1:cattpsallannotations}, ${2:int}, ${3:name}, ${4:bool})"
    },
    {
      "trigger": "SetGlobalClearanceValue\tPLMSimulationOptionsMgr,Real",
      "contents": "SetGlobalClearanceValue(${1:plmsimulationoptionsmgr}, ${2:real})"
    },
    {
      "trigger": "SetGlobalProfile\tSys3DPathwayBranch,CATEbm_ReferenceProfileTypeEnum,CATEbm_ReferenceProfile",
      "contents": "SetGlobalProfile(${1:sys3dpathwaybranch}, ${2:catebm_referenceprofiletypeenum}, ${3:catebm_referenceprofile})"
    },
    {
      "trigger": "SetGlobalSlack\tHVAC_Flexible_Duct,LENGTH",
      "contents": "SetGlobalSlack(${1:hvac_flexible_duct}, ${2:len})"
    },
    {
      "trigger": "SetGroupComputationType\tSIMItfSimulation,PIM_GroupComputationType",
      "contents": "SetGroupComputationType(${1:simitfsimulation}, ${2:pim_groupcomputationtype})"
    },
    {
      "trigger": "SetGroupSequence\tFFS_Resource,List",
      "contents": "SetGroupSequence(${1:ffs_resource}, ${2:list})"
    },
    {
      "trigger": "SetGroupingRule\tCATDistribute,String",
      "contents": "SetGroupingRule(${1:catdistribute}, ${2:name})"
    },
    {
      "trigger": "SetGunStatus\tDNBSpotProfile,Integer,Boolean",
      "contents": "SetGunStatus(${1:dnbspotprofile}, ${2:int}, ${3:bool})"
    },
    {
      "trigger": "SetGunTipCloseDirection\tDNBSpotProfile,Integer,Boolean",
      "contents": "SetGunTipCloseDirection(${1:dnbspotprofile}, ${2:int}, ${3:bool})"
    },
    {
      "trigger": "SetGunTipDirectionalClrValues\tPLMSimulationOptionsMgr,List",
      "contents": "SetGunTipDirectionalClrValues(${1:plmsimulationoptionsmgr}, ${2:list})"
    },
    {
      "trigger": "SetHeight\tAGTDraughtStop,LENGTH",
      "contents": "SetHeight(${1:agtdraughtstop}, ${2:len})"
    },
    {
      "trigger": "SetHomePositionValues\tRscHomePositionMgr,RscMotionGroup,String,List",
      "contents": "SetHomePositionValues(${1:rschomepositionmgr}, ${2:rscmotiongroup}, ${3:name}, ${4:list})"
    },
    {
      "trigger": "SetHomeTarget\tDNBRobotMotion,String",
      "contents": "SetHomeTarget(${1:dnbrobotmotion}, ${2:name})"
    },
    {
      "trigger": "SetIICInGaugeInsertDef\tToolDevice,MfgInsertDefinition,String,Integer,Boolean",
      "contents": "SetIICInGaugeInsertDef(${1:tooldevice}, ${2:mfginsertdefinition}, ${3:name}, ${4:int}, ${5:bool})"
    },
    {
      "trigger": "SetIOSignalCommandUnit\tRscControlLogicMgr,Integer,String",
      "contents": "SetIOSignalCommandUnit(${1:rsccontrollogicmgr}, ${2:int}, ${3:name})"
    },
    {
      "trigger": "SetImplLinkUsage\tMfgProductionPlanning,String",
      "contents": "SetImplLinkUsage(${1:mfgproductionplanning}, ${2:name})"
    },
    {
      "trigger": "SetImplicitFilteringMode\tProdSystemOccurrence,DELImplicitFilteringMode",
      "contents": "SetImplicitFilteringMode(${1:prodsystemoccurrence}, ${2:delimplicitfilteringmode})"
    },
    {
      "trigger": "SetImplicitFilteringOverload\tProdSystemOccurrence,DELImplicitFilteringOverload",
      "contents": "SetImplicitFilteringOverload(${1:prodsystemoccurrence}, ${2:delimplicitfilteringoverload})"
    },
    {
      "trigger": "SetInactive\tMfgMacroElementaryMotion",
      "contents": "SetInactive(${1:mfgmacroelementarymotion})"
    },
    {
      "trigger": "SetInactiveMacro\tMfgMacroMotions",
      "contents": "SetInactiveMacro(${1:mfgmacromotions})"
    },
    {
      "trigger": "SetInertia\tRscToolProfile,List",
      "contents": "SetInertia(${1:rsctoolprofile}, ${2:list})"
    },
    {
      "trigger": "SetInitialLoop\tFFS_TransportRouteGroup,Boolean",
      "contents": "SetInitialLoop(${1:ffs_transportroutegroup}, ${2:bool})"
    },
    {
      "trigger": "SetInputArgument\tDialogCommandInvocation,String,ObjectType",
      "contents": "SetInputArgument(${1:dialogcommandinvocation}, ${2:name}, ${3:objecttype})"
    },
    {
      "trigger": "SetInputExternalProductOnly\tFFS_Activity,FFS_Item,Boolean",
      "contents": "SetInputExternalProductOnly(${1:ffs_activity}, ${2:ffs_item}, ${3:bool})"
    },
    {
      "trigger": "SetInputProductQuantity\tFFS_Activity,FFS_Item,Integer",
      "contents": "SetInputProductQuantity(${1:ffs_activity}, ${2:ffs_item}, ${3:int})"
    },
    {
      "trigger": "SetInputProductZone\tFFS_GenericActivity,FFS_Item,FFS_ProductZone",
      "contents": "SetInputProductZone(${1:ffs_genericactivity}, ${2:ffs_item}, ${3:ffs_productzone})"
    },
    {
      "trigger": "SetInputs\tSldAdvConnection,List",
      "contents": "SetInputs(${1:sldadvconnection}, ${2:list})"
    },
    {
      "trigger": "SetInterferenceClearanceValue\tRobInterferenceZoneMgr,Real",
      "contents": "SetInterferenceClearanceValue(${1:robinterferencezonemgr}, ${2:real})"
    },
    {
      "trigger": "SetInterferencePairIncludedFlag\tRobInterferencePair,Boolean",
      "contents": "SetInterferencePairIncludedFlag(${1:robinterferencepair}, ${2:bool})"
    },
    {
      "trigger": "SetInterferenceResourceIncludedFlag\tRobInterferenceZoneMgr,ResourceOccurrence,Boolean",
      "contents": "SetInterferenceResourceIncludedFlag(${1:robinterferencezonemgr}, ${2:resourceoccurrence}, ${3:bool})"
    },
    {
      "trigger": "SetInterferenceRscClearancesFlag\tRobInterferenceZoneMgr,Boolean",
      "contents": "SetInterferenceRscClearancesFlag(${1:robinterferencezonemgr}, ${2:bool})"
    },
    {
      "trigger": "SetInterferenceSimulationStepSize\tRobInterferenceZoneMgr,Real",
      "contents": "SetInterferenceSimulationStepSize(${1:robinterferencezonemgr}, ${2:real})"
    },
    {
      "trigger": "SetInterferenceTaskFilter\tRobInterferenceZoneMgr,String,String,String",
      "contents": "SetInterferenceTaskFilter(${1:robinterferencezonemgr}, ${2:name}, ${3:name}, ${4:name})"
    },
    {
      "trigger": "SetInterferenceTaskIncludedFlag\tRobInterferenceZoneMgr,DNBResourceTask,Boolean",
      "contents": "SetInterferenceTaskIncludedFlag(${1:robinterferencezonemgr}, ${2:dnbresourcetask}, ${3:bool})"
    },
    {
      "trigger": "SetIntermediateRepresentation\tSIMItfSimulation,PIM_IntermediateRepresentation",
      "contents": "SetIntermediateRepresentation(${1:simitfsimulation}, ${2:pim_intermediaterepresentation})"
    },
    {
      "trigger": "SetInterpolationMode\tDNBRobotMotion,Integer",
      "contents": "SetInterpolationMode(${1:dnbrobotmotion}, ${2:int})"
    },
    {
      "trigger": "SetInvertAxis\tVerticalSignageMarker,Boolean",
      "contents": "SetInvertAxis(${1:verticalsignagemarker}, ${2:bool})"
    },
    {
      "trigger": "SetInvertDirection\tVerticalSignageMarker,Boolean",
      "contents": "SetInvertDirection(${1:verticalsignagemarker}, ${2:bool})"
    },
    {
      "trigger": "SetInvertMD\tMLPObject,Boolean",
      "contents": "SetInvertMD(${1:mlpobject}, ${2:bool})"
    },
    {
      "trigger": "SetIsComputed\tMustBeMadeFrom,Boolean",
      "contents": "SetIsComputed(${1:mustbemadefrom}, ${2:bool})"
    },
    {
      "trigger": "SetIsReservedOnCapableRsc\tPLMConnection,Boolean",
      "contents": "SetIsReservedOnCapableRsc(${1:plmconnection}, ${2:bool})"
    },
    {
      "trigger": "SetItem\tList,ObjectType,Integer",
      "contents": "SetItem(${1:list}, ${2:objecttype}, ${3:int})"
    },
    {
      "trigger": "SetItemsAssociatedWithDCPRow\tPLMSpecifyHowToCollectDataCnx,List",
      "contents": "SetItemsAssociatedWithDCPRow(${1:plmspecifyhowtocollectdatacnx}, ${2:list})"
    },
    {
      "trigger": "SetItemsAssociatedWithInstruction\tProdSystemOccurrence,List",
      "contents": "SetItemsAssociatedWithInstruction(${1:prodsystemoccurrence}, ${2:list})"
    },
    {
      "trigger": "SetItemsResourcesPointedByDressup\tPLMOperation,Feature,List",
      "contents": "SetItemsResourcesPointedByDressup(${1:plmoperation}, ${2:feat}, ${3:list})"
    },
    {
      "trigger": "SetJointNumber\tDNBSpotProfile,Integer,Integer",
      "contents": "SetJointNumber(${1:dnbspotprofile}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "SetJointTarget\tDNBRobotMotion,List",
      "contents": "SetJointTarget(${1:dnbrobotmotion}, ${2:list})"
    },
    {
      "trigger": "SetLatOffset\tVerticalSignageMarker,LENGTH",
      "contents": "SetLatOffset(${1:verticalsignagemarker}, ${2:len})"
    },
    {
      "trigger": "SetLatPosition\tVerticalSignageMarker,VerticalSignageLateralPosition",
      "contents": "SetLatPosition(${1:verticalsignagemarker}, ${2:verticalsignagelateralposition})"
    },
    {
      "trigger": "SetLayerAxisSystemRotation\tMLPObject,Integer",
      "contents": "SetLayerAxisSystemRotation(${1:mlpobject}, ${2:int})"
    },
    {
      "trigger": "SetLength\tBranch,LENGTH",
      "contents": "SetLength(${1:branch}, ${2:len})"
    },
    {
      "trigger": "SetLengthCoeff\tElecCableRawMaterialCore,Real",
      "contents": "SetLengthCoeff(${1:eleccablerawmaterialcore}, ${2:real})"
    },
    {
      "trigger": "SetLimit1Limit2OfLimitLimitScallop\tSddScallop,Feature,Feature",
      "contents": "SetLimit1Limit2OfLimitLimitScallop(${1:sddscallop}, ${2:feat}, ${3:feat})"
    },
    {
      "trigger": "SetLimitKey\tSddPanel,Integer,String",
      "contents": "SetLimitKey(${1:sddpanel}, ${2:int}, ${3:name})"
    },
    {
      "trigger": "SetLimitMode\tSddOpening,Integer",
      "contents": "SetLimitMode(${1:sddopening}, ${2:int})"
    },
    {
      "trigger": "SetLimitOfLimitOffsetScallop\tSddScallop,Feature",
      "contents": "SetLimitOfLimitOffsetScallop(${1:sddscallop}, ${2:feat})"
    },
    {
      "trigger": "SetLimitOrientation\tSddPanel,Integer,Integer",
      "contents": "SetLimitOrientation(${1:sddpanel}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "SetLimitType\tSddProfile,Integer,Integer",
      "contents": "SetLimitType(${1:sddprofile}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "SetLimitingObject\tSddPanel,Feature,Integer,Integer,Integer,String,Feature,Feature",
      "contents": "SetLimitingObject(${1:sddpanel}, ${2:feat}, ${3:int}, ${4:int}, ${5:int}, ${6:name}, ${7:feat}, ${8:feat})"
    },
    {
      "trigger": "SetLimitingObject\tSddProfile,Integer,Feature,Feature,Feature",
      "contents": "SetLimitingObject(${1:sddprofile}, ${2:int}, ${3:feat}, ${4:feat}, ${5:feat})"
    },
    {
      "trigger": "SetLimitingObject\tSldPanel,Feature,Feature,Feature,String,Integer",
      "contents": "SetLimitingObject(${1:sldpanel}, ${2:feat}, ${3:feat}, ${4:feat}, ${5:name}, ${6:int})"
    },
    {
      "trigger": "SetLimitingObject\tSldProfile,Integer,Feature",
      "contents": "SetLimitingObject(${1:sldprofile}, ${2:int}, ${3:feat})"
    },
    {
      "trigger": "SetLimitingObjectWithDetailMode\tSddPanel,Feature,Integer,Integer,Integer,String,Feature,Feature,Integer",
      "contents": "SetLimitingObjectWithDetailMode(${1:sddpanel}, ${2:feat}, ${3:int}, ${4:int}, ${5:int}, ${6:name}, ${7:feat}, ${8:feat}, ${9:int})"
    },
    {
      "trigger": "SetLimitingObjects\tSldProfile,Feature,Feature",
      "contents": "SetLimitingObjects(${1:sldprofile}, ${2:feat}, ${3:feat})"
    },
    {
      "trigger": "SetLimits\tSddStiffenerOnFreeEdge,List,Feature,Feature",
      "contents": "SetLimits(${1:sddstiffeneronfreeedge}, ${2:list}, ${3:feat}, ${4:feat})"
    },
    {
      "trigger": "SetLimits\tSddStiffenerOnFreeEdge,List,List,List,Feature,Feature",
      "contents": "SetLimits(${1:sddstiffeneronfreeedge}, ${2:list}, ${3:list}, ${4:list}, ${5:feat}, ${6:feat})"
    },
    {
      "trigger": "SetLimits\tSldStiffenerOnFreeEdge,List",
      "contents": "SetLimits(${1:sldstiffeneronfreeedge}, ${2:list})"
    },
    {
      "trigger": "SetLine\tMatrix,Integer,Vector",
      "contents": "SetLine(${1:matrix}, ${2:int}, ${3:vector})"
    },
    {
      "trigger": "SetLinearMass\tElecCableRawMaterialCore,LINEMASS",
      "contents": "SetLinearMass(${1:eleccablerawmaterialcore}, ${2:linemass})"
    },
    {
      "trigger": "SetLocalBendRadius\tSys3DPathwayBranch,CATEbm_ControlPoint,LENGTH",
      "contents": "SetLocalBendRadius(${1:sys3dpathwaybranch}, ${2:catebm_controlpoint}, ${3:len})"
    },
    {
      "trigger": "SetLocalFeedrateStatus\tMfgPtToPtSite,Boolean",
      "contents": "SetLocalFeedrateStatus(${1:mfgpttoptsite}, ${2:bool})"
    },
    {
      "trigger": "SetLocalMAS\tManufacturingActivity,MfgMachiningAxisSystem",
      "contents": "SetLocalMAS(${1:manufacturingactivity}, ${2:mfgmachiningaxissystem})"
    },
    {
      "trigger": "SetLocalModificationState\tProductOccurrence,String,Boolean",
      "contents": "SetLocalModificationState(${1:productoccurrence}, ${2:name}, ${3:bool})"
    },
    {
      "trigger": "SetLocalPlaneElement\tLatheFeature,MfgMachiningAxisSystem,Integer",
      "contents": "SetLocalPlaneElement(${1:lathefeature}, ${2:mfgmachiningaxissystem}, ${3:int})"
    },
    {
      "trigger": "SetLocalProfile\tSys3DPathwayBranch,CATEbm_BranchPoint,Sys3DPathwaySegment,CATEbm_ReferenceProfileTypeEnum,CATEbm_NodeProfile,Boolean",
      "contents": "SetLocalProfile(${1:sys3dpathwaybranch}, ${2:catebm_branchpoint}, ${3:sys3dpathwaysegment}, ${4:catebm_referenceprofiletypeenum}, ${5:catebm_nodeprofile}, ${6:bool})"
    },
    {
      "trigger": "SetLocalProfile\tSys3DPathwayBranch,CATEbm_ControlPoint,CATEbm_ReferenceProfileTypeEnum,CATEbm_NodeProfile,CATEbm_ReferenceProfile",
      "contents": "SetLocalProfile(${1:sys3dpathwaybranch}, ${2:catebm_controlpoint}, ${3:catebm_referenceprofiletypeenum}, ${4:catebm_nodeprofile}, ${5:catebm_referenceprofile})"
    },
    {
      "trigger": "SetLocalSliceMode\tHVAC_Flexible_Duct,Integer,CATEbm_SlackAndLengthModeEnum",
      "contents": "SetLocalSliceMode(${1:hvac_flexible_duct}, ${2:int}, ${3:catebm_slackandlengthmodeenum})"
    },
    {
      "trigger": "SetLocalSliceValue\tHVAC_Flexible_Duct,Integer,LENGTH",
      "contents": "SetLocalSliceValue(${1:hvac_flexible_duct}, ${2:int}, ${3:len})"
    },
    {
      "trigger": "SetLockStatus\tDNBTag,List",
      "contents": "SetLockStatus(${1:dnbtag}, ${2:list})"
    },
    {
      "trigger": "SetLocked\tDNBTag,Boolean",
      "contents": "SetLocked(${1:dnbtag}, ${2:bool})"
    },
    {
      "trigger": "SetLogicalRoutingAttributes\tRFLVPMLogicalConnection,String,Real,String,String",
      "contents": "SetLogicalRoutingAttributes(${1:rflvpmlogicalconnection}, ${2:name}, ${3:real}, ${4:name}, ${5:name})"
    },
    {
      "trigger": "SetLongOffset\tVerticalSignageMarker,LENGTH",
      "contents": "SetLongOffset(${1:verticalsignagemarker}, ${2:len})"
    },
    {
      "trigger": "SetLongnormalTimeDistribution\tFFS_Activity,Real,Real",
      "contents": "SetLongnormalTimeDistribution(${1:ffs_activity}, ${2:real}, ${3:real})"
    },
    {
      "trigger": "SetLoopDuration\tFFS_TransportRouteGroup,Real",
      "contents": "SetLoopDuration(${1:ffs_transportroutegroup}, ${2:real})"
    },
    {
      "trigger": "SetMTO\tAGTDraughtStop,AGTMTO",
      "contents": "SetMTO(${1:agtdraughtstop}, ${2:agtmto})"
    },
    {
      "trigger": "SetMachinableFeature\tManufacturingFeature,MfgMachinableAreaFeature",
      "contents": "SetMachinableFeature(${1:manufacturingfeature}, ${2:mfgmachinableareafeature})"
    },
    {
      "trigger": "SetMachiningAxisSystem\tManufacturingSetup,MfgMachiningAxisSystem",
      "contents": "SetMachiningAxisSystem(${1:manufacturingsetup}, ${2:mfgmachiningaxissystem})"
    },
    {
      "trigger": "SetMachiningFSConfig\tManufacturingActivity,String,String,String",
      "contents": "SetMachiningFSConfig(${1:manufacturingactivity}, ${2:name}, ${3:name}, ${4:name})"
    },
    {
      "trigger": "SetMass\tRscToolProfile,Real",
      "contents": "SetMass(${1:rsctoolprofile}, ${2:real})"
    },
    {
      "trigger": "SetMaterial\tAGTConnector,String",
      "contents": "SetMaterial(${1:agtconnector}, ${2:name})"
    },
    {
      "trigger": "SetMaterialCore\tVPMReference,String,CATMatReference,CATMatConnection",
      "contents": "SetMaterialCore(${1:vpmreference}, ${2:name}, ${3:catmatreference}, ${4:catmatconnection})"
    },
    {
      "trigger": "SetMaterialCovering\tVPMReference,String,CATMatReference,CATMatConnection",
      "contents": "SetMaterialCovering(${1:vpmreference}, ${2:name}, ${3:catmatreference}, ${4:catmatconnection})"
    },
    {
      "trigger": "SetMfgItemPosition\tPLMOperation,MfgProcessOccurrence,List",
      "contents": "SetMfgItemPosition(${1:plmoperation}, ${2:mfgprocessoccurrence}, ${3:list})"
    },
    {
      "trigger": "SetMfgItemsResourcesColor\tPLMOperation,List,Integer,Integer,Integer,Integer",
      "contents": "SetMfgItemsResourcesColor(${1:plmoperation}, ${2:list}, ${3:int}, ${4:int}, ${5:int}, ${6:int})"
    },
    {
      "trigger": "SetMfgItemsResourcesVisibility\tPLMOperation,List,Boolean",
      "contents": "SetMfgItemsResourcesVisibility(${1:plmoperation}, ${2:list}, ${3:bool})"
    },
    {
      "trigger": "SetMfgScenarioAsCurrent\tDELMfgSimScenario",
      "contents": "SetMfgScenarioAsCurrent(${1:delmfgsimscenario})"
    },
    {
      "trigger": "SetMidDistOffsetPosStratParms\tSldOpening,Feature,Feature,Feature,String,String,String",
      "contents": "SetMidDistOffsetPosStratParms(${1:sldopening}, ${2:feat}, ${3:feat}, ${4:feat}, ${5:name}, ${6:name}, ${7:name})"
    },
    {
      "trigger": "SetMinimumBendRadius\tHVAC_Flexible_Duct,LENGTH",
      "contents": "SetMinimumBendRadius(${1:hvac_flexible_duct}, ${2:len})"
    },
    {
      "trigger": "SetMinimunStraightLength\tHVAC_Rigid_Duct,LENGTH",
      "contents": "SetMinimunStraightLength(${1:hvac_rigid_duct}, ${2:len})"
    },
    {
      "trigger": "SetMode\tMfgDirection,String",
      "contents": "SetMode(${1:mfgdirection}, ${2:name})"
    },
    {
      "trigger": "SetMotionBasis\tRscMotionProfile,RscMotionBasisType",
      "contents": "SetMotionBasis(${1:rscmotionprofile}, ${2:rscmotionbasistype})"
    },
    {
      "trigger": "SetMotionPlane\tMfgMacroElementaryMotion,Visualizable,ProductOccurrence",
      "contents": "SetMotionPlane(${1:mfgmacroelementarymotion}, ${2:visualizable}, ${3:productoccurrence})"
    },
    {
      "trigger": "SetMotionPoint\tMfgMacroElementaryMotion,Visualizable,ProductOccurrence",
      "contents": "SetMotionPoint(${1:mfgmacroelementarymotion}, ${2:visualizable}, ${3:productoccurrence})"
    },
    {
      "trigger": "SetMotionProfile\tDNBRobotMotion,Feature",
      "contents": "SetMotionProfile(${1:dnbrobotmotion}, ${2:feat})"
    },
    {
      "trigger": "SetMotionTimeValue\tRscMotionProfile,Real",
      "contents": "SetMotionTimeValue(${1:rscmotionprofile}, ${2:real})"
    },
    {
      "trigger": "SetMotionType\tDNBRobotMotion,Integer",
      "contents": "SetMotionType(${1:dnbrobotmotion}, ${2:int})"
    },
    {
      "trigger": "SetMoveAccelerationProfile\tDNBSpotProfile,DNBSpotAccuracyProfileAndAccelMoves,Feature,String",
      "contents": "SetMoveAccelerationProfile(${1:dnbspotprofile}, ${2:dnbspotaccuracyprofileandaccelmoves}, ${3:feat}, ${4:name})"
    },
    {
      "trigger": "SetMovingTipClearance\tDNBSpotProfile,Integer,DNBSpotMovingTipClearanceMoves,Real",
      "contents": "SetMovingTipClearance(${1:dnbspotprofile}, ${2:int}, ${3:dnbspotmovingtipclearancemoves}, ${4:real})"
    },
    {
      "trigger": "SetMovingTipClearanceProfile\tDNBSpotProfile,Integer,DNBSpotMovingTipClearanceMoves,Feature,String",
      "contents": "SetMovingTipClearanceProfile(${1:dnbspotprofile}, ${2:int}, ${3:dnbspotmovingtipclearancemoves}, ${4:feat}, ${5:name})"
    },
    {
      "trigger": "SetNCOutputParameters\tMfgMachiningAxisSystem,Boolean,Integer,Integer",
      "contents": "SetNCOutputParameters(${1:mfgmachiningaxissystem}, ${2:bool}, ${3:int}, ${4:int})"
    },
    {
      "trigger": "SetName\tAGTConnector,String",
      "contents": "SetName(${1:agtconnector}, ${2:name})"
    },
    {
      "trigger": "SetName\tDNBTag,String,String,String",
      "contents": "SetName(${1:dnbtag}, ${2:name}, ${3:name}, ${4:name})"
    },
    {
      "trigger": "SetNameSensitivity\tCATDistribute,Real",
      "contents": "SetNameSensitivity(${1:catdistribute}, ${2:real})"
    },
    {
      "trigger": "SetNewReference\tHVAC_Flexible_Duct_Inst,VPMReference",
      "contents": "SetNewReference(${1:hvac_flexible_duct_inst}, ${2:vpmreference})"
    },
    {
      "trigger": "SetNodeBendRadius\tHVAC_Rigid_Duct,Integer,LENGTH",
      "contents": "SetNodeBendRadius(${1:hvac_rigid_duct}, ${2:int}, ${3:len})"
    },
    {
      "trigger": "SetNominalPower\tLogicalOccurrence,Real",
      "contents": "SetNominalPower(${1:logicaloccurrence}, ${2:real})"
    },
    {
      "trigger": "SetNormalTimeDistribution\tFFS_Activity,Real,Real",
      "contents": "SetNormalTimeDistribution(${1:ffs_activity}, ${2:real}, ${3:real})"
    },
    {
      "trigger": "SetNumberOfAxialPlanes\tMfgSequentialAxialOperation,Integer",
      "contents": "SetNumberOfAxialPlanes(${1:mfgsequentialaxialoperation}, ${2:int})"
    },
    {
      "trigger": "SetOAT\tRscTransform,Real,Real,Real",
      "contents": "SetOAT(${1:rsctransform}, ${2:real}, ${3:real}, ${4:real})"
    },
    {
      "trigger": "SetObjectProfile\tDNBRobotMotion,Feature",
      "contents": "SetObjectProfile(${1:dnbrobotmotion}, ${2:feat})"
    },
    {
      "trigger": "SetOccurrences\tPLMInterferenceGroup,List",
      "contents": "SetOccurrences(${1:plminterferencegroup}, ${2:list})"
    },
    {
      "trigger": "SetOffset\tAGTConnector,AGTProfileExtremity,LENGTH",
      "contents": "SetOffset(${1:agtconnector}, ${2:agtprofileextremity}, ${3:len})"
    },
    {
      "trigger": "SetOffsetMode\tSddPanel,Integer",
      "contents": "SetOffsetMode(${1:sddpanel}, ${2:int})"
    },
    {
      "trigger": "SetOffsetOffsetPosStratParms\tSldOpening,Feature,Feature,String,String,String,String",
      "contents": "SetOffsetOffsetPosStratParms(${1:sldopening}, ${2:feat}, ${3:feat}, ${4:name}, ${5:name}, ${6:name}, ${7:name})"
    },
    {
      "trigger": "SetOffsetTargetMode\tRscObjFrameProfile,Boolean",
      "contents": "SetOffsetTargetMode(${1:rscobjframeprofile}, ${2:bool})"
    },
    {
      "trigger": "SetOlpPositionComment\tDNBRobotMotion,String",
      "contents": "SetOlpPositionComment(${1:dnbrobotmotion}, ${2:name})"
    },
    {
      "trigger": "SetOlpPositionName\tDNBRobotMotion,String",
      "contents": "SetOlpPositionName(${1:dnbrobotmotion}, ${2:name})"
    },
    {
      "trigger": "SetOlpPositionNumber\tDNBRobotMotion,String",
      "contents": "SetOlpPositionNumber(${1:dnbrobotmotion}, ${2:name})"
    },
    {
      "trigger": "SetOlpPositionType\tDNBRobotMotion,String",
      "contents": "SetOlpPositionType(${1:dnbrobotmotion}, ${2:name})"
    },
    {
      "trigger": "SetOpacity\tHVAC_Flexible_Duct,Integer",
      "contents": "SetOpacity(${1:hvac_flexible_duct}, ${2:int})"
    },
    {
      "trigger": "SetOpening\tSddStiffenerOnFreeEdge,Feature",
      "contents": "SetOpening(${1:sddstiffeneronfreeedge}, ${2:feat})"
    },
    {
      "trigger": "SetOpening\tSddStiffenerOnFreeEdge,Feature,Feature,Feature",
      "contents": "SetOpening(${1:sddstiffeneronfreeedge}, ${2:feat}, ${3:feat}, ${4:feat})"
    },
    {
      "trigger": "SetOpeningAxisSystem\tSddOpening,Feature",
      "contents": "SetOpeningAxisSystem(${1:sddopening}, ${2:feat})"
    },
    {
      "trigger": "SetOpeningAxisSystem\tSldOpening,Feature,Feature,Feature",
      "contents": "SetOpeningAxisSystem(${1:sldopening}, ${2:feat}, ${3:feat}, ${4:feat})"
    },
    {
      "trigger": "SetOpeningDirection\tSddOpening,Feature",
      "contents": "SetOpeningDirection(${1:sddopening}, ${2:feat})"
    },
    {
      "trigger": "SetOpeningType\tSddOpening,Integer",
      "contents": "SetOpeningType(${1:sddopening}, ${2:int})"
    },
    {
      "trigger": "SetOperationBetaTimeDistribution\tPLMOperation,Real,Real,Real,Real,String",
      "contents": "SetOperationBetaTimeDistribution(${1:plmoperation}, ${2:real}, ${3:real}, ${4:real}, ${5:real}, ${6:name})"
    },
    {
      "trigger": "SetOperationErlangTimeDistribution\tPLMOperation,Real,Real,String",
      "contents": "SetOperationErlangTimeDistribution(${1:plmoperation}, ${2:real}, ${3:real}, ${4:name})"
    },
    {
      "trigger": "SetOperationExponentialTimeDistribution\tPLMOperation,Real,String",
      "contents": "SetOperationExponentialTimeDistribution(${1:plmoperation}, ${2:real}, ${3:name})"
    },
    {
      "trigger": "SetOperationGammaTimeDistribution\tPLMOperation,Real,Real,String",
      "contents": "SetOperationGammaTimeDistribution(${1:plmoperation}, ${2:real}, ${3:real}, ${4:name})"
    },
    {
      "trigger": "SetOperationLognormalTimeDistribution\tPLMOperation,Real,Real,String",
      "contents": "SetOperationLognormalTimeDistribution(${1:plmoperation}, ${2:real}, ${3:real}, ${4:name})"
    },
    {
      "trigger": "SetOperationNormalTimeDistribution\tPLMOperation,Real,Real,String",
      "contents": "SetOperationNormalTimeDistribution(${1:plmoperation}, ${2:real}, ${3:real}, ${4:name})"
    },
    {
      "trigger": "SetOperationTriangularTimeDistribution\tPLMOperation,Real,Real,Real,String",
      "contents": "SetOperationTriangularTimeDistribution(${1:plmoperation}, ${2:real}, ${3:real}, ${4:real}, ${5:name})"
    },
    {
      "trigger": "SetOperationUniformTimeDistribution\tPLMOperation,Real,Real,String",
      "contents": "SetOperationUniformTimeDistribution(${1:plmoperation}, ${2:real}, ${3:real}, ${4:name})"
    },
    {
      "trigger": "SetOperationWeibullTimeDistribution\tPLMOperation,Real,Real,String",
      "contents": "SetOperationWeibullTimeDistribution(${1:plmoperation}, ${2:real}, ${3:real}, ${4:name})"
    },
    {
      "trigger": "SetOptimizationPathJointLocation\tRscOptimizationPathTarget,List",
      "contents": "SetOptimizationPathJointLocation(${1:rscoptimizationpathtarget}, ${2:list})"
    },
    {
      "trigger": "SetOptimizationPathTargetConfig\tRscOptimizationPathTarget,Integer",
      "contents": "SetOptimizationPathTargetConfig(${1:rscoptimizationpathtarget}, ${2:int})"
    },
    {
      "trigger": "SetOptimizationPathTargetLocation\tRscOptimizationPathTarget,RscTransform,Integer",
      "contents": "SetOptimizationPathTargetLocation(${1:rscoptimizationpathtarget}, ${2:rsctransform}, ${3:int})"
    },
    {
      "trigger": "SetOptimizationPathTargetTurns\tRscOptimizationPathTarget,Integer,Integer",
      "contents": "SetOptimizationPathTargetTurns(${1:rscoptimizationpathtarget}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "SetOptimizationPathTargetType\tRscOptimizationPathTarget,Integer",
      "contents": "SetOptimizationPathTargetType(${1:rscoptimizationpathtarget}, ${2:int})"
    },
    {
      "trigger": "SetOrigin\tMfgMachiningAxisSystem,Visualizable,ProductOccurrence",
      "contents": "SetOrigin(${1:mfgmachiningaxissystem}, ${2:visualizable}, ${3:productoccurrence})"
    },
    {
      "trigger": "SetOriginPoint\tMfgMachiningAxisSystem,Real,Real,Real",
      "contents": "SetOriginPoint(${1:mfgmachiningaxissystem}, ${2:real}, ${3:real}, ${4:real})"
    },
    {
      "trigger": "SetOtherSupportPlates\tSddStiffener,List,List,Feature",
      "contents": "SetOtherSupportPlates(${1:sddstiffener}, ${2:list}, ${3:list}, ${4:feat})"
    },
    {
      "trigger": "SetOutputArgument\tDialogCommandInvocation,String,ObjectType",
      "contents": "SetOutputArgument(${1:dialogcommandinvocation}, ${2:name}, ${3:objecttype})"
    },
    {
      "trigger": "SetOutputExternalProductOnly\tFFS_Activity,FFS_Item,Boolean",
      "contents": "SetOutputExternalProductOnly(${1:ffs_activity}, ${2:ffs_item}, ${3:bool})"
    },
    {
      "trigger": "SetOutputProductQuantity\tFFS_Activity,FFS_Item,Integer",
      "contents": "SetOutputProductQuantity(${1:ffs_activity}, ${2:ffs_item}, ${3:int})"
    },
    {
      "trigger": "SetOutputProductZone\tFFS_GenericActivity,FFS_Item,FFS_ProductZone",
      "contents": "SetOutputProductZone(${1:ffs_genericactivity}, ${2:ffs_item}, ${3:ffs_productzone})"
    },
    {
      "trigger": "SetOutputProfile\tSddOpening,Feature",
      "contents": "SetOutputProfile(${1:sddopening}, ${2:feat})"
    },
    {
      "trigger": "SetOutputProfile\tSldOpening,Feature,Feature,Feature",
      "contents": "SetOutputProfile(${1:sldopening}, ${2:feat}, ${3:feat}, ${4:feat})"
    },
    {
      "trigger": "SetOutsideDiameter\tElecCableRawMaterialCore,LENGTH",
      "contents": "SetOutsideDiameter(${1:eleccablerawmaterialcore}, ${2:len})"
    },
    {
      "trigger": "SetOverlapQuantityAttribute\tDELLmiTimeConstraintCnx,Real",
      "contents": "SetOverlapQuantityAttribute(${1:dellmitimeconstraintcnx}, ${2:real})"
    },
    {
      "trigger": "SetOverlapQuantityExt\tDELLmiTimeConstraintCnx,String",
      "contents": "SetOverlapQuantityExt(${1:dellmitimeconstraintcnx}, ${2:name})"
    },
    {
      "trigger": "SetOverlapQuantityExtension\tDELLmiTimeConstraintCnx,Integer",
      "contents": "SetOverlapQuantityExtension(${1:dellmitimeconstraintcnx}, ${2:int})"
    },
    {
      "trigger": "SetOverload\tDELFmiProcessOutputPrereqMaterializationCnx,String",
      "contents": "SetOverload(${1:delfmiprocessoutputprereqmaterializationcnx}, ${2:name})"
    },
    {
      "trigger": "SetOwningSlab\tAGTRampBody,Feature",
      "contents": "SetOwningSlab(${1:agtrampbody}, ${2:feat})"
    },
    {
      "trigger": "SetOwningStory\tAGTDraughtStop,Feature",
      "contents": "SetOwningStory(${1:agtdraughtstop}, ${2:feat})"
    },
    {
      "trigger": "SetPanelLimitType\tSddPanel,Integer,Integer",
      "contents": "SetPanelLimitType(${1:sddpanel}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "SetParametersInGaugeInsertDef\tToolDevice,MfgInsertDefinition,String,Integer,Real,Real,Real,Boolean",
      "contents": "SetParametersInGaugeInsertDef(${1:tooldevice}, ${2:mfginsertdefinition}, ${3:name}, ${4:int}, ${5:real}, ${6:real}, ${7:real}, ${8:bool})"
    },
    {
      "trigger": "SetParametricSection\tSddProfile,String,String,String",
      "contents": "SetParametricSection(${1:sddprofile}, ${2:name}, ${3:name}, ${4:name})"
    },
    {
      "trigger": "SetPartRelativePosition\tDNBFitTrack,ProductOccurrence,List",
      "contents": "SetPartRelativePosition(${1:dnbfittrack}, ${2:productoccurrence}, ${3:list})"
    },
    {
      "trigger": "SetPartThicknessProfile\tDNBSpotProfile,Feature,String",
      "contents": "SetPartThicknessProfile(${1:dnbspotprofile}, ${2:feat}, ${3:name})"
    },
    {
      "trigger": "SetPartToCheck\tGeometryCheckOpe,PartFeature",
      "contents": "SetPartToCheck(${1:geometrycheckope}, ${2:partfeature})"
    },
    {
      "trigger": "SetPath\tConductor,List",
      "contents": "SetPath(${1:conductor}, ${2:list})"
    },
    {
      "trigger": "SetPathObjectToOptimize\tRscPathPlanner,Feature",
      "contents": "SetPathObjectToOptimize(${1:rscpathplanner}, ${2:feat})"
    },
    {
      "trigger": "SetPathPlannerAccuracyProfile\tRscPathPlanner,String",
      "contents": "SetPathPlannerAccuracyProfile(${1:rscpathplanner}, ${2:name})"
    },
    {
      "trigger": "SetPathPlannerDOFCautionZoneCheck\tRscPathPlanner,Boolean",
      "contents": "SetPathPlannerDOFCautionZoneCheck(${1:rscpathplanner}, ${2:bool})"
    },
    {
      "trigger": "SetPathPlannerDOFCautionZoneValue\tRscPathPlanner,Integer,Real",
      "contents": "SetPathPlannerDOFCautionZoneValue(${1:rscpathplanner}, ${2:int}, ${3:real})"
    },
    {
      "trigger": "SetPathPlannerDOFLimitsTypeCheck\tRscPathPlanner,Integer",
      "contents": "SetPathPlannerDOFLimitsTypeCheck(${1:rscpathplanner}, ${2:int})"
    },
    {
      "trigger": "SetPathPlannerDOFLimitsValues\tRscPathPlanner,Integer,Integer,Real,Real",
      "contents": "SetPathPlannerDOFLimitsValues(${1:rscpathplanner}, ${2:int}, ${3:int}, ${4:real}, ${5:real})"
    },
    {
      "trigger": "SetPathPlannerDOFOptimizationActivation\tRscPathPlanner,String,Boolean",
      "contents": "SetPathPlannerDOFOptimizationActivation(${1:rscpathplanner}, ${2:name}, ${3:bool})"
    },
    {
      "trigger": "SetPathPlannerDynamicRotationLimits\tRscPathPlanner,Boolean",
      "contents": "SetPathPlannerDynamicRotationLimits(${1:rscpathplanner}, ${2:bool})"
    },
    {
      "trigger": "SetPathPlannerGlobalClearance\tRscPathPlanner,Real",
      "contents": "SetPathPlannerGlobalClearance(${1:rscpathplanner}, ${2:real})"
    },
    {
      "trigger": "SetPathPlannerGuidingPathRadius\tRscPathPlanner,Real",
      "contents": "SetPathPlannerGuidingPathRadius(${1:rscpathplanner}, ${2:real})"
    },
    {
      "trigger": "SetPathPlannerGuidingPathUsage\tRscPathPlanner,Boolean",
      "contents": "SetPathPlannerGuidingPathUsage(${1:rscpathplanner}, ${2:bool})"
    },
    {
      "trigger": "SetPathPlannerJointInterpolationMode\tRscPathPlanner,Integer",
      "contents": "SetPathPlannerJointInterpolationMode(${1:rscpathplanner}, ${2:int})"
    },
    {
      "trigger": "SetPathPlannerMotionProfile\tRscPathPlanner,String",
      "contents": "SetPathPlannerMotionProfile(${1:rscpathplanner}, ${2:name})"
    },
    {
      "trigger": "SetPathPlannerMotionType\tRscPathPlanner,Integer",
      "contents": "SetPathPlannerMotionType(${1:rscpathplanner}, ${2:int})"
    },
    {
      "trigger": "SetPathPlannerReferenceTask\tRscPathPlanner,DNBResourceTask",
      "contents": "SetPathPlannerReferenceTask(${1:rscpathplanner}, ${2:dnbresourcetask})"
    },
    {
      "trigger": "SetPathPlannerRscMultiClearance\tRscPathPlanner,Boolean",
      "contents": "SetPathPlannerRscMultiClearance(${1:rscpathplanner}, ${2:bool})"
    },
    {
      "trigger": "SetPathPlannerSafetyZoneUsage\tRscPathPlanner,Boolean",
      "contents": "SetPathPlannerSafetyZoneUsage(${1:rscpathplanner}, ${2:bool})"
    },
    {
      "trigger": "SetPathPlannerSearchOptionPositionRange\tRscPathPlanner,List",
      "contents": "SetPathPlannerSearchOptionPositionRange(${1:rscpathplanner}, ${2:list})"
    },
    {
      "trigger": "SetPathPlannerSearchOptionRotationRange\tRscPathPlanner,List",
      "contents": "SetPathPlannerSearchOptionRotationRange(${1:rscpathplanner}, ${2:list})"
    },
    {
      "trigger": "SetPathPlannerSolutionOptimizationOptionActivation\tRscPathPlanner,String,Boolean",
      "contents": "SetPathPlannerSolutionOptimizationOptionActivation(${1:rscpathplanner}, ${2:name}, ${3:bool})"
    },
    {
      "trigger": "SetPathPlannerSolutionOptimizationOptionValue\tRscPathPlanner,String,Real",
      "contents": "SetPathPlannerSolutionOptimizationOptionValue(${1:rscpathplanner}, ${2:name}, ${3:real})"
    },
    {
      "trigger": "SetPathPlannerSolverMaxSolutions\tRscPathPlanner,Integer",
      "contents": "SetPathPlannerSolverMaxSolutions(${1:rscpathplanner}, ${2:int})"
    },
    {
      "trigger": "SetPathPlannerSolverSamplingDistance\tRscPathPlanner,Real",
      "contents": "SetPathPlannerSolverSamplingDistance(${1:rscpathplanner}, ${2:real})"
    },
    {
      "trigger": "SetPathPlannerSolverSegmentTimeOut\tRscPathPlanner,Real",
      "contents": "SetPathPlannerSolverSegmentTimeOut(${1:rscpathplanner}, ${2:real})"
    },
    {
      "trigger": "SetPathPlannerViaPointPrefix\tRscPathPlanner,Integer,String,Integer",
      "contents": "SetPathPlannerViaPointPrefix(${1:rscpathplanner}, ${2:int}, ${3:name}, ${4:int})"
    },
    {
      "trigger": "SetPathPlannerViaPointType\tRscPathPlanner,Integer",
      "contents": "SetPathPlannerViaPointType(${1:rscpathplanner}, ${2:int})"
    },
    {
      "trigger": "SetPathwayDirectionBidirectional\tProductOccurrence",
      "contents": "SetPathwayDirectionBidirectional(${1:productoccurrence})"
    },
    {
      "trigger": "SetPathwayDirectionUnidirectional\tProductOccurrence",
      "contents": "SetPathwayDirectionUnidirectional(${1:productoccurrence})"
    },
    {
      "trigger": "SetPathwaySpec\tSIMItfSimulation,Boolean",
      "contents": "SetPathwaySpec(${1:simitfsimulation}, ${2:bool})"
    },
    {
      "trigger": "SetPatternUsage\tManufacturingActivity,MfgPatternUsage",
      "contents": "SetPatternUsage(${1:manufacturingactivity}, ${2:mfgpatternusage})"
    },
    {
      "trigger": "SetPcsPrototypeParamValue\tMfgProcessOccurrence,String,Real",
      "contents": "SetPcsPrototypeParamValue(${1:mfgprocessoccurrence}, ${2:name}, ${3:real})"
    },
    {
      "trigger": "SetPenetratingCompositeProfile\tSddOpening,Feature,Feature",
      "contents": "SetPenetratingCompositeProfile(${1:sddopening}, ${2:feat}, ${3:feat})"
    },
    {
      "trigger": "SetPenetratingCompositeProfile\tSldSlot,Feature,Feature,Feature,Feature,Feature",
      "contents": "SetPenetratingCompositeProfile(${1:sldslot}, ${2:feat}, ${3:feat}, ${4:feat}, ${5:feat}, ${6:feat})"
    },
    {
      "trigger": "SetPenetratingProfile\tSddOpening,Feature",
      "contents": "SetPenetratingProfile(${1:sddopening}, ${2:feat})"
    },
    {
      "trigger": "SetPenetratingProfile\tSldSlot,Feature,Feature,Feature",
      "contents": "SetPenetratingProfile(${1:sldslot}, ${2:feat}, ${3:feat}, ${4:feat})"
    },
    {
      "trigger": "SetPhysicalRoutingAttributes\tRFLVPMLogicalConnection,String,Real,String,String",
      "contents": "SetPhysicalRoutingAttributes(${1:rflvpmlogicalconnection}, ${2:name}, ${3:real}, ${4:name}, ${5:name})"
    },
    {
      "trigger": "SetPictureToFormula\tDELTimeAnalysisRepInstance,Integer,String",
      "contents": "SetPictureToFormula(${1:deltimeanalysisrepinstance}, ${2:int}, ${3:name})"
    },
    {
      "trigger": "SetPlanningMotionType\tRscMultiRobotPathPlanner,Integer",
      "contents": "SetPlanningMotionType(${1:rscmultirobotpathplanner}, ${2:int})"
    },
    {
      "trigger": "SetPoint\tVerticalSignageMarker,AECAlignmentPoint",
      "contents": "SetPoint(${1:verticalsignagemarker}, ${2:aecalignmentpoint})"
    },
    {
      "trigger": "SetPointCloudRepositoryPath\tDELPointCloudElement,String",
      "contents": "SetPointCloudRepositoryPath(${1:delpointcloudelement}, ${2:name})"
    },
    {
      "trigger": "SetPointCoordinates\tMfgPtToPtSite,Real,Real,Real",
      "contents": "SetPointCoordinates(${1:mfgpttoptsite}, ${2:real}, ${3:real}, ${4:real})"
    },
    {
      "trigger": "SetPointLocalFeed\tMfgPtToPtSite,Real,Boolean",
      "contents": "SetPointLocalFeed(${1:mfgpttoptsite}, ${2:real}, ${3:bool})"
    },
    {
      "trigger": "SetPointProfile\tDELPointOperation,DNBSpotProfile",
      "contents": "SetPointProfile(${1:delpointoperation}, ${2:dnbspotprofile})"
    },
    {
      "trigger": "SetPortAttributeReal\tHVAC_Port,String,Real",
      "contents": "SetPortAttributeReal(${1:hvac_port}, ${2:name}, ${3:real})"
    },
    {
      "trigger": "SetPortAttributeString\tHVAC_Port,String,String",
      "contents": "SetPortAttributeString(${1:hvac_port}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "SetPortToAxisInProduct\tToolDevice,VPMReference,String,String",
      "contents": "SetPortToAxisInProduct(${1:tooldevice}, ${2:vpmreference}, ${3:name}, ${4:name})"
    },
    {
      "trigger": "SetPosStrategyName\tSddOpening,String",
      "contents": "SetPosStrategyName(${1:sddopening}, ${2:name})"
    },
    {
      "trigger": "SetPosition\tAgtRefComponentInstance,Point",
      "contents": "SetPosition(${1:agtrefcomponentinstance}, ${2:point})"
    },
    {
      "trigger": "SetPositionCurrentPrimaryResource\tProdSystemOccurrence,ResourceOccurrence",
      "contents": "SetPositionCurrentPrimaryResource(${1:prodsystemoccurrence}, ${2:resourceoccurrence})"
    },
    {
      "trigger": "SetPositionRelativeToParentResource\tFFS_ProductZone,Matrix",
      "contents": "SetPositionRelativeToParentResource(${1:ffs_productzone}, ${2:matrix})"
    },
    {
      "trigger": "SetPositioningStrategy\tSddOpening,String",
      "contents": "SetPositioningStrategy(${1:sddopening}, ${2:name})"
    },
    {
      "trigger": "SetPreferredCandidateRscLink\tPLMCoreReference,ResourceOccurrence,CandidateResourceLink,Integer",
      "contents": "SetPreferredCandidateRscLink(${1:plmcorereference}, ${2:resourceoccurrence}, ${3:candidateresourcelink}, ${4:int})"
    },
    {
      "trigger": "SetPreferredPrimaryCapableRscLink\tDELAsmProcessCanUseCnx",
      "contents": "SetPreferredPrimaryCapableRscLink(${1:delasmprocesscanusecnx})"
    },
    {
      "trigger": "SetPressureMovePushDepth\tDNBSpotProfile,Integer,Real",
      "contents": "SetPressureMovePushDepth(${1:dnbspotprofile}, ${2:int}, ${3:real})"
    },
    {
      "trigger": "SetPressureMovePushDepthProfile\tDNBSpotProfile,Integer,Feature,String",
      "contents": "SetPressureMovePushDepthProfile(${1:dnbspotprofile}, ${2:int}, ${3:feat}, ${4:name})"
    },
    {
      "trigger": "SetPressureSpeedFactor\tDNBSpotProfile,Integer,Real",
      "contents": "SetPressureSpeedFactor(${1:dnbspotprofile}, ${2:int}, ${3:real})"
    },
    {
      "trigger": "SetPressureSpeedFactorProfile\tDNBSpotProfile,Integer,Feature,String",
      "contents": "SetPressureSpeedFactorProfile(${1:dnbspotprofile}, ${2:int}, ${3:feat}, ${4:name})"
    },
    {
      "trigger": "SetPriority\tString,Integer",
      "contents": "SetPriority(${1:name}, ${2:int})"
    },
    {
      "trigger": "SetProbingPointCompensation\tMfgProbingMultiPoints,Integer,String",
      "contents": "SetProbingPointCompensation(${1:mfgprobingmultipoints}, ${2:int}, ${3:name})"
    },
    {
      "trigger": "SetProcessOutput\tMfgProcessOccurrence,PLMCoreReference",
      "contents": "SetProcessOutput(${1:mfgprocessoccurrence}, ${2:plmcorereference})"
    },
    {
      "trigger": "SetProcessPrecedence\tMfgProcessOccurrence,MfgProcessOccurrence",
      "contents": "SetProcessPrecedence(${1:mfgprocessoccurrence}, ${2:mfgprocessoccurrence})"
    },
    {
      "trigger": "SetProductPriority\tFFS_ProductFlow,FFS_Item,Integer",
      "contents": "SetProductPriority(${1:ffs_productflow}, ${2:ffs_item}, ${3:int})"
    },
    {
      "trigger": "SetProductQualityStatus\tFFS_ProductFlow,FFS_Item,String",
      "contents": "SetProductQualityStatus(${1:ffs_productflow}, ${2:ffs_item}, ${3:name})"
    },
    {
      "trigger": "SetProductZonePostion\tFFS_ProductZone,Matrix",
      "contents": "SetProductZonePostion(${1:ffs_productzone}, ${2:matrix})"
    },
    {
      "trigger": "SetProfile\tSegment,ElecProfile",
      "contents": "SetProfile(${1:segment}, ${2:elecprofile})"
    },
    {
      "trigger": "SetProfile\tSys3DPathwaySegment,CATEbm_ReferenceProfileTypeEnum,CATEbm_ReferenceProfile",
      "contents": "SetProfile(${1:sys3dpathwaysegment}, ${2:catebm_referenceprofiletypeenum}, ${3:catebm_referenceprofile})"
    },
    {
      "trigger": "SetProfileAttributeValueBoolean\tRscApplicativeProfile,String,Boolean",
      "contents": "SetProfileAttributeValueBoolean(${1:rscapplicativeprofile}, ${2:name}, ${3:bool})"
    },
    {
      "trigger": "SetProfileAttributeValueDouble\tRscApplicativeProfile,String,Real",
      "contents": "SetProfileAttributeValueDouble(${1:rscapplicativeprofile}, ${2:name}, ${3:real})"
    },
    {
      "trigger": "SetProfileAttributeValueInteger\tRscApplicativeProfile,String,Integer",
      "contents": "SetProfileAttributeValueInteger(${1:rscapplicativeprofile}, ${2:name}, ${3:int})"
    },
    {
      "trigger": "SetProfileAttributeValueString\tRscApplicativeProfile,String,String",
      "contents": "SetProfileAttributeValueString(${1:rscapplicativeprofile}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "SetProfileGroupDisplayID\tRscApplicativeProfileGroup,String",
      "contents": "SetProfileGroupDisplayID(${1:rscapplicativeprofilegroup}, ${2:name})"
    },
    {
      "trigger": "SetProjectionReferential\tDNBTagMeasure,Integer,List",
      "contents": "SetProjectionReferential(${1:dnbtagmeasure}, ${2:int}, ${3:list})"
    },
    {
      "trigger": "SetQuaternions\tRscTransform,Real,Real,Real,Real",
      "contents": "SetQuaternions(${1:rsctransform}, ${2:real}, ${3:real}, ${4:real}, ${5:real})"
    },
    {
      "trigger": "SetQueuingMode\tFFS_Resource,String",
      "contents": "SetQueuingMode(${1:ffs_resource}, ${2:name})"
    },
    {
      "trigger": "SetRPY\tRscTransform,Real,Real,Real",
      "contents": "SetRPY(${1:rsctransform}, ${2:real}, ${3:real}, ${4:real})"
    },
    {
      "trigger": "SetRRS1ControllerBackupDir\tRRSConnectionParameters,String",
      "contents": "SetRRS1ControllerBackupDir(${1:rrsconnectionparameters}, ${2:name})"
    },
    {
      "trigger": "SetRRS1DebugFile\tRRSConnectionParameters,String",
      "contents": "SetRRS1DebugFile(${1:rrsconnectionparameters}, ${2:name})"
    },
    {
      "trigger": "SetRRS1Manipulator\tRRSConnectionParameters,String",
      "contents": "SetRRS1Manipulator(${1:rrsconnectionparameters}, ${2:name})"
    },
    {
      "trigger": "SetRRS1RCSControllerVersion\tRRSConnectionParameters,String",
      "contents": "SetRRS1RCSControllerVersion(${1:rrsconnectionparameters}, ${2:name})"
    },
    {
      "trigger": "SetRRS1RCSDataHomeDir\tRRSConnectionParameters,String",
      "contents": "SetRRS1RCSDataHomeDir(${1:rrsconnectionparameters}, ${2:name})"
    },
    {
      "trigger": "SetRRS1RCSSWVersion\tRRSConnectionParameters,String",
      "contents": "SetRRS1RCSSWVersion(${1:rrsconnectionparameters}, ${2:name})"
    },
    {
      "trigger": "SetRRS1RCSSpotEmulation\tRRSConnectionParameters,Boolean",
      "contents": "SetRRS1RCSSpotEmulation(${1:rrsconnectionparameters}, ${2:bool})"
    },
    {
      "trigger": "SetRRS1RCSTriggerEmulation\tRRSConnectionParameters,Boolean",
      "contents": "SetRRS1RCSTriggerEmulation(${1:rrsconnectionparameters}, ${2:bool})"
    },
    {
      "trigger": "SetRRS1RCSVersion\tRRSConnectionParameters,String",
      "contents": "SetRRS1RCSVersion(${1:rrsconnectionparameters}, ${2:name})"
    },
    {
      "trigger": "SetRRS1RelativeRobotPath\tRRSConnectionParameters,String",
      "contents": "SetRRS1RelativeRobotPath(${1:rrsconnectionparameters}, ${2:name})"
    },
    {
      "trigger": "SetRRS1RobotNumber\tRRSConnectionParameters,String",
      "contents": "SetRRS1RobotNumber(${1:rrsconnectionparameters}, ${2:name})"
    },
    {
      "trigger": "SetRRS1SamplePeriod\tRRSConnectionParameters,String",
      "contents": "SetRRS1SamplePeriod(${1:rrsconnectionparameters}, ${2:name})"
    },
    {
      "trigger": "SetRRS2ControllerConfig\tRRSConnectionParameters,String",
      "contents": "SetRRS2ControllerConfig(${1:rrsconnectionparameters}, ${2:name})"
    },
    {
      "trigger": "SetRRS2ControllerSWVersion\tRRSConnectionParameters,String",
      "contents": "SetRRS2ControllerSWVersion(${1:rrsconnectionparameters}, ${2:name})"
    },
    {
      "trigger": "SetRRS2FileSystemArchive\tRRSConnectionParameters,String",
      "contents": "SetRRS2FileSystemArchive(${1:rrsconnectionparameters}, ${2:name})"
    },
    {
      "trigger": "SetRRS2SamplePeriod\tRRSConnectionParameters,String",
      "contents": "SetRRS2SamplePeriod(${1:rrsconnectionparameters}, ${2:name})"
    },
    {
      "trigger": "SetRRS2TriggerOutputLine\tRRSConnectionParameters,String",
      "contents": "SetRRS2TriggerOutputLine(${1:rrsconnectionparameters}, ${2:name})"
    },
    {
      "trigger": "SetRRS2UserLanguage\tRRSConnectionParameters,String",
      "contents": "SetRRS2UserLanguage(${1:rrsconnectionparameters}, ${2:name})"
    },
    {
      "trigger": "SetRRS2VRCInstDebugFile\tRRSConnectionParameters,String",
      "contents": "SetRRS2VRCInstDebugFile(${1:rrsconnectionparameters}, ${2:name})"
    },
    {
      "trigger": "SetRRS2VRCMgrDebugFile\tRRSConnectionParameters,String",
      "contents": "SetRRS2VRCMgrDebugFile(${1:rrsconnectionparameters}, ${2:name})"
    },
    {
      "trigger": "SetRRS2VRCProgramName\tRRSConnectionParameters,String",
      "contents": "SetRRS2VRCProgramName(${1:rrsconnectionparameters}, ${2:name})"
    },
    {
      "trigger": "SetRRS2VRCProgramPath\tRRSConnectionParameters,String",
      "contents": "SetRRS2VRCProgramPath(${1:rrsconnectionparameters}, ${2:name})"
    },
    {
      "trigger": "SetRRSControlledMotionGroup\tRRSConnectionParameters,String",
      "contents": "SetRRSControlledMotionGroup(${1:rrsconnectionparameters}, ${2:name})"
    },
    {
      "trigger": "SetRRSControlledMotionGroups\tRRSConnectionParameters,List",
      "contents": "SetRRSControlledMotionGroups(${1:rrsconnectionparameters}, ${2:list})"
    },
    {
      "trigger": "SetRRSServerName\tRRSConnectionParameters,String",
      "contents": "SetRRSServerName(${1:rrsconnectionparameters}, ${2:name})"
    },
    {
      "trigger": "SetRRSShlibVersion\tRRSConnectionParameters,String",
      "contents": "SetRRSShlibVersion(${1:rrsconnectionparameters}, ${2:name})"
    },
    {
      "trigger": "SetReference\tSddProfile,Feature",
      "contents": "SetReference(${1:sddprofile}, ${2:feat})"
    },
    {
      "trigger": "SetReference\tSldProfile,Feature,Feature,Feature",
      "contents": "SetReference(${1:sldprofile}, ${2:feat}, ${3:feat}, ${4:feat})"
    },
    {
      "trigger": "SetReferenceLine\tSys3DPathwayBranch,Sys3D_PathwayGeometryOccurrence,CATEbm_NodeProfile,ProductOccurrence,Feature",
      "contents": "SetReferenceLine(${1:sys3dpathwaybranch}, ${2:sys3d_pathwaygeometryoccurrence}, ${3:catebm_nodeprofile}, ${4:productoccurrence}, ${5:feat})"
    },
    {
      "trigger": "SetReferenceName\tMustBeMadeFrom,String",
      "contents": "SetReferenceName(${1:mustbemadefrom}, ${2:name})"
    },
    {
      "trigger": "SetReferenceOfLimitOffsetScallop\tSddScallop,Feature",
      "contents": "SetReferenceOfLimitOffsetScallop(${1:sddscallop}, ${2:feat})"
    },
    {
      "trigger": "SetReferenceOfLimitOffsetScallop\tSddScallop,Feature,Feature,Feature",
      "contents": "SetReferenceOfLimitOffsetScallop(${1:sddscallop}, ${2:feat}, ${3:feat}, ${4:feat})"
    },
    {
      "trigger": "SetReferencePoint\tSddOpening,Boolean",
      "contents": "SetReferencePoint(${1:sddopening}, ${2:bool})"
    },
    {
      "trigger": "SetReferentialPositionInfoForRsc\tPLMConnection,PLMConnection,ProdSystemOccurrence,String,ResourceOccurrence",
      "contents": "SetReferentialPositionInfoForRsc(${1:plmconnection}, ${2:plmconnection}, ${3:prodsystemoccurrence}, ${4:name}, ${5:resourceoccurrence})"
    },
    {
      "trigger": "SetRelatedOffset\tRscObjFrameProfile,RscTransform,RscPositionReferenceType,ProductOccurrence",
      "contents": "SetRelatedOffset(${1:rscobjframeprofile}, ${2:rsctransform}, ${3:rscpositionreferencetype}, ${4:productoccurrence})"
    },
    {
      "trigger": "SetRelatedTool\tRscToolProfile,ProductOccurrence",
      "contents": "SetRelatedTool(${1:rsctoolprofile}, ${2:productoccurrence})"
    },
    {
      "trigger": "SetRelativePosition\tPLMConnection,List",
      "contents": "SetRelativePosition(${1:plmconnection}, ${2:list})"
    },
    {
      "trigger": "SetRelativePositionForManufacturedItems\tProdSystemOccurrence,List,List",
      "contents": "SetRelativePositionForManufacturedItems(${1:prodsystemoccurrence}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "SetRenderingEffect\tDELPointCloudRepReference,DELPC_RenderingEffect",
      "contents": "SetRenderingEffect(${1:delpointcloudrepreference}, ${2:delpc_renderingeffect})"
    },
    {
      "trigger": "SetRepetitionMode\tSddOpening,Boolean",
      "contents": "SetRepetitionMode(${1:sddopening}, ${2:bool})"
    },
    {
      "trigger": "SetReplacingComponent\tTemplateInstance,Feature,Feature",
      "contents": "SetReplacingComponent(${1:templateinstance}, ${2:feat}, ${3:feat})"
    },
    {
      "trigger": "SetReservationColor\tLiveArchiCeiling,String",
      "contents": "SetReservationColor(${1:livearchiceiling}, ${2:name})"
    },
    {
      "trigger": "SetReservationHeight\tLiveArchiCeiling,LENGTH",
      "contents": "SetReservationHeight(${1:livearchiceiling}, ${2:len})"
    },
    {
      "trigger": "SetReserveWorkerNonPreemptible\tFFS_DestinationProperties,Boolean",
      "contents": "SetReserveWorkerNonPreemptible(${1:ffs_destinationproperties}, ${2:bool})"
    },
    {
      "trigger": "SetResourceAttribute\tFFS_SimScenario,FFS_Resource,String,Real",
      "contents": "SetResourceAttribute(${1:ffs_simscenario}, ${2:ffs_resource}, ${3:name}, ${4:real})"
    },
    {
      "trigger": "SetResourceAttributeValue\tProductOccurrence,Boolean,String,Literal",
      "contents": "SetResourceAttributeValue(${1:productoccurrence}, ${2:bool}, ${3:name}, ${4:literal})"
    },
    {
      "trigger": "SetResourcePosition\tPLMConnection,List",
      "contents": "SetResourcePosition(${1:plmconnection}, ${2:list})"
    },
    {
      "trigger": "SetResourcePosition\tPLMOperation,ProductOccurrence,List",
      "contents": "SetResourcePosition(${1:plmoperation}, ${2:productoccurrence}, ${3:list})"
    },
    {
      "trigger": "SetResourceUserDefinedName\tFFS_Resource,String",
      "contents": "SetResourceUserDefinedName(${1:ffs_resource}, ${2:name})"
    },
    {
      "trigger": "SetResourcesQuantity\tPLMConnection,Real",
      "contents": "SetResourcesQuantity(${1:plmconnection}, ${2:real})"
    },
    {
      "trigger": "SetResponsibilityRelationTarget\tDELMfgResponsibilityCnx,Organization",
      "contents": "SetResponsibilityRelationTarget(${1:delmfgresponsibilitycnx}, ${2:organization})"
    },
    {
      "trigger": "SetResultingProductForFilter\tMfgProcessOccurrence,VPMReference,Product Configuration",
      "contents": "SetResultingProductForFilter(${1:mfgprocessoccurrence}, ${2:vpmreference}, ${3:product configuration})"
    },
    {
      "trigger": "SetRobDRAccuracyProfile\tRobDrillRivetProfile,ProfileMoves,Feature",
      "contents": "SetRobDRAccuracyProfile(${1:robdrillrivetprofile}, ${2:profilemoves}, ${3:feat})"
    },
    {
      "trigger": "SetRobDRActionAuxiliaryAxisValues\tRobDrillRivetAction,Feature,List",
      "contents": "SetRobDRActionAuxiliaryAxisValues(${1:robdrillrivetaction}, ${2:feat}, ${3:list})"
    },
    {
      "trigger": "SetRobDRActionDrillRivetProfile\tRobDrillRivetAction,Feature",
      "contents": "SetRobDRActionDrillRivetProfile(${1:robdrillrivetaction}, ${2:feat})"
    },
    {
      "trigger": "SetRobDRActionObjectProfile\tRobDrillRivetAction,Feature",
      "contents": "SetRobDRActionObjectProfile(${1:robdrillrivetaction}, ${2:feat})"
    },
    {
      "trigger": "SetRobDRActionPositionCoords\tRobDrillRivetAction,List",
      "contents": "SetRobDRActionPositionCoords(${1:robdrillrivetaction}, ${2:list})"
    },
    {
      "trigger": "SetRobDRActionToolProfile\tRobDrillRivetAction,Feature",
      "contents": "SetRobDRActionToolProfile(${1:robdrillrivetaction}, ${2:feat})"
    },
    {
      "trigger": "SetRobDRActionTurnNumbers\tRobDrillRivetAction,List,RobDrillRivetSequence,Integer",
      "contents": "SetRobDRActionTurnNumbers(${1:robdrillrivetaction}, ${2:list}, ${3:robdrillrivetsequence}, ${4:int})"
    },
    {
      "trigger": "SetRobDRActionTurnSigns\tRobDrillRivetAction,List",
      "contents": "SetRobDRActionTurnSigns(${1:robdrillrivetaction}, ${2:list})"
    },
    {
      "trigger": "SetRobDRActionUserProfilesList\tRobDrillRivetAction,List",
      "contents": "SetRobDRActionUserProfilesList(${1:robdrillrivetaction}, ${2:list})"
    },
    {
      "trigger": "SetRobDRApproachClearanceParameter\tRobDrillRivetProfile,String,Feature",
      "contents": "SetRobDRApproachClearanceParameter(${1:robdrillrivetprofile}, ${2:name}, ${3:feat})"
    },
    {
      "trigger": "SetRobDRCycleAccuracyProfile\tRobDrillRivetProfile,ProfileCycles,Feature",
      "contents": "SetRobDRCycleAccuracyProfile(${1:robdrillrivetprofile}, ${2:profilecycles}, ${3:feat})"
    },
    {
      "trigger": "SetRobDRCycleDepth\tRobDrillRivetProfile,ProfileCycles,Real",
      "contents": "SetRobDRCycleDepth(${1:robdrillrivetprofile}, ${2:profilecycles}, ${3:real})"
    },
    {
      "trigger": "SetRobDRCycleDepthParameter\tRobDrillRivetProfile,ProfileCycles,String,Feature",
      "contents": "SetRobDRCycleDepthParameter(${1:robdrillrivetprofile}, ${2:profilecycles}, ${3:name}, ${4:feat})"
    },
    {
      "trigger": "SetRobDRCycleDistance\tRobDrillRivetProfile,ProfileCycles,Real",
      "contents": "SetRobDRCycleDistance(${1:robdrillrivetprofile}, ${2:profilecycles}, ${3:real})"
    },
    {
      "trigger": "SetRobDRCycleDistanceParameter\tRobDrillRivetProfile,ProfileCycles,String,Feature",
      "contents": "SetRobDRCycleDistanceParameter(${1:robdrillrivetprofile}, ${2:profilecycles}, ${3:name}, ${4:feat})"
    },
    {
      "trigger": "SetRobDRCycleJointDirection\tRobDrillRivetProfile,ProfileCycles,Integer",
      "contents": "SetRobDRCycleJointDirection(${1:robdrillrivetprofile}, ${2:profilecycles}, ${3:int})"
    },
    {
      "trigger": "SetRobDRCycleJointNumber\tRobDrillRivetProfile,ProfileCycles,Integer",
      "contents": "SetRobDRCycleJointNumber(${1:robdrillrivetprofile}, ${2:profilecycles}, ${3:int})"
    },
    {
      "trigger": "SetRobDRCycleMotionProfile\tRobDrillRivetProfile,ProfileCycles,Feature",
      "contents": "SetRobDRCycleMotionProfile(${1:robdrillrivetprofile}, ${2:profilecycles}, ${3:feat})"
    },
    {
      "trigger": "SetRobDRCycleName\tRobDrillRivetProfile,ProfileCycles,String",
      "contents": "SetRobDRCycleName(${1:robdrillrivetprofile}, ${2:profilecycles}, ${3:name})"
    },
    {
      "trigger": "SetRobDRCycleSimulationTime\tRobDrillRivetProfile,ProfileCycles,Real",
      "contents": "SetRobDRCycleSimulationTime(${1:robdrillrivetprofile}, ${2:profilecycles}, ${3:real})"
    },
    {
      "trigger": "SetRobDRCycleSimulationTimeParameter\tRobDrillRivetProfile,ProfileCycles,String,Feature",
      "contents": "SetRobDRCycleSimulationTimeParameter(${1:robdrillrivetprofile}, ${2:profilecycles}, ${3:name}, ${4:feat})"
    },
    {
      "trigger": "SetRobDRCycleStartJointValues\tRobDrillRivetProfile,ProfileCycles,List",
      "contents": "SetRobDRCycleStartJointValues(${1:robdrillrivetprofile}, ${2:profilecycles}, ${3:list})"
    },
    {
      "trigger": "SetRobDRCycleStatus\tRobDrillRivetProfile,ProfileCycles,Boolean",
      "contents": "SetRobDRCycleStatus(${1:robdrillrivetprofile}, ${2:profilecycles}, ${3:bool})"
    },
    {
      "trigger": "SetRobDRCycleTCPXOffset\tRobDrillRivetProfile,ProfileCycles,Real",
      "contents": "SetRobDRCycleTCPXOffset(${1:robdrillrivetprofile}, ${2:profilecycles}, ${3:real})"
    },
    {
      "trigger": "SetRobDRCycleTCPXOffsetParameter\tRobDrillRivetProfile,ProfileCycles,String,Feature",
      "contents": "SetRobDRCycleTCPXOffsetParameter(${1:robdrillrivetprofile}, ${2:profilecycles}, ${3:name}, ${4:feat})"
    },
    {
      "trigger": "SetRobDRCycleTCPYOffset\tRobDrillRivetProfile,ProfileCycles,Real",
      "contents": "SetRobDRCycleTCPYOffset(${1:robdrillrivetprofile}, ${2:profilecycles}, ${3:real})"
    },
    {
      "trigger": "SetRobDRCycleTCPYOffsetParameter\tRobDrillRivetProfile,ProfileCycles,String,Feature",
      "contents": "SetRobDRCycleTCPYOffsetParameter(${1:robdrillrivetprofile}, ${2:profilecycles}, ${3:name}, ${4:feat})"
    },
    {
      "trigger": "SetRobDRCycleTCPZOffset\tRobDrillRivetProfile,ProfileCycles,Real",
      "contents": "SetRobDRCycleTCPZOffset(${1:robdrillrivetprofile}, ${2:profilecycles}, ${3:real})"
    },
    {
      "trigger": "SetRobDRCycleTCPZOffsetParameter\tRobDrillRivetProfile,ProfileCycles,String,Feature",
      "contents": "SetRobDRCycleTCPZOffsetParameter(${1:robdrillrivetprofile}, ${2:profilecycles}, ${3:name}, ${4:feat})"
    },
    {
      "trigger": "SetRobDRCycleToolProfile\tRobDrillRivetProfile,ProfileCycles,Feature",
      "contents": "SetRobDRCycleToolProfile(${1:robdrillrivetprofile}, ${2:profilecycles}, ${3:feat})"
    },
    {
      "trigger": "SetRobDRMotionProfile\tRobDrillRivetProfile,ProfileMoves,Feature",
      "contents": "SetRobDRMotionProfile(${1:robdrillrivetprofile}, ${2:profilemoves}, ${3:feat})"
    },
    {
      "trigger": "SetRobDRMoveStatus\tRobDrillRivetProfile,ProfileMoves,Boolean",
      "contents": "SetRobDRMoveStatus(${1:robdrillrivetprofile}, ${2:profilemoves}, ${3:bool})"
    },
    {
      "trigger": "SetRobDRRetractDistanceParameter\tRobDrillRivetProfile,String,Feature",
      "contents": "SetRobDRRetractDistanceParameter(${1:robdrillrivetprofile}, ${2:name}, ${3:feat})"
    },
    {
      "trigger": "SetRobDRSeqActionPrefixName\tRobDrillRivetSequence,String",
      "contents": "SetRobDRSeqActionPrefixName(${1:robdrillrivetsequence}, ${2:name})"
    },
    {
      "trigger": "SetRobDRSeqAuxiliaryAxisValues\tRobDrillRivetAction,Integer,Feature,List",
      "contents": "SetRobDRSeqAuxiliaryAxisValues(${1:robdrillrivetaction}, ${2:int}, ${3:feat}, ${4:list})"
    },
    {
      "trigger": "SetRobDRSeqConfig\tRobDrillRivetSequence,Integer,Integer",
      "contents": "SetRobDRSeqConfig(${1:robdrillrivetsequence}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "SetRobDRSeqDrillRivetProfile\tRobDrillRivetSequence,Integer,Feature",
      "contents": "SetRobDRSeqDrillRivetProfile(${1:robdrillrivetsequence}, ${2:int}, ${3:feat})"
    },
    {
      "trigger": "SetRobDRSeqElbowAngle\tRobDrillRivetSequence,Integer,Real",
      "contents": "SetRobDRSeqElbowAngle(${1:robdrillrivetsequence}, ${2:int}, ${3:real})"
    },
    {
      "trigger": "SetRobDRSeqInterpolMode\tRobDrillRivetSequence,Integer,Integer",
      "contents": "SetRobDRSeqInterpolMode(${1:robdrillrivetsequence}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "SetRobDRSeqMotionType\tRobDrillRivetSequence,Integer,Integer",
      "contents": "SetRobDRSeqMotionType(${1:robdrillrivetsequence}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "SetRobDRSeqObjectProfile\tRobDrillRivetSequence,Integer,Feature",
      "contents": "SetRobDRSeqObjectProfile(${1:robdrillrivetsequence}, ${2:int}, ${3:feat})"
    },
    {
      "trigger": "SetRobDRSeqPositionCoord\tRobDrillRivetSequence,Integer,List",
      "contents": "SetRobDRSeqPositionCoord(${1:robdrillrivetsequence}, ${2:int}, ${3:list})"
    },
    {
      "trigger": "SetRobDRSeqTCPOrientationMode\tRobDrillRivetSequence,Integer,Integer",
      "contents": "SetRobDRSeqTCPOrientationMode(${1:robdrillrivetsequence}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "SetRobDRSeqToolProfile\tRobDrillRivetSequence,Integer,Feature",
      "contents": "SetRobDRSeqToolProfile(${1:robdrillrivetsequence}, ${2:int}, ${3:feat})"
    },
    {
      "trigger": "SetRobDRSeqTurnNumbers\tList",
      "contents": "SetRobDRSeqTurnNumbers(${1:list})"
    },
    {
      "trigger": "SetRobDRSeqTurnSigns\tRobDrillRivetSequence,Integer,List",
      "contents": "SetRobDRSeqTurnSigns(${1:robdrillrivetsequence}, ${2:int}, ${3:list})"
    },
    {
      "trigger": "SetRobDRSeqUserProfileList\tRobDrillRivetSequence,Integer,List",
      "contents": "SetRobDRSeqUserProfileList(${1:robdrillrivetsequence}, ${2:int}, ${3:list})"
    },
    {
      "trigger": "SetRobotProgramID\tDNBResourceTask,String",
      "contents": "SetRobotProgramID(${1:dnbresourcetask}, ${2:name})"
    },
    {
      "trigger": "SetRobotProgramType\tDNBResourceTask,String",
      "contents": "SetRobotProgramType(${1:dnbresourcetask}, ${2:name})"
    },
    {
      "trigger": "SetRobotSelfClrStatus\tPLMSimulationOptionsMgr,Integer",
      "contents": "SetRobotSelfClrStatus(${1:plmsimulationoptionsmgr}, ${2:int})"
    },
    {
      "trigger": "SetRobotSelfClrValue\tPLMSimulationOptionsMgr,Real",
      "contents": "SetRobotSelfClrValue(${1:plmsimulationoptionsmgr}, ${2:real})"
    },
    {
      "trigger": "SetRole\tProdSystemOccurrence,FProcessOccurrence,String",
      "contents": "SetRole(${1:prodsystemoccurrence}, ${2:fprocessoccurrence}, ${3:name})"
    },
    {
      "trigger": "SetRotationAngle\tSys3DPathwayBranch,CATEbm_NodeProfile,ANGLE",
      "contents": "SetRotationAngle(${1:sys3dpathwaybranch}, ${2:catebm_nodeprofile}, ${3:angle})"
    },
    {
      "trigger": "SetRouteAttributeReal\tHVAC_Flexible_Duct,String,Real",
      "contents": "SetRouteAttributeReal(${1:hvac_flexible_duct}, ${2:name}, ${3:real})"
    },
    {
      "trigger": "SetRouteAttributeString\tPiping_Rigid_Pipe,String,String",
      "contents": "SetRouteAttributeString(${1:piping_rigid_pipe}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "SetRouteWithFromToLevelofOptimization\tSys3D_Route,List,LogicalOccurrence",
      "contents": "SetRouteWithFromToLevelofOptimization(${1:sys3d_route}, ${2:list}, ${3:logicaloccurrence})"
    },
    {
      "trigger": "SetRouteWithSignalLevelofOptimization\tSys3D_Route,List,List,LogicalOccurrence",
      "contents": "SetRouteWithSignalLevelofOptimization(${1:sys3d_route}, ${2:list}, ${3:list}, ${4:logicaloccurrence})"
    },
    {
      "trigger": "SetRoutingAttributes\tRFLVPMLogicalConnection,String,Real,String,String",
      "contents": "SetRoutingAttributes(${1:rflvpmlogicalconnection}, ${2:name}, ${3:real}, ${4:name}, ${5:name})"
    },
    {
      "trigger": "SetRscAssignExpression\tRscLogicAssign,String",
      "contents": "SetRscAssignExpression(${1:rsclogicassign}, ${2:name})"
    },
    {
      "trigger": "SetRscAssignValue\tRscLogicAssign,String",
      "contents": "SetRscAssignValue(${1:rsclogicassign}, ${2:name})"
    },
    {
      "trigger": "SetRscAttachmentName\tRscAttachmentsMgr,PLMConnection,String",
      "contents": "SetRscAttachmentName(${1:rscattachmentsmgr}, ${2:plmconnection}, ${3:name})"
    },
    {
      "trigger": "SetRscAttachmentOffset\tRscAttachmentsMgr,PLMConnection,RscTransform",
      "contents": "SetRscAttachmentOffset(${1:rscattachmentsmgr}, ${2:plmconnection}, ${3:rsctransform})"
    },
    {
      "trigger": "SetRscClearanceStatus\tPLMSimulationOptionsMgr,PLMSimRscClrContextEnum,PLMSimRscClrComponentEnum,Integer",
      "contents": "SetRscClearanceStatus(${1:plmsimulationoptionsmgr}, ${2:plmsimrscclrcontextenum}, ${3:plmsimrscclrcomponentenum}, ${4:int})"
    },
    {
      "trigger": "SetRscClearanceValues\tPLMSimulationOptionsMgr,PLMSimRscClrContextEnum,PLMSimRscClrComponentEnum,List",
      "contents": "SetRscClearanceValues(${1:plmsimulationoptionsmgr}, ${2:plmsimrscclrcontextenum}, ${3:plmsimrscclrcomponentenum}, ${4:list})"
    },
    {
      "trigger": "SetRscClearancesFlag\tDELSimFaultMonitorMgr,Boolean",
      "contents": "SetRscClearancesFlag(${1:delsimfaultmonitormgr}, ${2:bool})"
    },
    {
      "trigger": "SetRscConditionExpression\tRscLogicCondition,String",
      "contents": "SetRscConditionExpression(${1:rsclogiccondition}, ${2:name})"
    },
    {
      "trigger": "SetRscConstantDescription\tRscModelLogicMgr,String,String",
      "contents": "SetRscConstantDescription(${1:rscmodellogicmgr}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "SetRscConstantPortNumber\tRscModelLogicMgr,String,String",
      "contents": "SetRscConstantPortNumber(${1:rscmodellogicmgr}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "SetRscConstantType\tRscModelLogicMgr,String,Integer",
      "contents": "SetRscConstantType(${1:rscmodellogicmgr}, ${2:name}, ${3:int})"
    },
    {
      "trigger": "SetRscConstantValue\tRscModelLogicMgr,String,String",
      "contents": "SetRscConstantValue(${1:rscmodellogicmgr}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "SetRscControlTimerEntity\tRscLogicControlTimer,String",
      "contents": "SetRscControlTimerEntity(${1:rsclogiccontroltimer}, ${2:name})"
    },
    {
      "trigger": "SetRscControlTimerType\tRscLogicControlTimer,Integer",
      "contents": "SetRscControlTimerType(${1:rsclogiccontroltimer}, ${2:int})"
    },
    {
      "trigger": "SetRscDetachSpecificToolAttach\tRscLogicToolDetach,RscLogicToolAttach",
      "contents": "SetRscDetachSpecificToolAttach(${1:rsclogictooldetach}, ${2:rsclogictoolattach})"
    },
    {
      "trigger": "SetRscForLoopFrom\tRscLogicForLoop,String",
      "contents": "SetRscForLoopFrom(${1:rsclogicforloop}, ${2:name})"
    },
    {
      "trigger": "SetRscForLoopIndexName\tRscLogicForLoop,String",
      "contents": "SetRscForLoopIndexName(${1:rsclogicforloop}, ${2:name})"
    },
    {
      "trigger": "SetRscForLoopTo\tRscLogicForLoop,String",
      "contents": "SetRscForLoopTo(${1:rsclogicforloop}, ${2:name})"
    },
    {
      "trigger": "SetRscForLoopType\tRscLogicForLoop,Integer",
      "contents": "SetRscForLoopType(${1:rsclogicforloop}, ${2:int})"
    },
    {
      "trigger": "SetRscGotoLabelInstruction\tRscLogicGoto,RscLogicInstruction",
      "contents": "SetRscGotoLabelInstruction(${1:rsclogicgoto}, ${2:rsclogicinstruction})"
    },
    {
      "trigger": "SetRscGotoLabelName\tRscLogicGoto,String",
      "contents": "SetRscGotoLabelName(${1:rsclogicgoto}, ${2:name})"
    },
    {
      "trigger": "SetRscGrabbingCurrentPort\tRscLogicGrab,VPMPort",
      "contents": "SetRscGrabbingCurrentPort(${1:rsclogicgrab}, ${2:vpmport})"
    },
    {
      "trigger": "SetRscGrabbingResourceInfo\tRscLogicGrab,ProductOccurrence,VPMPort",
      "contents": "SetRscGrabbingResourceInfo(${1:rsclogicgrab}, ${2:productoccurrence}, ${3:vpmport})"
    },
    {
      "trigger": "SetRscGrabbingSimulationSensor\tRscLogicGrab,RscLogicSimSensor,Integer",
      "contents": "SetRscGrabbingSimulationSensor(${1:rsclogicgrab}, ${2:rsclogicsimsensor}, ${3:int})"
    },
    {
      "trigger": "SetRscGrabbingSimulationSensorDetection\tRscLogicGrab,Integer",
      "contents": "SetRscGrabbingSimulationSensorDetection(${1:rsclogicgrab}, ${2:int})"
    },
    {
      "trigger": "SetRscIOSignalDefaultValue\tRscModelLogicMgr,String,String",
      "contents": "SetRscIOSignalDefaultValue(${1:rscmodellogicmgr}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "SetRscIOSignalDescription\tRscModelLogicMgr,String,String",
      "contents": "SetRscIOSignalDescription(${1:rscmodellogicmgr}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "SetRscIOSignalDirection\tRscModelLogicMgr,String,Integer",
      "contents": "SetRscIOSignalDirection(${1:rscmodellogicmgr}, ${2:name}, ${3:int})"
    },
    {
      "trigger": "SetRscIOSignalPortNumber\tRscModelLogicMgr,String,String",
      "contents": "SetRscIOSignalPortNumber(${1:rscmodellogicmgr}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "SetRscIOSignalType\tRscModelLogicMgr,String,Integer",
      "contents": "SetRscIOSignalType(${1:rscmodellogicmgr}, ${2:name}, ${3:int})"
    },
    {
      "trigger": "SetRscInstructionCommentStatus\tRscLogicInstruction,Integer",
      "contents": "SetRscInstructionCommentStatus(${1:rsclogicinstruction}, ${2:int})"
    },
    {
      "trigger": "SetRscInstructionDisplayName\tRscLogicInstruction,String",
      "contents": "SetRscInstructionDisplayName(${1:rsclogicinstruction}, ${2:name})"
    },
    {
      "trigger": "SetRscInstructionLabel\tRscLogicInstruction,String",
      "contents": "SetRscInstructionLabel(${1:rsclogicinstruction}, ${2:name})"
    },
    {
      "trigger": "SetRscLocalConstantDescription\tRscLogicTask,String,String",
      "contents": "SetRscLocalConstantDescription(${1:rsclogictask}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "SetRscLocalConstantPortNumber\tRscLogicTask,String,String",
      "contents": "SetRscLocalConstantPortNumber(${1:rsclogictask}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "SetRscLocalConstantType\tRscLogicTask,String,Integer",
      "contents": "SetRscLocalConstantType(${1:rsclogictask}, ${2:name}, ${3:int})"
    },
    {
      "trigger": "SetRscLocalConstantValue\tRscLogicTask,String,String",
      "contents": "SetRscLocalConstantValue(${1:rsclogictask}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "SetRscLocalIOSignalDefaultValue\tRscLogicTask,String,String",
      "contents": "SetRscLocalIOSignalDefaultValue(${1:rsclogictask}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "SetRscLocalIOSignalDescription\tRscLogicTask,String,String",
      "contents": "SetRscLocalIOSignalDescription(${1:rsclogictask}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "SetRscLocalIOSignalDirection\tRscLogicTask,String,Integer",
      "contents": "SetRscLocalIOSignalDirection(${1:rsclogictask}, ${2:name}, ${3:int})"
    },
    {
      "trigger": "SetRscLocalIOSignalPortNumber\tRscLogicTask,String,String",
      "contents": "SetRscLocalIOSignalPortNumber(${1:rsclogictask}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "SetRscLocalIOSignalType\tRscLogicTask,String,Integer",
      "contents": "SetRscLocalIOSignalType(${1:rsclogictask}, ${2:name}, ${3:int})"
    },
    {
      "trigger": "SetRscLocalVariableDescription\tRscLogicTask,String,String",
      "contents": "SetRscLocalVariableDescription(${1:rsclogictask}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "SetRscLocalVariablePortNumber\tRscLogicTask,String,String",
      "contents": "SetRscLocalVariablePortNumber(${1:rsclogictask}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "SetRscLocalVariableType\tRscLogicTask,String,Integer",
      "contents": "SetRscLocalVariableType(${1:rsclogictask}, ${2:name}, ${3:int})"
    },
    {
      "trigger": "SetRscLocalVariableValue\tRscLogicTask,String,String",
      "contents": "SetRscLocalVariableValue(${1:rsclogictask}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "SetRscLogicSimSensorBeamDirection\tRscLogicSimSensor,Real,Real,Real",
      "contents": "SetRscLogicSimSensorBeamDirection(${1:rsclogicsimsensor}, ${2:real}, ${3:real}, ${4:real})"
    },
    {
      "trigger": "SetRscLogicSimSensorBeamLength\tRscLogicSimSensor,Real",
      "contents": "SetRscLogicSimSensorBeamLength(${1:rsclogicsimsensor}, ${2:real})"
    },
    {
      "trigger": "SetRscLogicSimSensorBeamOffset\tRscLogicSimSensor,Real,Real,Real",
      "contents": "SetRscLogicSimSensorBeamOffset(${1:rsclogicsimsensor}, ${2:real}, ${3:real}, ${4:real})"
    },
    {
      "trigger": "SetRscModelType\tRscControllerMgr,Integer",
      "contents": "SetRscModelType(${1:rsccontrollermgr}, ${2:int})"
    },
    {
      "trigger": "SetRscModelTypeID\tRscControllerMgr,String",
      "contents": "SetRscModelTypeID(${1:rsccontrollermgr}, ${2:name})"
    },
    {
      "trigger": "SetRscOccMoveFlag\tProductOccurrence,Integer",
      "contents": "SetRscOccMoveFlag(${1:productoccurrence}, ${2:int})"
    },
    {
      "trigger": "SetRscPortTransfo\tRscPortsMgr,VPMPort,RscTransform",
      "contents": "SetRscPortTransfo(${1:rscportsmgr}, ${2:vpmport}, ${3:rsctransform})"
    },
    {
      "trigger": "SetRscPulseDelay\tRscLogicPulse,String",
      "contents": "SetRscPulseDelay(${1:rsclogicpulse}, ${2:name})"
    },
    {
      "trigger": "SetRscPulseDuration\tRscLogicPulse,String",
      "contents": "SetRscPulseDuration(${1:rsclogicpulse}, ${2:name})"
    },
    {
      "trigger": "SetRscPulseEntity\tRscLogicPulse,String",
      "contents": "SetRscPulseEntity(${1:rsclogicpulse}, ${2:name})"
    },
    {
      "trigger": "SetRscPulseInvertMode\tRscLogicPulse,Integer",
      "contents": "SetRscPulseInvertMode(${1:rsclogicpulse}, ${2:int})"
    },
    {
      "trigger": "SetRscPulseValue\tRscLogicPulse,String",
      "contents": "SetRscPulseValue(${1:rsclogicpulse}, ${2:name})"
    },
    {
      "trigger": "SetRscReleaseSpecificGrabbing\tRscLogicRelease,RscLogicGrab",
      "contents": "SetRscReleaseSpecificGrabbing(${1:rsclogicrelease}, ${2:rsclogicgrab})"
    },
    {
      "trigger": "SetRscReleaseSpecificReleaseElements\tRscLogicRelease,List",
      "contents": "SetRscReleaseSpecificReleaseElements(${1:rsclogicrelease}, ${2:list})"
    },
    {
      "trigger": "SetRscRunArgumentValue\tRscLogicRun,String,String",
      "contents": "SetRscRunArgumentValue(${1:rsclogicrun}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "SetRscRunArgumentValues\tRscLogicRun,List",
      "contents": "SetRscRunArgumentValues(${1:rsclogicrun}, ${2:list})"
    },
    {
      "trigger": "SetRscServiceName\tRscLogicServiceCall,String",
      "contents": "SetRscServiceName(${1:rsclogicservicecall}, ${2:name})"
    },
    {
      "trigger": "SetRscTaskCycleTime\tDNBResourceTask,Real",
      "contents": "SetRscTaskCycleTime(${1:dnbresourcetask}, ${2:real})"
    },
    {
      "trigger": "SetRscTaskName\tRscLogicRunTask,String",
      "contents": "SetRscTaskName(${1:rsclogicruntask}, ${2:name})"
    },
    {
      "trigger": "SetRscTaskType\tRscLogicTask,Integer",
      "contents": "SetRscTaskType(${1:rsclogictask}, ${2:int})"
    },
    {
      "trigger": "SetRscTimerDescription\tRscModelLogicMgr,String,String",
      "contents": "SetRscTimerDescription(${1:rscmodellogicmgr}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "SetRscTimerPortNumber\tRscModelLogicMgr,String,String",
      "contents": "SetRscTimerPortNumber(${1:rscmodellogicmgr}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "SetRscToolAttachCurrentPort\tRscLogicToolAttach,VPMPort",
      "contents": "SetRscToolAttachCurrentPort(${1:rsclogictoolattach}, ${2:vpmport})"
    },
    {
      "trigger": "SetRscUsageOnCapableRscLink\tVPMInstance,PLMConnection,ProdSystemOccurrence",
      "contents": "SetRscUsageOnCapableRscLink(${1:vpminstance}, ${2:plmconnection}, ${3:prodsystemoccurrence})"
    },
    {
      "trigger": "SetRscVariableDescription\tRscModelLogicMgr,String,String",
      "contents": "SetRscVariableDescription(${1:rscmodellogicmgr}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "SetRscVariablePortNumber\tRscModelLogicMgr,String,String",
      "contents": "SetRscVariablePortNumber(${1:rscmodellogicmgr}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "SetRscVariableType\tRscModelLogicMgr,String,Integer",
      "contents": "SetRscVariableType(${1:rscmodellogicmgr}, ${2:name}, ${3:int})"
    },
    {
      "trigger": "SetRscVariableValue\tRscModelLogicMgr,String,String",
      "contents": "SetRscVariableValue(${1:rscmodellogicmgr}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "SetRscWaitCondition\tRscLogicWait,String",
      "contents": "SetRscWaitCondition(${1:rsclogicwait}, ${2:name})"
    },
    {
      "trigger": "SetRscWaitTimeOut\tRscLogicWait,String",
      "contents": "SetRscWaitTimeOut(${1:rsclogicwait}, ${2:name})"
    },
    {
      "trigger": "SetRscWhileLoopCondition\tRscLogicWhileLoop,String",
      "contents": "SetRscWhileLoopCondition(${1:rsclogicwhileloop}, ${2:name})"
    },
    {
      "trigger": "SetRscWhileLoopType\tRscLogicWhileLoop,Integer",
      "contents": "SetRscWhileLoopType(${1:rsclogicwhileloop}, ${2:int})"
    },
    {
      "trigger": "SetRuleSet\tSys3D_Route,Sys3DRoutingRuleSet",
      "contents": "SetRuleSet(${1:sys3d_route}, ${2:sys3droutingruleset})"
    },
    {
      "trigger": "SetRuleSetByName\tSIMItfSimulation,String",
      "contents": "SetRuleSetByName(${1:simitfsimulation}, ${2:name})"
    },
    {
      "trigger": "SetSamplingAccuracyLevel\tRscMultiRobotPathPlanner,Integer",
      "contents": "SetSamplingAccuracyLevel(${1:rscmultirobotpathplanner}, ${2:int})"
    },
    {
      "trigger": "SetScenarioAnalysisStatus\tDELMfgSimTSAScenario,String,Boolean",
      "contents": "SetScenarioAnalysisStatus(${1:delmfgsimtsascenario}, ${2:name}, ${3:bool})"
    },
    {
      "trigger": "SetScenarioParametersValues\tDELMfgSimTSAScenario,String,Real",
      "contents": "SetScenarioParametersValues(${1:delmfgsimtsascenario}, ${2:name}, ${3:real})"
    },
    {
      "trigger": "SetSch2DGraphicProperties\tPLMCoreInstance,DIFViewInstance,List,List",
      "contents": "SetSch2DGraphicProperties(${1:plmcoreinstance}, ${2:difviewinstance}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "SetSchedule\tFFS_InZone,DTSheetType",
      "contents": "SetSchedule(${1:ffs_inzone}, ${2:dtsheettype})"
    },
    {
      "trigger": "SetSecondSurface\tSddProfile,Feature",
      "contents": "SetSecondSurface(${1:sddprofile}, ${2:feat})"
    },
    {
      "trigger": "SetSecondSurface\tSldProfile,Feature,Feature,Feature",
      "contents": "SetSecondSurface(${1:sldprofile}, ${2:feat}, ${3:feat}, ${4:feat})"
    },
    {
      "trigger": "SetSecondaryOwnershipVector\tFeature,List,List,List,List,List",
      "contents": "SetSecondaryOwnershipVector(${1:feat}, ${2:list}, ${3:list}, ${4:list}, ${5:list}, ${6:list})"
    },
    {
      "trigger": "SetSectionArea\tElecCableRawMaterialCore,AREA",
      "contents": "SetSectionArea(${1:eleccablerawmaterialcore}, ${2:area})"
    },
    {
      "trigger": "SetSectionName\tAGTConnector,String",
      "contents": "SetSectionName(${1:agtconnector}, ${2:name})"
    },
    {
      "trigger": "SetSectionName\tSddProfile,String,String",
      "contents": "SetSectionName(${1:sddprofile}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "SetSectionNameOfSlotWithCompositeProfile\tSddOpening,String",
      "contents": "SetSectionNameOfSlotWithCompositeProfile(${1:sddopening}, ${2:name})"
    },
    {
      "trigger": "SetSectionOrientation\tHVAC_Rigid_Duct,HvacOrientation",
      "contents": "SetSectionOrientation(${1:hvac_rigid_duct}, ${2:hvacorientation})"
    },
    {
      "trigger": "SetSelectedGeometry\tMfgDirection,Visualizable,ProductOccurrence",
      "contents": "SetSelectedGeometry(${1:mfgdirection}, ${2:visualizable}, ${3:productoccurrence})"
    },
    {
      "trigger": "SetSequence\tFFS_Resource,List",
      "contents": "SetSequence(${1:ffs_resource}, ${2:list})"
    },
    {
      "trigger": "SetSequencingMode\tPLMCoreReference,String",
      "contents": "SetSequencingMode(${1:plmcorereference}, ${2:name})"
    },
    {
      "trigger": "SetSerialNumberAttribute\tPLMResource,String",
      "contents": "SetSerialNumberAttribute(${1:plmresource}, ${2:name})"
    },
    {
      "trigger": "SetSetupAssembly\tMfgSetupPosition,ProductOccurrence",
      "contents": "SetSetupAssembly(${1:mfgsetupposition}, ${2:productoccurrence})"
    },
    {
      "trigger": "SetShape\tHVAC_Rigid_Duct,V_Shape_Enum",
      "contents": "SetShape(${1:hvac_rigid_duct}, ${2:v_shape_enum})"
    },
    {
      "trigger": "SetShape\tSys3D_AbstractVolume,Sys3DShape,Sys3DShape,3DShape",
      "contents": "SetShape(${1:sys3d_abstractvolume}, ${2:sys3dshape}, ${3:sys3dshape}, ${4:3dshape})"
    },
    {
      "trigger": "SetShapeReference\tAGTDraughtStop,Feature",
      "contents": "SetShapeReference(${1:agtdraughtstop}, ${2:feat})"
    },
    {
      "trigger": "SetSignalIdentifier\tElec3DCableCore,String",
      "contents": "SetSignalIdentifier(${1:elec3dcablecore}, ${2:name})"
    },
    {
      "trigger": "SetSimClashSpecsDetectionMode\tPLMSimClashSpecsType,Integer,Integer",
      "contents": "SetSimClashSpecsDetectionMode(${1:plmsimclashspecstype}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "SetSimClashSpecsFeedbackMode\tPLMSimClashSpecsType,Integer,Integer",
      "contents": "SetSimClashSpecsFeedbackMode(${1:plmsimclashspecstype}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "SetSimilarityMode\tCATDistribute,SimilarityModeEnum",
      "contents": "SetSimilarityMode(${1:catdistribute}, ${2:similaritymodeenum})"
    },
    {
      "trigger": "SetSimulatedRobotConfigs\tDELMfgSimTSAScenario,ResourceOccurrence,List",
      "contents": "SetSimulatedRobotConfigs(${1:delmfgsimtsascenario}, ${2:resourceoccurrence}, ${3:list})"
    },
    {
      "trigger": "SetSimulationEndDate\tFFS_ShiftModel,Integer,Integer,Integer,Integer,Integer,Integer",
      "contents": "SetSimulationEndDate(${1:ffs_shiftmodel}, ${2:int}, ${3:int}, ${4:int}, ${5:int}, ${6:int}, ${7:int})"
    },
    {
      "trigger": "SetSimulationStartDate\tFFS_ShiftModel,Integer,Integer,Integer,Integer,Integer,Integer",
      "contents": "SetSimulationStartDate(${1:ffs_shiftmodel}, ${2:int}, ${3:int}, ${4:int}, ${5:int}, ${6:int}, ${7:int})"
    },
    {
      "trigger": "SetSketch\tSddContourBased,String",
      "contents": "SetSketch(${1:sddcontourbased}, ${2:name})"
    },
    {
      "trigger": "SetSlack\tBranch,Real",
      "contents": "SetSlack(${1:branch}, ${2:real})"
    },
    {
      "trigger": "SetSlotHorizontalOrientation\tSddOpening,Integer",
      "contents": "SetSlotHorizontalOrientation(${1:sddopening}, ${2:int})"
    },
    {
      "trigger": "SetSlotName\tSddOpening,String",
      "contents": "SetSlotName(${1:sddopening}, ${2:name})"
    },
    {
      "trigger": "SetSlotType\tSddOpening,String",
      "contents": "SetSlotType(${1:sddopening}, ${2:name})"
    },
    {
      "trigger": "SetSlotVerticalOrientation\tSddOpening,String",
      "contents": "SetSlotVerticalOrientation(${1:sddopening}, ${2:name})"
    },
    {
      "trigger": "SetSolvedModel\tComponentFamilyItem,VPMReference",
      "contents": "SetSolvedModel(${1:componentfamilyitem}, ${2:vpmreference})"
    },
    {
      "trigger": "SetSource\tDNBTagMeasure,Feature,ProductOccurrence",
      "contents": "SetSource(${1:dnbtagmeasure}, ${2:feat}, ${3:productoccurrence})"
    },
    {
      "trigger": "SetSourceReferential\tDNBTagMeasure,Integer,List",
      "contents": "SetSourceReferential(${1:dnbtagmeasure}, ${2:int}, ${3:list})"
    },
    {
      "trigger": "SetSources\tCATDistribute,List,ProductOccurrence",
      "contents": "SetSources(${1:catdistribute}, ${2:list}, ${3:productoccurrence})"
    },
    {
      "trigger": "SetSpaceType\tLiveArchiSpace,AGTSpaceType",
      "contents": "SetSpaceType(${1:livearchispace}, ${2:agtspacetype})"
    },
    {
      "trigger": "SetSpaceWallThickness\tLiveArchiSpace,LENGTH,LENGTH",
      "contents": "SetSpaceWallThickness(${1:livearchispace}, ${2:len}, ${3:len})"
    },
    {
      "trigger": "SetSpacing\tVerticalSignageMarker,LENGTH",
      "contents": "SetSpacing(${1:verticalsignagemarker}, ${2:len})"
    },
    {
      "trigger": "SetSpacingOffsetPosStratParms\tSldOpening,Boolean,String,Boolean,String,String,String",
      "contents": "SetSpacingOffsetPosStratParms(${1:sldopening}, ${2:bool}, ${3:name}, ${4:bool}, ${5:name}, ${6:name}, ${7:name})"
    },
    {
      "trigger": "SetSpecificationType\tSIMItfSimulation,PIM_StandardSpec",
      "contents": "SetSpecificationType(${1:simitfsimulation}, ${2:pim_standardspec})"
    },
    {
      "trigger": "SetSpeedUnit\tRscMotionProfile,RscMotionType,RscMotionUnitType",
      "contents": "SetSpeedUnit(${1:rscmotionprofile}, ${2:rscmotiontype}, ${3:rscmotionunittype})"
    },
    {
      "trigger": "SetSpeedValue\tRscMotionProfile,RscMotionType,Real",
      "contents": "SetSpeedValue(${1:rscmotionprofile}, ${2:rscmotiontype}, ${3:real})"
    },
    {
      "trigger": "SetSpotMoveStatus\tDNBSpotProfile,DNBSpotMoves,Boolean",
      "contents": "SetSpotMoveStatus(${1:dnbspotprofile}, ${2:dnbspotmoves}, ${3:bool})"
    },
    {
      "trigger": "SetSpotMoveStatusProfile\tDNBSpotProfile,DNBSpotMoves,Feature,String",
      "contents": "SetSpotMoveStatusProfile(${1:dnbspotprofile}, ${2:dnbspotmoves}, ${3:feat}, ${4:name})"
    },
    {
      "trigger": "SetStandardModeType\tSldOpening,Integer",
      "contents": "SetStandardModeType(${1:sldopening}, ${2:int})"
    },
    {
      "trigger": "SetStartAndEndResourceHomePosition\tFFS_ProductFlow,FFS_Item,FFS_Resource,String,String",
      "contents": "SetStartAndEndResourceHomePosition(${1:ffs_productflow}, ${2:ffs_item}, ${3:ffs_resource}, ${4:name}, ${5:name})"
    },
    {
      "trigger": "SetStartHomePositionName\tFFS_Activity,String",
      "contents": "SetStartHomePositionName(${1:ffs_activity}, ${2:name})"
    },
    {
      "trigger": "SetStartHomePositionName\tFFS_Activity,String,FFS_ResourcePool",
      "contents": "SetStartHomePositionName(${1:ffs_activity}, ${2:name}, ${3:ffs_resourcepool})"
    },
    {
      "trigger": "SetStartPt\tSddMember,Feature",
      "contents": "SetStartPt(${1:sddmember}, ${2:feat})"
    },
    {
      "trigger": "SetStartPt\tSldMember,Feature,Feature,Feature",
      "contents": "SetStartPt(${1:sldmember}, ${2:feat}, ${3:feat}, ${4:feat})"
    },
    {
      "trigger": "SetStation\tVerticalSignageMarker,String",
      "contents": "SetStation(${1:verticalsignagemarker}, ${2:name})"
    },
    {
      "trigger": "SetStationaryTipClearanceProfile\tDNBSpotProfile,DNBSpotStationaryTipClearanceMoves,Feature,String",
      "contents": "SetStationaryTipClearanceProfile(${1:dnbspotprofile}, ${2:dnbspotstationarytipclearancemoves}, ${3:feat}, ${4:name})"
    },
    {
      "trigger": "SetSubFloorColor\tLiveArchiCovering,String",
      "contents": "SetSubFloorColor(${1:livearchicovering}, ${2:name})"
    },
    {
      "trigger": "SetSubFloorMaterial\tLiveArchiCovering,String",
      "contents": "SetSubFloorMaterial(${1:livearchicovering}, ${2:name})"
    },
    {
      "trigger": "SetSubfloorThickness\tLiveArchiCovering,LENGTH",
      "contents": "SetSubfloorThickness(${1:livearchicovering}, ${2:len})"
    },
    {
      "trigger": "SetSubstituteRelationSource\tDELFmiMfgSubstituteCnx,DELFmiFunctionInstance",
      "contents": "SetSubstituteRelationSource(${1:delfmimfgsubstitutecnx}, ${2:delfmifunctioninstance})"
    },
    {
      "trigger": "SetSubstituteRelationTarget\tDELFmiMfgSubstituteCnx,DELFmiFunctionReference",
      "contents": "SetSubstituteRelationTarget(${1:delfmimfgsubstitutecnx}, ${2:delfmifunctionreference})"
    },
    {
      "trigger": "SetSupport\tSddPanel,Feature",
      "contents": "SetSupport(${1:sddpanel}, ${2:feat})"
    },
    {
      "trigger": "SetSupport\tSldPanel,Feature,Feature,Feature",
      "contents": "SetSupport(${1:sldpanel}, ${2:feat}, ${3:feat}, ${4:feat})"
    },
    {
      "trigger": "SetSupportLimitingObject\tSldFlange,Feature",
      "contents": "SetSupportLimitingObject(${1:sldflange}, ${2:feat})"
    },
    {
      "trigger": "SetSupportLimitingObjects\tSldStiffenerOnFreeEdge,List",
      "contents": "SetSupportLimitingObjects(${1:sldstiffeneronfreeedge}, ${2:list})"
    },
    {
      "trigger": "SetSweptVolumeOptions\tDELRscSweptVolumeMgr,RscSweptVolumeOptionType,List",
      "contents": "SetSweptVolumeOptions(${1:delrscsweptvolumemgr}, ${2:rscsweptvolumeoptiontype}, ${3:list})"
    },
    {
      "trigger": "SetSystemPortPosition\tDELLmiProdSystemIOPort,String",
      "contents": "SetSystemPortPosition(${1:dellmiprodsystemioport}, ${2:name})"
    },
    {
      "trigger": "SetTCPAccelerationTime\tRscKinematicsMgr,RscMotionGroup,RscSpeedAccelType,Real",
      "contents": "SetTCPAccelerationTime(${1:rsckinematicsmgr}, ${2:rscmotiongroup}, ${3:rscspeedacceltype}, ${4:real})"
    },
    {
      "trigger": "SetTCPMaxAcceleration\tRscKinematicsMgr,RscMotionGroup,RscSpeedAccelType,Real",
      "contents": "SetTCPMaxAcceleration(${1:rsckinematicsmgr}, ${2:rscmotiongroup}, ${3:rscspeedacceltype}, ${4:real})"
    },
    {
      "trigger": "SetTCPMaxSpeed\tRscKinematicsMgr,RscMotionGroup,RscSpeedAccelType,Real",
      "contents": "SetTCPMaxSpeed(${1:rsckinematicsmgr}, ${2:rscmotiongroup}, ${3:rscspeedacceltype}, ${4:real})"
    },
    {
      "trigger": "SetTCPOffset\tRscToolProfile,RscTransform",
      "contents": "SetTCPOffset(${1:rsctoolprofile}, ${2:rsctransform})"
    },
    {
      "trigger": "SetTPointColor\tDNBFitTrack,Integer,Integer",
      "contents": "SetTPointColor(${1:dnbfittrack}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "SetTPointDuration\tDNBFitTrack,Integer,Real",
      "contents": "SetTPointDuration(${1:dnbfittrack}, ${2:int}, ${3:real})"
    },
    {
      "trigger": "SetTPointPattern\tDNBFitTrack,Integer,Integer",
      "contents": "SetTPointPattern(${1:dnbfittrack}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "SetTPointPosition\tDNBFitTrack,Integer,List",
      "contents": "SetTPointPosition(${1:dnbfittrack}, ${2:int}, ${3:list})"
    },
    {
      "trigger": "SetTPointTransforms\tDNBFitTrack,Integer,List,List",
      "contents": "SetTPointTransforms(${1:dnbfittrack}, ${2:int}, ${3:list}, ${4:list})"
    },
    {
      "trigger": "SetTableValue\tSMATable,Integer,Integer,Real",
      "contents": "SetTableValue(${1:smatable}, ${2:int}, ${3:int}, ${4:real})"
    },
    {
      "trigger": "SetTagTarget\tDNBRobotMotion,DNBTag,ProductOccurrence",
      "contents": "SetTagTarget(${1:dnbrobotmotion}, ${2:dnbtag}, ${3:productoccurrence})"
    },
    {
      "trigger": "SetTarget\tCATDistribute,ProductOccurrence,VPMRepInstance",
      "contents": "SetTarget(${1:catdistribute}, ${2:productoccurrence}, ${3:vpmrepinstance})"
    },
    {
      "trigger": "SetTargetReferential\tDNBTagMeasure,Integer,List",
      "contents": "SetTargetReferential(${1:dnbtagmeasure}, ${2:int}, ${3:list})"
    },
    {
      "trigger": "SetTextMarkerEmoticon\tPLMOperation,Feature,String",
      "contents": "SetTextMarkerEmoticon(${1:plmoperation}, ${2:feat}, ${3:name})"
    },
    {
      "trigger": "SetThickness\tAGTDraughtStop,LENGTH",
      "contents": "SetThickness(${1:agtdraughtstop}, ${2:len})"
    },
    {
      "trigger": "SetThrowOrientation\tSddPanel,Integer",
      "contents": "SetThrowOrientation(${1:sddpanel}, ${2:int})"
    },
    {
      "trigger": "SetThumb3DState\tDEL3DState,String",
      "contents": "SetThumb3DState(${1:del3dstate}, ${2:name})"
    },
    {
      "trigger": "SetTimeAnalysisLineFormulaAndParameter\tDELTimeAnalysisRepInstance,Integer,List,String",
      "contents": "SetTimeAnalysisLineFormulaAndParameter(${1:deltimeanalysisrepinstance}, ${2:int}, ${3:list}, ${4:name})"
    },
    {
      "trigger": "SetTimeAnalysisLineProperty\tDELTimeAnalysisRepInstance,Integer,String,String",
      "contents": "SetTimeAnalysisLineProperty(${1:deltimeanalysisrepinstance}, ${2:int}, ${3:name}, ${4:name})"
    },
    {
      "trigger": "SetTimeAnalysisLinePropertyAsDouble\tDELTimeAnalysisRepInstance,Integer,String,Real",
      "contents": "SetTimeAnalysisLinePropertyAsDouble(${1:deltimeanalysisrepinstance}, ${2:int}, ${3:name}, ${4:real})"
    },
    {
      "trigger": "SetTimeAnalysisLinePropertyAsInteger\tDELTimeAnalysisRepInstance,Integer,String,Integer",
      "contents": "SetTimeAnalysisLinePropertyAsInteger(${1:deltimeanalysisrepinstance}, ${2:int}, ${3:name}, ${4:int})"
    },
    {
      "trigger": "SetTimeAnalysisProperty\tDELTimeAnalysisRepInstance,String,String",
      "contents": "SetTimeAnalysisProperty(${1:deltimeanalysisrepinstance}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "SetTimeAnalysisPropertyAsDouble\tDELTimeAnalysisRepInstance,String,Real",
      "contents": "SetTimeAnalysisPropertyAsDouble(${1:deltimeanalysisrepinstance}, ${2:name}, ${3:real})"
    },
    {
      "trigger": "SetTimeAnalysisPropertyAsInteger\tDELTimeAnalysisRepInstance,String,Integer",
      "contents": "SetTimeAnalysisPropertyAsInteger(${1:deltimeanalysisrepinstance}, ${2:name}, ${3:int})"
    },
    {
      "trigger": "SetTimeforNextTraintoStart\tFFS_ResourcePool,Real",
      "contents": "SetTimeforNextTraintoStart(${1:ffs_resourcepool}, ${2:real})"
    },
    {
      "trigger": "SetTo\tElec3DCable,ProductOccurrence,Elec3DCavity",
      "contents": "SetTo(${1:elec3dcable}, ${2:productoccurrence}, ${3:elec3dcavity})"
    },
    {
      "trigger": "SetTool\tManufacturingOperation,VPMInstance,Boolean",
      "contents": "SetTool(${1:manufacturingoperation}, ${2:vpminstance}, ${3:bool})"
    },
    {
      "trigger": "SetToolAnalysisHomePositions\tDELMfgSimTSAScenario,ResourceOccurrence,String,List",
      "contents": "SetToolAnalysisHomePositions(${1:delmfgsimtsascenario}, ${2:resourceoccurrence}, ${3:name}, ${4:list})"
    },
    {
      "trigger": "SetToolAnalysisOptions\tDELMfgSimTSAScenario,ResourceOccurrence,String,ScenarioParameteres,Real",
      "contents": "SetToolAnalysisOptions(${1:delmfgsimtsascenario}, ${2:resourceoccurrence}, ${3:name}, ${4:scenarioparameteres}, ${5:real})"
    },
    {
      "trigger": "SetToolAxisStrategy\tMfgPatternUsage,String",
      "contents": "SetToolAxisStrategy(${1:mfgpatternusage}, ${2:name})"
    },
    {
      "trigger": "SetToolProfile\tDNBRobotMotion,Feature",
      "contents": "SetToolProfile(${1:dnbrobotmotion}, ${2:feat})"
    },
    {
      "trigger": "SetToolProfileMobility\tRscToolProfile,Boolean",
      "contents": "SetToolProfileMobility(${1:rsctoolprofile}, ${2:bool})"
    },
    {
      "trigger": "SetToolRepository\tMachiningProcess,String",
      "contents": "SetToolRepository(${1:machiningprocess}, ${2:name})"
    },
    {
      "trigger": "SetToolRequirement\tManufacturingOperation,ToolDevice",
      "contents": "SetToolRequirement(${1:manufacturingoperation}, ${2:tooldevice})"
    },
    {
      "trigger": "SetToolSearchToolingEquipments\tDELMfgSimTSAScenario,List",
      "contents": "SetToolSearchToolingEquipments(${1:delmfgsimtsascenario}, ${2:list})"
    },
    {
      "trigger": "SetTotalLoadToDepart\tFFS_DestinationProperties,Integer",
      "contents": "SetTotalLoadToDepart(${1:ffs_destinationproperties}, ${2:int})"
    },
    {
      "trigger": "SetTotalUnloadToDepart\tFFS_DestinationProperties,Integer",
      "contents": "SetTotalUnloadToDepart(${1:ffs_destinationproperties}, ${2:int})"
    },
    {
      "trigger": "SetTrajectoryReference\tDNBResourceTask,DNBTagGroup,ProductOccurrence",
      "contents": "SetTrajectoryReference(${1:dnbresourcetask}, ${2:dnbtaggroup}, ${3:productoccurrence})"
    },
    {
      "trigger": "SetTransformCoefficients\tRscTransform,List",
      "contents": "SetTransformCoefficients(${1:rsctransform}, ${2:list})"
    },
    {
      "trigger": "SetTriangularTimeDistribution\tFFS_Activity,Real,Real",
      "contents": "SetTriangularTimeDistribution(${1:ffs_activity}, ${2:real}, ${3:real})"
    },
    {
      "trigger": "SetTriangularTimeDistribution\tFFS_Activity,Real,Real,Real",
      "contents": "SetTriangularTimeDistribution(${1:ffs_activity}, ${2:real}, ${3:real}, ${4:real})"
    },
    {
      "trigger": "SetTurnNumbers\tDNBRobotMotion,List",
      "contents": "SetTurnNumbers(${1:dnbrobotmotion}, ${2:list})"
    },
    {
      "trigger": "SetTurnSigns\tDNBRobotMotion,List",
      "contents": "SetTurnSigns(${1:dnbrobotmotion}, ${2:list})"
    },
    {
      "trigger": "SetType\tDNBDataEntity,Integer",
      "contents": "SetType(${1:dnbdataentity}, ${2:int})"
    },
    {
      "trigger": "SetTypeOfGeometries\tSIMItfSimulation,PIM_TypeGeometry",
      "contents": "SetTypeOfGeometries(${1:simitfsimulation}, ${2:pim_typegeometry})"
    },
    {
      "trigger": "SetUOffsetSideOrientation\tSddOpening,Integer",
      "contents": "SetUOffsetSideOrientation(${1:sddopening}, ${2:int})"
    },
    {
      "trigger": "SetURef\tSddOpening,Feature",
      "contents": "SetURef(${1:sddopening}, ${2:feat})"
    },
    {
      "trigger": "SetURef\tSddOpening,Feature,Feature,Feature",
      "contents": "SetURef(${1:sddopening}, ${2:feat}, ${3:feat}, ${4:feat})"
    },
    {
      "trigger": "SetURefMidDist\tSddOpening,Feature,Feature",
      "contents": "SetURefMidDist(${1:sddopening}, ${2:feat}, ${3:feat})"
    },
    {
      "trigger": "SetURefMidDist\tSddOpening,Feature,Feature,Feature,Feature,Feature",
      "contents": "SetURefMidDist(${1:sddopening}, ${2:feat}, ${3:feat}, ${4:feat}, ${5:feat}, ${6:feat})"
    },
    {
      "trigger": "SetUniformTimeDistribution\tFFS_Activity,Real,Real",
      "contents": "SetUniformTimeDistribution(${1:ffs_activity}, ${2:real}, ${3:real})"
    },
    {
      "trigger": "SetUpToLimit\tSddMember,Feature",
      "contents": "SetUpToLimit(${1:sddmember}, ${2:feat})"
    },
    {
      "trigger": "SetUsagePointTarget\tMfgProductionPlanning,FProcessOccurrence",
      "contents": "SetUsagePointTarget(${1:mfgproductionplanning}, ${2:fprocessoccurrence})"
    },
    {
      "trigger": "SetUseAccuracyProfile\tDNBRobotMotion,Boolean",
      "contents": "SetUseAccuracyProfile(${1:dnbrobotmotion}, ${2:bool})"
    },
    {
      "trigger": "SetUseMotionProfile\tDNBRobotMotion,Boolean",
      "contents": "SetUseMotionProfile(${1:dnbrobotmotion}, ${2:bool})"
    },
    {
      "trigger": "SetUseObjectProfile\tDNBRobotMotion,Boolean",
      "contents": "SetUseObjectProfile(${1:dnbrobotmotion}, ${2:bool})"
    },
    {
      "trigger": "SetUseToolProfile\tDNBRobotMotion,Boolean",
      "contents": "SetUseToolProfile(${1:dnbrobotmotion}, ${2:bool})"
    },
    {
      "trigger": "SetUserProfileList\tDNBRobotMotion,List",
      "contents": "SetUserProfileList(${1:dnbrobotmotion}, ${2:list})"
    },
    {
      "trigger": "SetUserWeight\tAGTRampBody,MASS",
      "contents": "SetUserWeight(${1:agtrampbody}, ${2:mass})"
    },
    {
      "trigger": "SetVOffsetSideOrientation\tSddOpening,Integer",
      "contents": "SetVOffsetSideOrientation(${1:sddopening}, ${2:int})"
    },
    {
      "trigger": "SetVRef\tSddOpening,Feature",
      "contents": "SetVRef(${1:sddopening}, ${2:feat})"
    },
    {
      "trigger": "SetVRef\tSddOpening,Feature,Feature,Feature",
      "contents": "SetVRef(${1:sddopening}, ${2:feat}, ${3:feat}, ${4:feat})"
    },
    {
      "trigger": "SetVRefMidDist\tSddOpening,Feature,Feature",
      "contents": "SetVRefMidDist(${1:sddopening}, ${2:feat}, ${3:feat})"
    },
    {
      "trigger": "SetVRefMidDist\tSddOpening,Feature,Feature,Feature,Feature,Feature",
      "contents": "SetVRefMidDist(${1:sddopening}, ${2:feat}, ${3:feat}, ${4:feat}, ${5:feat}, ${6:feat})"
    },
    {
      "trigger": "SetValue\tDNBConst,String",
      "contents": "SetValue(${1:dnbconst}, ${2:name})"
    },
    {
      "trigger": "SetVector\tRscTransform,Integer,Real,Real,Real",
      "contents": "SetVector(${1:rsctransform}, ${2:int}, ${3:real}, ${4:real}, ${5:real})"
    },
    {
      "trigger": "SetViewMode\tMLPStacking,Integer",
      "contents": "SetViewMode(${1:mlpstacking}, ${2:int})"
    },
    {
      "trigger": "SetViewpoint\tPLMOperation,List,List,List,Real,Real,Real,Boolean",
      "contents": "SetViewpoint(${1:plmoperation}, ${2:list}, ${3:list}, ${4:list}, ${5:real}, ${6:real}, ${7:real}, ${8:bool})"
    },
    {
      "trigger": "SetVisibility\tManufacturingActivity,Boolean",
      "contents": "SetVisibility(${1:manufacturingactivity}, ${2:bool})"
    },
    {
      "trigger": "SetWall\tAGTSill,Feature",
      "contents": "SetWall(${1:agtsill}, ${2:feat})"
    },
    {
      "trigger": "SetWallDirectionOption\tLiveArchiSpace,AGTDirectionOption",
      "contents": "SetWallDirectionOption(${1:livearchispace}, ${2:agtdirectionoption})"
    },
    {
      "trigger": "SetWallType\tLiveArchiWall,AGTType",
      "contents": "SetWallType(${1:livearchiwall}, ${2:agttype})"
    },
    {
      "trigger": "SetWebAnchorPointOffset\tAGTConnector,LENGTH",
      "contents": "SetWebAnchorPointOffset(${1:agtconnector}, ${2:len})"
    },
    {
      "trigger": "SetWebOrientation\tSddProfile,Integer",
      "contents": "SetWebOrientation(${1:sddprofile}, ${2:int})"
    },
    {
      "trigger": "SetWeight\tFFS_Item,Real",
      "contents": "SetWeight(${1:ffs_item}, ${2:real})"
    },
    {
      "trigger": "SetWeldDelay\tDNBSpotProfile,Integer,Real",
      "contents": "SetWeldDelay(${1:dnbspotprofile}, ${2:int}, ${3:real})"
    },
    {
      "trigger": "SetWeldDelayProfile\tDNBSpotProfile,Integer,Feature,String",
      "contents": "SetWeldDelayProfile(${1:dnbspotprofile}, ${2:int}, ${3:feat}, ${4:name})"
    },
    {
      "trigger": "SetWeldPressureStabilizationTime\tDNBSpotProfile,Integer,Real",
      "contents": "SetWeldPressureStabilizationTime(${1:dnbspotprofile}, ${2:int}, ${3:real})"
    },
    {
      "trigger": "SetWeldPressureStabilizationTimeProfile\tDNBSpotProfile,Integer,Feature,String",
      "contents": "SetWeldPressureStabilizationTimeProfile(${1:dnbspotprofile}, ${2:int}, ${3:feat}, ${4:name})"
    },
    {
      "trigger": "SetWidth\tAGTFireBridge,LENGTH",
      "contents": "SetWidth(${1:agtfirebridge}, ${2:len})"
    },
    {
      "trigger": "SetWidthMeasurementType\tSddFlange,Integer",
      "contents": "SetWidthMeasurementType(${1:sddflange}, ${2:int})"
    },
    {
      "trigger": "SetWorkingContext\tFeature",
      "contents": "SetWorkingContext(${1:feat})"
    },
    {
      "trigger": "SetXYZ\tRscTransform,Real,Real,Real",
      "contents": "SetXYZ(${1:rsctransform}, ${2:real}, ${3:real}, ${4:real})"
    },
    {
      "trigger": "SetZoom\tCaptureService,Real",
      "contents": "SetZoom(${1:captureservice}, ${2:real})"
    },
    {
      "trigger": "Show\tLiteral",
      "contents": "Show(${1:literal})"
    },
    {
      "trigger": "ShowHelp\tString",
      "contents": "ShowHelp(${1:name})"
    },
    {
      "trigger": "SimulateBehaviorModel\tModelicaAllTypes,Real,Real",
      "contents": "SimulateBehaviorModel(${1:modelicaalltypes}, ${2:real}, ${3:real})"
    },
    {
      "trigger": "Size\tList",
      "contents": "Size(${1:list})"
    },
    {
      "trigger": "SktQCCheckCstReferencing\tFeature,String,List",
      "contents": "SktQCCheckCstReferencing(${1:feat}, ${2:name}, ${3:list})"
    },
    {
      "trigger": "SktQCCheckNonAllowedOriginLinkedElem\tFeature",
      "contents": "SktQCCheckNonAllowedOriginLinkedElem(${1:feat})"
    },
    {
      "trigger": "SktQCCheckNonAllowedTypes\tFeature,List",
      "contents": "SktQCCheckNonAllowedTypes(${1:feat}, ${2:list})"
    },
    {
      "trigger": "SktQCCheckNonallowedCst\tFeature,List",
      "contents": "SktQCCheckNonallowedCst(${1:feat}, ${2:list})"
    },
    {
      "trigger": "SktQCCheckPositioningType\tFeature,List,List,String,String",
      "contents": "SktQCCheckPositioningType(${1:feat}, ${2:list}, ${3:list}, ${4:name}, ${5:name})"
    },
    {
      "trigger": "SktQCGetSolvingStatusofgeom\tFeature,Boolean",
      "contents": "SktQCGetSolvingStatusofgeom(${1:feat}, ${2:bool})"
    },
    {
      "trigger": "SktQCHealPositioningTypeChk\tFeature,String",
      "contents": "SktQCHealPositioningTypeChk(${1:feat}, ${2:name})"
    },
    {
      "trigger": "SktQCIsEmpty\tFeature,List",
      "contents": "SktQCIsEmpty(${1:feat}, ${2:list})"
    },
    {
      "trigger": "SktQCIsProfileCurveClosed\tFeature,Real,Boolean",
      "contents": "SktQCIsProfileCurveClosed(${1:feat}, ${2:real}, ${3:bool})"
    },
    {
      "trigger": "SktQCIshavingDeactivatedElts\tFeature,List",
      "contents": "SktQCIshavingDeactivatedElts(${1:feat}, ${2:list})"
    },
    {
      "trigger": "SktQCOnlyOneCurve\tFeature",
      "contents": "SktQCOnlyOneCurve(${1:feat})"
    },
    {
      "trigger": "Smooth2\tGeometricSurface",
      "contents": "Smooth2(${1:geometricsurface})"
    },
    {
      "trigger": "Smooth\tGeometricSurface,LENGTH,ANGLE",
      "contents": "Smooth(${1:geometricsurface}, ${2:len}, ${3:angle})"
    },
    {
      "trigger": "Sobel\tBitmap,Integer",
      "contents": "Sobel(${1:bitmap}, ${2:int})"
    },
    {
      "trigger": "Sort\tList,String,String,String,String",
      "contents": "Sort(${1:list}, ${2:name}, ${3:name}, ${4:name}, ${5:name})"
    },
    {
      "trigger": "Split\tDNBFitTrack,Integer,DNBFitTrack,DNBFitTrack,Boolean",
      "contents": "Split(${1:dnbfittrack}, ${2:int}, ${3:dnbfittrack}, ${4:dnbfittrack}, ${5:bool})"
    },
    {
      "trigger": "Split\tList,String,String,String",
      "contents": "Split(${1:list}, ${2:name}, ${3:name}, ${4:name})"
    },
    {
      "trigger": "SplitString\tString,String,Boolean",
      "contents": "SplitString(${1:name}, ${2:name}, ${3:bool})"
    },
    {
      "trigger": "Start\tGeometricCurve",
      "contents": "Start(${1:geometriccurve})"
    },
    {
      "trigger": "StartBuildUp\tProdSystemOccurrence",
      "contents": "StartBuildUp(${1:prodsystemoccurrence})"
    },
    {
      "trigger": "StartDialog\tDialogCommandInvocation",
      "contents": "StartDialog(${1:dialogcommandinvocation})"
    },
    {
      "trigger": "StartJSON\tDELTimeAnalysisRepInstance",
      "contents": "StartJSON(${1:deltimeanalysisrepinstance})"
    },
    {
      "trigger": "StartOfAlgorithmRun\tOptOptimization",
      "contents": "StartOfAlgorithmRun(${1:optoptimization})"
    },
    {
      "trigger": "StopDialog\tDialogCommandInvocation",
      "contents": "StopDialog(${1:dialogcommandinvocation})"
    },
    {
      "trigger": "StringIN\tString",
      "contents": "StringIN(${1:name})"
    },
    {
      "trigger": "StringToInteger\tString",
      "contents": "StringToInteger(${1:name})"
    },
    {
      "trigger": "StringToReal\tString",
      "contents": "StringToReal(${1:name})"
    },
    {
      "trigger": "Stringify\tJSONNode",
      "contents": "Stringify(${1:jsonnode})"
    },
    {
      "trigger": "Subtract\tList,List,String,String",
      "contents": "Subtract(${1:list}, ${2:list}, ${3:name}, ${4:name})"
    },
    {
      "trigger": "Sum\tList",
      "contents": "Sum(${1:list})"
    },
    {
      "trigger": "Sup\tLiteral,Real,ENOCLG_ClassReference",
      "contents": "Sup(${1:literal}, ${2:real}, ${3:enoclg_classreference})"
    },
    {
      "trigger": "SuperiorRange\tReal",
      "contents": "SuperiorRange(${1:real})"
    },
    {
      "trigger": "Support\tGeometricCircle",
      "contents": "Support(${1:geometriccircle})"
    },
    {
      "trigger": "SupportsInverseKinematics\tRscController",
      "contents": "SupportsInverseKinematics(${1:rsccontroller})"
    },
    {
      "trigger": "SwapItems\tList,Integer,Integer",
      "contents": "SwapItems(${1:list}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "Synchronize\tElec3DCable,ElecRoute",
      "contents": "Synchronize(${1:elec3dcable}, ${2:elecroute})"
    },
    {
      "trigger": "SynchronizeEvolution\tMfgProcessOccurrence,Integer,Integer,Integer",
      "contents": "SynchronizeEvolution(${1:mfgprocessoccurrence}, ${2:int}, ${3:int}, ${4:int})"
    },
    {
      "trigger": "SynchronizeResultImport\tFGDResultImport",
      "contents": "SynchronizeResultImport(${1:fgdresultimport})"
    },
    {
      "trigger": "SynchronizeRscControllerCategory\tRscControllerSynchronizationCategory,Integer,Integer",
      "contents": "SynchronizeRscControllerCategory(${1:rsccontrollersynchronizationcategory}, ${2:int}, ${3:int})"
    },
    {
      "trigger": "SynchronizeVariant\tMfgProcessOccurrence,Integer,Integer,Integer",
      "contents": "SynchronizeVariant(${1:mfgprocessoccurrence}, ${2:int}, ${3:int}, ${4:int})"
    },
    {
      "trigger": "SysConnectivity\tRFLPLMFunctionalCommunicationInstance",
      "contents": "SysConnectivity(${1:rflplmfunctionalcommunicationinstance})"
    },
    {
      "trigger": "TCAIsResultSynchronized\tFeature",
      "contents": "TCAIsResultSynchronized(${1:feat})"
    },
    {
      "trigger": "TCAStatusMechanicalImport\tFeature",
      "contents": "TCAStatusMechanicalImport(${1:feat})"
    },
    {
      "trigger": "Tessellate\tRobArcTrajectory",
      "contents": "Tessellate(${1:robarctrajectory})"
    },
    {
      "trigger": "TestIsGenericFeature\t()",
      "contents": "TestIsGenericFeature()"
    },
    {
      "trigger": "TestTwoObjectBuild\tSddMember,Feature,Feature",
      "contents": "TestTwoObjectBuild(${1:sddmember}, ${2:feat}, ${3:feat})"
    },
    {
      "trigger": "TextFormat\tString,Literal",
      "contents": "TextFormat(${1:name}, ${2:literal})"
    },
    {
      "trigger": "ThickComp\tSddPanelSpecificationImport,Integer",
      "contents": "ThickComp(${1:sddpanelspecificationimport}, ${2:int})"
    },
    {
      "trigger": "Threshold\tBitmap,Integer",
      "contents": "Threshold(${1:bitmap}, ${2:int})"
    },
    {
      "trigger": "ToDimension\tString,String",
      "contents": "ToDimension(${1:name}, ${2:name})"
    },
    {
      "trigger": "ToJSON\tDataTreeNode",
      "contents": "ToJSON(${1:datatreenode})"
    },
    {
      "trigger": "ToLists\tMap,List,List",
      "contents": "ToLists(${1:map}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "ToLower\tString",
      "contents": "ToLower(${1:name})"
    },
    {
      "trigger": "ToReal\tString",
      "contents": "ToReal(${1:name})"
    },
    {
      "trigger": "ToString\tMatrix",
      "contents": "ToString(${1:matrix})"
    },
    {
      "trigger": "ToUpper\tString",
      "contents": "ToUpper(${1:name})"
    },
    {
      "trigger": "ToXML\tDataTreeNode",
      "contents": "ToXML(${1:datatreenode})"
    },
    {
      "trigger": "ToleranceMax\tReal",
      "contents": "ToleranceMax(${1:real})"
    },
    {
      "trigger": "ToleranceMin\tReal",
      "contents": "ToleranceMin(${1:real})"
    },
    {
      "trigger": "Trace\tInteger,String,Literal",
      "contents": "Trace(${1:int}, ${2:name}, ${3:literal})"
    },
    {
      "trigger": "TransferToPipingLineID\tLogicalOccurrence,LogicalOccurrence",
      "contents": "TransferToPipingLineID(${1:logicaloccurrence}, ${2:logicaloccurrence})"
    },
    {
      "trigger": "Transform\tDNBFitTrack,List,Boolean",
      "contents": "Transform(${1:dnbfittrack}, ${2:list}, ${3:bool})"
    },
    {
      "trigger": "TransformationMatrix\tVector,Real,Vector,Vector",
      "contents": "TransformationMatrix(${1:vector}, ${2:real}, ${3:vector}, ${4:vector})"
    },
    {
      "trigger": "Transpose\tMatrix",
      "contents": "Transpose(${1:matrix})"
    },
    {
      "trigger": "UnAssignActParkingZone\tFFS_Activity,FFS_ResourceZone",
      "contents": "UnAssignActParkingZone(${1:ffs_activity}, ${2:ffs_resourcezone})"
    },
    {
      "trigger": "UnAssignActResourcePool\tFFS_Activity,FFS_ResourcePool",
      "contents": "UnAssignActResourcePool(${1:ffs_activity}, ${2:ffs_resourcepool})"
    },
    {
      "trigger": "UnAssignActResourceZone\tFFS_Activity,FFS_ResourceZone",
      "contents": "UnAssignActResourceZone(${1:ffs_activity}, ${2:ffs_resourcezone})"
    },
    {
      "trigger": "UnAssignAllParkingZone\tFFS_Activity",
      "contents": "UnAssignAllParkingZone(${1:ffs_activity})"
    },
    {
      "trigger": "UnAssignAllResourcePool\tFFS_Activity",
      "contents": "UnAssignAllResourcePool(${1:ffs_activity})"
    },
    {
      "trigger": "UnAssignAllResourceZone\tFFS_Activity",
      "contents": "UnAssignAllResourceZone(${1:ffs_activity})"
    },
    {
      "trigger": "UnAssignOperation\tProdSystemOccurrence,ProdSystemOccurrence",
      "contents": "UnAssignOperation(${1:prodsystemoccurrence}, ${2:prodsystemoccurrence})"
    },
    {
      "trigger": "UnAssignProcess\tProdSystemOccurrence,FProcessOccurrence",
      "contents": "UnAssignProcess(${1:prodsystemoccurrence}, ${2:fprocessoccurrence})"
    },
    {
      "trigger": "UnAssignProduct\tMfgProcessOccurrence,ProductOccurrence",
      "contents": "UnAssignProduct(${1:mfgprocessoccurrence}, ${2:productoccurrence})"
    },
    {
      "trigger": "UnAssignRequirementFromDataCollectPlanOrCheckList\tProdSystemOccurrence,ProdSystemOccurrence,Requirement",
      "contents": "UnAssignRequirementFromDataCollectPlanOrCheckList(${1:prodsystemoccurrence}, ${2:prodsystemoccurrence}, ${3:requirement})"
    },
    {
      "trigger": "UnAssignResourcePool\tFFS_ProductFlow,FFS_ResourcePool",
      "contents": "UnAssignResourcePool(${1:ffs_productflow}, ${2:ffs_resourcepool})"
    },
    {
      "trigger": "UnAssignSystem\tResourceOccurrence,ProdSystemOccurrence",
      "contents": "UnAssignSystem(${1:resourceoccurrence}, ${2:prodsystemoccurrence})"
    },
    {
      "trigger": "UnMountResource\tProductOccurrence",
      "contents": "UnMountResource(${1:productoccurrence})"
    },
    {
      "trigger": "UnMountWorkPiece\tProductOccurrence",
      "contents": "UnMountWorkPiece(${1:productoccurrence})"
    },
    {
      "trigger": "UnSynchronize\tElec3DCable,ElecRoute",
      "contents": "UnSynchronize(${1:elec3dcable}, ${2:elecroute})"
    },
    {
      "trigger": "UnSynchronizeWithAllRoute\tElec3DCable",
      "contents": "UnSynchronizeWithAllRoute(${1:elec3dcable})"
    },
    {
      "trigger": "UnSynchronizeWithRouteIndex\tElec3DCable,List",
      "contents": "UnSynchronizeWithRouteIndex(${1:elec3dcable}, ${2:list})"
    },
    {
      "trigger": "UnassignBreak\tFFS_Shift,FFS_Break",
      "contents": "UnassignBreak(${1:ffs_shift}, ${2:ffs_break})"
    },
    {
      "trigger": "UnassignResourceZone\tFFS_Break,FFS_ResourceZone",
      "contents": "UnassignResourceZone(${1:ffs_break}, ${2:ffs_resourcezone})"
    },
    {
      "trigger": "UnassignShift\tFFS_Date,FFS_Shift",
      "contents": "UnassignShift(${1:ffs_date}, ${2:ffs_shift})"
    },
    {
      "trigger": "UnassignShiftEndResourceZone\tFFS_Shift,FFS_ResourceZone",
      "contents": "UnassignShiftEndResourceZone(${1:ffs_shift}, ${2:ffs_resourcezone})"
    },
    {
      "trigger": "UnlinkAllProfiles\tDNBSpotProfile",
      "contents": "UnlinkAllProfiles(${1:dnbspotprofile})"
    },
    {
      "trigger": "UnmountRscChildResource\tRscMountsMgr,ProductOccurrence,Boolean",
      "contents": "UnmountRscChildResource(${1:rscmountsmgr}, ${2:productoccurrence}, ${3:bool})"
    },
    {
      "trigger": "Unset\tObjectType",
      "contents": "Unset(${1:objecttype})"
    },
    {
      "trigger": "UnsetDefaultValue\tDNBLocalVar",
      "contents": "UnsetDefaultValue(${1:dnblocalvar})"
    },
    {
      "trigger": "UnsetUsagePointTarget\tMfgProductionPlanning",
      "contents": "UnsetUsagePointTarget(${1:mfgproductionplanning})"
    },
    {
      "trigger": "Update3DState\tDEL3DState",
      "contents": "Update3DState(${1:del3dstate})"
    },
    {
      "trigger": "Update\tFeature",
      "contents": "Update(${1:feat})"
    },
    {
      "trigger": "UpdateAllInterlocksInAllPairs\tRobInterferenceZoneMgr",
      "contents": "UpdateAllInterlocksInAllPairs(${1:robinterferencezonemgr})"
    },
    {
      "trigger": "UpdateAllInterlocksInPair\tRobInterferencePair",
      "contents": "UpdateAllInterlocksInPair(${1:robinterferencepair})"
    },
    {
      "trigger": "UpdateConnectionsSet\tSldConnection",
      "contents": "UpdateConnectionsSet(${1:sldconnection})"
    },
    {
      "trigger": "UpdateContinuousQuantity\tMustBeMadeFrom,Boolean,Magnitude",
      "contents": "UpdateContinuousQuantity(${1:mustbemadefrom}, ${2:bool}, ${3:mag})"
    },
    {
      "trigger": "UpdateDetailFeature\tSddOpening",
      "contents": "UpdateDetailFeature(${1:sddopening})"
    },
    {
      "trigger": "UpdateError\tVisualizable",
      "contents": "UpdateError(${1:visualizable})"
    },
    {
      "trigger": "UpdateInterlock\tRobInterferenceZone",
      "contents": "UpdateInterlock(${1:robinterferencezone})"
    },
    {
      "trigger": "UpdateListOccurrences\tPLMCoreReference",
      "contents": "UpdateListOccurrences(${1:plmcorereference})"
    },
    {
      "trigger": "UpdatePartsToDisassemble\tMfgProcessOccurrence,PLMCoreReference",
      "contents": "UpdatePartsToDisassemble(${1:mfgprocessoccurrence}, ${2:plmcorereference})"
    },
    {
      "trigger": "UpdateRawMaterialQuantity\tElec3DCable",
      "contents": "UpdateRawMaterialQuantity(${1:elec3dcable})"
    },
    {
      "trigger": "UpdateResultingProduct\tMfgProcessOccurrence",
      "contents": "UpdateResultingProduct(${1:mfgprocessoccurrence})"
    },
    {
      "trigger": "UpdateResultingProductForFilter\tMfgProcessOccurrence,Product Configuration",
      "contents": "UpdateResultingProductForFilter(${1:mfgprocessoccurrence}, ${2:product configuration})"
    },
    {
      "trigger": "UpdateRoadPathway\tProductOccurrence,List,List,Real,Real,String",
      "contents": "UpdateRoadPathway(${1:productoccurrence}, ${2:list}, ${3:list}, ${4:real}, ${5:real}, ${6:name})"
    },
    {
      "trigger": "UpdateRoute\tFeature,ProductOccurrence,LogicalOccurrence",
      "contents": "UpdateRoute(${1:feat}, ${2:productoccurrence}, ${3:logicaloccurrence})"
    },
    {
      "trigger": "UpdateSchTextTemplatesFromInstances\tList,String",
      "contents": "UpdateSchTextTemplatesFromInstances(${1:list}, ${2:name})"
    },
    {
      "trigger": "UpdateSchTextTemplatesFromSheets\tList,String",
      "contents": "UpdateSchTextTemplatesFromSheets(${1:list}, ${2:name})"
    },
    {
      "trigger": "UpdateStandardForSDD\tStrSection",
      "contents": "UpdateStandardForSDD(${1:strsection})"
    },
    {
      "trigger": "UpdateStandardForSFD\tStrSection",
      "contents": "UpdateStandardForSFD(${1:strsection})"
    },
    {
      "trigger": "UpdateSymbolicIDOfObject\tVPMInstance",
      "contents": "UpdateSymbolicIDOfObject(${1:vpminstance})"
    },
    {
      "trigger": "UpdateView\tDrwView",
      "contents": "UpdateView(${1:drwview})"
    },
    {
      "trigger": "UpdateViewsForListOfOperations\tDELLmiPPRSystemReference,List,Integer,List,Boolean",
      "contents": "UpdateViewsForListOfOperations(${1:dellmipprsystemreference}, ${2:list}, ${3:int}, ${4:list}, ${5:bool})"
    },
    {
      "trigger": "UpgradeArrangeJunctionForSecondaryBranch\tSegmentExtremity",
      "contents": "UpgradeArrangeJunctionForSecondaryBranch(${1:segmentextremity})"
    },
    {
      "trigger": "UpgradeRotary\tToolDevice",
      "contents": "UpgradeRotary(${1:tooldevice})"
    },
    {
      "trigger": "UserInfoComment\tLiteral",
      "contents": "UserInfoComment(${1:literal})"
    },
    {
      "trigger": "UsingRRS2Server\tRRSConnectionMgr",
      "contents": "UsingRRS2Server(${1:rrsconnectionmgr})"
    },
    {
      "trigger": "Validate\tElecRoute,Boolean,Boolean",
      "contents": "Validate(${1:elecroute}, ${2:bool}, ${3:bool})"
    },
    {
      "trigger": "ValidateInsertion\tProduct,Integer,Product",
      "contents": "ValidateInsertion(${1:product}, ${2:int}, ${3:product})"
    },
    {
      "trigger": "ValidateTrajectory\tDELPointTrajectory",
      "contents": "ValidateTrajectory(${1:delpointtrajectory})"
    },
    {
      "trigger": "ValuatePointer\tPointer,ObjectType,String,String",
      "contents": "ValuatePointer(${1:pointer}, ${2:objecttype}, ${3:name}, ${4:name})"
    },
    {
      "trigger": "ValuateRanges\tPlmParameter,String,String,Integer,Integer",
      "contents": "ValuateRanges(${1:plmparameter}, ${2:name}, ${3:name}, ${4:int}, ${5:int})"
    },
    {
      "trigger": "ValuateTriple\tFeature,String",
      "contents": "ValuateTriple(${1:feat}, ${2:name})"
    },
    {
      "trigger": "ValuateTriple\tFeature,String,String",
      "contents": "ValuateTriple(${1:feat}, ${2:name}, ${3:name})"
    },
    {
      "trigger": "Vector\tDirection",
      "contents": "Vector(${1:direction})"
    },
    {
      "trigger": "VerifyConsistency\tPLMKbaAppliComponent,KWECheck",
      "contents": "VerifyConsistency(${1:plmkbaapplicomponent}, ${2:kwecheck})"
    },
    {
      "trigger": "Vertices\tGeometricObject",
      "contents": "Vertices(${1:geometricobject})"
    },
    {
      "trigger": "Volume\tGeometricVolume",
      "contents": "Volume(${1:geometricvolume})"
    },
    {
      "trigger": "Voronoi3D\tList,List,List,Boolean",
      "contents": "Voronoi3D(${1:list}, ${2:list}, ${3:list}, ${4:bool})"
    },
    {
      "trigger": "WhereClassified\tComponentFamilyItem",
      "contents": "WhereClassified(${1:componentfamilyitem})"
    },
    {
      "trigger": "Width\tBitmap",
      "contents": "Width(${1:bitmap})"
    },
    {
      "trigger": "Write\tTextFile,String,ObjectType",
      "contents": "Write(${1:textfile}, ${2:name}, ${3:objecttype})"
    },
    {
      "trigger": "X\tGeometricPoint",
      "contents": "X(${1:geometricpoint})"
    },
    {
      "trigger": "XDirection\tGeometricPlane",
      "contents": "XDirection(${1:geometricplane})"
    },
    {
      "trigger": "XPathQuery\tXMLNode,String",
      "contents": "XPathQuery(${1:xmlnode}, ${2:name})"
    },
    {
      "trigger": "Y\tGeometricPoint",
      "contents": "Y(${1:geometricpoint})"
    },
    {
      "trigger": "YDirection\tGeometricPlane",
      "contents": "YDirection(${1:geometricplane})"
    },
    {
      "trigger": "Z\tGeometricPoint",
      "contents": "Z(${1:geometricpoint})"
    },
    {
      "trigger": "ZDirection\tGeometricPlane",
      "contents": "ZDirection(${1:geometricplane})"
    },
    {
      "trigger": "abs\tReal",
      "contents": "abs(${1:real})"
    },
    {
      "trigger": "acos\tReal",
      "contents": "acos(${1:real})"
    },
    {
      "trigger": "acosh\tReal",
      "contents": "acosh(${1:real})"
    },
    {
      "trigger": "affinity\tWireframe,Point,Plane,Line,Real,Real,Real",
      "contents": "affinity(${1:wireframe}, ${2:point}, ${3:plane}, ${4:line}, ${5:real}, ${6:real}, ${7:real})"
    },
    {
      "trigger": "angle\tDirection,Direction",
      "contents": "angle(${1:direction}, ${2:direction})"
    },
    {
      "trigger": "angle\tPoint,Point,Point",
      "contents": "angle(${1:point}, ${2:point}, ${3:point})"
    },
    {
      "trigger": "angleoriented\tDirection,Direction,Direction",
      "contents": "angleoriented(${1:direction}, ${2:direction}, ${3:direction})"
    },
    {
      "trigger": "area\tCATFace",
      "contents": "area(${1:catface})"
    },
    {
      "trigger": "asin\tReal",
      "contents": "asin(${1:real})"
    },
    {
      "trigger": "asinh\tReal",
      "contents": "asinh(${1:real})"
    },
    {
      "trigger": "assemble\tCurve",
      "contents": "assemble(${1:curve})"
    },
    {
      "trigger": "assemble\tList,Boolean,Boolean,Boolean,LENGTH,ANGLE,List",
      "contents": "assemble(${1:list}, ${2:bool}, ${3:bool}, ${4:bool}, ${5:len}, ${6:angle}, ${7:list})"
    },
    {
      "trigger": "atan2\tReal,Real",
      "contents": "atan2(${1:real}, ${2:real})"
    },
    {
      "trigger": "atan\tReal",
      "contents": "atan(${1:real})"
    },
    {
      "trigger": "atanh\tReal",
      "contents": "atanh(${1:real})"
    },
    {
      "trigger": "axis\tCurve",
      "contents": "axis(${1:curve})"
    },
    {
      "trigger": "axisSystem\tPoint,Direction,Direction,Direction",
      "contents": "axisSystem(${1:point}, ${2:direction}, ${3:direction}, ${4:direction})"
    },
    {
      "trigger": "binormal\tCurve,Point",
      "contents": "binormal(${1:curve}, ${2:point})"
    },
    {
      "trigger": "blend\tCurve,Surface,Curve,Surface,Integer,Integer,Real,Real",
      "contents": "blend(${1:curve}, ${2:surface}, ${3:curve}, ${4:surface}, ${5:int}, ${6:int}, ${7:real}, ${8:real})"
    },
    {
      "trigger": "boundary\tSurface",
      "contents": "boundary(${1:surface})"
    },
    {
      "trigger": "ceil\tReal",
      "contents": "ceil(${1:real})"
    },
    {
      "trigger": "center\tCircle",
      "contents": "center(${1:circle})"
    },
    {
      "trigger": "centerofgravity\tBody",
      "contents": "centerofgravity(${1:body})"
    },
    {
      "trigger": "centerofgravity\tBody,LENGTH,LENGTH,LENGTH",
      "contents": "centerofgravity(${1:body}, ${2:len}, ${3:len}, ${4:len})"
    },
    {
      "trigger": "circle2PtsRadius\tPoint,Point,Surface,LENGTH,Boolean,Integer",
      "contents": "circle2PtsRadius(${1:point}, ${2:point}, ${3:surface}, ${4:len}, ${5:bool}, ${6:int})"
    },
    {
      "trigger": "circle3Pts\tPoint,Point,Point,Integer",
      "contents": "circle3Pts(${1:point}, ${2:point}, ${3:point}, ${4:int})"
    },
    {
      "trigger": "circleBitgtPoint\tCurve,Curve,Point,Surface,Boolean,Boolean,Integer",
      "contents": "circleBitgtPoint(${1:curve}, ${2:curve}, ${3:point}, ${4:surface}, ${5:bool}, ${6:bool}, ${7:int})"
    },
    {
      "trigger": "circleBitgtRadius\tCurve,Curve,Surface,LENGTH,Boolean,Boolean,Integer",
      "contents": "circleBitgtRadius(${1:curve}, ${2:curve}, ${3:surface}, ${4:len}, ${5:bool}, ${6:bool}, ${7:int})"
    },
    {
      "trigger": "circleCtrAxis\tLine,Point,LENGTH,ANGLE,ANGLE,Boolean,Integer",
      "contents": "circleCtrAxis(${1:line}, ${2:point}, ${3:len}, ${4:angle}, ${5:angle}, ${6:bool}, ${7:int})"
    },
    {
      "trigger": "circleCtrPt\tPoint,Point,Surface,Integer,ANGLE,ANGLE",
      "contents": "circleCtrPt(${1:point}, ${2:point}, ${3:surface}, ${4:int}, ${5:angle}, ${6:angle})"
    },
    {
      "trigger": "circleCtrRadius\tPoint,Surface,LENGTH,Integer,ANGLE,ANGLE",
      "contents": "circleCtrRadius(${1:point}, ${2:surface}, ${3:len}, ${4:int}, ${5:angle}, ${6:angle})"
    },
    {
      "trigger": "circleCtrtgt\tCurve,Curve,Boolean,Boolean,Surface,LENGTH,Boolean,Boolean",
      "contents": "circleCtrtgt(${1:curve}, ${2:curve}, ${3:bool}, ${4:bool}, ${5:surface}, ${6:len}, ${7:bool}, ${8:bool})"
    },
    {
      "trigger": "circleCtrtgt\tPoint,Curve,Boolean,Boolean,Surface",
      "contents": "circleCtrtgt(${1:point}, ${2:curve}, ${3:bool}, ${4:bool}, ${5:surface})"
    },
    {
      "trigger": "circleTritgt\tCurve,Curve,Curve,Surface,Boolean,Boolean,Boolean,Integer",
      "contents": "circleTritgt(${1:curve}, ${2:curve}, ${3:curve}, ${4:surface}, ${5:bool}, ${6:bool}, ${7:bool}, ${8:int})"
    },
    {
      "trigger": "clock\t()",
      "contents": "clock()"
    },
    {
      "trigger": "conicsweep2GuideCurves\tCurve,Surface,Curve,Surface,Curve",
      "contents": "conicsweep2GuideCurves(${1:curve}, ${2:surface}, ${3:curve}, ${4:surface}, ${5:curve})"
    },
    {
      "trigger": "conicsweep3GuideCurves\tCurve,Surface,Curve,Curve,Surface,Curve",
      "contents": "conicsweep3GuideCurves(${1:curve}, ${2:surface}, ${3:curve}, ${4:curve}, ${5:surface}, ${6:curve})"
    },
    {
      "trigger": "conicsweep4GuideCurves\tCurve,Surface,Curve,Curve,Curve,Curve",
      "contents": "conicsweep4GuideCurves(${1:curve}, ${2:surface}, ${3:curve}, ${4:curve}, ${5:curve}, ${6:curve})"
    },
    {
      "trigger": "conicsweep5GuideCurves\tCurve,Curve,Curve,Curve,Curve,Curve",
      "contents": "conicsweep5GuideCurves(${1:curve}, ${2:curve}, ${3:curve}, ${4:curve}, ${5:curve}, ${6:curve})"
    },
    {
      "trigger": "coord\tPoint,Integer,AxisSystem",
      "contents": "coord(${1:point}, ${2:int}, ${3:axissystem})"
    },
    {
      "trigger": "coord\tPoint,LENGTH,LENGTH,LENGTH,AxisSystem",
      "contents": "coord(${1:point}, ${2:len}, ${3:len}, ${4:len}, ${5:axissystem})"
    },
    {
      "trigger": "corner\tCurve,Curve,Surface,LENGTH,Boolean,Boolean,Boolean",
      "contents": "corner(${1:curve}, ${2:curve}, ${3:surface}, ${4:len}, ${5:bool}, ${6:bool}, ${7:bool})"
    },
    {
      "trigger": "cos\tReal",
      "contents": "cos(${1:real})"
    },
    {
      "trigger": "cosh\tReal",
      "contents": "cosh(${1:real})"
    },
    {
      "trigger": "curvature\tCurve,Point",
      "contents": "curvature(${1:curve}, ${2:point})"
    },
    {
      "trigger": "curvaturecenter\tCurve,Point",
      "contents": "curvaturecenter(${1:curve}, ${2:point})"
    },
    {
      "trigger": "curveparallel\tCurve,Surface,LENGTH,Boolean",
      "contents": "curveparallel(${1:curve}, ${2:surface}, ${3:len}, ${4:bool})"
    },
    {
      "trigger": "curvesmooth\tCurve,ANGLE,LENGTH,Integer,Boolean",
      "contents": "curvesmooth(${1:curve}, ${2:angle}, ${3:len}, ${4:int}, ${5:bool})"
    },
    {
      "trigger": "direction\tLENGTH,LENGTH,LENGTH",
      "contents": "direction(${1:len}, ${2:len}, ${3:len})"
    },
    {
      "trigger": "direction\tLine",
      "contents": "direction(${1:line})"
    },
    {
      "trigger": "disassemble\tBody,Boolean",
      "contents": "disassemble(${1:body}, ${2:bool})"
    },
    {
      "trigger": "distance\tBody,Body",
      "contents": "distance(${1:body}, ${2:body})"
    },
    {
      "trigger": "distancedir\tBody,Body,Direction",
      "contents": "distancedir(${1:body}, ${2:body}, ${3:direction})"
    },
    {
      "trigger": "exp\tReal",
      "contents": "exp(${1:real})"
    },
    {
      "trigger": "extract\tCATCell,Integer",
      "contents": "extract(${1:catcell}, ${2:int})"
    },
    {
      "trigger": "extrapolate\tList,Feature,Feature,Integer,Integer,Integer",
      "contents": "extrapolate(${1:list}, ${2:feat}, ${3:feat}, ${4:int}, ${5:int}, ${6:int})"
    },
    {
      "trigger": "extremum\tCurve,Direction,Boolean,Direction,Boolean,Direction,Boolean",
      "contents": "extremum(${1:curve}, ${2:direction}, ${3:bool}, ${4:direction}, ${5:bool}, ${6:direction}, ${7:bool})"
    },
    {
      "trigger": "extrude\tCurve,Direction,LENGTH,LENGTH,Boolean",
      "contents": "extrude(${1:curve}, ${2:direction}, ${3:len}, ${4:len}, ${5:bool})"
    },
    {
      "trigger": "far\tCurve,Wireframe",
      "contents": "far(${1:curve}, ${2:wireframe})"
    },
    {
      "trigger": "fill\tCurve",
      "contents": "fill(${1:curve})"
    },
    {
      "trigger": "fill\tList,List,Integer",
      "contents": "fill(${1:list}, ${2:list}, ${3:int})"
    },
    {
      "trigger": "floor\tReal",
      "contents": "floor(${1:real})"
    },
    {
      "trigger": "getCurrentVaultNameFromContext\t()",
      "contents": "getCurrentVaultNameFromContext()"
    },
    {
      "trigger": "inertiaAxis\tInteger,Body",
      "contents": "inertiaAxis(${1:int}, ${2:body})"
    },
    {
      "trigger": "int\tReal",
      "contents": "int(${1:real})"
    },
    {
      "trigger": "intersect\tCurve,Curve",
      "contents": "intersect(${1:curve}, ${2:curve})"
    },
    {
      "trigger": "intersect\tCurve,Curve,Boolean,Boolean",
      "contents": "intersect(${1:curve}, ${2:curve}, ${3:bool}, ${4:bool})"
    },
    {
      "trigger": "invert\tWireframe",
      "contents": "invert(${1:wireframe})"
    },
    {
      "trigger": "isoparamcurve\tSurface,Point,Line",
      "contents": "isoparamcurve(${1:surface}, ${2:point}, ${3:line})"
    },
    {
      "trigger": "length\tCATEdge",
      "contents": "length(${1:catedge})"
    },
    {
      "trigger": "length\tCurve,Point,Boolean",
      "contents": "length(${1:curve}, ${2:point}, ${3:bool})"
    },
    {
      "trigger": "line\tPoint,Direction,LENGTH,LENGTH,Boolean",
      "contents": "line(${1:point}, ${2:direction}, ${3:len}, ${4:len}, ${5:bool})"
    },
    {
      "trigger": "line\tPoint,Point",
      "contents": "line(${1:point}, ${2:point})"
    },
    {
      "trigger": "line\tPoint,Point,Plane,LENGTH,Feature,LENGTH,Feature,Integer",
      "contents": "line(${1:point}, ${2:point}, ${3:plane}, ${4:len}, ${5:feat}, ${6:len}, ${7:feat}, ${8:int})"
    },
    {
      "trigger": "lineangle\tCurve,Surface,Point,Boolean,LENGTH,LENGTH,ANGLE,Boolean",
      "contents": "lineangle(${1:curve}, ${2:surface}, ${3:point}, ${4:bool}, ${5:len}, ${6:len}, ${7:angle}, ${8:bool})"
    },
    {
      "trigger": "linenormal\tSurface,Point,LENGTH,LENGTH,Boolean",
      "contents": "linenormal(${1:surface}, ${2:point}, ${3:len}, ${4:len}, ${5:bool})"
    },
    {
      "trigger": "linetangent\tCurve,Point,LENGTH,LENGTH,Boolean",
      "contents": "linetangent(${1:curve}, ${2:point}, ${3:len}, ${4:len}, ${5:bool})"
    },
    {
      "trigger": "ln\tReal",
      "contents": "ln(${1:real})"
    },
    {
      "trigger": "loft\tList,List",
      "contents": "loft(${1:list}, ${2:list})"
    },
    {
      "trigger": "loft\tList,List,List",
      "contents": "loft(${1:list}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "loft\tList,List,List,List,List,List,List,List,Integer",
      "contents": "loft(${1:list}, ${2:list}, ${3:list}, ${4:list}, ${5:list}, ${6:list}, ${7:list}, ${8:list}, ${9:int})"
    },
    {
      "trigger": "log\tReal",
      "contents": "log(${1:real})"
    },
    {
      "trigger": "mainnormal\tCurve,Point",
      "contents": "mainnormal(${1:curve}, ${2:point})"
    },
    {
      "trigger": "max\tReal,Real",
      "contents": "max(${1:real}, ${2:real})"
    },
    {
      "trigger": "midSurface\tVolumeGeo,Boolean,LENGTH,Boolean,Boolean",
      "contents": "midSurface(${1:volumegeo}, ${2:bool}, ${3:len}, ${4:bool}, ${5:bool})"
    },
    {
      "trigger": "min\tReal,Real",
      "contents": "min(${1:real}, ${2:real})"
    },
    {
      "trigger": "minimumCurvatureRadius\tCurve",
      "contents": "minimumCurvatureRadius(${1:curve})"
    },
    {
      "trigger": "mod\tReal,Integer",
      "contents": "mod(${1:real}, ${2:int})"
    },
    {
      "trigger": "nbDomains\tBody",
      "contents": "nbDomains(${1:body})"
    },
    {
      "trigger": "near\tCurve,Wireframe",
      "contents": "near(${1:curve}, ${2:wireframe})"
    },
    {
      "trigger": "new\tString,String,ObjectType,ObjectType",
      "contents": "new(${1:name}, ${2:name}, ${3:objecttype}, ${4:objecttype})"
    },
    {
      "trigger": "newInList\tString,String,BaseConcept,List,ObjectType",
      "contents": "newInList(${1:name}, ${2:name}, ${3:baseconcept}, ${4:list}, ${5:objecttype})"
    },
    {
      "trigger": "newInit\tString,ObjectType,ObjectType",
      "contents": "newInit(${1:name}, ${2:objecttype}, ${3:objecttype})"
    },
    {
      "trigger": "normalnormal\tDirection,Curve,Point",
      "contents": "normalnormal(${1:direction}, ${2:curve}, ${3:point})"
    },
    {
      "trigger": "not\tBoolean",
      "contents": "not(${1:bool})"
    },
    {
      "trigger": "offset3DCurve\tCurve,Direction,LENGTH,LENGTH,Real",
      "contents": "offset3DCurve(${1:curve}, ${2:direction}, ${3:len}, ${4:len}, ${5:real})"
    },
    {
      "trigger": "offset\tSurface,LENGTH,Boolean",
      "contents": "offset(${1:surface}, ${2:len}, ${3:bool})"
    },
    {
      "trigger": "perimeter\tSurface",
      "contents": "perimeter(${1:surface})"
    },
    {
      "trigger": "plane\tCurve",
      "contents": "plane(${1:curve})"
    },
    {
      "trigger": "plane\tLine,Line",
      "contents": "plane(${1:line}, ${2:line})"
    },
    {
      "trigger": "plane\tPoint,Point,Point",
      "contents": "plane(${1:point}, ${2:point}, ${3:point})"
    },
    {
      "trigger": "plane\tReal,Real,Real,LENGTH",
      "contents": "plane(${1:real}, ${2:real}, ${3:real}, ${4:len})"
    },
    {
      "trigger": "planeangle\tPlane,Line,ANGLE,Boolean",
      "contents": "planeangle(${1:plane}, ${2:line}, ${3:angle}, ${4:bool})"
    },
    {
      "trigger": "planemean\tPoint",
      "contents": "planemean(${1:point})"
    },
    {
      "trigger": "planenormal\tCurve,Point",
      "contents": "planenormal(${1:curve}, ${2:point})"
    },
    {
      "trigger": "planeoffset\tPlane,LENGTH,Boolean",
      "contents": "planeoffset(${1:plane}, ${2:len}, ${3:bool})"
    },
    {
      "trigger": "planeoffset\tPlane,Point",
      "contents": "planeoffset(${1:plane}, ${2:point})"
    },
    {
      "trigger": "planetangent\tSurface,Point",
      "contents": "planetangent(${1:surface}, ${2:point})"
    },
    {
      "trigger": "point2dto3d\t2DPoint",
      "contents": "point2dto3d(${1:2dpoint})"
    },
    {
      "trigger": "point\tLENGTH,LENGTH,LENGTH",
      "contents": "point(${1:len}, ${2:len}, ${3:len})"
    },
    {
      "trigger": "pointbetween\tPoint,Point,Real,Boolean",
      "contents": "pointbetween(${1:point}, ${2:point}, ${3:real}, ${4:bool})"
    },
    {
      "trigger": "pointoncurve\tCurve,Point,LENGTH,Boolean",
      "contents": "pointoncurve(${1:curve}, ${2:point}, ${3:len}, ${4:bool})"
    },
    {
      "trigger": "pointoncurveRatio\tCurve,Point,Real,Boolean",
      "contents": "pointoncurveRatio(${1:curve}, ${2:point}, ${3:real}, ${4:bool})"
    },
    {
      "trigger": "pointonplane\tPlane,Point,LENGTH,LENGTH",
      "contents": "pointonplane(${1:plane}, ${2:point}, ${3:len}, ${4:len})"
    },
    {
      "trigger": "pointonsurface\tSurface,Point,Direction,LENGTH",
      "contents": "pointonsurface(${1:surface}, ${2:point}, ${3:direction}, ${4:len})"
    },
    {
      "trigger": "pointtangent\tCurve,Direction",
      "contents": "pointtangent(${1:curve}, ${2:direction})"
    },
    {
      "trigger": "polyline\tBoolean,List,List",
      "contents": "polyline(${1:bool}, ${2:list}, ${3:list})"
    },
    {
      "trigger": "polyline\tBoolean,Point",
      "contents": "polyline(${1:bool}, ${2:point})"
    },
    {
      "trigger": "project\tCurve,Surface,Direction",
      "contents": "project(${1:curve}, ${2:surface}, ${3:direction})"
    },
    {
      "trigger": "revolve\tCurve,Line,ANGLE,ANGLE",
      "contents": "revolve(${1:curve}, ${2:line}, ${3:angle}, ${4:angle})"
    },
    {
      "trigger": "rotate\tWireframe,Line,ANGLE",
      "contents": "rotate(${1:wireframe}, ${2:line}, ${3:angle})"
    },
    {
      "trigger": "round\tReal",
      "contents": "round(${1:real})"
    },
    {
      "trigger": "round\tReal,String,Integer",
      "contents": "round(${1:real}, ${2:name}, ${3:int})"
    },
    {
      "trigger": "scaling\tWireframe,Wireframe,Real",
      "contents": "scaling(${1:wireframe}, ${2:wireframe}, ${3:real})"
    },
    {
      "trigger": "sin\tReal",
      "contents": "sin(${1:real})"
    },
    {
      "trigger": "sinh\tReal",
      "contents": "sinh(${1:real})"
    },
    {
      "trigger": "smartVolume\tSolid",
      "contents": "smartVolume(${1:solid})"
    },
    {
      "trigger": "smartWetarea\tSolid",
      "contents": "smartWetarea(${1:solid})"
    },
    {
      "trigger": "spline\tList,List,List,Surface",
      "contents": "spline(${1:list}, ${2:list}, ${3:list}, ${4:surface})"
    },
    {
      "trigger": "spline\tPoint",
      "contents": "spline(${1:point})"
    },
    {
      "trigger": "split\tCurve,Wireframe,Boolean",
      "contents": "split(${1:curve}, ${2:wireframe}, ${3:bool})"
    },
    {
      "trigger": "split\tCurve,Wireframe,Boolean,List,List",
      "contents": "split(${1:curve}, ${2:wireframe}, ${3:bool}, ${4:list}, ${5:list})"
    },
    {
      "trigger": "sqrt\tReal",
      "contents": "sqrt(${1:real})"
    },
    {
      "trigger": "symmetry\tWireframe,Wireframe",
      "contents": "symmetry(${1:wireframe}, ${2:wireframe})"
    },
    {
      "trigger": "tan\tReal",
      "contents": "tan(${1:real})"
    },
    {
      "trigger": "tanh\tReal",
      "contents": "tanh(${1:real})"
    },
    {
      "trigger": "tessellate\tCurve",
      "contents": "tessellate(${1:curve})"
    },
    {
      "trigger": "translate\tWireframe,Direction,LENGTH",
      "contents": "translate(${1:wireframe}, ${2:direction}, ${3:len})"
    },
    {
      "trigger": "translatePtPt\tWireframe,Point,Point",
      "contents": "translatePtPt(${1:wireframe}, ${2:point}, ${3:point})"
    },
    {
      "trigger": "trim\tCurve,Boolean,Curve,Boolean",
      "contents": "trim(${1:curve}, ${2:bool}, ${3:curve}, ${4:bool})"
    },
    {
      "trigger": "volume\tSurface",
      "contents": "volume(${1:surface})"
    },
    {
      "trigger": "AECAlignment\tType",
      "contents": "AECAlignment"
    },
    {
      "trigger": "AECAlignment2DHorizontal\tType",
      "contents": "AECAlignment2DHorizontal"
    },
    {
      "trigger": "AECAlignment2DVertical\tType",
      "contents": "AECAlignment2DVertical"
    },
    {
      "trigger": "AECAlignment3D\tType",
      "contents": "AECAlignment3D"
    },
    {
      "trigger": "AECAlignment3DCurve\tType",
      "contents": "AECAlignment3DCurve"
    },
    {
      "trigger": "AECAlignmentPoint\tType",
      "contents": "AECAlignmentPoint"
    },
    {
      "trigger": "AECAlignmentSweep\tType",
      "contents": "AECAlignmentSweep"
    },
    {
      "trigger": "AECAxisSystem\tType",
      "contents": "AECAxisSystem"
    },
    {
      "trigger": "AECBoundary\tType",
      "contents": "AECBoundary"
    },
    {
      "trigger": "AECHorizontalArc\tType",
      "contents": "AECHorizontalArc"
    },
    {
      "trigger": "AECHorizontalClothoid\tType",
      "contents": "AECHorizontalClothoid"
    },
    {
      "trigger": "AECHorizontalNetwork\tType",
      "contents": "AECHorizontalNetwork"
    },
    {
      "trigger": "AECHorizontalTangent\tType",
      "contents": "AECHorizontalTangent"
    },
    {
      "trigger": "AECHorizontalTransition\tType",
      "contents": "AECHorizontalTransition"
    },
    {
      "trigger": "AECLaneType\tType",
      "contents": "AECLaneType"
    },
    {
      "trigger": "AECModifiedTerrain\tType",
      "contents": "AECModifiedTerrain"
    },
    {
      "trigger": "AECPipeline\tType",
      "contents": "AECPipeline"
    },
    {
      "trigger": "AECRailwaySurfaceMainCurve\tType",
      "contents": "AECRailwaySurfaceMainCurve"
    },
    {
      "trigger": "AECRebarAccessory\tType",
      "contents": "AECRebarAccessory"
    },
    {
      "trigger": "AECRebarGroup\tType",
      "contents": "AECRebarGroup"
    },
    {
      "trigger": "AECRebarLayer\tType",
      "contents": "AECRebarLayer"
    },
    {
      "trigger": "AECRebarSide\tType",
      "contents": "AECRebarSide"
    },
    {
      "trigger": "AECRebarSingleBar\tType",
      "contents": "AECRebarSingleBar"
    },
    {
      "trigger": "AECRebarSingleBarSection\tType",
      "contents": "AECRebarSingleBarSection"
    },
    {
      "trigger": "AECRoadSet\tType",
      "contents": "AECRoadSet"
    },
    {
      "trigger": "AECRoadSurfaceMainCurve\tType",
      "contents": "AECRoadSurfaceMainCurve"
    },
    {
      "trigger": "AECSectionSketch\tType",
      "contents": "AECSectionSketch"
    },
    {
      "trigger": "AECSketch\tType",
      "contents": "AECSketch"
    },
    {
      "trigger": "AECSlopeProtection\tType",
      "contents": "AECSlopeProtection"
    },
    {
      "trigger": "AECSubgradeSection\tType",
      "contents": "AECSubgradeSection"
    },
    {
      "trigger": "AECTangentGrade\tType",
      "contents": "AECTangentGrade"
    },
    {
      "trigger": "AECVehicleType\tType",
      "contents": "AECVehicleType"
    },
    {
      "trigger": "AECVerticalAlignmentPoint\tType",
      "contents": "AECVerticalAlignmentPoint"
    },
    {
      "trigger": "AECVerticalArc\tType",
      "contents": "AECVerticalArc"
    },
    {
      "trigger": "AECVerticalCurve\tType",
      "contents": "AECVerticalCurve"
    },
    {
      "trigger": "AECVerticalParabola\tType",
      "contents": "AECVerticalParabola"
    },
    {
      "trigger": "AECVerticalTransition\tType",
      "contents": "AECVerticalTransition"
    },
    {
      "trigger": "AGT2Connector\tType",
      "contents": "AGT2Connector"
    },
    {
      "trigger": "AGT2CoveringPanelSet\tType",
      "contents": "AGT2CoveringPanelSet"
    },
    {
      "trigger": "AGT2Sill\tType",
      "contents": "AGT2Sill"
    },
    {
      "trigger": "AGTCeiling\tType",
      "contents": "AGTCeiling"
    },
    {
      "trigger": "AGTCeilingPanelFeature\tType",
      "contents": "AGTCeilingPanelFeature"
    },
    {
      "trigger": "AGTCovering\tType",
      "contents": "AGTCovering"
    },
    {
      "trigger": "AGTCoveringPanelFeature\tType",
      "contents": "AGTCoveringPanelFeature"
    },
    {
      "trigger": "AGTWall\tType",
      "contents": "AGTWall"
    },
    {
      "trigger": "AGTWallPanelFeature\tType",
      "contents": "AGTWallPanelFeature"
    },
    {
      "trigger": "APTImport\tType",
      "contents": "APTImport"
    },
    {
      "trigger": "ASDAlignmentSectionView\tType",
      "contents": "ASDAlignmentSectionView"
    },
    {
      "trigger": "ASDAlignmentView\tType",
      "contents": "ASDAlignmentView"
    },
    {
      "trigger": "ASDAnnotation\tType",
      "contents": "ASDAnnotation"
    },
    {
      "trigger": "ASDAttributeSet\tType",
      "contents": "ASDAttributeSet"
    },
    {
      "trigger": "ASDAutomationProcessContext\tType",
      "contents": "ASDAutomationProcessContext"
    },
    {
      "trigger": "ASDBox\tType",
      "contents": "ASDBox"
    },
    {
      "trigger": "ASDBreakSymbol\tType",
      "contents": "ASDBreakSymbol"
    },
    {
      "trigger": "ASDContinuousSymbol\tType",
      "contents": "ASDContinuousSymbol"
    },
    {
      "trigger": "ASDDressup\tType",
      "contents": "ASDDressup"
    },
    {
      "trigger": "ASDDressupTemplate\tType",
      "contents": "ASDDressupTemplate"
    },
    {
      "trigger": "ASDGenerativeTable\tType",
      "contents": "ASDGenerativeTable"
    },
    {
      "trigger": "ASDHorizontalAlignmentView\tType",
      "contents": "ASDHorizontalAlignmentView"
    },
    {
      "trigger": "ASDRCPView\tType",
      "contents": "ASDRCPView"
    },
    {
      "trigger": "ASDSheet\tType",
      "contents": "ASDSheet"
    },
    {
      "trigger": "ASDSheetTemplate\tType",
      "contents": "ASDSheetTemplate"
    },
    {
      "trigger": "ASDSheetZone\tType",
      "contents": "ASDSheetZone"
    },
    {
      "trigger": "ASDSpecAbstract\tType",
      "contents": "ASDSpecAbstract"
    },
    {
      "trigger": "ASDSpecAlignmentSectionView\tType",
      "contents": "ASDSpecAlignmentSectionView"
    },
    {
      "trigger": "ASDSpecAlignmentView\tType",
      "contents": "ASDSpecAlignmentView"
    },
    {
      "trigger": "ASDSpecDrawing\tType",
      "contents": "ASDSpecDrawing"
    },
    {
      "trigger": "ASDSpecDrawingAbstract\tType",
      "contents": "ASDSpecDrawingAbstract"
    },
    {
      "trigger": "ASDSpecFrontView\tType",
      "contents": "ASDSpecFrontView"
    },
    {
      "trigger": "ASDSpecGenViewAbstract\tType",
      "contents": "ASDSpecGenViewAbstract"
    },
    {
      "trigger": "ASDSpecHorizontalAlignmentView\tType",
      "contents": "ASDSpecHorizontalAlignmentView"
    },
    {
      "trigger": "ASDSpecSheet\tType",
      "contents": "ASDSpecSheet"
    },
    {
      "trigger": "ASDSpecSheetAbstract\tType",
      "contents": "ASDSpecSheetAbstract"
    },
    {
      "trigger": "ASDSpecStructuralView\tType",
      "contents": "ASDSpecStructuralView"
    },
    {
      "trigger": "ASDSpecVerticalAlignmentView\tType",
      "contents": "ASDSpecVerticalAlignmentView"
    },
    {
      "trigger": "ASDSpecViewAbstract\tType",
      "contents": "ASDSpecViewAbstract"
    },
    {
      "trigger": "ASDSpecViewBox\tType",
      "contents": "ASDSpecViewBox"
    },
    {
      "trigger": "ASDSpecViewPositionAlignment\tType",
      "contents": "ASDSpecViewPositionAlignment"
    },
    {
      "trigger": "ASDStructuralView\tType",
      "contents": "ASDStructuralView"
    },
    {
      "trigger": "ASDSymbolAnnotation\tType",
      "contents": "ASDSymbolAnnotation"
    },
    {
      "trigger": "ASDSymbolType\tType",
      "contents": "ASDSymbolType"
    },
    {
      "trigger": "ASDTableTemplate\tType",
      "contents": "ASDTableTemplate"
    },
    {
      "trigger": "ASDVerticalAlignmentView\tType",
      "contents": "ASDVerticalAlignmentView"
    },
    {
      "trigger": "ASDView\tType",
      "contents": "ASDView"
    },
    {
      "trigger": "ASDViewTemplate\tType",
      "contents": "ASDViewTemplate"
    },
    {
      "trigger": "ASDZoneItem\tType",
      "contents": "ASDZoneItem"
    },
    {
      "trigger": "ASLHole\tType",
      "contents": "ASLHole"
    },
    {
      "trigger": "AccessoryChange\tType",
      "contents": "AccessoryChange"
    },
    {
      "trigger": "Add\tType",
      "contents": "Add"
    },
    {
      "trigger": "AdditionalTool\tType",
      "contents": "AdditionalTool"
    },
    {
      "trigger": "AdvStatusSemanticAnnotation\tType",
      "contents": "AdvStatusSemanticAnnotation"
    },
    {
      "trigger": "AdvisorAction\tType",
      "contents": "AdvisorAction"
    },
    {
      "trigger": "AdvisorCheck\tType",
      "contents": "AdvisorCheck"
    },
    {
      "trigger": "AdvisorConnection\tType",
      "contents": "AdvisorConnection"
    },
    {
      "trigger": "AdvisorEquivalentDimensions\tType",
      "contents": "AdvisorEquivalentDimensions"
    },
    {
      "trigger": "AdvisorFeature\tType",
      "contents": "AdvisorFeature"
    },
    {
      "trigger": "AdvisorFormula\tType",
      "contents": "AdvisorFormula"
    },
    {
      "trigger": "AdvisorLaw\tType",
      "contents": "AdvisorLaw"
    },
    {
      "trigger": "AdvisorMacrosSet\tType",
      "contents": "AdvisorMacrosSet"
    },
    {
      "trigger": "AdvisorParameterSet\tType",
      "contents": "AdvisorParameterSet"
    },
    {
      "trigger": "AdvisorReaction\tType",
      "contents": "AdvisorReaction"
    },
    {
      "trigger": "AdvisorRelation\tType",
      "contents": "AdvisorRelation"
    },
    {
      "trigger": "AdvisorRelationSet\tType",
      "contents": "AdvisorRelationSet"
    },
    {
      "trigger": "AdvisorRootRelation\tType",
      "contents": "AdvisorRootRelation"
    },
    {
      "trigger": "AdvisorRule\tType",
      "contents": "AdvisorRule"
    },
    {
      "trigger": "AdvisorSetOfEquations\tType",
      "contents": "AdvisorSetOfEquations"
    },
    {
      "trigger": "AnchorPointEnum\tType",
      "contents": "AnchorPointEnum"
    },
    {
      "trigger": "AnnDimension\tType",
      "contents": "AnnDimension"
    },
    {
      "trigger": "AnnIndicatorEdge\tType",
      "contents": "AnnIndicatorEdge"
    },
    {
      "trigger": "AnnTransitionSymbol\tType",
      "contents": "AnnTransitionSymbol"
    },
    {
      "trigger": "AnnViewText\tType",
      "contents": "AnnViewText"
    },
    {
      "trigger": "ApplicationContext\tType",
      "contents": "ApplicationContext"
    },
    {
      "trigger": "ApproachDirection\tType",
      "contents": "ApproachDirection"
    },
    {
      "trigger": "ArcTrajectoryType\tType",
      "contents": "ArcTrajectoryType"
    },
    {
      "trigger": "AreaInstance\tType",
      "contents": "AreaInstance"
    },
    {
      "trigger": "AreaRef\tType",
      "contents": "AreaRef"
    },
    {
      "trigger": "Assemble\tType",
      "contents": "Assemble"
    },
    {
      "trigger": "Assembly\tType",
      "contents": "Assembly"
    },
    {
      "trigger": "AssemblyStation\tType",
      "contents": "AssemblyStation"
    },
    {
      "trigger": "AssociativityModeEnum\tType",
      "contents": "AssociativityModeEnum"
    },
    {
      "trigger": "AutoDraft\tType",
      "contents": "AutoDraft"
    },
    {
      "trigger": "AutoFillet\tType",
      "contents": "AutoFillet"
    },
    {
      "trigger": "AuxiliaryOperation\tType",
      "contents": "AuxiliaryOperation"
    },
    {
      "trigger": "AxialDeltaDepthMode_DefDiaInc\tType",
      "contents": "AxialDeltaDepthMode_DefDiaInc"
    },
    {
      "trigger": "AxialDeltaDepthMode_DefInc\tType",
      "contents": "AxialDeltaDepthMode_DefInc"
    },
    {
      "trigger": "AxialDeltaDepthMode_DefTip\tType",
      "contents": "AxialDeltaDepthMode_DefTip"
    },
    {
      "trigger": "AxialDeltaDepthMode_TipInc\tType",
      "contents": "AxialDeltaDepthMode_TipInc"
    },
    {
      "trigger": "AxialDepthMode_DiaDis\tType",
      "contents": "AxialDepthMode_DiaDis"
    },
    {
      "trigger": "AxialDepthMode_DiaDisBre\tType",
      "contents": "AxialDepthMode_DiaDisBre"
    },
    {
      "trigger": "AxialDepthMode_DisBre\tType",
      "contents": "AxialDepthMode_DisBre"
    },
    {
      "trigger": "AxialDepthMode_Tip\tType",
      "contents": "AxialDepthMode_Tip"
    },
    {
      "trigger": "AxialDepthMode_TipBre\tType",
      "contents": "AxialDepthMode_TipBre"
    },
    {
      "trigger": "AxialDepthMode_TipDia\tType",
      "contents": "AxialDepthMode_TipDia"
    },
    {
      "trigger": "AxialDepthMode_TipDis\tType",
      "contents": "AxialDepthMode_TipDis"
    },
    {
      "trigger": "AxialDepthMode_TipDisBre\tType",
      "contents": "AxialDepthMode_TipDisBre"
    },
    {
      "trigger": "AxialDepthMode_TipSho\tType",
      "contents": "AxialDepthMode_TipSho"
    },
    {
      "trigger": "AxialDwellMode_DefRouTim\tType",
      "contents": "AxialDwellMode_DefRouTim"
    },
    {
      "trigger": "AxialHelixMode_AngPit\tType",
      "contents": "AxialHelixMode_AngPit"
    },
    {
      "trigger": "AxialLiftMode_NoDisPol\tType",
      "contents": "AxialLiftMode_NoDisPol"
    },
    {
      "trigger": "AxialMachiningOperation\tType",
      "contents": "AxialMachiningOperation"
    },
    {
      "trigger": "AxialPlungeMode_DefTip\tType",
      "contents": "AxialPlungeMode_DefTip"
    },
    {
      "trigger": "AxialPlungeMode_DefTipDia\tType",
      "contents": "AxialPlungeMode_DefTipDia"
    },
    {
      "trigger": "AxialPlungeMode_Tip\tType",
      "contents": "AxialPlungeMode_Tip"
    },
    {
      "trigger": "AxialSpotDepthMode_DefDiaDis\tType",
      "contents": "AxialSpotDepthMode_DefDiaDis"
    },
    {
      "trigger": "AxialSpotDepthMode_DefDis\tType",
      "contents": "AxialSpotDepthMode_DefDis"
    },
    {
      "trigger": "AxialSpotDepthMode_DefTip\tType",
      "contents": "AxialSpotDepthMode_DefTip"
    },
    {
      "trigger": "AxialSpotDepthMode_DefTipDia\tType",
      "contents": "AxialSpotDepthMode_DefTipDia"
    },
    {
      "trigger": "AxialSpotDepthMode_TipDia\tType",
      "contents": "AxialSpotDepthMode_TipDia"
    },
    {
      "trigger": "AxisSystem\tType",
      "contents": "AxisSystem"
    },
    {
      "trigger": "AxisSystemMatrix\tType",
      "contents": "AxisSystemMatrix"
    },
    {
      "trigger": "BIWBead\tType",
      "contents": "BIWBead"
    },
    {
      "trigger": "BIWHole\tType",
      "contents": "BIWHole"
    },
    {
      "trigger": "BIWHoleCurve\tType",
      "contents": "BIWHoleCurve"
    },
    {
      "trigger": "BIWRidgeReference\tType",
      "contents": "BIWRidgeReference"
    },
    {
      "trigger": "BRFederated\tType",
      "contents": "BRFederated"
    },
    {
      "trigger": "BackBoring\tType",
      "contents": "BackBoring"
    },
    {
      "trigger": "BackgroundImageTypeEnum\tType",
      "contents": "BackgroundImageTypeEnum"
    },
    {
      "trigger": "BaseConcept\tType",
      "contents": "BaseConcept"
    },
    {
      "trigger": "BeadFastenerOccurrence\tType",
      "contents": "BeadFastenerOccurrence"
    },
    {
      "trigger": "BenchParameter\tType",
      "contents": "BenchParameter"
    },
    {
      "trigger": "BenchParametersGroup\tType",
      "contents": "BenchParametersGroup"
    },
    {
      "trigger": "BenchSupport\tType",
      "contents": "BenchSupport"
    },
    {
      "trigger": "BenchSupportGroup\tType",
      "contents": "BenchSupportGroup"
    },
    {
      "trigger": "Bitmap\tType",
      "contents": "Bitmap"
    },
    {
      "trigger": "BlankHolderTool\tType",
      "contents": "BlankHolderTool"
    },
    {
      "trigger": "Body\tType",
      "contents": "Body"
    },
    {
      "trigger": "BodyFeature\tType",
      "contents": "BodyFeature"
    },
    {
      "trigger": "Bolt\tType",
      "contents": "Bolt"
    },
    {
      "trigger": "Boring\tType",
      "contents": "Boring"
    },
    {
      "trigger": "BoringAndChamfering\tType",
      "contents": "BoringAndChamfering"
    },
    {
      "trigger": "BoringSpindleStop\tType",
      "contents": "BoringSpindleStop"
    },
    {
      "trigger": "BottomType\tType",
      "contents": "BottomType"
    },
    {
      "trigger": "Branch\tType",
      "contents": "Branch"
    },
    {
      "trigger": "BranchPoint\tType",
      "contents": "BranchPoint"
    },
    {
      "trigger": "BridgeSet\tType",
      "contents": "BridgeSet"
    },
    {
      "trigger": "CATBldAwningWindow\tType",
      "contents": "CATBldAwningWindow"
    },
    {
      "trigger": "CATBldCasementDoubleWindow\tType",
      "contents": "CATBldCasementDoubleWindow"
    },
    {
      "trigger": "CATBldCasementSingleWindow\tType",
      "contents": "CATBldCasementSingleWindow"
    },
    {
      "trigger": "CATBldFixedWindow\tType",
      "contents": "CATBldFixedWindow"
    },
    {
      "trigger": "CATBldFlatRoof\tType",
      "contents": "CATBldFlatRoof"
    },
    {
      "trigger": "CATBldFreeRoof\tType",
      "contents": "CATBldFreeRoof"
    },
    {
      "trigger": "CATBldFurnishingSet\tType",
      "contents": "CATBldFurnishingSet"
    },
    {
      "trigger": "CATBldHipRoof\tType",
      "contents": "CATBldHipRoof"
    },
    {
      "trigger": "CATBldLevel\tType",
      "contents": "CATBldLevel"
    },
    {
      "trigger": "CATBldOpeningCasing\tType",
      "contents": "CATBldOpeningCasing"
    },
    {
      "trigger": "CATBldOpeningFrame\tType",
      "contents": "CATBldOpeningFrame"
    },
    {
      "trigger": "CATBldOpeningSwing\tType",
      "contents": "CATBldOpeningSwing"
    },
    {
      "trigger": "CATBldRailBalusters\tType",
      "contents": "CATBldRailBalusters"
    },
    {
      "trigger": "CATBldRailHandRails\tType",
      "contents": "CATBldRailHandRails"
    },
    {
      "trigger": "CATBldRailPosts\tType",
      "contents": "CATBldRailPosts"
    },
    {
      "trigger": "CATBldRailRails\tType",
      "contents": "CATBldRailRails"
    },
    {
      "trigger": "CATBldRailing\tType",
      "contents": "CATBldRailing"
    },
    {
      "trigger": "CATBldRamp\tType",
      "contents": "CATBldRamp"
    },
    {
      "trigger": "CATBldRampFlight\tType",
      "contents": "CATBldRampFlight"
    },
    {
      "trigger": "CATBldRampLanding\tType",
      "contents": "CATBldRampLanding"
    },
    {
      "trigger": "CATBldSlab\tType",
      "contents": "CATBldSlab"
    },
    {
      "trigger": "CATBldSlabOpening\tType",
      "contents": "CATBldSlabOpening"
    },
    {
      "trigger": "CATBldSlidingDoubleDoor\tType",
      "contents": "CATBldSlidingDoubleDoor"
    },
    {
      "trigger": "CATBldSpace\tType",
      "contents": "CATBldSpace"
    },
    {
      "trigger": "CATBldStairFlight\tType",
      "contents": "CATBldStairFlight"
    },
    {
      "trigger": "CATBldStairHead\tType",
      "contents": "CATBldStairHead"
    },
    {
      "trigger": "CATBldStairLanding\tType",
      "contents": "CATBldStairLanding"
    },
    {
      "trigger": "CATBldStairShaft\tType",
      "contents": "CATBldStairShaft"
    },
    {
      "trigger": "CATBldStairwell\tType",
      "contents": "CATBldStairwell"
    },
    {
      "trigger": "CATBldSwingDoubleDoor\tType",
      "contents": "CATBldSwingDoubleDoor"
    },
    {
      "trigger": "CATBldSwingSingleDoor\tType",
      "contents": "CATBldSwingSingleDoor"
    },
    {
      "trigger": "CATBldUdfOutput\tType",
      "contents": "CATBldUdfOutput"
    },
    {
      "trigger": "CATBldWall\tType",
      "contents": "CATBldWall"
    },
    {
      "trigger": "CATBldWallOpening\tType",
      "contents": "CATBldWallOpening"
    },
    {
      "trigger": "CATBldWindowGlazing\tType",
      "contents": "CATBldWindowGlazing"
    },
    {
      "trigger": "CATBldWindowSash\tType",
      "contents": "CATBldWindowSash"
    },
    {
      "trigger": "CATBseAnnotation\tType",
      "contents": "CATBseAnnotation"
    },
    {
      "trigger": "CATBseBase\tType",
      "contents": "CATBseBase"
    },
    {
      "trigger": "CATBseBehavior\tType",
      "contents": "CATBseBehavior"
    },
    {
      "trigger": "CATBseConnection\tType",
      "contents": "CATBseConnection"
    },
    {
      "trigger": "CATBseEntity\tType",
      "contents": "CATBseEntity"
    },
    {
      "trigger": "CATBseFeat\tType",
      "contents": "CATBseFeat"
    },
    {
      "trigger": "CATBseInteraction\tType",
      "contents": "CATBseInteraction"
    },
    {
      "trigger": "CATBseLocalization\tType",
      "contents": "CATBseLocalization"
    },
    {
      "trigger": "CATBseLogicalBioSystem\tType",
      "contents": "CATBseLogicalBioSystem"
    },
    {
      "trigger": "CATBseParameter\tType",
      "contents": "CATBseParameter"
    },
    {
      "trigger": "CATCCTGeoItem\tType",
      "contents": "CATCCTGeoItem"
    },
    {
      "trigger": "CATCell\tType",
      "contents": "CATCell"
    },
    {
      "trigger": "CATCompCore\tType",
      "contents": "CATCompCore"
    },
    {
      "trigger": "CATCompCutPiece\tType",
      "contents": "CATCompCutPiece"
    },
    {
      "trigger": "CATCompPliesGroup\tType",
      "contents": "CATCompPliesGroup"
    },
    {
      "trigger": "CATCompPly\tType",
      "contents": "CATCompPly"
    },
    {
      "trigger": "CATCrtExtrude\tType",
      "contents": "CATCrtExtrude"
    },
    {
      "trigger": "CATCrtFold\tType",
      "contents": "CATCrtFold"
    },
    {
      "trigger": "CATCrtOutputCurvedFold\tType",
      "contents": "CATCrtOutputCurvedFold"
    },
    {
      "trigger": "CATCrtOutputCurvedFoldBoundary\tType",
      "contents": "CATCrtOutputCurvedFoldBoundary"
    },
    {
      "trigger": "CATCrtOutputFold\tType",
      "contents": "CATCrtOutputFold"
    },
    {
      "trigger": "CATCrtOutputGroup\tType",
      "contents": "CATCrtOutputGroup"
    },
    {
      "trigger": "CATCrtOutputPanel\tType",
      "contents": "CATCrtOutputPanel"
    },
    {
      "trigger": "CATCrtPanel\tType",
      "contents": "CATCrtPanel"
    },
    {
      "trigger": "CATCrtPanelOnEdge\tType",
      "contents": "CATCrtPanelOnEdge"
    },
    {
      "trigger": "CATCrtParameters\tType",
      "contents": "CATCrtParameters"
    },
    {
      "trigger": "CATDistribute\tType",
      "contents": "CATDistribute"
    },
    {
      "trigger": "CATEarlyGenItem\tType",
      "contents": "CATEarlyGenItem"
    },
    {
      "trigger": "CATEarlyGenShape\tType",
      "contents": "CATEarlyGenShape"
    },
    {
      "trigger": "CATEbm_Branch\tType",
      "contents": "CATEbm_Branch"
    },
    {
      "trigger": "CATEbm_BranchPoint\tType",
      "contents": "CATEbm_BranchPoint"
    },
    {
      "trigger": "CATEbm_BranchPointTypeEnum\tType",
      "contents": "CATEbm_BranchPointTypeEnum"
    },
    {
      "trigger": "CATEbm_BranchTypeEnum\tType",
      "contents": "CATEbm_BranchTypeEnum"
    },
    {
      "trigger": "CATEbm_CircularProfile\tType",
      "contents": "CATEbm_CircularProfile"
    },
    {
      "trigger": "CATEbm_ControlPoint\tType",
      "contents": "CATEbm_ControlPoint"
    },
    {
      "trigger": "CATEbm_ControlPointTypeEnum\tType",
      "contents": "CATEbm_ControlPointTypeEnum"
    },
    {
      "trigger": "CATEbm_EllipticalProfile\tType",
      "contents": "CATEbm_EllipticalProfile"
    },
    {
      "trigger": "CATEbm_FixedBranchPoint\tType",
      "contents": "CATEbm_FixedBranchPoint"
    },
    {
      "trigger": "CATEbm_FlatOvalProfile\tType",
      "contents": "CATEbm_FlatOvalProfile"
    },
    {
      "trigger": "CATEbm_FlexBuildModeEnum\tType",
      "contents": "CATEbm_FlexBuildModeEnum"
    },
    {
      "trigger": "CATEbm_NodeProfile\tType",
      "contents": "CATEbm_NodeProfile"
    },
    {
      "trigger": "CATEbm_NodeProfileTypeEnum\tType",
      "contents": "CATEbm_NodeProfileTypeEnum"
    },
    {
      "trigger": "CATEbm_PassingPoint\tType",
      "contents": "CATEbm_PassingPoint"
    },
    {
      "trigger": "CATEbm_PortPoint\tType",
      "contents": "CATEbm_PortPoint"
    },
    {
      "trigger": "CATEbm_RectangularProfile\tType",
      "contents": "CATEbm_RectangularProfile"
    },
    {
      "trigger": "CATEbm_ReferenceProfile\tType",
      "contents": "CATEbm_ReferenceProfile"
    },
    {
      "trigger": "CATEbm_ReferenceProfileTypeEnum\tType",
      "contents": "CATEbm_ReferenceProfileTypeEnum"
    },
    {
      "trigger": "CATEbm_RigidDirectionalPoint\tType",
      "contents": "CATEbm_RigidDirectionalPoint"
    },
    {
      "trigger": "CATEbm_RigidNodeProfile\tType",
      "contents": "CATEbm_RigidNodeProfile"
    },
    {
      "trigger": "CATEbm_RoutingElement\tType",
      "contents": "CATEbm_RoutingElement"
    },
    {
      "trigger": "CATEbm_RoutingElementTypeEnum\tType",
      "contents": "CATEbm_RoutingElementTypeEnum"
    },
    {
      "trigger": "CATEbm_SlackAndLengthModeEnum\tType",
      "contents": "CATEbm_SlackAndLengthModeEnum"
    },
    {
      "trigger": "CATEdge\tType",
      "contents": "CATEdge"
    },
    {
      "trigger": "CATFTAElement\tType",
      "contents": "CATFTAElement"
    },
    {
      "trigger": "CATFace\tType",
      "contents": "CATFace"
    },
    {
      "trigger": "CATKwdBox\tType",
      "contents": "CATKwdBox"
    },
    {
      "trigger": "CATKwdCheckButton\tType",
      "contents": "CATKwdCheckButton"
    },
    {
      "trigger": "CATKwdCombo\tType",
      "contents": "CATKwdCombo"
    },
    {
      "trigger": "CATKwdContainer\tType",
      "contents": "CATKwdContainer"
    },
    {
      "trigger": "CATKwdControl\tType",
      "contents": "CATKwdControl"
    },
    {
      "trigger": "CATKwdCustomControl\tType",
      "contents": "CATKwdCustomControl"
    },
    {
      "trigger": "CATKwdCustomEditor\tType",
      "contents": "CATKwdCustomEditor"
    },
    {
      "trigger": "CATKwdDialog\tType",
      "contents": "CATKwdDialog"
    },
    {
      "trigger": "CATKwdDialogWindow\tType",
      "contents": "CATKwdDialogWindow"
    },
    {
      "trigger": "CATKwdEditor\tType",
      "contents": "CATKwdEditor"
    },
    {
      "trigger": "CATKwdFeatureChooser\tType",
      "contents": "CATKwdFeatureChooser"
    },
    {
      "trigger": "CATKwdFeatureSelector\tType",
      "contents": "CATKwdFeatureSelector"
    },
    {
      "trigger": "CATKwdFrame\tType",
      "contents": "CATKwdFrame"
    },
    {
      "trigger": "CATKwdFrameUsage\tType",
      "contents": "CATKwdFrameUsage"
    },
    {
      "trigger": "CATKwdLabel\tType",
      "contents": "CATKwdLabel"
    },
    {
      "trigger": "CATKwdMultiList\tType",
      "contents": "CATKwdMultiList"
    },
    {
      "trigger": "CATKwdParameterChooser\tType",
      "contents": "CATKwdParameterChooser"
    },
    {
      "trigger": "CATKwdParameterEditor\tType",
      "contents": "CATKwdParameterEditor"
    },
    {
      "trigger": "CATKwdProgress\tType",
      "contents": "CATKwdProgress"
    },
    {
      "trigger": "CATKwdPushButton\tType",
      "contents": "CATKwdPushButton"
    },
    {
      "trigger": "CATKwdRadioButton\tType",
      "contents": "CATKwdRadioButton"
    },
    {
      "trigger": "CATKwdSelectorList\tType",
      "contents": "CATKwdSelectorList"
    },
    {
      "trigger": "CATKwdSlider\tType",
      "contents": "CATKwdSlider"
    },
    {
      "trigger": "CATKwdSpinner\tType",
      "contents": "CATKwdSpinner"
    },
    {
      "trigger": "CATKwdTabContainer\tType",
      "contents": "CATKwdTabContainer"
    },
    {
      "trigger": "CATKwdTabPage\tType",
      "contents": "CATKwdTabPage"
    },
    {
      "trigger": "CATKwdViewer3D\tType",
      "contents": "CATKwdViewer3D"
    },
    {
      "trigger": "CATKwdWindow\tType",
      "contents": "CATKwdWindow"
    },
    {
      "trigger": "CATMCXDirection\tType",
      "contents": "CATMCXDirection"
    },
    {
      "trigger": "CATMRXMode\tType",
      "contents": "CATMRXMode"
    },
    {
      "trigger": "CATMRXOption_Axis\tType",
      "contents": "CATMRXOption_Axis"
    },
    {
      "trigger": "CATMRXOption_FullAxis\tType",
      "contents": "CATMRXOption_FullAxis"
    },
    {
      "trigger": "CATMRXOption_LnOrientation\tType",
      "contents": "CATMRXOption_LnOrientation"
    },
    {
      "trigger": "CATMRXOption_Orientation\tType",
      "contents": "CATMRXOption_Orientation"
    },
    {
      "trigger": "CATMRXOption_Sector\tType",
      "contents": "CATMRXOption_Sector"
    },
    {
      "trigger": "CATMRXOption_Symmetry\tType",
      "contents": "CATMRXOption_Symmetry"
    },
    {
      "trigger": "CATOptLocalWPrioritiesAlgorithmCATIType\tType",
      "contents": "CATOptLocalWPrioritiesAlgorithmCATIType"
    },
    {
      "trigger": "CATSHM_CircPattern\tType",
      "contents": "CATSHM_CircPattern"
    },
    {
      "trigger": "CATSHM_Mirror\tType",
      "contents": "CATSHM_Mirror"
    },
    {
      "trigger": "CATSHM_RectPattern\tType",
      "contents": "CATSHM_RectPattern"
    },
    {
      "trigger": "CATSHM_UserPattern\tType",
      "contents": "CATSHM_UserPattern"
    },
    {
      "trigger": "CATSchRoute\tType",
      "contents": "CATSchRoute"
    },
    {
      "trigger": "CATSchRouteZone\tType",
      "contents": "CATSchRouteZone"
    },
    {
      "trigger": "CATSchSymbolInstance\tType",
      "contents": "CATSchSymbolInstance"
    },
    {
      "trigger": "CATSimWatchListResult\tType",
      "contents": "CATSimWatchListResult"
    },
    {
      "trigger": "CATSmChamfer\tType",
      "contents": "CATSmChamfer"
    },
    {
      "trigger": "CATSmClosedCorner\tType",
      "contents": "CATSmClosedCorner"
    },
    {
      "trigger": "CATSmCorner\tType",
      "contents": "CATSmCorner"
    },
    {
      "trigger": "CATSmCutOut\tType",
      "contents": "CATSmCutOut"
    },
    {
      "trigger": "CATSmFreeFormSurface\tType",
      "contents": "CATSmFreeFormSurface"
    },
    {
      "trigger": "CATSmHopper\tType",
      "contents": "CATSmHopper"
    },
    {
      "trigger": "CATSmJog\tType",
      "contents": "CATSmJog"
    },
    {
      "trigger": "CATSm_AxisToAxis\tType",
      "contents": "CATSm_AxisToAxis"
    },
    {
      "trigger": "CATSm_BeadPunch\tType",
      "contents": "CATSm_BeadPunch"
    },
    {
      "trigger": "CATSm_BridgePunch\tType",
      "contents": "CATSm_BridgePunch"
    },
    {
      "trigger": "CATSm_CornerRelief\tType",
      "contents": "CATSm_CornerRelief"
    },
    {
      "trigger": "CATSm_CurvePunch\tType",
      "contents": "CATSm_CurvePunch"
    },
    {
      "trigger": "CATSm_DowelPunch\tType",
      "contents": "CATSm_DowelPunch"
    },
    {
      "trigger": "CATSm_ExtendedExtrudedHolePunch\tType",
      "contents": "CATSm_ExtendedExtrudedHolePunch"
    },
    {
      "trigger": "CATSm_ExtrudedHolePunch\tType",
      "contents": "CATSm_ExtrudedHolePunch"
    },
    {
      "trigger": "CATSm_Flange\tType",
      "contents": "CATSm_Flange"
    },
    {
      "trigger": "CATSm_FlatBend\tType",
      "contents": "CATSm_FlatBend"
    },
    {
      "trigger": "CATSm_Hole3D\tType",
      "contents": "CATSm_Hole3D"
    },
    {
      "trigger": "CATSm_LouverPunch\tType",
      "contents": "CATSm_LouverPunch"
    },
    {
      "trigger": "CATSm_PointPunch\tType",
      "contents": "CATSm_PointPunch"
    },
    {
      "trigger": "CATSm_Rotate\tType",
      "contents": "CATSm_Rotate"
    },
    {
      "trigger": "CATSm_Stamp\tType",
      "contents": "CATSm_Stamp"
    },
    {
      "trigger": "CATSm_StiffeningRibPunch\tType",
      "contents": "CATSm_StiffeningRibPunch"
    },
    {
      "trigger": "CATSm_SurfacePunch\tType",
      "contents": "CATSm_SurfacePunch"
    },
    {
      "trigger": "CATSm_Symmetry\tType",
      "contents": "CATSm_Symmetry"
    },
    {
      "trigger": "CATSm_Translate\tType",
      "contents": "CATSm_Translate"
    },
    {
      "trigger": "CATSm_UserPunch\tType",
      "contents": "CATSm_UserPunch"
    },
    {
      "trigger": "CATSma_PredefinedFlange\tType",
      "contents": "CATSma_PredefinedFlange"
    },
    {
      "trigger": "CATTPSAllAnnotations\tType",
      "contents": "CATTPSAllAnnotations"
    },
    {
      "trigger": "CATTPSBasicDim\tType",
      "contents": "CATTPSBasicDim"
    },
    {
      "trigger": "CATTPSCapture\tType",
      "contents": "CATTPSCapture"
    },
    {
      "trigger": "CATTPSConstructedGeometry\tType",
      "contents": "CATTPSConstructedGeometry"
    },
    {
      "trigger": "CATTPSCoordDim\tType",
      "contents": "CATTPSCoordDim"
    },
    {
      "trigger": "CATTPSExtractionView\tType",
      "contents": "CATTPSExtractionView"
    },
    {
      "trigger": "CATTPSFlagNote\tType",
      "contents": "CATTPSFlagNote"
    },
    {
      "trigger": "CATTPSNoa\tType",
      "contents": "CATTPSNoa"
    },
    {
      "trigger": "CATTPSNonSemantic\tType",
      "contents": "CATTPSNonSemantic"
    },
    {
      "trigger": "CATTPSReferenceFrame\tType",
      "contents": "CATTPSReferenceFrame"
    },
    {
      "trigger": "CATTPSRestrictedArea\tType",
      "contents": "CATTPSRestrictedArea"
    },
    {
      "trigger": "CATTPSRoughness\tType",
      "contents": "CATTPSRoughness"
    },
    {
      "trigger": "CATTPSSemantic\tType",
      "contents": "CATTPSSemantic"
    },
    {
      "trigger": "CATTPSSet\tType",
      "contents": "CATTPSSet"
    },
    {
      "trigger": "CATTPSText\tType",
      "contents": "CATTPSText"
    },
    {
      "trigger": "CATTPSUndefinedEdgeSymbol\tType",
      "contents": "CATTPSUndefinedEdgeSymbol"
    },
    {
      "trigger": "CATTPSView\tType",
      "contents": "CATTPSView"
    },
    {
      "trigger": "CATTPSViewText\tType",
      "contents": "CATTPSViewText"
    },
    {
      "trigger": "CATTPSWeld\tType",
      "contents": "CATTPSWeld"
    },
    {
      "trigger": "CATTlgGeomExtractRibbonCurves\tType",
      "contents": "CATTlgGeomExtractRibbonCurves"
    },
    {
      "trigger": "CATTlgGeomProfile\tType",
      "contents": "CATTlgGeomProfile"
    },
    {
      "trigger": "CATVertex\tType",
      "contents": "CATVertex"
    },
    {
      "trigger": "CATVolume\tType",
      "contents": "CATVolume"
    },
    {
      "trigger": "CSEBolt\tType",
      "contents": "CSEBolt"
    },
    {
      "trigger": "CSEConnection\tType",
      "contents": "CSEConnection"
    },
    {
      "trigger": "CSELayer\tType",
      "contents": "CSELayer"
    },
    {
      "trigger": "CSELineFastener\tType",
      "contents": "CSELineFastener"
    },
    {
      "trigger": "CSEMaterial\tType",
      "contents": "CSEMaterial"
    },
    {
      "trigger": "CSEPointFastener\tType",
      "contents": "CSEPointFastener"
    },
    {
      "trigger": "CSEPropertySet\tType",
      "contents": "CSEPropertySet"
    },
    {
      "trigger": "CSESolid\tType",
      "contents": "CSESolid"
    },
    {
      "trigger": "CSEStacking\tType",
      "contents": "CSEStacking"
    },
    {
      "trigger": "CSESurfaceFastener\tType",
      "contents": "CSESurfaceFastener"
    },
    {
      "trigger": "CSEUserConnection\tType",
      "contents": "CSEUserConnection"
    },
    {
      "trigger": "CSEUserConnectionLine\tType",
      "contents": "CSEUserConnectionLine"
    },
    {
      "trigger": "CSEUserConnectionPoints\tType",
      "contents": "CSEUserConnectionPoints"
    },
    {
      "trigger": "CameraType\tType",
      "contents": "CameraType"
    },
    {
      "trigger": "CaptureService\tType",
      "contents": "CaptureService"
    },
    {
      "trigger": "CartonType\tType",
      "contents": "CartonType"
    },
    {
      "trigger": "CegXSectionMainSet\tType",
      "contents": "CegXSectionMainSet"
    },
    {
      "trigger": "Chamfer\tType",
      "contents": "Chamfer"
    },
    {
      "trigger": "Chamfering2Sides\tType",
      "contents": "Chamfering2Sides"
    },
    {
      "trigger": "CheckStatusEnum\tType",
      "contents": "CheckStatusEnum"
    },
    {
      "trigger": "CircPattern\tType",
      "contents": "CircPattern"
    },
    {
      "trigger": "Circle\tType",
      "contents": "Circle"
    },
    {
      "trigger": "CircleRelimitation\tType",
      "contents": "CircleRelimitation"
    },
    {
      "trigger": "CircularCutout\tType",
      "contents": "CircularCutout"
    },
    {
      "trigger": "CircularMilling\tType",
      "contents": "CircularMilling"
    },
    {
      "trigger": "CloseSurface\tType",
      "contents": "CloseSurface"
    },
    {
      "trigger": "Color\tType",
      "contents": "Color"
    },
    {
      "trigger": "CompParametersFeature\tType",
      "contents": "CompParametersFeature"
    },
    {
      "trigger": "ComponentFamily\tType",
      "contents": "ComponentFamily"
    },
    {
      "trigger": "ComponentFamilyItem\tType",
      "contents": "ComponentFamilyItem"
    },
    {
      "trigger": "ComponentFamilyItemStatus\tType",
      "contents": "ComponentFamilyItemStatus"
    },
    {
      "trigger": "ComponentFamilyMaturityMode\tType",
      "contents": "ComponentFamilyMaturityMode"
    },
    {
      "trigger": "ComponentFamilyType\tType",
      "contents": "ComponentFamilyType"
    },
    {
      "trigger": "Conductor\tType",
      "contents": "Conductor"
    },
    {
      "trigger": "ConductorGroup\tType",
      "contents": "ConductorGroup"
    },
    {
      "trigger": "ConductorRouteStatus\tType",
      "contents": "ConductorRouteStatus"
    },
    {
      "trigger": "ConductorValidationStatus\tType",
      "contents": "ConductorValidationStatus"
    },
    {
      "trigger": "ConstantEdgeFillet\tType",
      "contents": "ConstantEdgeFillet"
    },
    {
      "trigger": "ConstraintArea\tType",
      "contents": "ConstraintArea"
    },
    {
      "trigger": "ControlDeviceInstance\tType",
      "contents": "ControlDeviceInstance"
    },
    {
      "trigger": "ControlDeviceRef\tType",
      "contents": "ControlDeviceRef"
    },
    {
      "trigger": "ControllerName\tType",
      "contents": "ControllerName"
    },
    {
      "trigger": "ConveyorInstance\tType",
      "contents": "ConveyorInstance"
    },
    {
      "trigger": "ConveyorRef\tType",
      "contents": "ConveyorRef"
    },
    {
      "trigger": "CoordinateSystem\tType",
      "contents": "CoordinateSystem"
    },
    {
      "trigger": "Core\tType",
      "contents": "Core"
    },
    {
      "trigger": "CoreSample\tType",
      "contents": "CoreSample"
    },
    {
      "trigger": "CounterBoring\tType",
      "contents": "CounterBoring"
    },
    {
      "trigger": "CounterSinking\tType",
      "contents": "CounterSinking"
    },
    {
      "trigger": "CounterboredHole\tType",
      "contents": "CounterboredHole"
    },
    {
      "trigger": "CounterdrilledHole\tType",
      "contents": "CounterdrilledHole"
    },
    {
      "trigger": "CountersunkHole\tType",
      "contents": "CountersunkHole"
    },
    {
      "trigger": "CouplingType\tType",
      "contents": "CouplingType"
    },
    {
      "trigger": "CrestSagCurveTypeEnum\tType",
      "contents": "CrestSagCurveTypeEnum"
    },
    {
      "trigger": "CrossSectionPlaneOrientationModeEnum\tType",
      "contents": "CrossSectionPlaneOrientationModeEnum"
    },
    {
      "trigger": "CrossingOptionEnum\tType",
      "contents": "CrossingOptionEnum"
    },
    {
      "trigger": "CrtManageFold\tType",
      "contents": "CrtManageFold"
    },
    {
      "trigger": "Curve\tType",
      "contents": "Curve"
    },
    {
      "trigger": "CurveType\tType",
      "contents": "CurveType"
    },
    {
      "trigger": "CurveTypeEnum\tType",
      "contents": "CurveTypeEnum"
    },
    {
      "trigger": "CutTool\tType",
      "contents": "CutTool"
    },
    {
      "trigger": "CutoutType\tType",
      "contents": "CutoutType"
    },
    {
      "trigger": "CuttingLengthMode\tType",
      "contents": "CuttingLengthMode"
    },
    {
      "trigger": "DEL3DAnimationCameraViewer\tType",
      "contents": "DEL3DAnimationCameraViewer"
    },
    {
      "trigger": "DEL3DAnimationCameraViewerMgr\tType",
      "contents": "DEL3DAnimationCameraViewerMgr"
    },
    {
      "trigger": "DEL3DStActionTypeEnum\tType",
      "contents": "DEL3DStActionTypeEnum"
    },
    {
      "trigger": "DEL3DStApplyAttrEnum\tType",
      "contents": "DEL3DStApplyAttrEnum"
    },
    {
      "trigger": "DEL3DStApplyScopeEnum\tType",
      "contents": "DEL3DStApplyScopeEnum"
    },
    {
      "trigger": "DEL3DStAttrTypeEnum\tType",
      "contents": "DEL3DStAttrTypeEnum"
    },
    {
      "trigger": "DEL3DStContextEnum\tType",
      "contents": "DEL3DStContextEnum"
    },
    {
      "trigger": "DEL3DStScopeEnum\tType",
      "contents": "DEL3DStScopeEnum"
    },
    {
      "trigger": "DEL3DState\tType",
      "contents": "DEL3DState"
    },
    {
      "trigger": "DELImageType\tType",
      "contents": "DELImageType"
    },
    {
      "trigger": "DELImplicitFilteringMode\tType",
      "contents": "DELImplicitFilteringMode"
    },
    {
      "trigger": "DELImplicitFilteringOverload\tType",
      "contents": "DELImplicitFilteringOverload"
    },
    {
      "trigger": "DELMRLBand\tType",
      "contents": "DELMRLBand"
    },
    {
      "trigger": "DELMRLGenericMarker\tType",
      "contents": "DELMRLGenericMarker"
    },
    {
      "trigger": "DELMRLLabel\tType",
      "contents": "DELMRLLabel"
    },
    {
      "trigger": "DELMRLPicture\tType",
      "contents": "DELMRLPicture"
    },
    {
      "trigger": "DELMachining2SidesChamferStep\tType",
      "contents": "DELMachining2SidesChamferStep"
    },
    {
      "trigger": "DELMachiningBackBoreStep\tType",
      "contents": "DELMachiningBackBoreStep"
    },
    {
      "trigger": "DELMachiningChamferedHoleStep\tType",
      "contents": "DELMachiningChamferedHoleStep"
    },
    {
      "trigger": "DELMachiningCircularMillStep\tType",
      "contents": "DELMachiningCircularMillStep"
    },
    {
      "trigger": "DELMachiningCounterboreStep\tType",
      "contents": "DELMachiningCounterboreStep"
    },
    {
      "trigger": "DELMachiningCountersinkStep\tType",
      "contents": "DELMachiningCountersinkStep"
    },
    {
      "trigger": "DELMachiningGenericStep\tType",
      "contents": "DELMachiningGenericStep"
    },
    {
      "trigger": "DELMachiningHoleStep\tType",
      "contents": "DELMachiningHoleStep"
    },
    {
      "trigger": "DELMachiningIntThreadedStep\tType",
      "contents": "DELMachiningIntThreadedStep"
    },
    {
      "trigger": "DELMachiningSlabStep\tType",
      "contents": "DELMachiningSlabStep"
    },
    {
      "trigger": "DELMachiningSpotDrillStep\tType",
      "contents": "DELMachiningSpotDrillStep"
    },
    {
      "trigger": "DELMachiningTSlotStep\tType",
      "contents": "DELMachiningTSlotStep"
    },
    {
      "trigger": "DELMfgSimMSR\tType",
      "contents": "DELMfgSimMSR"
    },
    {
      "trigger": "DELMfgSimMSRMgr\tType",
      "contents": "DELMfgSimMSRMgr"
    },
    {
      "trigger": "DELMfgSimScenario\tType",
      "contents": "DELMfgSimScenario"
    },
    {
      "trigger": "DELMfgSimTSAScenario\tType",
      "contents": "DELMfgSimTSAScenario"
    },
    {
      "trigger": "DELPC_CRSReferentials\tType",
      "contents": "DELPC_CRSReferentials"
    },
    {
      "trigger": "DELPC_FileFormat\tType",
      "contents": "DELPC_FileFormat"
    },
    {
      "trigger": "DELPC_ImportInputs\tType",
      "contents": "DELPC_ImportInputs"
    },
    {
      "trigger": "DELPC_RenderingEffect\tType",
      "contents": "DELPC_RenderingEffect"
    },
    {
      "trigger": "DELPC_Source\tType",
      "contents": "DELPC_Source"
    },
    {
      "trigger": "DELPC_Units\tType",
      "contents": "DELPC_Units"
    },
    {
      "trigger": "DELPipeFabricationBend\tType",
      "contents": "DELPipeFabricationBend"
    },
    {
      "trigger": "DELPipeFabricationCuttingLength\tType",
      "contents": "DELPipeFabricationCuttingLength"
    },
    {
      "trigger": "DELPipeFabricationMacro\tType",
      "contents": "DELPipeFabricationMacro"
    },
    {
      "trigger": "DELPipeFabricationNegativeMargin\tType",
      "contents": "DELPipeFabricationNegativeMargin"
    },
    {
      "trigger": "DELPipeFabricationOverLength\tType",
      "contents": "DELPipeFabricationOverLength"
    },
    {
      "trigger": "DELPipeFabricationPositiveMargin\tType",
      "contents": "DELPipeFabricationPositiveMargin"
    },
    {
      "trigger": "DELPointCloudElement\tType",
      "contents": "DELPointCloudElement"
    },
    {
      "trigger": "DELPointCloudRepReference\tType",
      "contents": "DELPointCloudRepReference"
    },
    {
      "trigger": "DELPointOperation\tType",
      "contents": "DELPointOperation"
    },
    {
      "trigger": "DELPointTrajectory\tType",
      "contents": "DELPointTrajectory"
    },
    {
      "trigger": "DELRscSweptVolumeMgr\tType",
      "contents": "DELRscSweptVolumeMgr"
    },
    {
      "trigger": "DELSimFaultMonitor\tType",
      "contents": "DELSimFaultMonitor"
    },
    {
      "trigger": "DELSimFaultMonitorMgr\tType",
      "contents": "DELSimFaultMonitorMgr"
    },
    {
      "trigger": "DELSimFaultResult\tType",
      "contents": "DELSimFaultResult"
    },
    {
      "trigger": "DELStrMfgAlignmentLine\tType",
      "contents": "DELStrMfgAlignmentLine"
    },
    {
      "trigger": "DELStrMfgAttachmentLine\tType",
      "contents": "DELStrMfgAttachmentLine"
    },
    {
      "trigger": "DELStrMfgBridgedOpening\tType",
      "contents": "DELStrMfgBridgedOpening"
    },
    {
      "trigger": "DELStrMfgBurnSideUp\tType",
      "contents": "DELStrMfgBurnSideUp"
    },
    {
      "trigger": "DELStrMfgCustoMarkingLine\tType",
      "contents": "DELStrMfgCustoMarkingLine"
    },
    {
      "trigger": "DELStrMfgCutOpening\tType",
      "contents": "DELStrMfgCutOpening"
    },
    {
      "trigger": "DELStrMfgDrilledOpening\tType",
      "contents": "DELStrMfgDrilledOpening"
    },
    {
      "trigger": "DELStrMfgEdgePreparation\tType",
      "contents": "DELStrMfgEdgePreparation"
    },
    {
      "trigger": "DELStrMfgEndCut\tType",
      "contents": "DELStrMfgEndCut"
    },
    {
      "trigger": "DELStrMfgInverseBendingCurve\tType",
      "contents": "DELStrMfgInverseBendingCurve"
    },
    {
      "trigger": "DELStrMfgMargin\tType",
      "contents": "DELStrMfgMargin"
    },
    {
      "trigger": "DELStrMfgMarkedOpening\tType",
      "contents": "DELStrMfgMarkedOpening"
    },
    {
      "trigger": "DELStrMfgMarkingLine\tType",
      "contents": "DELStrMfgMarkingLine"
    },
    {
      "trigger": "DELStrMfgNegativeMargin\tType",
      "contents": "DELStrMfgNegativeMargin"
    },
    {
      "trigger": "DELStrMfgNoneOpening\tType",
      "contents": "DELStrMfgNoneOpening"
    },
    {
      "trigger": "DELStrMfgOffsetAlignmentLine\tType",
      "contents": "DELStrMfgOffsetAlignmentLine"
    },
    {
      "trigger": "DELStrMfgOpeningPreparation\tType",
      "contents": "DELStrMfgOpeningPreparation"
    },
    {
      "trigger": "DELStrMfgOuterContour\tType",
      "contents": "DELStrMfgOuterContour"
    },
    {
      "trigger": "DELStrMfgPlaneAlignmentLine\tType",
      "contents": "DELStrMfgPlaneAlignmentLine"
    },
    {
      "trigger": "DELStrMfgPositiveMargin\tType",
      "contents": "DELStrMfgPositiveMargin"
    },
    {
      "trigger": "DELStrMfgReferenceLine\tType",
      "contents": "DELStrMfgReferenceLine"
    },
    {
      "trigger": "DELStrMfgRollLine\tType",
      "contents": "DELStrMfgRollLine"
    },
    {
      "trigger": "DELStrMfgTabbedOpening\tType",
      "contents": "DELStrMfgTabbedOpening"
    },
    {
      "trigger": "DELStrMfgTangentLine\tType",
      "contents": "DELStrMfgTangentLine"
    },
    {
      "trigger": "DELStrMfgWeldLine\tType",
      "contents": "DELStrMfgWeldLine"
    },
    {
      "trigger": "DELSurfaceStartEndTriggersValue\tType",
      "contents": "DELSurfaceStartEndTriggersValue"
    },
    {
      "trigger": "DELSurfaceTaskParam\tType",
      "contents": "DELSurfaceTaskParam"
    },
    {
      "trigger": "DELSurfaceTrajectory\tType",
      "contents": "DELSurfaceTrajectory"
    },
    {
      "trigger": "DELSurfaceTrajectoryAppoachType\tType",
      "contents": "DELSurfaceTrajectoryAppoachType"
    },
    {
      "trigger": "DELSurfaceTrajectoryExtentDirection\tType",
      "contents": "DELSurfaceTrajectoryExtentDirection"
    },
    {
      "trigger": "DELSurfaceTrajectoryStrokeEnd\tType",
      "contents": "DELSurfaceTrajectoryStrokeEnd"
    },
    {
      "trigger": "DELSurfaceTrajectorySweepEntry\tType",
      "contents": "DELSurfaceTrajectorySweepEntry"
    },
    {
      "trigger": "DELSurfaceTriggerConditionType\tType",
      "contents": "DELSurfaceTriggerConditionType"
    },
    {
      "trigger": "DFD2DCutAnalysis\tType",
      "contents": "DFD2DCutAnalysis"
    },
    {
      "trigger": "DFD3DCutAnalysis\tType",
      "contents": "DFD3DCutAnalysis"
    },
    {
      "trigger": "DFDAddendum\tType",
      "contents": "DFDAddendum"
    },
    {
      "trigger": "DFDBlankPartition\tType",
      "contents": "DFDBlankPartition"
    },
    {
      "trigger": "DFDCircleAnalysis\tType",
      "contents": "DFDCircleAnalysis"
    },
    {
      "trigger": "DFDCleanContourGeom\tType",
      "contents": "DFDCleanContourGeom"
    },
    {
      "trigger": "DFDConvexPolygon\tType",
      "contents": "DFDConvexPolygon"
    },
    {
      "trigger": "DFDDepthAnalysis\tType",
      "contents": "DFDDepthAnalysis"
    },
    {
      "trigger": "DFDDraftAnalysis\tType",
      "contents": "DFDDraftAnalysis"
    },
    {
      "trigger": "DFDDrawbead\tType",
      "contents": "DFDDrawbead"
    },
    {
      "trigger": "DFDDrawbeadProfile\tType",
      "contents": "DFDDrawbeadProfile"
    },
    {
      "trigger": "DFDFoldingPartition\tType",
      "contents": "DFDFoldingPartition"
    },
    {
      "trigger": "DFDGeometryBlankCurve\tType",
      "contents": "DFDGeometryBlankCurve"
    },
    {
      "trigger": "DFDGeometryBlankSurface\tType",
      "contents": "DFDGeometryBlankSurface"
    },
    {
      "trigger": "DFDGeometryCuttingLine\tType",
      "contents": "DFDGeometryCuttingLine"
    },
    {
      "trigger": "DFDGeometryCuttingSurface\tType",
      "contents": "DFDGeometryCuttingSurface"
    },
    {
      "trigger": "DFDGeometryFoldedSurface\tType",
      "contents": "DFDGeometryFoldedSurface"
    },
    {
      "trigger": "DFDGeometryFoldingLine\tType",
      "contents": "DFDGeometryFoldingLine"
    },
    {
      "trigger": "DFDGeometryInitialSurface\tType",
      "contents": "DFDGeometryInitialSurface"
    },
    {
      "trigger": "DFDGeometryIntermediateCurve\tType",
      "contents": "DFDGeometryIntermediateCurve"
    },
    {
      "trigger": "DFDGeometryIntermediateSurface\tType",
      "contents": "DFDGeometryIntermediateSurface"
    },
    {
      "trigger": "DFDGeometryPaintingHole\tType",
      "contents": "DFDGeometryPaintingHole"
    },
    {
      "trigger": "DFDGeometryPositioningHole\tType",
      "contents": "DFDGeometryPositioningHole"
    },
    {
      "trigger": "DFDGeometryRemovedSurface\tType",
      "contents": "DFDGeometryRemovedSurface"
    },
    {
      "trigger": "DFDGeometryScrapCutter\tType",
      "contents": "DFDGeometryScrapCutter"
    },
    {
      "trigger": "DFDGeometryScrapHole\tType",
      "contents": "DFDGeometryScrapHole"
    },
    {
      "trigger": "DFDGeometryScrapLine\tType",
      "contents": "DFDGeometryScrapLine"
    },
    {
      "trigger": "DFDGeometryScrapSurface\tType",
      "contents": "DFDGeometryScrapSurface"
    },
    {
      "trigger": "DFDGeometrySetting\tType",
      "contents": "DFDGeometrySetting"
    },
    {
      "trigger": "DFDGeometryStampedSurface\tType",
      "contents": "DFDGeometryStampedSurface"
    },
    {
      "trigger": "DFDGeometryStepGeometry\tType",
      "contents": "DFDGeometryStepGeometry"
    },
    {
      "trigger": "DFDGeometryToolCurve\tType",
      "contents": "DFDGeometryToolCurve"
    },
    {
      "trigger": "DFDGeometryToolSurface\tType",
      "contents": "DFDGeometryToolSurface"
    },
    {
      "trigger": "DFDGeometryTransferedCurve\tType",
      "contents": "DFDGeometryTransferedCurve"
    },
    {
      "trigger": "DFDGeometryTransferedSurface\tType",
      "contents": "DFDGeometryTransferedSurface"
    },
    {
      "trigger": "DFDGeometryUnfoldedSurface\tType",
      "contents": "DFDGeometryUnfoldedSurface"
    },
    {
      "trigger": "DFDGeometryUserGeneralHole\tType",
      "contents": "DFDGeometryUserGeneralHole"
    },
    {
      "trigger": "DFDGlobalUnfold\tType",
      "contents": "DFDGlobalUnfold"
    },
    {
      "trigger": "DFDInsertionDepthAnalysis\tType",
      "contents": "DFDInsertionDepthAnalysis"
    },
    {
      "trigger": "DFDMainStampingDirection\tType",
      "contents": "DFDMainStampingDirection"
    },
    {
      "trigger": "DFDMaterialDefinition\tType",
      "contents": "DFDMaterialDefinition"
    },
    {
      "trigger": "DFDMeshedSurface\tType",
      "contents": "DFDMeshedSurface"
    },
    {
      "trigger": "DFDMethodPlanBlankCurve\tType",
      "contents": "DFDMethodPlanBlankCurve"
    },
    {
      "trigger": "DFDMethodPlanBlankSurface\tType",
      "contents": "DFDMethodPlanBlankSurface"
    },
    {
      "trigger": "DFDNormalsAnalysis\tType",
      "contents": "DFDNormalsAnalysis"
    },
    {
      "trigger": "DFDPierceAnalysis\tType",
      "contents": "DFDPierceAnalysis"
    },
    {
      "trigger": "DFDPivotFlange\tType",
      "contents": "DFDPivotFlange"
    },
    {
      "trigger": "DFDPreHemGeom\tType",
      "contents": "DFDPreHemGeom"
    },
    {
      "trigger": "DFDPressDirection\tType",
      "contents": "DFDPressDirection"
    },
    {
      "trigger": "DFDProcessContainer\tType",
      "contents": "DFDProcessContainer"
    },
    {
      "trigger": "DFDProcessCustomGeom\tType",
      "contents": "DFDProcessCustomGeom"
    },
    {
      "trigger": "DFDProcessCustomGeomCurve\tType",
      "contents": "DFDProcessCustomGeomCurve"
    },
    {
      "trigger": "DFDProcessCustomGeomSurface\tType",
      "contents": "DFDProcessCustomGeomSurface"
    },
    {
      "trigger": "DFDProcessPositioning\tType",
      "contents": "DFDProcessPositioning"
    },
    {
      "trigger": "DFDProcessProxy\tType",
      "contents": "DFDProcessProxy"
    },
    {
      "trigger": "DFDProcessStep\tType",
      "contents": "DFDProcessStep"
    },
    {
      "trigger": "DFDProcessTool\tType",
      "contents": "DFDProcessTool"
    },
    {
      "trigger": "DFDRadiusAnalysis\tType",
      "contents": "DFDRadiusAnalysis"
    },
    {
      "trigger": "DFDScrapPartition\tType",
      "contents": "DFDScrapPartition"
    },
    {
      "trigger": "DFDSecondaryStampingDirection\tType",
      "contents": "DFDSecondaryStampingDirection"
    },
    {
      "trigger": "DFDShearAnalysis\tType",
      "contents": "DFDShearAnalysis"
    },
    {
      "trigger": "DFDSimQuickFormability\tType",
      "contents": "DFDSimQuickFormability"
    },
    {
      "trigger": "DFDStampingPartition\tType",
      "contents": "DFDStampingPartition"
    },
    {
      "trigger": "DFDSurfaceOffset\tType",
      "contents": "DFDSurfaceOffset"
    },
    {
      "trigger": "DFDTrimmingPartition\tType",
      "contents": "DFDTrimmingPartition"
    },
    {
      "trigger": "DFDUnfold\tType",
      "contents": "DFDUnfold"
    },
    {
      "trigger": "DFDWallSurface\tType",
      "contents": "DFDWallSurface"
    },
    {
      "trigger": "DFDWallSurfaceManager\tType",
      "contents": "DFDWallSurfaceManager"
    },
    {
      "trigger": "DMUAnimViewpointType\tType",
      "contents": "DMUAnimViewpointType"
    },
    {
      "trigger": "DMUAnnotViewsType\tType",
      "contents": "DMUAnnotViewsType"
    },
    {
      "trigger": "DMUFilterType\tType",
      "contents": "DMUFilterType"
    },
    {
      "trigger": "DMUMeasureType\tType",
      "contents": "DMUMeasureType"
    },
    {
      "trigger": "DMUSectionType\tType",
      "contents": "DMUSectionType"
    },
    {
      "trigger": "DNBArcWeldProfile\tType",
      "contents": "DNBArcWeldProfile"
    },
    {
      "trigger": "DNBConst\tType",
      "contents": "DNBConst"
    },
    {
      "trigger": "DNBDataEntity\tType",
      "contents": "DNBDataEntity"
    },
    {
      "trigger": "DNBFitTrack\tType",
      "contents": "DNBFitTrack"
    },
    {
      "trigger": "DNBLocalVar\tType",
      "contents": "DNBLocalVar"
    },
    {
      "trigger": "DNBResourceTask\tType",
      "contents": "DNBResourceTask"
    },
    {
      "trigger": "DNBRobotMotion\tType",
      "contents": "DNBRobotMotion"
    },
    {
      "trigger": "DNBRscCompareAndTransformManager\tType",
      "contents": "DNBRscCompareAndTransformManager"
    },
    {
      "trigger": "DNBSPMOperation\tType",
      "contents": "DNBSPMOperation"
    },
    {
      "trigger": "DNBSpotAccuracyProfileAndAccelMoves\tType",
      "contents": "DNBSpotAccuracyProfileAndAccelMoves"
    },
    {
      "trigger": "DNBSpotAxis\tType",
      "contents": "DNBSpotAxis"
    },
    {
      "trigger": "DNBSpotMoves\tType",
      "contents": "DNBSpotMoves"
    },
    {
      "trigger": "DNBSpotMovingTipClearanceMoves\tType",
      "contents": "DNBSpotMovingTipClearanceMoves"
    },
    {
      "trigger": "DNBSpotProfile\tType",
      "contents": "DNBSpotProfile"
    },
    {
      "trigger": "DNBSpotStationaryTipClearanceMoves\tType",
      "contents": "DNBSpotStationaryTipClearanceMoves"
    },
    {
      "trigger": "DNBTag\tType",
      "contents": "DNBTag"
    },
    {
      "trigger": "DNBTagGroup\tType",
      "contents": "DNBTagGroup"
    },
    {
      "trigger": "DNBTagMeasure\tType",
      "contents": "DNBTagMeasure"
    },
    {
      "trigger": "DNBTaskManager\tType",
      "contents": "DNBTaskManager"
    },
    {
      "trigger": "DNBTrajectoryInterpolator\tType",
      "contents": "DNBTrajectoryInterpolator"
    },
    {
      "trigger": "DNBTrajectoryMode\tType",
      "contents": "DNBTrajectoryMode"
    },
    {
      "trigger": "DTLotusSheetType\tType",
      "contents": "DTLotusSheetType"
    },
    {
      "trigger": "DTModelSheetType\tType",
      "contents": "DTModelSheetType"
    },
    {
      "trigger": "DTSheetType\tType",
      "contents": "DTSheetType"
    },
    {
      "trigger": "DTTextSheetType\tType",
      "contents": "DTTextSheetType"
    },
    {
      "trigger": "DataTreeNode\tType",
      "contents": "DataTreeNode"
    },
    {
      "trigger": "DesignSequence\tType",
      "contents": "DesignSequence"
    },
    {
      "trigger": "DesignTableType\tType",
      "contents": "DesignTableType"
    },
    {
      "trigger": "DetailVisuRepresentationMode\tType",
      "contents": "DetailVisuRepresentationMode"
    },
    {
      "trigger": "DialogCommandInvocation\tType",
      "contents": "DialogCommandInvocation"
    },
    {
      "trigger": "DieInsertTool\tType",
      "contents": "DieInsertTool"
    },
    {
      "trigger": "DieTool\tType",
      "contents": "DieTool"
    },
    {
      "trigger": "DifPort\tType",
      "contents": "DifPort"
    },
    {
      "trigger": "DifRoute\tType",
      "contents": "DifRoute"
    },
    {
      "trigger": "DifSymbol\tType",
      "contents": "DifSymbol"
    },
    {
      "trigger": "DimensionType\tType",
      "contents": "DimensionType"
    },
    {
      "trigger": "Direction\tType",
      "contents": "Direction"
    },
    {
      "trigger": "DirectionEnum\tType",
      "contents": "DirectionEnum"
    },
    {
      "trigger": "DocumentTemplate\tType",
      "contents": "DocumentTemplate"
    },
    {
      "trigger": "Draft\tType",
      "contents": "Draft"
    },
    {
      "trigger": "DrainageEquipmentTypeEnum\tType",
      "contents": "DrainageEquipmentTypeEnum"
    },
    {
      "trigger": "Drilling\tType",
      "contents": "Drilling"
    },
    {
      "trigger": "DrillingBreakChips\tType",
      "contents": "DrillingBreakChips"
    },
    {
      "trigger": "DrillingDeepHole\tType",
      "contents": "DrillingDeepHole"
    },
    {
      "trigger": "DrillingDwellDelay\tType",
      "contents": "DrillingDwellDelay"
    },
    {
      "trigger": "DrillingRivetingOperation\tType",
      "contents": "DrillingRivetingOperation"
    },
    {
      "trigger": "DrwAnnBroken\tType",
      "contents": "DrwAnnBroken"
    },
    {
      "trigger": "DrwAnnLabel\tType",
      "contents": "DrwAnnLabel"
    },
    {
      "trigger": "DrwAreaFill\tType",
      "contents": "DrwAreaFill"
    },
    {
      "trigger": "DrwArrow\tType",
      "contents": "DrwArrow"
    },
    {
      "trigger": "DrwAxisLine\tType",
      "contents": "DrwAxisLine"
    },
    {
      "trigger": "DrwBalloon\tType",
      "contents": "DrwBalloon"
    },
    {
      "trigger": "DrwCallout\tType",
      "contents": "DrwCallout"
    },
    {
      "trigger": "DrwCenterLine\tType",
      "contents": "DrwCenterLine"
    },
    {
      "trigger": "DrwCoordDimension\tType",
      "contents": "DrwCoordDimension"
    },
    {
      "trigger": "DrwDatumFeature\tType",
      "contents": "DrwDatumFeature"
    },
    {
      "trigger": "DrwDatumTarget\tType",
      "contents": "DrwDatumTarget"
    },
    {
      "trigger": "DrwDetail\tType",
      "contents": "DrwDetail"
    },
    {
      "trigger": "DrwDimSystem\tType",
      "contents": "DrwDimSystem"
    },
    {
      "trigger": "DrwDimension\tType",
      "contents": "DrwDimension"
    },
    {
      "trigger": "DrwDitto\tType",
      "contents": "DrwDitto"
    },
    {
      "trigger": "DrwDrawing\tType",
      "contents": "DrwDrawing"
    },
    {
      "trigger": "DrwGDT\tType",
      "contents": "DrwGDT"
    },
    {
      "trigger": "DrwObject\tType",
      "contents": "DrwObject"
    },
    {
      "trigger": "DrwPicture\tType",
      "contents": "DrwPicture"
    },
    {
      "trigger": "DrwRough\tType",
      "contents": "DrwRough"
    },
    {
      "trigger": "DrwSheet\tType",
      "contents": "DrwSheet"
    },
    {
      "trigger": "DrwTable\tType",
      "contents": "DrwTable"
    },
    {
      "trigger": "DrwText\tType",
      "contents": "DrwText"
    },
    {
      "trigger": "DrwThread\tType",
      "contents": "DrwThread"
    },
    {
      "trigger": "DrwView\tType",
      "contents": "DrwView"
    },
    {
      "trigger": "DrwWelding\tType",
      "contents": "DrwWelding"
    },
    {
      "trigger": "DwBoring\tType",
      "contents": "DwBoring"
    },
    {
      "trigger": "DwCircularMilling\tType",
      "contents": "DwCircularMilling"
    },
    {
      "trigger": "DwDrilling\tType",
      "contents": "DwDrilling"
    },
    {
      "trigger": "DwSequentialDrilling\tType",
      "contents": "DwSequentialDrilling"
    },
    {
      "trigger": "DwTapping\tType",
      "contents": "DwTapping"
    },
    {
      "trigger": "DwThreadMilling\tType",
      "contents": "DwThreadMilling"
    },
    {
      "trigger": "EleFlattenStatusType\tType",
      "contents": "EleFlattenStatusType"
    },
    {
      "trigger": "EleLogicalBusbarOcc\tType",
      "contents": "EleLogicalBusbarOcc"
    },
    {
      "trigger": "EleLogicalCableGroupOcc\tType",
      "contents": "EleLogicalCableGroupOcc"
    },
    {
      "trigger": "EleLogicalCableOcc\tType",
      "contents": "EleLogicalCableOcc"
    },
    {
      "trigger": "EleLogicalCableShieldedOcc\tType",
      "contents": "EleLogicalCableShieldedOcc"
    },
    {
      "trigger": "EleLogicalCableTwistedOcc\tType",
      "contents": "EleLogicalCableTwistedOcc"
    },
    {
      "trigger": "EleLogicalCableTwistedShieldedOcc\tType",
      "contents": "EleLogicalCableTwistedShieldedOcc"
    },
    {
      "trigger": "EleLogicalCoaxCableOcc\tType",
      "contents": "EleLogicalCoaxCableOcc"
    },
    {
      "trigger": "EleLogicalConductorOcc\tType",
      "contents": "EleLogicalConductorOcc"
    },
    {
      "trigger": "EleLogicalConnectorOcc\tType",
      "contents": "EleLogicalConnectorOcc"
    },
    {
      "trigger": "EleLogicalHarnessOcc\tType",
      "contents": "EleLogicalHarnessOcc"
    },
    {
      "trigger": "EleLogicalInlineConnectorOcc\tType",
      "contents": "EleLogicalInlineConnectorOcc"
    },
    {
      "trigger": "EleLogicalNetGroupOcc\tType",
      "contents": "EleLogicalNetGroupOcc"
    },
    {
      "trigger": "EleLogicalNetOcc\tType",
      "contents": "EleLogicalNetOcc"
    },
    {
      "trigger": "EleLogicalPlugPort\tType",
      "contents": "EleLogicalPlugPort"
    },
    {
      "trigger": "EleLogicalPowerCableOcc\tType",
      "contents": "EleLogicalPowerCableOcc"
    },
    {
      "trigger": "EleLogicalReceptaclePort\tType",
      "contents": "EleLogicalReceptaclePort"
    },
    {
      "trigger": "EleLogicalRoutableOcc\tType",
      "contents": "EleLogicalRoutableOcc"
    },
    {
      "trigger": "EleLogicalShellConnectorOcc\tType",
      "contents": "EleLogicalShellConnectorOcc"
    },
    {
      "trigger": "EleLogicalSingleConnectorOcc\tType",
      "contents": "EleLogicalSingleConnectorOcc"
    },
    {
      "trigger": "EleLogicalSpliceOcc\tType",
      "contents": "EleLogicalSpliceOcc"
    },
    {
      "trigger": "EleLogicalTerminalBlockGroup\tType",
      "contents": "EleLogicalTerminalBlockGroup"
    },
    {
      "trigger": "EleLogicalTerminalBlockGroupInst\tType",
      "contents": "EleLogicalTerminalBlockGroupInst"
    },
    {
      "trigger": "EleLogicalTerminalBoardGroup\tType",
      "contents": "EleLogicalTerminalBoardGroup"
    },
    {
      "trigger": "EleLogicalTerminalBoardGroupInst\tType",
      "contents": "EleLogicalTerminalBoardGroupInst"
    },
    {
      "trigger": "EleLogicalTerminalBoardOcc\tType",
      "contents": "EleLogicalTerminalBoardOcc"
    },
    {
      "trigger": "EleLogicalWireOcc\tType",
      "contents": "EleLogicalWireOcc"
    },
    {
      "trigger": "EleLogicalWireShieldOcc\tType",
      "contents": "EleLogicalWireShieldOcc"
    },
    {
      "trigger": "Elec3DAnnotation\tType",
      "contents": "Elec3DAnnotation"
    },
    {
      "trigger": "Elec3DBackShellOccurrence\tType",
      "contents": "Elec3DBackShellOccurrence"
    },
    {
      "trigger": "Elec3DBranchableAnnotation\tType",
      "contents": "Elec3DBranchableAnnotation"
    },
    {
      "trigger": "Elec3DCableCore\tType",
      "contents": "Elec3DCableCore"
    },
    {
      "trigger": "Elec3DCableOccurrence\tType",
      "contents": "Elec3DCableOccurrence"
    },
    {
      "trigger": "Elec3DConductorEnd\tType",
      "contents": "Elec3DConductorEnd"
    },
    {
      "trigger": "Elec3DConductorGroupOccurrence\tType",
      "contents": "Elec3DConductorGroupOccurrence"
    },
    {
      "trigger": "Elec3DConductorOccurrence\tType",
      "contents": "Elec3DConductorOccurrence"
    },
    {
      "trigger": "Elec3DContactAdaptorOccurrence\tType",
      "contents": "Elec3DContactAdaptorOccurrence"
    },
    {
      "trigger": "Elec3DContactOccurrence\tType",
      "contents": "Elec3DContactOccurrence"
    },
    {
      "trigger": "Elec3DDeviceNode\tType",
      "contents": "Elec3DDeviceNode"
    },
    {
      "trigger": "Elec3DDeviceRouteElement\tType",
      "contents": "Elec3DDeviceRouteElement"
    },
    {
      "trigger": "Elec3DDuctOccurrence\tType",
      "contents": "Elec3DDuctOccurrence"
    },
    {
      "trigger": "Elec3DExtensionGuideCurve\tType",
      "contents": "Elec3DExtensionGuideCurve"
    },
    {
      "trigger": "Elec3DFillerPlugOccurrence\tType",
      "contents": "Elec3DFillerPlugOccurrence"
    },
    {
      "trigger": "Elec3DJunctionDeviceNode\tType",
      "contents": "Elec3DJunctionDeviceNode"
    },
    {
      "trigger": "Elec3DJunctionNode\tType",
      "contents": "Elec3DJunctionNode"
    },
    {
      "trigger": "Elec3DModuleOccurrence\tType",
      "contents": "Elec3DModuleOccurrence"
    },
    {
      "trigger": "Elec3DMultiInsertConnectorOccurrence\tType",
      "contents": "Elec3DMultiInsertConnectorOccurrence"
    },
    {
      "trigger": "Elec3DNetworkArc\tType",
      "contents": "Elec3DNetworkArc"
    },
    {
      "trigger": "Elec3DNetworkNode\tType",
      "contents": "Elec3DNetworkNode"
    },
    {
      "trigger": "Elec3DNetworkPath\tType",
      "contents": "Elec3DNetworkPath"
    },
    {
      "trigger": "Elec3DPLCOccurrence\tType",
      "contents": "Elec3DPLCOccurrence"
    },
    {
      "trigger": "Elec3DPointRouteElement\tType",
      "contents": "Elec3DPointRouteElement"
    },
    {
      "trigger": "Elec3DProtectionAnnotation\tType",
      "contents": "Elec3DProtectionAnnotation"
    },
    {
      "trigger": "Elec3DProxyNode\tType",
      "contents": "Elec3DProxyNode"
    },
    {
      "trigger": "Elec3DRailOccurrence\tType",
      "contents": "Elec3DRailOccurrence"
    },
    {
      "trigger": "Elec3DRouteElement\tType",
      "contents": "Elec3DRouteElement"
    },
    {
      "trigger": "Elec3DSealOccurrence\tType",
      "contents": "Elec3DSealOccurrence"
    },
    {
      "trigger": "Elec3DSegmentAnnotation\tType",
      "contents": "Elec3DSegmentAnnotation"
    },
    {
      "trigger": "Elec3DShellOccurrence\tType",
      "contents": "Elec3DShellOccurrence"
    },
    {
      "trigger": "Elec3DSingleInsertConnectorOccurrence\tType",
      "contents": "Elec3DSingleInsertConnectorOccurrence"
    },
    {
      "trigger": "Elec3DSpliceNode\tType",
      "contents": "Elec3DSpliceNode"
    },
    {
      "trigger": "Elec3DSpliceOccurrence\tType",
      "contents": "Elec3DSpliceOccurrence"
    },
    {
      "trigger": "Elec3DStudOccurrence\tType",
      "contents": "Elec3DStudOccurrence"
    },
    {
      "trigger": "Elec3DSupportRouteElement\tType",
      "contents": "Elec3DSupportRouteElement"
    },
    {
      "trigger": "Elec3DTerminalBlockOccurrence\tType",
      "contents": "Elec3DTerminalBlockOccurrence"
    },
    {
      "trigger": "Elec3DTerminalStripOccurrence\tType",
      "contents": "Elec3DTerminalStripOccurrence"
    },
    {
      "trigger": "ElecCableRawMaterialCore\tType",
      "contents": "ElecCableRawMaterialCore"
    },
    {
      "trigger": "ElecCircularProfile\tType",
      "contents": "ElecCircularProfile"
    },
    {
      "trigger": "ElecConductorOccurrence\tType",
      "contents": "ElecConductorOccurrence"
    },
    {
      "trigger": "ElecDeviceDistantLink\tType",
      "contents": "ElecDeviceDistantLink"
    },
    {
      "trigger": "ElecDimPath\tType",
      "contents": "ElecDimPath"
    },
    {
      "trigger": "ElecEllipticalProfile\tType",
      "contents": "ElecEllipticalProfile"
    },
    {
      "trigger": "ElecGroupingNodeOccurrence\tType",
      "contents": "ElecGroupingNodeOccurrence"
    },
    {
      "trigger": "ElecHoles\tType",
      "contents": "ElecHoles"
    },
    {
      "trigger": "ElecItinerary\tType",
      "contents": "ElecItinerary"
    },
    {
      "trigger": "ElecPartOccurrence\tType",
      "contents": "ElecPartOccurrence"
    },
    {
      "trigger": "ElecProfile\tType",
      "contents": "ElecProfile"
    },
    {
      "trigger": "ElecRectangularProfile\tType",
      "contents": "ElecRectangularProfile"
    },
    {
      "trigger": "ElecRoute\tType",
      "contents": "ElecRoute"
    },
    {
      "trigger": "ElecRouteImpactInfo\tType",
      "contents": "ElecRouteImpactInfo"
    },
    {
      "trigger": "ElecTruncatedRectangularProfile\tType",
      "contents": "ElecTruncatedRectangularProfile"
    },
    {
      "trigger": "Electrical3DSystemOccurrence\tType",
      "contents": "Electrical3DSystemOccurrence"
    },
    {
      "trigger": "ElectricalBranchGeometryOccurrence\tType",
      "contents": "ElectricalBranchGeometryOccurrence"
    },
    {
      "trigger": "ElectricalGeometryOccurrence\tType",
      "contents": "ElectricalGeometryOccurrence"
    },
    {
      "trigger": "EnsCondition\tType",
      "contents": "EnsCondition"
    },
    {
      "trigger": "EnsEngSpecResourceFinder\tType",
      "contents": "EnsEngSpecResourceFinder"
    },
    {
      "trigger": "EnsExpression\tType",
      "contents": "EnsExpression"
    },
    {
      "trigger": "EnsFilterUnit\tType",
      "contents": "EnsFilterUnit"
    },
    {
      "trigger": "EnsParameterDescriptor\tType",
      "contents": "EnsParameterDescriptor"
    },
    {
      "trigger": "EnsTechnologicalTableCell\tType",
      "contents": "EnsTechnologicalTableCell"
    },
    {
      "trigger": "EnsTechnologicalTableDependancy\tType",
      "contents": "EnsTechnologicalTableDependancy"
    },
    {
      "trigger": "EvaluationError\tType",
      "contents": "EvaluationError"
    },
    {
      "trigger": "ExpandMode\tType",
      "contents": "ExpandMode"
    },
    {
      "trigger": "FEConstructType\tType",
      "contents": "FEConstructType"
    },
    {
      "trigger": "FEConstructTypeLine\tType",
      "contents": "FEConstructTypeLine"
    },
    {
      "trigger": "FFS_AGVInstance\tType",
      "contents": "FFS_AGVInstance"
    },
    {
      "trigger": "FFS_Activity\tType",
      "contents": "FFS_Activity"
    },
    {
      "trigger": "FFS_ActivitySelectionMode\tType",
      "contents": "FFS_ActivitySelectionMode"
    },
    {
      "trigger": "FFS_BlockOtherAGVsMode\tType",
      "contents": "FFS_BlockOtherAGVsMode"
    },
    {
      "trigger": "FFS_Break\tType",
      "contents": "FFS_Break"
    },
    {
      "trigger": "FFS_BreakStartBehavior\tType",
      "contents": "FFS_BreakStartBehavior"
    },
    {
      "trigger": "FFS_BufferActivity\tType",
      "contents": "FFS_BufferActivity"
    },
    {
      "trigger": "FFS_CanAcceptPartDuringFailure\tType",
      "contents": "FFS_CanAcceptPartDuringFailure"
    },
    {
      "trigger": "FFS_ClaimGroup\tType",
      "contents": "FFS_ClaimGroup"
    },
    {
      "trigger": "FFS_Consumable\tType",
      "contents": "FFS_Consumable"
    },
    {
      "trigger": "FFS_ContinueLoadNUnloadMode\tType",
      "contents": "FFS_ContinueLoadNUnloadMode"
    },
    {
      "trigger": "FFS_ConveyorDecisionPoint\tType",
      "contents": "FFS_ConveyorDecisionPoint"
    },
    {
      "trigger": "FFS_CreateActivity\tType",
      "contents": "FFS_CreateActivity"
    },
    {
      "trigger": "FFS_Date\tType",
      "contents": "FFS_Date"
    },
    {
      "trigger": "FFS_DelayType\tType",
      "contents": "FFS_DelayType"
    },
    {
      "trigger": "FFS_DependencyType\tType",
      "contents": "FFS_DependencyType"
    },
    {
      "trigger": "FFS_DestinationProperties\tType",
      "contents": "FFS_DestinationProperties"
    },
    {
      "trigger": "FFS_DirectionChangeMode\tType",
      "contents": "FFS_DirectionChangeMode"
    },
    {
      "trigger": "FFS_DispatchActivity\tType",
      "contents": "FFS_DispatchActivity"
    },
    {
      "trigger": "FFS_EngageMode\tType",
      "contents": "FFS_EngageMode"
    },
    {
      "trigger": "FFS_Failure\tType",
      "contents": "FFS_Failure"
    },
    {
      "trigger": "FFS_FailureScheduleMode\tType",
      "contents": "FFS_FailureScheduleMode"
    },
    {
      "trigger": "FFS_FlowMode\tType",
      "contents": "FFS_FlowMode"
    },
    {
      "trigger": "FFS_GenericActivity\tType",
      "contents": "FFS_GenericActivity"
    },
    {
      "trigger": "FFS_GroupActivity\tType",
      "contents": "FFS_GroupActivity"
    },
    {
      "trigger": "FFS_GroupResultType\tType",
      "contents": "FFS_GroupResultType"
    },
    {
      "trigger": "FFS_InZone\tType",
      "contents": "FFS_InZone"
    },
    {
      "trigger": "FFS_InterruptStatus\tType",
      "contents": "FFS_InterruptStatus"
    },
    {
      "trigger": "FFS_Item\tType",
      "contents": "FFS_Item"
    },
    {
      "trigger": "FFS_LeaderLocation\tType",
      "contents": "FFS_LeaderLocation"
    },
    {
      "trigger": "FFS_LoadActivity\tType",
      "contents": "FFS_LoadActivity"
    },
    {
      "trigger": "FFS_LoadLogic\tType",
      "contents": "FFS_LoadLogic"
    },
    {
      "trigger": "FFS_OperationMode\tType",
      "contents": "FFS_OperationMode"
    },
    {
      "trigger": "FFS_OutZone\tType",
      "contents": "FFS_OutZone"
    },
    {
      "trigger": "FFS_PackActivity\tType",
      "contents": "FFS_PackActivity"
    },
    {
      "trigger": "FFS_PalletStatusType\tType",
      "contents": "FFS_PalletStatusType"
    },
    {
      "trigger": "FFS_ParkingGroup\tType",
      "contents": "FFS_ParkingGroup"
    },
    {
      "trigger": "FFS_PartAccumulation\tType",
      "contents": "FFS_PartAccumulation"
    },
    {
      "trigger": "FFS_PartOutputMode\tType",
      "contents": "FFS_PartOutputMode"
    },
    {
      "trigger": "FFS_Precedence\tType",
      "contents": "FFS_Precedence"
    },
    {
      "trigger": "FFS_ProductFlow\tType",
      "contents": "FFS_ProductFlow"
    },
    {
      "trigger": "FFS_ProductZone\tType",
      "contents": "FFS_ProductZone"
    },
    {
      "trigger": "FFS_QueuingMode\tType",
      "contents": "FFS_QueuingMode"
    },
    {
      "trigger": "FFS_RepairActivity\tType",
      "contents": "FFS_RepairActivity"
    },
    {
      "trigger": "FFS_RepairEndMode\tType",
      "contents": "FFS_RepairEndMode"
    },
    {
      "trigger": "FFS_RepairStartMode\tType",
      "contents": "FFS_RepairStartMode"
    },
    {
      "trigger": "FFS_RequestGroup\tType",
      "contents": "FFS_RequestGroup"
    },
    {
      "trigger": "FFS_RequestGroupProductStatus\tType",
      "contents": "FFS_RequestGroupProductStatus"
    },
    {
      "trigger": "FFS_RequestGroupRequestMode\tType",
      "contents": "FFS_RequestGroupRequestMode"
    },
    {
      "trigger": "FFS_RequestGroupRequestType\tType",
      "contents": "FFS_RequestGroupRequestType"
    },
    {
      "trigger": "FFS_RequestType\tType",
      "contents": "FFS_RequestType"
    },
    {
      "trigger": "FFS_Resource\tType",
      "contents": "FFS_Resource"
    },
    {
      "trigger": "FFS_ResourcePool\tType",
      "contents": "FFS_ResourcePool"
    },
    {
      "trigger": "FFS_ResourceType\tType",
      "contents": "FFS_ResourceType"
    },
    {
      "trigger": "FFS_ResourceZone\tType",
      "contents": "FFS_ResourceZone"
    },
    {
      "trigger": "FFS_ReturnCode\tType",
      "contents": "FFS_ReturnCode"
    },
    {
      "trigger": "FFS_RoadSegment\tType",
      "contents": "FFS_RoadSegment"
    },
    {
      "trigger": "FFS_RouteGroup\tType",
      "contents": "FFS_RouteGroup"
    },
    {
      "trigger": "FFS_RouteGroupProductStatus\tType",
      "contents": "FFS_RouteGroupProductStatus"
    },
    {
      "trigger": "FFS_RouteGroupRoutingMode\tType",
      "contents": "FFS_RouteGroupRoutingMode"
    },
    {
      "trigger": "FFS_RouteGroupRoutingType\tType",
      "contents": "FFS_RouteGroupRoutingType"
    },
    {
      "trigger": "FFS_RoutingType\tType",
      "contents": "FFS_RoutingType"
    },
    {
      "trigger": "FFS_SegmentDirection\tType",
      "contents": "FFS_SegmentDirection"
    },
    {
      "trigger": "FFS_SelectionMode\tType",
      "contents": "FFS_SelectionMode"
    },
    {
      "trigger": "FFS_Shift\tType",
      "contents": "FFS_Shift"
    },
    {
      "trigger": "FFS_ShiftEndBehavior\tType",
      "contents": "FFS_ShiftEndBehavior"
    },
    {
      "trigger": "FFS_ShiftModel\tType",
      "contents": "FFS_ShiftModel"
    },
    {
      "trigger": "FFS_SimScenario\tType",
      "contents": "FFS_SimScenario"
    },
    {
      "trigger": "FFS_StartMode\tType",
      "contents": "FFS_StartMode"
    },
    {
      "trigger": "FFS_StationaryResourcesMode\tType",
      "contents": "FFS_StationaryResourcesMode"
    },
    {
      "trigger": "FFS_StoppingSpaceBehavior\tType",
      "contents": "FFS_StoppingSpaceBehavior"
    },
    {
      "trigger": "FFS_TimeDistribution\tType",
      "contents": "FFS_TimeDistribution"
    },
    {
      "trigger": "FFS_TimeDistributionType\tType",
      "contents": "FFS_TimeDistributionType"
    },
    {
      "trigger": "FFS_TrafficFlowType\tType",
      "contents": "FFS_TrafficFlowType"
    },
    {
      "trigger": "FFS_TrainBehavior\tType",
      "contents": "FFS_TrainBehavior"
    },
    {
      "trigger": "FFS_TrainInstance\tType",
      "contents": "FFS_TrainInstance"
    },
    {
      "trigger": "FFS_TrainRouteMode\tType",
      "contents": "FFS_TrainRouteMode"
    },
    {
      "trigger": "FFS_TransferActivity\tType",
      "contents": "FFS_TransferActivity"
    },
    {
      "trigger": "FFS_TransferMode\tType",
      "contents": "FFS_TransferMode"
    },
    {
      "trigger": "FFS_TransformActivity\tType",
      "contents": "FFS_TransformActivity"
    },
    {
      "trigger": "FFS_TransportRouteGroup\tType",
      "contents": "FFS_TransportRouteGroup"
    },
    {
      "trigger": "FFS_TruckDetails\tType",
      "contents": "FFS_TruckDetails"
    },
    {
      "trigger": "FFS_TruckInstance\tType",
      "contents": "FFS_TruckInstance"
    },
    {
      "trigger": "FFS_UnLoadLogic\tType",
      "contents": "FFS_UnLoadLogic"
    },
    {
      "trigger": "FFS_UnitType\tType",
      "contents": "FFS_UnitType"
    },
    {
      "trigger": "FFS_UnloadActivity\tType",
      "contents": "FFS_UnloadActivity"
    },
    {
      "trigger": "FFS_UnpackActivity\tType",
      "contents": "FFS_UnpackActivity"
    },
    {
      "trigger": "FFS_UserLogic\tType",
      "contents": "FFS_UserLogic"
    },
    {
      "trigger": "FFS_VehicleController\tType",
      "contents": "FFS_VehicleController"
    },
    {
      "trigger": "FFS_VehicleControllerActivitySelectionMode\tType",
      "contents": "FFS_VehicleControllerActivitySelectionMode"
    },
    {
      "trigger": "FFS_VehicleControllerClaimMode\tType",
      "contents": "FFS_VehicleControllerClaimMode"
    },
    {
      "trigger": "FFS_VehicleControllerMoveMode\tType",
      "contents": "FFS_VehicleControllerMoveMode"
    },
    {
      "trigger": "FFS_VehicleControllerOperationMode\tType",
      "contents": "FFS_VehicleControllerOperationMode"
    },
    {
      "trigger": "FFS_VehicleControllerPathMode\tType",
      "contents": "FFS_VehicleControllerPathMode"
    },
    {
      "trigger": "FFS_VehicleControllerTaskSelectionRule\tType",
      "contents": "FFS_VehicleControllerTaskSelectionRule"
    },
    {
      "trigger": "FFS_VehicleControllerVehicleDestination\tType",
      "contents": "FFS_VehicleControllerVehicleDestination"
    },
    {
      "trigger": "FFS_VehicleControllerVehicleEventSelection\tType",
      "contents": "FFS_VehicleControllerVehicleEventSelection"
    },
    {
      "trigger": "FFS_VehicleControllerVehicleParking\tType",
      "contents": "FFS_VehicleControllerVehicleParking"
    },
    {
      "trigger": "FFS_VehicleControllerVehiclePartRoute\tType",
      "contents": "FFS_VehicleControllerVehiclePartRoute"
    },
    {
      "trigger": "FFS_VehicleControllerVehiclePathSelection\tType",
      "contents": "FFS_VehicleControllerVehiclePathSelection"
    },
    {
      "trigger": "FFS_VehicleControllerVehicleSelection\tType",
      "contents": "FFS_VehicleControllerVehicleSelection"
    },
    {
      "trigger": "FFS_VehicleDecisionPoint\tType",
      "contents": "FFS_VehicleDecisionPoint"
    },
    {
      "trigger": "FGDConceptFeature\tType",
      "contents": "FGDConceptFeature"
    },
    {
      "trigger": "FGDResultImport\tType",
      "contents": "FGDResultImport"
    },
    {
      "trigger": "FProcessOccurrence\tType",
      "contents": "FProcessOccurrence"
    },
    {
      "trigger": "FS3DCurve\tType",
      "contents": "FS3DCurve"
    },
    {
      "trigger": "FSAnalysis\tType",
      "contents": "FSAnalysis"
    },
    {
      "trigger": "FSCCKAnalysis\tType",
      "contents": "FSCCKAnalysis"
    },
    {
      "trigger": "FSCntConstraint\tType",
      "contents": "FSCntConstraint"
    },
    {
      "trigger": "FSCrvCCKAnalysis\tType",
      "contents": "FSCrvCCKAnalysis"
    },
    {
      "trigger": "FSCrvUntrim\tType",
      "contents": "FSCrvUntrim"
    },
    {
      "trigger": "FSCurveFillet\tType",
      "contents": "FSCurveFillet"
    },
    {
      "trigger": "FSCutPlaneAnalysis\tType",
      "contents": "FSCutPlaneAnalysis"
    },
    {
      "trigger": "FSDistAnalysis\tType",
      "contents": "FSDistAnalysis"
    },
    {
      "trigger": "FSDraftAnalysis\tType",
      "contents": "FSDraftAnalysis"
    },
    {
      "trigger": "FSFill\tType",
      "contents": "FSFill"
    },
    {
      "trigger": "FSHighlightAnalysis\tType",
      "contents": "FSHighlightAnalysis"
    },
    {
      "trigger": "FSInflectAnalysis\tType",
      "contents": "FSInflectAnalysis"
    },
    {
      "trigger": "FSIsoparamCurve\tType",
      "contents": "FSIsoparamCurve"
    },
    {
      "trigger": "FSNet\tType",
      "contents": "FSNet"
    },
    {
      "trigger": "FSPrpnCurvature\tType",
      "contents": "FSPrpnCurvature"
    },
    {
      "trigger": "FSReflectAnalysis\tType",
      "contents": "FSReflectAnalysis"
    },
    {
      "trigger": "FSSurfCurvAnalysis\tType",
      "contents": "FSSurfCurvAnalysis"
    },
    {
      "trigger": "FSSweep\tType",
      "contents": "FSSweep"
    },
    {
      "trigger": "FSUntrim\tType",
      "contents": "FSUntrim"
    },
    {
      "trigger": "FaceFillet\tType",
      "contents": "FaceFillet"
    },
    {
      "trigger": "Facing\tType",
      "contents": "Facing"
    },
    {
      "trigger": "Fake3DPartLike\tType",
      "contents": "Fake3DPartLike"
    },
    {
      "trigger": "FakeContinuousBehaviorType\tType",
      "contents": "FakeContinuousBehaviorType"
    },
    {
      "trigger": "FakeDiscreteBehaviorType\tType",
      "contents": "FakeDiscreteBehaviorType"
    },
    {
      "trigger": "FastenerComponent\tType",
      "contents": "FastenerComponent"
    },
    {
      "trigger": "FastenerComponentType\tType",
      "contents": "FastenerComponentType"
    },
    {
      "trigger": "FastenerEngineeringSpecData\tType",
      "contents": "FastenerEngineeringSpecData"
    },
    {
      "trigger": "FastenerInstanceType\tType",
      "contents": "FastenerInstanceType"
    },
    {
      "trigger": "FastenerOccurrence\tType",
      "contents": "FastenerOccurrence"
    },
    {
      "trigger": "FastenerStacking\tType",
      "contents": "FastenerStacking"
    },
    {
      "trigger": "FastenerStackingDirection\tType",
      "contents": "FastenerStackingDirection"
    },
    {
      "trigger": "FastenerType\tType",
      "contents": "FastenerType"
    },
    {
      "trigger": "FbwBeadFunction\tType",
      "contents": "FbwBeadFunction"
    },
    {
      "trigger": "FbwContactFlangeFunction\tType",
      "contents": "FbwContactFlangeFunction"
    },
    {
      "trigger": "FbwDartFunction\tType",
      "contents": "FbwDartFunction"
    },
    {
      "trigger": "FbwDiaboloFunction\tType",
      "contents": "FbwDiaboloFunction"
    },
    {
      "trigger": "FbwDimpleFunction\tType",
      "contents": "FbwDimpleFunction"
    },
    {
      "trigger": "FbwFuncSpec\tType",
      "contents": "FbwFuncSpec"
    },
    {
      "trigger": "FbwGenericFunction\tType",
      "contents": "FbwGenericFunction"
    },
    {
      "trigger": "FbwHoleFunction\tType",
      "contents": "FbwHoleFunction"
    },
    {
      "trigger": "FbwProperties\tType",
      "contents": "FbwProperties"
    },
    {
      "trigger": "FbwStampFunction\tType",
      "contents": "FbwStampFunction"
    },
    {
      "trigger": "FbwWorkingZoneFunction\tType",
      "contents": "FbwWorkingZoneFunction"
    },
    {
      "trigger": "Feature\tType",
      "contents": "Feature"
    },
    {
      "trigger": "Fillet\tType",
      "contents": "Fillet"
    },
    {
      "trigger": "FilletRepresentationMode\tType",
      "contents": "FilletRepresentationMode"
    },
    {
      "trigger": "FlangeAngleType\tType",
      "contents": "FlangeAngleType"
    },
    {
      "trigger": "FlangeLengthType\tType",
      "contents": "FlangeLengthType"
    },
    {
      "trigger": "FlangeSurf\tType",
      "contents": "FlangeSurf"
    },
    {
      "trigger": "FlangeTrimType\tType",
      "contents": "FlangeTrimType"
    },
    {
      "trigger": "FlangeType\tType",
      "contents": "FlangeType"
    },
    {
      "trigger": "FluidicFab_FeatureType\tType",
      "contents": "FluidicFab_FeatureType"
    },
    {
      "trigger": "Fold\tType",
      "contents": "Fold"
    },
    {
      "trigger": "Fst_Component\tType",
      "contents": "Fst_Component"
    },
    {
      "trigger": "Fst_SpotAssy_Base\tType",
      "contents": "Fst_SpotAssy_Base"
    },
    {
      "trigger": "Fst_SpotSet_Base\tType",
      "contents": "Fst_SpotSet_Base"
    },
    {
      "trigger": "Fst_Spot_Base\tType",
      "contents": "Fst_Spot_Base"
    },
    {
      "trigger": "Fst_Zone\tType",
      "contents": "Fst_Zone"
    },
    {
      "trigger": "FullDoeAlgorithm\tType",
      "contents": "FullDoeAlgorithm"
    },
    {
      "trigger": "FunctionalBody\tType",
      "contents": "FunctionalBody"
    },
    {
      "trigger": "FunctionalImpact\tType",
      "contents": "FunctionalImpact"
    },
    {
      "trigger": "FunctionalOccurrence\tType",
      "contents": "FunctionalOccurrence"
    },
    {
      "trigger": "FunctionalSpecification\tType",
      "contents": "FunctionalSpecification"
    },
    {
      "trigger": "GDTType\tType",
      "contents": "GDTType"
    },
    {
      "trigger": "GSM3DCurveOffset\tType",
      "contents": "GSM3DCurveOffset"
    },
    {
      "trigger": "GSM3DWSupport\tType",
      "contents": "GSM3DWSupport"
    },
    {
      "trigger": "GSMAffinity\tType",
      "contents": "GSMAffinity"
    },
    {
      "trigger": "GSMAssemble\tType",
      "contents": "GSMAssemble"
    },
    {
      "trigger": "GSMAxisToAxis\tType",
      "contents": "GSMAxisToAxis"
    },
    {
      "trigger": "GSMBlend\tType",
      "contents": "GSMBlend"
    },
    {
      "trigger": "GSMBoundary\tType",
      "contents": "GSMBoundary"
    },
    {
      "trigger": "GSMCircle\tType",
      "contents": "GSMCircle"
    },
    {
      "trigger": "GSMCircle2PointsRad\tType",
      "contents": "GSMCircle2PointsRad"
    },
    {
      "trigger": "GSMCircle3Points\tType",
      "contents": "GSMCircle3Points"
    },
    {
      "trigger": "GSMCircleBitangentPt\tType",
      "contents": "GSMCircleBitangentPt"
    },
    {
      "trigger": "GSMCircleBitangentRad\tType",
      "contents": "GSMCircleBitangentRad"
    },
    {
      "trigger": "GSMCircleCenterAxis\tType",
      "contents": "GSMCircleCenterAxis"
    },
    {
      "trigger": "GSMCircleCenterTangent\tType",
      "contents": "GSMCircleCenterTangent"
    },
    {
      "trigger": "GSMCircleCtrPt\tType",
      "contents": "GSMCircleCtrPt"
    },
    {
      "trigger": "GSMCircleCtrRad\tType",
      "contents": "GSMCircleCtrRad"
    },
    {
      "trigger": "GSMCircleTritangent\tType",
      "contents": "GSMCircleTritangent"
    },
    {
      "trigger": "GSMCombine\tType",
      "contents": "GSMCombine"
    },
    {
      "trigger": "GSMConic\tType",
      "contents": "GSMConic"
    },
    {
      "trigger": "GSMConnect\tType",
      "contents": "GSMConnect"
    },
    {
      "trigger": "GSMContour\tType",
      "contents": "GSMContour"
    },
    {
      "trigger": "GSMCorner\tType",
      "contents": "GSMCorner"
    },
    {
      "trigger": "GSMCurve\tType",
      "contents": "GSMCurve"
    },
    {
      "trigger": "GSMCurvePar\tType",
      "contents": "GSMCurvePar"
    },
    {
      "trigger": "GSMCurveSmooth\tType",
      "contents": "GSMCurveSmooth"
    },
    {
      "trigger": "GSMCylinder\tType",
      "contents": "GSMCylinder"
    },
    {
      "trigger": "GSMDevelop\tType",
      "contents": "GSMDevelop"
    },
    {
      "trigger": "GSMDirection\tType",
      "contents": "GSMDirection"
    },
    {
      "trigger": "GSMDraft\tType",
      "contents": "GSMDraft"
    },
    {
      "trigger": "GSMExtract\tType",
      "contents": "GSMExtract"
    },
    {
      "trigger": "GSMExtractContour\tType",
      "contents": "GSMExtractContour"
    },
    {
      "trigger": "GSMExtrapol\tType",
      "contents": "GSMExtrapol"
    },
    {
      "trigger": "GSMExtremum\tType",
      "contents": "GSMExtremum"
    },
    {
      "trigger": "GSMExtremumPolar\tType",
      "contents": "GSMExtremumPolar"
    },
    {
      "trigger": "GSMExtrude\tType",
      "contents": "GSMExtrude"
    },
    {
      "trigger": "GSMFill\tType",
      "contents": "GSMFill"
    },
    {
      "trigger": "GSMFillet\tType",
      "contents": "GSMFillet"
    },
    {
      "trigger": "GSMFilletBiTangent\tType",
      "contents": "GSMFilletBiTangent"
    },
    {
      "trigger": "GSMGridFace\tType",
      "contents": "GSMGridFace"
    },
    {
      "trigger": "GSMGridSet\tType",
      "contents": "GSMGridSet"
    },
    {
      "trigger": "GSMGridSubset\tType",
      "contents": "GSMGridSubset"
    },
    {
      "trigger": "GSMHealing\tType",
      "contents": "GSMHealing"
    },
    {
      "trigger": "GSMHelix\tType",
      "contents": "GSMHelix"
    },
    {
      "trigger": "GSMIntersect\tType",
      "contents": "GSMIntersect"
    },
    {
      "trigger": "GSMInverse\tType",
      "contents": "GSMInverse"
    },
    {
      "trigger": "GSMLawDistProj\tType",
      "contents": "GSMLawDistProj"
    },
    {
      "trigger": "GSMLine\tType",
      "contents": "GSMLine"
    },
    {
      "trigger": "GSMLineAngle\tType",
      "contents": "GSMLineAngle"
    },
    {
      "trigger": "GSMLineBiTangent\tType",
      "contents": "GSMLineBiTangent"
    },
    {
      "trigger": "GSMLineBisecting\tType",
      "contents": "GSMLineBisecting"
    },
    {
      "trigger": "GSMLineCorner\tType",
      "contents": "GSMLineCorner"
    },
    {
      "trigger": "GSMLineNormal\tType",
      "contents": "GSMLineNormal"
    },
    {
      "trigger": "GSMLinePtDir\tType",
      "contents": "GSMLinePtDir"
    },
    {
      "trigger": "GSMLinePtPt\tType",
      "contents": "GSMLinePtPt"
    },
    {
      "trigger": "GSMLineTangency\tType",
      "contents": "GSMLineTangency"
    },
    {
      "trigger": "GSMLoft\tType",
      "contents": "GSMLoft"
    },
    {
      "trigger": "GSMLoftShape\tType",
      "contents": "GSMLoftShape"
    },
    {
      "trigger": "GSMLoftSolid\tType",
      "contents": "GSMLoftSolid"
    },
    {
      "trigger": "GSMMask\tType",
      "contents": "GSMMask"
    },
    {
      "trigger": "GSMMidSurface\tType",
      "contents": "GSMMidSurface"
    },
    {
      "trigger": "GSMMultiExtract\tType",
      "contents": "GSMMultiExtract"
    },
    {
      "trigger": "GSMMultiSel\tType",
      "contents": "GSMMultiSel"
    },
    {
      "trigger": "GSMNear\tType",
      "contents": "GSMNear"
    },
    {
      "trigger": "GSMOffset\tType",
      "contents": "GSMOffset"
    },
    {
      "trigger": "GSMPlane\tType",
      "contents": "GSMPlane"
    },
    {
      "trigger": "GSMPlane1Curve\tType",
      "contents": "GSMPlane1Curve"
    },
    {
      "trigger": "GSMPlane1Line1Pt\tType",
      "contents": "GSMPlane1Line1Pt"
    },
    {
      "trigger": "GSMPlane2Lines\tType",
      "contents": "GSMPlane2Lines"
    },
    {
      "trigger": "GSMPlane3Points\tType",
      "contents": "GSMPlane3Points"
    },
    {
      "trigger": "GSMPlaneAngle\tType",
      "contents": "GSMPlaneAngle"
    },
    {
      "trigger": "GSMPlaneBetween\tType",
      "contents": "GSMPlaneBetween"
    },
    {
      "trigger": "GSMPlaneEquation\tType",
      "contents": "GSMPlaneEquation"
    },
    {
      "trigger": "GSMPlaneNormal\tType",
      "contents": "GSMPlaneNormal"
    },
    {
      "trigger": "GSMPlaneOffset\tType",
      "contents": "GSMPlaneOffset"
    },
    {
      "trigger": "GSMPlaneOffsetPt\tType",
      "contents": "GSMPlaneOffsetPt"
    },
    {
      "trigger": "GSMPlaneTangent\tType",
      "contents": "GSMPlaneTangent"
    },
    {
      "trigger": "GSMPoint\tType",
      "contents": "GSMPoint"
    },
    {
      "trigger": "GSMPointBetween\tType",
      "contents": "GSMPointBetween"
    },
    {
      "trigger": "GSMPointCenter\tType",
      "contents": "GSMPointCenter"
    },
    {
      "trigger": "GSMPointCoord\tType",
      "contents": "GSMPointCoord"
    },
    {
      "trigger": "GSMPointOnCurve\tType",
      "contents": "GSMPointOnCurve"
    },
    {
      "trigger": "GSMPointOnPlane\tType",
      "contents": "GSMPointOnPlane"
    },
    {
      "trigger": "GSMPointOnSurface\tType",
      "contents": "GSMPointOnSurface"
    },
    {
      "trigger": "GSMPointTangent\tType",
      "contents": "GSMPointTangent"
    },
    {
      "trigger": "GSMPointsRepetition\tType",
      "contents": "GSMPointsRepetition"
    },
    {
      "trigger": "GSMProject\tType",
      "contents": "GSMProject"
    },
    {
      "trigger": "GSMReflectLine\tType",
      "contents": "GSMReflectLine"
    },
    {
      "trigger": "GSMRevol\tType",
      "contents": "GSMRevol"
    },
    {
      "trigger": "GSMRotate\tType",
      "contents": "GSMRotate"
    },
    {
      "trigger": "GSMScaling\tType",
      "contents": "GSMScaling"
    },
    {
      "trigger": "GSMSilhouette\tType",
      "contents": "GSMSilhouette"
    },
    {
      "trigger": "GSMSphere\tType",
      "contents": "GSMSphere"
    },
    {
      "trigger": "GSMSpine\tType",
      "contents": "GSMSpine"
    },
    {
      "trigger": "GSMSpiral\tType",
      "contents": "GSMSpiral"
    },
    {
      "trigger": "GSMSplit\tType",
      "contents": "GSMSplit"
    },
    {
      "trigger": "GSMSweep\tType",
      "contents": "GSMSweep"
    },
    {
      "trigger": "GSMSweepCircle\tType",
      "contents": "GSMSweepCircle"
    },
    {
      "trigger": "GSMSweepConic\tType",
      "contents": "GSMSweepConic"
    },
    {
      "trigger": "GSMSweepSegment\tType",
      "contents": "GSMSweepSegment"
    },
    {
      "trigger": "GSMSweepSketch\tType",
      "contents": "GSMSweepSketch"
    },
    {
      "trigger": "GSMSweepUnspec\tType",
      "contents": "GSMSweepUnspec"
    },
    {
      "trigger": "GSMSymmetry\tType",
      "contents": "GSMSymmetry"
    },
    {
      "trigger": "GSMTransferedMonoDim\tType",
      "contents": "GSMTransferedMonoDim"
    },
    {
      "trigger": "GSMTransferedZeroDim\tType",
      "contents": "GSMTransferedZeroDim"
    },
    {
      "trigger": "GSMTransformation\tType",
      "contents": "GSMTransformation"
    },
    {
      "trigger": "GSMTranslate\tType",
      "contents": "GSMTranslate"
    },
    {
      "trigger": "GSMTrim\tType",
      "contents": "GSMTrim"
    },
    {
      "trigger": "GSMUnfold\tType",
      "contents": "GSMUnfold"
    },
    {
      "trigger": "GSMWSupport\tType",
      "contents": "GSMWSupport"
    },
    {
      "trigger": "GSOBlendCorner\tType",
      "contents": "GSOBlendCorner"
    },
    {
      "trigger": "GSOBlendCornerSection\tType",
      "contents": "GSOBlendCornerSection"
    },
    {
      "trigger": "GSOBump\tType",
      "contents": "GSOBump"
    },
    {
      "trigger": "GSOJunction\tType",
      "contents": "GSOJunction"
    },
    {
      "trigger": "GSOSeatDiabolo\tType",
      "contents": "GSOSeatDiabolo"
    },
    {
      "trigger": "GSOShapeMorphing\tType",
      "contents": "GSOShapeMorphing"
    },
    {
      "trigger": "GSOVariableOffset\tType",
      "contents": "GSOVariableOffset"
    },
    {
      "trigger": "GSOWrapCurve\tType",
      "contents": "GSOWrapCurve"
    },
    {
      "trigger": "GSOWrapSurface\tType",
      "contents": "GSOWrapSurface"
    },
    {
      "trigger": "GeometricCircle\tType",
      "contents": "GeometricCircle"
    },
    {
      "trigger": "GeometricCurve\tType",
      "contents": "GeometricCurve"
    },
    {
      "trigger": "GeometricFeature\tType",
      "contents": "GeometricFeature"
    },
    {
      "trigger": "GeometricLine\tType",
      "contents": "GeometricLine"
    },
    {
      "trigger": "GeometricObject\tType",
      "contents": "GeometricObject"
    },
    {
      "trigger": "GeometricPlane\tType",
      "contents": "GeometricPlane"
    },
    {
      "trigger": "GeometricPoint\tType",
      "contents": "GeometricPoint"
    },
    {
      "trigger": "GeometricSurface\tType",
      "contents": "GeometricSurface"
    },
    {
      "trigger": "GeometricVolume\tType",
      "contents": "GeometricVolume"
    },
    {
      "trigger": "GeometryCheckOpe\tType",
      "contents": "GeometryCheckOpe"
    },
    {
      "trigger": "GeometryCheckOpe_Criterion\tType",
      "contents": "GeometryCheckOpe_Criterion"
    },
    {
      "trigger": "GetViewUpdateStatus\tType",
      "contents": "GetViewUpdateStatus"
    },
    {
      "trigger": "GradeOptionEnum\tType",
      "contents": "GradeOptionEnum"
    },
    {
      "trigger": "GreenLine\tType",
      "contents": "GreenLine"
    },
    {
      "trigger": "Groove\tType",
      "contents": "Groove"
    },
    {
      "trigger": "GrooveMilling\tType",
      "contents": "GrooveMilling"
    },
    {
      "trigger": "GroupProcessDiagnostic\tType",
      "contents": "GroupProcessDiagnostic"
    },
    {
      "trigger": "HAReport\tType",
      "contents": "HAReport"
    },
    {
      "trigger": "HAStatus\tType",
      "contents": "HAStatus"
    },
    {
      "trigger": "HTTPClient\tType",
      "contents": "HTTPClient"
    },
    {
      "trigger": "HVACSpool_Mode\tType",
      "contents": "HVACSpool_Mode"
    },
    {
      "trigger": "HVAC_Duct_Occurrence\tType",
      "contents": "HVAC_Duct_Occurrence"
    },
    {
      "trigger": "HVAC_Insulation_Occurrence\tType",
      "contents": "HVAC_Insulation_Occurrence"
    },
    {
      "trigger": "HVAC_Part_Occurrence\tType",
      "contents": "HVAC_Part_Occurrence"
    },
    {
      "trigger": "HVAC_Spool_Occurrence\tType",
      "contents": "HVAC_Spool_Occurrence"
    },
    {
      "trigger": "HeadChange\tType",
      "contents": "HeadChange"
    },
    {
      "trigger": "Heading\tType",
      "contents": "Heading"
    },
    {
      "trigger": "HlrView\tType",
      "contents": "HlrView"
    },
    {
      "trigger": "Hole\tType",
      "contents": "Hole"
    },
    {
      "trigger": "HoleType\tType",
      "contents": "HoleType"
    },
    {
      "trigger": "HumanActivity\tType",
      "contents": "HumanActivity"
    },
    {
      "trigger": "HumanActivityAssignment\tType",
      "contents": "HumanActivityAssignment"
    },
    {
      "trigger": "HumanActivityCharacteristic\tType",
      "contents": "HumanActivityCharacteristic"
    },
    {
      "trigger": "HumanActivityCharacteristicValue\tType",
      "contents": "HumanActivityCharacteristicValue"
    },
    {
      "trigger": "HumanActivityGeolocation\tType",
      "contents": "HumanActivityGeolocation"
    },
    {
      "trigger": "HumanActivityInst\tType",
      "contents": "HumanActivityInst"
    },
    {
      "trigger": "HumanActivityLifeCyclePhases\tType",
      "contents": "HumanActivityLifeCyclePhases"
    },
    {
      "trigger": "HumanActivityManager\tType",
      "contents": "HumanActivityManager"
    },
    {
      "trigger": "HvacNodeType\tType",
      "contents": "HvacNodeType"
    },
    {
      "trigger": "HvacOrientation\tType",
      "contents": "HvacOrientation"
    },
    {
      "trigger": "HvacPort_Types\tType",
      "contents": "HvacPort_Types"
    },
    {
      "trigger": "IPMGenerationMode\tType",
      "contents": "IPMGenerationMode"
    },
    {
      "trigger": "ImportManager\tType",
      "contents": "ImportManager"
    },
    {
      "trigger": "Imported3DArc\tType",
      "contents": "Imported3DArc"
    },
    {
      "trigger": "Imported3DGeometry\tType",
      "contents": "Imported3DGeometry"
    },
    {
      "trigger": "IndustrialMachineInstance\tType",
      "contents": "IndustrialMachineInstance"
    },
    {
      "trigger": "IndustrialMachineRef\tType",
      "contents": "IndustrialMachineRef"
    },
    {
      "trigger": "InfrastructureTypeEnum\tType",
      "contents": "InfrastructureTypeEnum"
    },
    {
      "trigger": "InnerCutTool\tType",
      "contents": "InnerCutTool"
    },
    {
      "trigger": "InsDraughtStop\tType",
      "contents": "InsDraughtStop"
    },
    {
      "trigger": "InsFormedInsulation_Occurrence\tType",
      "contents": "InsFormedInsulation_Occurrence"
    },
    {
      "trigger": "InsLayer\tType",
      "contents": "InsLayer"
    },
    {
      "trigger": "InsLayerSet\tType",
      "contents": "InsLayerSet"
    },
    {
      "trigger": "InsProfileInsulationFeature\tType",
      "contents": "InsProfileInsulationFeature"
    },
    {
      "trigger": "InsProfileInsulation_Occurrence\tType",
      "contents": "InsProfileInsulation_Occurrence"
    },
    {
      "trigger": "InsSpiralInsulation_Occurrence\tType",
      "contents": "InsSpiralInsulation_Occurrence"
    },
    {
      "trigger": "InsStrPanelInsulationFeature\tType",
      "contents": "InsStrPanelInsulationFeature"
    },
    {
      "trigger": "InsStrProfileInsulationFeature\tType",
      "contents": "InsStrProfileInsulationFeature"
    },
    {
      "trigger": "InsSurfaceInsulationFeature\tType",
      "contents": "InsSurfaceInsulationFeature"
    },
    {
      "trigger": "InsSurfaceInsulation_Occurrence\tType",
      "contents": "InsSurfaceInsulation_Occurrence"
    },
    {
      "trigger": "InspectInstance\tType",
      "contents": "InspectInstance"
    },
    {
      "trigger": "InspectRef\tType",
      "contents": "InspectRef"
    },
    {
      "trigger": "InternalAdaptiveProtection\tType",
      "contents": "InternalAdaptiveProtection"
    },
    {
      "trigger": "InternalCorrugatedProtection\tType",
      "contents": "InternalCorrugatedProtection"
    },
    {
      "trigger": "InternalFixedProtection\tType",
      "contents": "InternalFixedProtection"
    },
    {
      "trigger": "InternalParameter\tType",
      "contents": "InternalParameter"
    },
    {
      "trigger": "InternalProtection\tType",
      "contents": "InternalProtection"
    },
    {
      "trigger": "InternalTapeProtection\tType",
      "contents": "InternalTapeProtection"
    },
    {
      "trigger": "Intersect\tType",
      "contents": "Intersect"
    },
    {
      "trigger": "Intersected2DGeometrySet\tType",
      "contents": "Intersected2DGeometrySet"
    },
    {
      "trigger": "Intersected3DGeometrySet\tType",
      "contents": "Intersected3DGeometrySet"
    },
    {
      "trigger": "JSONDocument\tType",
      "contents": "JSONDocument"
    },
    {
      "trigger": "JSONNode\tType",
      "contents": "JSONNode"
    },
    {
      "trigger": "Joggle\tType",
      "contents": "Joggle"
    },
    {
      "trigger": "KWALanguageImplementation\tType",
      "contents": "KWALanguageImplementation"
    },
    {
      "trigger": "KWANamedURL\tType",
      "contents": "KWANamedURL"
    },
    {
      "trigger": "KWECheck\tType",
      "contents": "KWECheck"
    },
    {
      "trigger": "KWEFakeType\tType",
      "contents": "KWEFakeType"
    },
    {
      "trigger": "KWEFilter\tType",
      "contents": "KWEFilter"
    },
    {
      "trigger": "KWEGenerativeGraphSetType\tType",
      "contents": "KWEGenerativeGraphSetType"
    },
    {
      "trigger": "KWEGenericRuleBaseComponent\tType",
      "contents": "KWEGenericRuleBaseComponent"
    },
    {
      "trigger": "KWELinkedRuleBase\tType",
      "contents": "KWELinkedRuleBase"
    },
    {
      "trigger": "KWEPrecondition\tType",
      "contents": "KWEPrecondition"
    },
    {
      "trigger": "KWEProcessingGroup\tType",
      "contents": "KWEProcessingGroup"
    },
    {
      "trigger": "KWEProfile\tType",
      "contents": "KWEProfile"
    },
    {
      "trigger": "KWERule\tType",
      "contents": "KWERule"
    },
    {
      "trigger": "KWERuleBase\tType",
      "contents": "KWERuleBase"
    },
    {
      "trigger": "KWERuleBaseComponent\tType",
      "contents": "KWERuleBaseComponent"
    },
    {
      "trigger": "KWERuleBaseSet\tType",
      "contents": "KWERuleBaseSet"
    },
    {
      "trigger": "KWERuleSet\tType",
      "contents": "KWERuleSet"
    },
    {
      "trigger": "KWETuple\tType",
      "contents": "KWETuple"
    },
    {
      "trigger": "KnowledgePattern\tType",
      "contents": "KnowledgePattern"
    },
    {
      "trigger": "KnowledgeReportFormatEnum\tType",
      "contents": "KnowledgeReportFormatEnum"
    },
    {
      "trigger": "KnowledgeReportGeneration\tType",
      "contents": "KnowledgeReportGeneration"
    },
    {
      "trigger": "KnowledgeReportSaveOptionEnum\tType",
      "contents": "KnowledgeReportSaveOptionEnum"
    },
    {
      "trigger": "KweTrigger_BL_AddedSpecsAndResourceFilteringParams\tType",
      "contents": "KweTrigger_BL_AddedSpecsAndResourceFilteringParams"
    },
    {
      "trigger": "L2PItem\tType",
      "contents": "L2PItem"
    },
    {
      "trigger": "L2PItem_Cable\tType",
      "contents": "L2PItem_Cable"
    },
    {
      "trigger": "L2PItem_ElectricalAccessory\tType",
      "contents": "L2PItem_ElectricalAccessory"
    },
    {
      "trigger": "L2PItem_ElectricalDevice\tType",
      "contents": "L2PItem_ElectricalDevice"
    },
    {
      "trigger": "L2PItem_Equipment\tType",
      "contents": "L2PItem_Equipment"
    },
    {
      "trigger": "L2PItem_HVAC_Part\tType",
      "contents": "L2PItem_HVAC_Part"
    },
    {
      "trigger": "L2PItem_Harness\tType",
      "contents": "L2PItem_Harness"
    },
    {
      "trigger": "L2PItem_Piping_Part\tType",
      "contents": "L2PItem_Piping_Part"
    },
    {
      "trigger": "L2PItem_Wire\tType",
      "contents": "L2PItem_Wire"
    },
    {
      "trigger": "LaneDirectionEnum\tType",
      "contents": "LaneDirectionEnum"
    },
    {
      "trigger": "LatheFeature\tType",
      "contents": "LatheFeature"
    },
    {
      "trigger": "LimitType\tType",
      "contents": "LimitType"
    },
    {
      "trigger": "Line\tType",
      "contents": "Line"
    },
    {
      "trigger": "LinearReferencingAxisSet\tType",
      "contents": "LinearReferencingAxisSet"
    },
    {
      "trigger": "LinearReferencingMonoAnchor\tType",
      "contents": "LinearReferencingMonoAnchor"
    },
    {
      "trigger": "Link\tType",
      "contents": "Link"
    },
    {
      "trigger": "List\tType",
      "contents": "List"
    },
    {
      "trigger": "LiveArchiAecElement\tType",
      "contents": "LiveArchiAecElement"
    },
    {
      "trigger": "LiveArchiBarJoist\tType",
      "contents": "LiveArchiBarJoist"
    },
    {
      "trigger": "LiveArchiBuilding\tType",
      "contents": "LiveArchiBuilding"
    },
    {
      "trigger": "LiveArchiCeiling\tType",
      "contents": "LiveArchiCeiling"
    },
    {
      "trigger": "LiveArchiCircularStair\tType",
      "contents": "LiveArchiCircularStair"
    },
    {
      "trigger": "LiveArchiColumnReservation\tType",
      "contents": "LiveArchiColumnReservation"
    },
    {
      "trigger": "LiveArchiCovering\tType",
      "contents": "LiveArchiCovering"
    },
    {
      "trigger": "LiveArchiCovering2\tType",
      "contents": "LiveArchiCovering2"
    },
    {
      "trigger": "LiveArchiCovering3\tType",
      "contents": "LiveArchiCovering3"
    },
    {
      "trigger": "LiveArchiCurtain\tType",
      "contents": "LiveArchiCurtain"
    },
    {
      "trigger": "LiveArchiCurtain3\tType",
      "contents": "LiveArchiCurtain3"
    },
    {
      "trigger": "LiveArchiCurtainAscendingBand\tType",
      "contents": "LiveArchiCurtainAscendingBand"
    },
    {
      "trigger": "LiveArchiCurtainContourBand\tType",
      "contents": "LiveArchiCurtainContourBand"
    },
    {
      "trigger": "LiveArchiCurtainRegion\tType",
      "contents": "LiveArchiCurtainRegion"
    },
    {
      "trigger": "LiveArchiFlatRoof\tType",
      "contents": "LiveArchiFlatRoof"
    },
    {
      "trigger": "LiveArchiFreeformRoof\tType",
      "contents": "LiveArchiFreeformRoof"
    },
    {
      "trigger": "LiveArchiGridDrivenGSMCurve\tType",
      "contents": "LiveArchiGridDrivenGSMCurve"
    },
    {
      "trigger": "LiveArchiGridDrivenGSMLine\tType",
      "contents": "LiveArchiGridDrivenGSMLine"
    },
    {
      "trigger": "LiveArchiOpening\tType",
      "contents": "LiveArchiOpening"
    },
    {
      "trigger": "LiveArchiPanelWall\tType",
      "contents": "LiveArchiPanelWall"
    },
    {
      "trigger": "LiveArchiPanelizer\tType",
      "contents": "LiveArchiPanelizer"
    },
    {
      "trigger": "LiveArchiPileArrangement\tType",
      "contents": "LiveArchiPileArrangement"
    },
    {
      "trigger": "LiveArchiPileFeature\tType",
      "contents": "LiveArchiPileFeature"
    },
    {
      "trigger": "LiveArchiPit\tType",
      "contents": "LiveArchiPit"
    },
    {
      "trigger": "LiveArchiPlacePanel\tType",
      "contents": "LiveArchiPlacePanel"
    },
    {
      "trigger": "LiveArchiRailing\tType",
      "contents": "LiveArchiRailing"
    },
    {
      "trigger": "LiveArchiRoof\tType",
      "contents": "LiveArchiRoof"
    },
    {
      "trigger": "LiveArchiSecondaryBarJoist\tType",
      "contents": "LiveArchiSecondaryBarJoist"
    },
    {
      "trigger": "LiveArchiSite\tType",
      "contents": "LiveArchiSite"
    },
    {
      "trigger": "LiveArchiSlab\tType",
      "contents": "LiveArchiSlab"
    },
    {
      "trigger": "LiveArchiSlabOpening\tType",
      "contents": "LiveArchiSlabOpening"
    },
    {
      "trigger": "LiveArchiSpace\tType",
      "contents": "LiveArchiSpace"
    },
    {
      "trigger": "LiveArchiSpiralStair\tType",
      "contents": "LiveArchiSpiralStair"
    },
    {
      "trigger": "LiveArchiStairwell\tType",
      "contents": "LiveArchiStairwell"
    },
    {
      "trigger": "LiveArchiStory\tType",
      "contents": "LiveArchiStory"
    },
    {
      "trigger": "LiveArchiStoryGrid\tType",
      "contents": "LiveArchiStoryGrid"
    },
    {
      "trigger": "LiveArchiStraightStair\tType",
      "contents": "LiveArchiStraightStair"
    },
    {
      "trigger": "LiveArchiStructureGrid2\tType",
      "contents": "LiveArchiStructureGrid2"
    },
    {
      "trigger": "LiveArchiSubResult\tType",
      "contents": "LiveArchiSubResult"
    },
    {
      "trigger": "LiveArchiWall\tType",
      "contents": "LiveArchiWall"
    },
    {
      "trigger": "LoadMode\tType",
      "contents": "LoadMode"
    },
    {
      "trigger": "LogicControllerInstance\tType",
      "contents": "LogicControllerInstance"
    },
    {
      "trigger": "LogicControllerRef\tType",
      "contents": "LogicControllerRef"
    },
    {
      "trigger": "LogicalEquipmentOcc\tType",
      "contents": "LogicalEquipmentOcc"
    },
    {
      "trigger": "LogicalOccurrence\tType",
      "contents": "LogicalOccurrence"
    },
    {
      "trigger": "Loop\tType",
      "contents": "Loop"
    },
    {
      "trigger": "M3xAccostingSide\tType",
      "contents": "M3xAccostingSide"
    },
    {
      "trigger": "M3xAdvZLevel\tType",
      "contents": "M3xAdvZLevel"
    },
    {
      "trigger": "M3xApproachAndRetractMacroMotion\tType",
      "contents": "M3xApproachAndRetractMacroMotion"
    },
    {
      "trigger": "M3xApproachMacroMotion\tType",
      "contents": "M3xApproachMacroMotion"
    },
    {
      "trigger": "M3xBetweenContour\tType",
      "contents": "M3xBetweenContour"
    },
    {
      "trigger": "M3xBetweenPassMacroMotion\tType",
      "contents": "M3xBetweenPassMacroMotion"
    },
    {
      "trigger": "M3xBitangency\tType",
      "contents": "M3xBitangency"
    },
    {
      "trigger": "M3xCavitiesMachining\tType",
      "contents": "M3xCavitiesMachining"
    },
    {
      "trigger": "M3xClearanceMacroMode\tType",
      "contents": "M3xClearanceMacroMode"
    },
    {
      "trigger": "M3xContouringMode\tType",
      "contents": "M3xContouringMode"
    },
    {
      "trigger": "M3xCutStrategy\tType",
      "contents": "M3xCutStrategy"
    },
    {
      "trigger": "M3xCuttingMode\tType",
      "contents": "M3xCuttingMode"
    },
    {
      "trigger": "M3xDeburring\tType",
      "contents": "M3xDeburring"
    },
    {
      "trigger": "M3xEngagementMode\tType",
      "contents": "M3xEngagementMode"
    },
    {
      "trigger": "M3xFMManagementMode\tType",
      "contents": "M3xFMManagementMode"
    },
    {
      "trigger": "M3xFeature\tType",
      "contents": "M3xFeature"
    },
    {
      "trigger": "M3xFilterHVMode\tType",
      "contents": "M3xFilterHVMode"
    },
    {
      "trigger": "M3xFinishingPassMode\tType",
      "contents": "M3xFinishingPassMode"
    },
    {
      "trigger": "M3xGridDefinitionMode\tType",
      "contents": "M3xGridDefinitionMode"
    },
    {
      "trigger": "M3xGridMachiningMode\tType",
      "contents": "M3xGridMachiningMode"
    },
    {
      "trigger": "M3xGridOWDirection\tType",
      "contents": "M3xGridOWDirection"
    },
    {
      "trigger": "M3xHardEngagementMode\tType",
      "contents": "M3xHardEngagementMode"
    },
    {
      "trigger": "M3xHardInterpolationMode\tType",
      "contents": "M3xHardInterpolationMode"
    },
    {
      "trigger": "M3xHardMachiningMode\tType",
      "contents": "M3xHardMachiningMode"
    },
    {
      "trigger": "M3xHardMaterial\tType",
      "contents": "M3xHardMaterial"
    },
    {
      "trigger": "M3xHardOverhang\tType",
      "contents": "M3xHardOverhang"
    },
    {
      "trigger": "M3xHardSweepingMode\tType",
      "contents": "M3xHardSweepingMode"
    },
    {
      "trigger": "M3xHorizontalZonesDetectionMode\tType",
      "contents": "M3xHorizontalZonesDetectionMode"
    },
    {
      "trigger": "M3xLimitLineSide\tType",
      "contents": "M3xLimitLineSide"
    },
    {
      "trigger": "M3xMachiningMode\tType",
      "contents": "M3xMachiningMode"
    },
    {
      "trigger": "M3xMachiningZone\tType",
      "contents": "M3xMachiningZone"
    },
    {
      "trigger": "M3xMacroBackTypeCoordinateMode\tType",
      "contents": "M3xMacroBackTypeCoordinateMode"
    },
    {
      "trigger": "M3xMacroBoxLinkingMode\tType",
      "contents": "M3xMacroBoxLinkingMode"
    },
    {
      "trigger": "M3xMacroBoxSide\tType",
      "contents": "M3xMacroBoxSide"
    },
    {
      "trigger": "M3xMacroCircularVectorComputationMode\tType",
      "contents": "M3xMacroCircularVectorComputationMode"
    },
    {
      "trigger": "M3xMacroMotionLinking\tType",
      "contents": "M3xMacroMotionLinking"
    },
    {
      "trigger": "M3xMultiPassMode\tType",
      "contents": "M3xMultiPassMode"
    },
    {
      "trigger": "M3xMultiPassSequencingMode\tType",
      "contents": "M3xMultiPassSequencingMode"
    },
    {
      "trigger": "M3xMultiPockets\tType",
      "contents": "M3xMultiPockets"
    },
    {
      "trigger": "M3xMultiPocketsDistinctSweepingMode\tType",
      "contents": "M3xMultiPocketsDistinctSweepingMode"
    },
    {
      "trigger": "M3xMultiPocketsStrategy\tType",
      "contents": "M3xMultiPocketsStrategy"
    },
    {
      "trigger": "M3xMultiPocketsSweepingMode\tType",
      "contents": "M3xMultiPocketsSweepingMode"
    },
    {
      "trigger": "M3xOffsetGroup\tType",
      "contents": "M3xOffsetGroup"
    },
    {
      "trigger": "M3xOffsetSide\tType",
      "contents": "M3xOffsetSide"
    },
    {
      "trigger": "M3xOperation\tType",
      "contents": "M3xOperation"
    },
    {
      "trigger": "M3xOrderZoneMode\tType",
      "contents": "M3xOrderZoneMode"
    },
    {
      "trigger": "M3xPRSweepingMode\tType",
      "contents": "M3xPRSweepingMode"
    },
    {
      "trigger": "M3xPlunge\tType",
      "contents": "M3xPlunge"
    },
    {
      "trigger": "M3xPlungeMachiningDir\tType",
      "contents": "M3xPlungeMachiningDir"
    },
    {
      "trigger": "M3xPlungeMilling\tType",
      "contents": "M3xPlungeMilling"
    },
    {
      "trigger": "M3xPocketProgressionMode\tType",
      "contents": "M3xPocketProgressionMode"
    },
    {
      "trigger": "M3xPrismaticRoughing\tType",
      "contents": "M3xPrismaticRoughing"
    },
    {
      "trigger": "M3xProgressDirectionMode\tType",
      "contents": "M3xProgressDirectionMode"
    },
    {
      "trigger": "M3xRAFeature\tType",
      "contents": "M3xRAFeature"
    },
    {
      "trigger": "M3xRatioOrLengthMode\tType",
      "contents": "M3xRatioOrLengthMode"
    },
    {
      "trigger": "M3xRepartitionMode\tType",
      "contents": "M3xRepartitionMode"
    },
    {
      "trigger": "M3xRetractMacroMotion\tType",
      "contents": "M3xRetractMacroMotion"
    },
    {
      "trigger": "M3xRetractTpSPMode\tType",
      "contents": "M3xRetractTpSPMode"
    },
    {
      "trigger": "M3xSAFeature\tType",
      "contents": "M3xSAFeature"
    },
    {
      "trigger": "M3xSMSBitangencyMode\tType",
      "contents": "M3xSMSBitangencyMode"
    },
    {
      "trigger": "M3xSMSSweepingStrategyMode\tType",
      "contents": "M3xSMSSweepingStrategyMode"
    },
    {
      "trigger": "M3xSoftMaterial\tType",
      "contents": "M3xSoftMaterial"
    },
    {
      "trigger": "M3xSpiralMilling\tType",
      "contents": "M3xSpiralMilling"
    },
    {
      "trigger": "M3xStepDirection\tType",
      "contents": "M3xStepDirection"
    },
    {
      "trigger": "M3xStepOverMode\tType",
      "contents": "M3xStepOverMode"
    },
    {
      "trigger": "M3xStepOverModeForBetweenContour\tType",
      "contents": "M3xStepOverModeForBetweenContour"
    },
    {
      "trigger": "M3xStepOverModeForSweeping\tType",
      "contents": "M3xStepOverModeForSweeping"
    },
    {
      "trigger": "M3xStepOverModeForZLevel\tType",
      "contents": "M3xStepOverModeForZLevel"
    },
    {
      "trigger": "M3xStepOverModeForZLevelNew\tType",
      "contents": "M3xStepOverModeForZLevelNew"
    },
    {
      "trigger": "M3xStiffener\tType",
      "contents": "M3xStiffener"
    },
    {
      "trigger": "M3xStockContouringLevelMode\tType",
      "contents": "M3xStockContouringLevelMode"
    },
    {
      "trigger": "M3xStockContouringMode\tType",
      "contents": "M3xStockContouringMode"
    },
    {
      "trigger": "M3xStockContouringPosition\tType",
      "contents": "M3xStockContouringPosition"
    },
    {
      "trigger": "M3xStopMode\tType",
      "contents": "M3xStopMode"
    },
    {
      "trigger": "M3xStopPosition\tType",
      "contents": "M3xStopPosition"
    },
    {
      "trigger": "M3xStrategySide\tType",
      "contents": "M3xStrategySide"
    },
    {
      "trigger": "M3xSweeping\tType",
      "contents": "M3xSweeping"
    },
    {
      "trigger": "M3xSynchronize\tType",
      "contents": "M3xSynchronize"
    },
    {
      "trigger": "M3xTo5xAxisSide\tType",
      "contents": "M3xTo5xAxisSide"
    },
    {
      "trigger": "M3xTo5xContactMode\tType",
      "contents": "M3xTo5xContactMode"
    },
    {
      "trigger": "M3xTo5xConverter\tType",
      "contents": "M3xTo5xConverter"
    },
    {
      "trigger": "M3xTo5xDirAngle\tType",
      "contents": "M3xTo5xDirAngle"
    },
    {
      "trigger": "M3xTo5xMode\tType",
      "contents": "M3xTo5xMode"
    },
    {
      "trigger": "M3xToContour\tType",
      "contents": "M3xToContour"
    },
    {
      "trigger": "M3xToolPosControl\tType",
      "contents": "M3xToolPosControl"
    },
    {
      "trigger": "M3xTrochoidMode\tType",
      "contents": "M3xTrochoidMode"
    },
    {
      "trigger": "M3xTrochoidParamMode\tType",
      "contents": "M3xTrochoidParamMode"
    },
    {
      "trigger": "M3xUpDownMode\tType",
      "contents": "M3xUpDownMode"
    },
    {
      "trigger": "M3xYesNo\tType",
      "contents": "M3xYesNo"
    },
    {
      "trigger": "M3xZLevel\tType",
      "contents": "M3xZLevel"
    },
    {
      "trigger": "M5xImpellerHubAxialStrategy\tType",
      "contents": "M5xImpellerHubAxialStrategy"
    },
    {
      "trigger": "M5xImpellerHubZone\tType",
      "contents": "M5xImpellerHubZone"
    },
    {
      "trigger": "M5xImpellerRadialStrategy\tType",
      "contents": "M5xImpellerRadialStrategy"
    },
    {
      "trigger": "MCX\tType",
      "contents": "MCX"
    },
    {
      "trigger": "MFG_BORE_ABILITY\tType",
      "contents": "MFG_BORE_ABILITY"
    },
    {
      "trigger": "MFG_COMPOSITION\tType",
      "contents": "MFG_COMPOSITION"
    },
    {
      "trigger": "MFG_CORNER_STYLE\tType",
      "contents": "MFG_CORNER_STYLE"
    },
    {
      "trigger": "MFG_DESC_CODE\tType",
      "contents": "MFG_DESC_CODE"
    },
    {
      "trigger": "MFG_GROOVE_TYPE\tType",
      "contents": "MFG_GROOVE_TYPE"
    },
    {
      "trigger": "MFG_HAND_STYLE\tType",
      "contents": "MFG_HAND_STYLE"
    },
    {
      "trigger": "MFG_HOLDER_CAPAB\tType",
      "contents": "MFG_HOLDER_CAPAB"
    },
    {
      "trigger": "MFG_INSERT_GEN_TYPE\tType",
      "contents": "MFG_INSERT_GEN_TYPE"
    },
    {
      "trigger": "MFG_INSERT_MAT\tType",
      "contents": "MFG_INSERT_MAT"
    },
    {
      "trigger": "MFG_ISO_APPR_ANG\tType",
      "contents": "MFG_ISO_APPR_ANG"
    },
    {
      "trigger": "MFG_ISO_BAR_TYPE\tType",
      "contents": "MFG_ISO_BAR_TYPE"
    },
    {
      "trigger": "MFG_ISO_CLAM_SYS\tType",
      "contents": "MFG_ISO_CLAM_SYS"
    },
    {
      "trigger": "MFG_ISO_CLR_ANG\tType",
      "contents": "MFG_ISO_CLR_ANG"
    },
    {
      "trigger": "MFG_ISO_CUTCOND\tType",
      "contents": "MFG_ISO_CUTCOND"
    },
    {
      "trigger": "MFG_ISO_DIR\tType",
      "contents": "MFG_ISO_DIR"
    },
    {
      "trigger": "MFG_ISO_LENGTH\tType",
      "contents": "MFG_ISO_LENGTH"
    },
    {
      "trigger": "MFG_ISO_SHAPE\tType",
      "contents": "MFG_ISO_SHAPE"
    },
    {
      "trigger": "MFG_ISO_THICK\tType",
      "contents": "MFG_ISO_THICK"
    },
    {
      "trigger": "MFG_ISO_TOL\tType",
      "contents": "MFG_ISO_TOL"
    },
    {
      "trigger": "MFG_ISO_TYPE\tType",
      "contents": "MFG_ISO_TYPE"
    },
    {
      "trigger": "MFG_LATHE_RAD_AX\tType",
      "contents": "MFG_LATHE_RAD_AX"
    },
    {
      "trigger": "MFG_LATHE_SPN_AX\tType",
      "contents": "MFG_LATHE_SPN_AX"
    },
    {
      "trigger": "MFG_MACHINE_COMP\tType",
      "contents": "MFG_MACHINE_COMP"
    },
    {
      "trigger": "MFG_MACH_QUALITY\tType",
      "contents": "MFG_MACH_QUALITY"
    },
    {
      "trigger": "MFG_MACH_TYPE\tType",
      "contents": "MFG_MACH_TYPE"
    },
    {
      "trigger": "MFG_NAME_AXIS\tType",
      "contents": "MFG_NAME_AXIS"
    },
    {
      "trigger": "MFG_OUTPUT_FRMT\tType",
      "contents": "MFG_OUTPUT_FRMT"
    },
    {
      "trigger": "MFG_OUTPUT_MODE\tType",
      "contents": "MFG_OUTPUT_MODE"
    },
    {
      "trigger": "MFG_OUTPUT_TYPE\tType",
      "contents": "MFG_OUTPUT_TYPE"
    },
    {
      "trigger": "MFG_OUTP_PREF_1\tType",
      "contents": "MFG_OUTP_PREF_1"
    },
    {
      "trigger": "MFG_OUTP_PREF_2\tType",
      "contents": "MFG_OUTP_PREF_2"
    },
    {
      "trigger": "MFG_OUTP_PREF_3\tType",
      "contents": "MFG_OUTP_PREF_3"
    },
    {
      "trigger": "MFG_PT_CHECK_STOP\tType",
      "contents": "MFG_PT_CHECK_STOP"
    },
    {
      "trigger": "MFG_PT_DRIVE_POS\tType",
      "contents": "MFG_PT_DRIVE_POS"
    },
    {
      "trigger": "MFG_ROTARY_AXIS\tType",
      "contents": "MFG_ROTARY_AXIS"
    },
    {
      "trigger": "MFG_ROTARY_CATEGORY\tType",
      "contents": "MFG_ROTARY_CATEGORY"
    },
    {
      "trigger": "MFG_ROT_DIR\tType",
      "contents": "MFG_ROT_DIR"
    },
    {
      "trigger": "MFG_ROT_TYP\tType",
      "contents": "MFG_ROT_TYP"
    },
    {
      "trigger": "MFG_SPLIT_CIRCLE_STRAT\tType",
      "contents": "MFG_SPLIT_CIRCLE_STRAT"
    },
    {
      "trigger": "MFG_STRT_PT_SYNT\tType",
      "contents": "MFG_STRT_PT_SYNT"
    },
    {
      "trigger": "MFG_THREAD_CLASS\tType",
      "contents": "MFG_THREAD_CLASS"
    },
    {
      "trigger": "MFG_THREAD_DEF\tType",
      "contents": "MFG_THREAD_DEF"
    },
    {
      "trigger": "MFG_THREAD_FORM\tType",
      "contents": "MFG_THREAD_FORM"
    },
    {
      "trigger": "MFG_THREAD_PROF\tType",
      "contents": "MFG_THREAD_PROF"
    },
    {
      "trigger": "MFG_TOOL_ASS_POWER\tType",
      "contents": "MFG_TOOL_ASS_POWER"
    },
    {
      "trigger": "MFG_TOOTH_MAT\tType",
      "contents": "MFG_TOOTH_MAT"
    },
    {
      "trigger": "MFG_WAY_OF_ROT\tType",
      "contents": "MFG_WAY_OF_ROT"
    },
    {
      "trigger": "MLPAbstractConnection\tType",
      "contents": "MLPAbstractConnection"
    },
    {
      "trigger": "MLPAbstractCoreLayer\tType",
      "contents": "MLPAbstractCoreLayer"
    },
    {
      "trigger": "MLPAbstractExtraRolledBoundaries\tType",
      "contents": "MLPAbstractExtraRolledBoundaries"
    },
    {
      "trigger": "MLPAbstractExtraRolledLayer\tType",
      "contents": "MLPAbstractExtraRolledLayer"
    },
    {
      "trigger": "MLPAbstractExtraRolledMesh\tType",
      "contents": "MLPAbstractExtraRolledMesh"
    },
    {
      "trigger": "MLPAbstractExtraRolling\tType",
      "contents": "MLPAbstractExtraRolling"
    },
    {
      "trigger": "MLPAbstractLayer\tType",
      "contents": "MLPAbstractLayer"
    },
    {
      "trigger": "MLPAbstractShape\tType",
      "contents": "MLPAbstractShape"
    },
    {
      "trigger": "MLPAbstractShapeZone\tType",
      "contents": "MLPAbstractShapeZone"
    },
    {
      "trigger": "MLPAbstractShapeZoneFromBond\tType",
      "contents": "MLPAbstractShapeZoneFromBond"
    },
    {
      "trigger": "MLPAbstractShapeZoneFromFold\tType",
      "contents": "MLPAbstractShapeZoneFromFold"
    },
    {
      "trigger": "MLPAbstractShapeZoneFromRL\tType",
      "contents": "MLPAbstractShapeZoneFromRL"
    },
    {
      "trigger": "MLPAbstractShapeZoneFromStrain\tType",
      "contents": "MLPAbstractShapeZoneFromStrain"
    },
    {
      "trigger": "MLPAbstractTie\tType",
      "contents": "MLPAbstractTie"
    },
    {
      "trigger": "MLPBinding\tType",
      "contents": "MLPBinding"
    },
    {
      "trigger": "MLPComputedValues\tType",
      "contents": "MLPComputedValues"
    },
    {
      "trigger": "MLPCustomMaterial\tType",
      "contents": "MLPCustomMaterial"
    },
    {
      "trigger": "MLPCut\tType",
      "contents": "MLPCut"
    },
    {
      "trigger": "MLPDensityGroup\tType",
      "contents": "MLPDensityGroup"
    },
    {
      "trigger": "MLPEPositionOn\tType",
      "contents": "MLPEPositionOn"
    },
    {
      "trigger": "MLPElastics\tType",
      "contents": "MLPElastics"
    },
    {
      "trigger": "MLPEmbossing\tType",
      "contents": "MLPEmbossing"
    },
    {
      "trigger": "MLPEmbossingFold\tType",
      "contents": "MLPEmbossingFold"
    },
    {
      "trigger": "MLPEmbossingSplit\tType",
      "contents": "MLPEmbossingSplit"
    },
    {
      "trigger": "MLPExtrusion\tType",
      "contents": "MLPExtrusion"
    },
    {
      "trigger": "MLPExtrusionFold\tType",
      "contents": "MLPExtrusionFold"
    },
    {
      "trigger": "MLPExtrusionSplit\tType",
      "contents": "MLPExtrusionSplit"
    },
    {
      "trigger": "MLPFold\tType",
      "contents": "MLPFold"
    },
    {
      "trigger": "MLPFoldFromTransformation\tType",
      "contents": "MLPFoldFromTransformation"
    },
    {
      "trigger": "MLPFoldLine\tType",
      "contents": "MLPFoldLine"
    },
    {
      "trigger": "MLPFoldTransformation\tType",
      "contents": "MLPFoldTransformation"
    },
    {
      "trigger": "MLPFormulation\tType",
      "contents": "MLPFormulation"
    },
    {
      "trigger": "MLPGrid\tType",
      "contents": "MLPGrid"
    },
    {
      "trigger": "MLPGroupPattern\tType",
      "contents": "MLPGroupPattern"
    },
    {
      "trigger": "MLPLaminate\tType",
      "contents": "MLPLaminate"
    },
    {
      "trigger": "MLPLayer\tType",
      "contents": "MLPLayer"
    },
    {
      "trigger": "MLPLayerDomain\tType",
      "contents": "MLPLayerDomain"
    },
    {
      "trigger": "MLPLayerGroup\tType",
      "contents": "MLPLayerGroup"
    },
    {
      "trigger": "MLPLayerObject\tType",
      "contents": "MLPLayerObject"
    },
    {
      "trigger": "MLPLayerPattern\tType",
      "contents": "MLPLayerPattern"
    },
    {
      "trigger": "MLPLinearLayer\tType",
      "contents": "MLPLinearLayer"
    },
    {
      "trigger": "MLPLinearLayerFold\tType",
      "contents": "MLPLinearLayerFold"
    },
    {
      "trigger": "MLPLinearLayerSplit\tType",
      "contents": "MLPLinearLayerSplit"
    },
    {
      "trigger": "MLPLiquid\tType",
      "contents": "MLPLiquid"
    },
    {
      "trigger": "MLPLosslessCut\tType",
      "contents": "MLPLosslessCut"
    },
    {
      "trigger": "MLPMaterialProperty\tType",
      "contents": "MLPMaterialProperty"
    },
    {
      "trigger": "MLPMechanical\tType",
      "contents": "MLPMechanical"
    },
    {
      "trigger": "MLPObject\tType",
      "contents": "MLPObject"
    },
    {
      "trigger": "MLPProfile\tType",
      "contents": "MLPProfile"
    },
    {
      "trigger": "MLPProfileDimension\tType",
      "contents": "MLPProfileDimension"
    },
    {
      "trigger": "MLPProfileZone\tType",
      "contents": "MLPProfileZone"
    },
    {
      "trigger": "MLPRelation\tType",
      "contents": "MLPRelation"
    },
    {
      "trigger": "MLPRelimitation\tType",
      "contents": "MLPRelimitation"
    },
    {
      "trigger": "MLPRelimitingZone\tType",
      "contents": "MLPRelimitingZone"
    },
    {
      "trigger": "MLPReviewToolElement\tType",
      "contents": "MLPReviewToolElement"
    },
    {
      "trigger": "MLPSmartView\tType",
      "contents": "MLPSmartView"
    },
    {
      "trigger": "MLPSplitFromTransformation\tType",
      "contents": "MLPSplitFromTransformation"
    },
    {
      "trigger": "MLPSplitTransformation\tType",
      "contents": "MLPSplitTransformation"
    },
    {
      "trigger": "MLPStacking\tType",
      "contents": "MLPStacking"
    },
    {
      "trigger": "MLPStitching\tType",
      "contents": "MLPStitching"
    },
    {
      "trigger": "MLPStrainTransformation\tType",
      "contents": "MLPStrainTransformation"
    },
    {
      "trigger": "MLPStrainTransformationWithZones\tType",
      "contents": "MLPStrainTransformationWithZones"
    },
    {
      "trigger": "MLPStrainingZone\tType",
      "contents": "MLPStrainingZone"
    },
    {
      "trigger": "MLPTransformation\tType",
      "contents": "MLPTransformation"
    },
    {
      "trigger": "MLPTransformationObject\tType",
      "contents": "MLPTransformationObject"
    },
    {
      "trigger": "MLPUnwrappedLayer\tType",
      "contents": "MLPUnwrappedLayer"
    },
    {
      "trigger": "MMOrderedGeometricalSet\tType",
      "contents": "MMOrderedGeometricalSet"
    },
    {
      "trigger": "MRX\tType",
      "contents": "MRX"
    },
    {
      "trigger": "MRXAngle\tType",
      "contents": "MRXAngle"
    },
    {
      "trigger": "MRXCoaxiality\tType",
      "contents": "MRXCoaxiality"
    },
    {
      "trigger": "MRXCoincidence\tType",
      "contents": "MRXCoincidence"
    },
    {
      "trigger": "MRXConcentricity\tType",
      "contents": "MRXConcentricity"
    },
    {
      "trigger": "MRXContact\tType",
      "contents": "MRXContact"
    },
    {
      "trigger": "MRXCoupling\tType",
      "contents": "MRXCoupling"
    },
    {
      "trigger": "MRXCylindricalConstraint\tType",
      "contents": "MRXCylindricalConstraint"
    },
    {
      "trigger": "MRXDistance\tType",
      "contents": "MRXDistance"
    },
    {
      "trigger": "MRXFix\tType",
      "contents": "MRXFix"
    },
    {
      "trigger": "MRXFixTogether\tType",
      "contents": "MRXFixTogether"
    },
    {
      "trigger": "MRXFixTogetherTransfo\tType",
      "contents": "MRXFixTogetherTransfo"
    },
    {
      "trigger": "MRXFixTransfo\tType",
      "contents": "MRXFixTransfo"
    },
    {
      "trigger": "MRXHinge\tType",
      "contents": "MRXHinge"
    },
    {
      "trigger": "MRXLength\tType",
      "contents": "MRXLength"
    },
    {
      "trigger": "MRXParallelism\tType",
      "contents": "MRXParallelism"
    },
    {
      "trigger": "MRXPattern\tType",
      "contents": "MRXPattern"
    },
    {
      "trigger": "MRXPerpendicularity\tType",
      "contents": "MRXPerpendicularity"
    },
    {
      "trigger": "MRXPlanarConstraint\tType",
      "contents": "MRXPlanarConstraint"
    },
    {
      "trigger": "MRXPrismaticConstraint\tType",
      "contents": "MRXPrismaticConstraint"
    },
    {
      "trigger": "MRXProjection\tType",
      "contents": "MRXProjection"
    },
    {
      "trigger": "MRXRevoluteConstraint\tType",
      "contents": "MRXRevoluteConstraint"
    },
    {
      "trigger": "MRXRoll\tType",
      "contents": "MRXRoll"
    },
    {
      "trigger": "MRXSlide\tType",
      "contents": "MRXSlide"
    },
    {
      "trigger": "MRXSphericalConstraint\tType",
      "contents": "MRXSphericalConstraint"
    },
    {
      "trigger": "MRXSymmetry\tType",
      "contents": "MRXSymmetry"
    },
    {
      "trigger": "MRXTangency\tType",
      "contents": "MRXTangency"
    },
    {
      "trigger": "MRXUniversalConstraint\tType",
      "contents": "MRXUniversalConstraint"
    },
    {
      "trigger": "MachineInstruction\tType",
      "contents": "MachineInstruction"
    },
    {
      "trigger": "MachiningFeature\tType",
      "contents": "MachiningFeature"
    },
    {
      "trigger": "MachiningOperation\tType",
      "contents": "MachiningOperation"
    },
    {
      "trigger": "MachiningProcess\tType",
      "contents": "MachiningProcess"
    },
    {
      "trigger": "MachiningProcessList\tType",
      "contents": "MachiningProcessList"
    },
    {
      "trigger": "ManufacturingActivity\tType",
      "contents": "ManufacturingActivity"
    },
    {
      "trigger": "ManufacturingFeature\tType",
      "contents": "ManufacturingFeature"
    },
    {
      "trigger": "ManufacturingOperation\tType",
      "contents": "ManufacturingOperation"
    },
    {
      "trigger": "ManufacturingProcessType\tType",
      "contents": "ManufacturingProcessType"
    },
    {
      "trigger": "ManufacturingProgram\tType",
      "contents": "ManufacturingProgram"
    },
    {
      "trigger": "ManufacturingSetup\tType",
      "contents": "ManufacturingSetup"
    },
    {
      "trigger": "ManufacturingSetupInstance\tType",
      "contents": "ManufacturingSetupInstance"
    },
    {
      "trigger": "ManufacturingSetupRef\tType",
      "contents": "ManufacturingSetupRef"
    },
    {
      "trigger": "Map\tType",
      "contents": "Map"
    },
    {
      "trigger": "MathFunction\tType",
      "contents": "MathFunction"
    },
    {
      "trigger": "MathFunctionUV\tType",
      "contents": "MathFunctionUV"
    },
    {
      "trigger": "MathFunctionX\tType",
      "contents": "MathFunctionX"
    },
    {
      "trigger": "Matrix\tType",
      "contents": "Matrix"
    },
    {
      "trigger": "MechanicalFeature\tType",
      "contents": "MechanicalFeature"
    },
    {
      "trigger": "MechanicalRefPlane\tType",
      "contents": "MechanicalRefPlane"
    },
    {
      "trigger": "MergeEnd\tType",
      "contents": "MergeEnd"
    },
    {
      "trigger": "Mesh\tType",
      "contents": "Mesh"
    },
    {
      "trigger": "MeshBase\tType",
      "contents": "MeshBase"
    },
    {
      "trigger": "MeshEdge\tType",
      "contents": "MeshEdge"
    },
    {
      "trigger": "MeshElement\tType",
      "contents": "MeshElement"
    },
    {
      "trigger": "MeshFace\tType",
      "contents": "MeshFace"
    },
    {
      "trigger": "MeshType\tType",
      "contents": "MeshType"
    },
    {
      "trigger": "MeshVertex\tType",
      "contents": "MeshVertex"
    },
    {
      "trigger": "MetricHumanActivityCharacteristicValue\tType",
      "contents": "MetricHumanActivityCharacteristicValue"
    },
    {
      "trigger": "MfAngleConstraint\tType",
      "contents": "MfAngleConstraint"
    },
    {
      "trigger": "MfConstraint\tType",
      "contents": "MfConstraint"
    },
    {
      "trigger": "MfFixConstraint\tType",
      "contents": "MfFixConstraint"
    },
    {
      "trigger": "MfLengthConstraint\tType",
      "contents": "MfLengthConstraint"
    },
    {
      "trigger": "Mfg2DContour\tType",
      "contents": "Mfg2DContour"
    },
    {
      "trigger": "Mfg2DCuttingOperation\tType",
      "contents": "Mfg2DCuttingOperation"
    },
    {
      "trigger": "Mfg2DIsland\tType",
      "contents": "Mfg2DIsland"
    },
    {
      "trigger": "Mfg2DMAFeature\tType",
      "contents": "Mfg2DMAFeature"
    },
    {
      "trigger": "Mfg2SidesChamfer\tType",
      "contents": "Mfg2SidesChamfer"
    },
    {
      "trigger": "Mfg3AxisFeature\tType",
      "contents": "Mfg3AxisFeature"
    },
    {
      "trigger": "Mfg3AxisMachinePX2\tType",
      "contents": "Mfg3AxisMachinePX2"
    },
    {
      "trigger": "Mfg3AxisWithTableRotationMachinePX2\tType",
      "contents": "Mfg3AxisWithTableRotationMachinePX2"
    },
    {
      "trigger": "Mfg4AxisCurveSweeping\tType",
      "contents": "Mfg4AxisCurveSweeping"
    },
    {
      "trigger": "Mfg4XPocketingComputationMode\tType",
      "contents": "Mfg4XPocketingComputationMode"
    },
    {
      "trigger": "Mfg4XPocketingOperation\tType",
      "contents": "Mfg4XPocketingOperation"
    },
    {
      "trigger": "Mfg5AxisAngleManagement\tType",
      "contents": "Mfg5AxisAngleManagement"
    },
    {
      "trigger": "Mfg5AxisAxialStrategy\tType",
      "contents": "Mfg5AxisAxialStrategy"
    },
    {
      "trigger": "Mfg5AxisContourDriven\tType",
      "contents": "Mfg5AxisContourDriven"
    },
    {
      "trigger": "Mfg5AxisCurveEngraving\tType",
      "contents": "Mfg5AxisCurveEngraving"
    },
    {
      "trigger": "Mfg5AxisCurveMachining\tType",
      "contents": "Mfg5AxisCurveMachining"
    },
    {
      "trigger": "Mfg5AxisCurveSweepingSideToMachine\tType",
      "contents": "Mfg5AxisCurveSweepingSideToMachine"
    },
    {
      "trigger": "Mfg5AxisDeActivateFanning\tType",
      "contents": "Mfg5AxisDeActivateFanning"
    },
    {
      "trigger": "Mfg5AxisDivingMode\tType",
      "contents": "Mfg5AxisDivingMode"
    },
    {
      "trigger": "Mfg5AxisEMToolAxisStrategy\tType",
      "contents": "Mfg5AxisEMToolAxisStrategy"
    },
    {
      "trigger": "Mfg5AxisFinishAxialHelicalMode\tType",
      "contents": "Mfg5AxisFinishAxialHelicalMode"
    },
    {
      "trigger": "Mfg5AxisFinishMultiLevelMode\tType",
      "contents": "Mfg5AxisFinishMultiLevelMode"
    },
    {
      "trigger": "Mfg5AxisFlankContouring\tType",
      "contents": "Mfg5AxisFlankContouring"
    },
    {
      "trigger": "Mfg5AxisGuideDirection\tType",
      "contents": "Mfg5AxisGuideDirection"
    },
    {
      "trigger": "Mfg5AxisGuidedCutting\tType",
      "contents": "Mfg5AxisGuidedCutting"
    },
    {
      "trigger": "Mfg5AxisHelixAxisStrategy\tType",
      "contents": "Mfg5AxisHelixAxisStrategy"
    },
    {
      "trigger": "Mfg5AxisHelixMachining\tType",
      "contents": "Mfg5AxisHelixMachining"
    },
    {
      "trigger": "Mfg5AxisImpellerHubMachining\tType",
      "contents": "Mfg5AxisImpellerHubMachining"
    },
    {
      "trigger": "Mfg5AxisIsoparAxisStrategy\tType",
      "contents": "Mfg5AxisIsoparAxisStrategy"
    },
    {
      "trigger": "Mfg5AxisIsoparMachining\tType",
      "contents": "Mfg5AxisIsoparMachining"
    },
    {
      "trigger": "Mfg5AxisLocalReStartingDirection\tType",
      "contents": "Mfg5AxisLocalReStartingDirection"
    },
    {
      "trigger": "Mfg5AxisLocalStoppingCondition\tType",
      "contents": "Mfg5AxisLocalStoppingCondition"
    },
    {
      "trigger": "Mfg5AxisLocalSwapSideOnDS\tType",
      "contents": "Mfg5AxisLocalSwapSideOnDS"
    },
    {
      "trigger": "Mfg5AxisMPFAxisStrategy\tType",
      "contents": "Mfg5AxisMPFAxisStrategy"
    },
    {
      "trigger": "Mfg5AxisMachinePX2\tType",
      "contents": "Mfg5AxisMachinePX2"
    },
    {
      "trigger": "Mfg5AxisMultiLevelMode\tType",
      "contents": "Mfg5AxisMultiLevelMode"
    },
    {
      "trigger": "Mfg5AxisMultiPocketsFlank\tType",
      "contents": "Mfg5AxisMultiPocketsFlank"
    },
    {
      "trigger": "Mfg5AxisOutputType\tType",
      "contents": "Mfg5AxisOutputType"
    },
    {
      "trigger": "Mfg5AxisPeriod\tType",
      "contents": "Mfg5AxisPeriod"
    },
    {
      "trigger": "Mfg5AxisRollingCutColStrategy\tType",
      "contents": "Mfg5AxisRollingCutColStrategy"
    },
    {
      "trigger": "Mfg5AxisRollingStrategy\tType",
      "contents": "Mfg5AxisRollingStrategy"
    },
    {
      "trigger": "Mfg5AxisRoughAxialHelicalMode\tType",
      "contents": "Mfg5AxisRoughAxialHelicalMode"
    },
    {
      "trigger": "Mfg5AxisRoughMultiLevelMode\tType",
      "contents": "Mfg5AxisRoughMultiLevelMode"
    },
    {
      "trigger": "Mfg5AxisRoughing\tType",
      "contents": "Mfg5AxisRoughing"
    },
    {
      "trigger": "Mfg5AxisSkipPath\tType",
      "contents": "Mfg5AxisSkipPath"
    },
    {
      "trigger": "Mfg5AxisSpiralMilling\tType",
      "contents": "Mfg5AxisSpiralMilling"
    },
    {
      "trigger": "Mfg5AxisStartEnd\tType",
      "contents": "Mfg5AxisStartEnd"
    },
    {
      "trigger": "Mfg5AxisSwarf\tType",
      "contents": "Mfg5AxisSwarf"
    },
    {
      "trigger": "Mfg5AxisTubeAxisStrategy\tType",
      "contents": "Mfg5AxisTubeAxisStrategy"
    },
    {
      "trigger": "Mfg5AxisTubeMachining\tType",
      "contents": "Mfg5AxisTubeMachining"
    },
    {
      "trigger": "Mfg5XContourOrder\tType",
      "contents": "Mfg5XContourOrder"
    },
    {
      "trigger": "Mfg5XEngravingSide\tType",
      "contents": "Mfg5XEngravingSide"
    },
    {
      "trigger": "Mfg5XHardMachiningMode\tType",
      "contents": "Mfg5XHardMachiningMode"
    },
    {
      "trigger": "Mfg5XHelicalMovement\tType",
      "contents": "Mfg5XHelicalMovement"
    },
    {
      "trigger": "Mfg5XHelixRadialStrategy\tType",
      "contents": "Mfg5XHelixRadialStrategy"
    },
    {
      "trigger": "Mfg5XImpellerRadialStrategy\tType",
      "contents": "Mfg5XImpellerRadialStrategy"
    },
    {
      "trigger": "Mfg5XOutputType\tType",
      "contents": "Mfg5XOutputType"
    },
    {
      "trigger": "Mfg5XPropagationMode\tType",
      "contents": "Mfg5XPropagationMode"
    },
    {
      "trigger": "Mfg5XSpiralAxisStrategy\tType",
      "contents": "Mfg5XSpiralAxisStrategy"
    },
    {
      "trigger": "Mfg5XSpiralMillingMode\tType",
      "contents": "Mfg5XSpiralMillingMode"
    },
    {
      "trigger": "Mfg5XSpiralMillingStyle\tType",
      "contents": "Mfg5XSpiralMillingStyle"
    },
    {
      "trigger": "Mfg5XToolPosition\tType",
      "contents": "Mfg5XToolPosition"
    },
    {
      "trigger": "Mfg5XTubeAxisSelection\tType",
      "contents": "Mfg5XTubeAxisSelection"
    },
    {
      "trigger": "Mfg5XTubeGuidingMode\tType",
      "contents": "Mfg5XTubeGuidingMode"
    },
    {
      "trigger": "Mfg5XTubeMachiningMode\tType",
      "contents": "Mfg5XTubeMachiningMode"
    },
    {
      "trigger": "Mfg5XTubeMatSide\tType",
      "contents": "Mfg5XTubeMatSide"
    },
    {
      "trigger": "Mfg5XTubeRadialStrategy\tType",
      "contents": "Mfg5XTubeRadialStrategy"
    },
    {
      "trigger": "Mfg5XWayOfCutAlongGuide\tType",
      "contents": "Mfg5XWayOfCutAlongGuide"
    },
    {
      "trigger": "Mfg5xSurfaceEngraving\tType",
      "contents": "Mfg5xSurfaceEngraving"
    },
    {
      "trigger": "MfgAPTTool\tType",
      "contents": "MfgAPTTool"
    },
    {
      "trigger": "MfgActionType\tType",
      "contents": "MfgActionType"
    },
    {
      "trigger": "MfgApproachMode\tType",
      "contents": "MfgApproachMode"
    },
    {
      "trigger": "MfgAutoContinuing\tType",
      "contents": "MfgAutoContinuing"
    },
    {
      "trigger": "MfgAutomaticFeedRateMode\tType",
      "contents": "MfgAutomaticFeedRateMode"
    },
    {
      "trigger": "MfgAxialFeature\tType",
      "contents": "MfgAxialFeature"
    },
    {
      "trigger": "MfgAxialLevelPlane\tType",
      "contents": "MfgAxialLevelPlane"
    },
    {
      "trigger": "MfgAxialSeqStrategy\tType",
      "contents": "MfgAxialSeqStrategy"
    },
    {
      "trigger": "MfgAxialStrategy\tType",
      "contents": "MfgAxialStrategy"
    },
    {
      "trigger": "MfgAxialTool\tType",
      "contents": "MfgAxialTool"
    },
    {
      "trigger": "MfgAxisMachAxis\tType",
      "contents": "MfgAxisMachAxis"
    },
    {
      "trigger": "MfgAxisSystemType\tType",
      "contents": "MfgAxisSystemType"
    },
    {
      "trigger": "MfgBackBore\tType",
      "contents": "MfgBackBore"
    },
    {
      "trigger": "MfgBalancedStatus\tType",
      "contents": "MfgBalancedStatus"
    },
    {
      "trigger": "MfgBalancingEndPoint\tType",
      "contents": "MfgBalancingEndPoint"
    },
    {
      "trigger": "MfgBalancingStartPoint\tType",
      "contents": "MfgBalancingStartPoint"
    },
    {
      "trigger": "MfgBalancingStrategy\tType",
      "contents": "MfgBalancingStrategy"
    },
    {
      "trigger": "MfgBallStylusTool\tType",
      "contents": "MfgBallStylusTool"
    },
    {
      "trigger": "MfgBarrelMillTool\tType",
      "contents": "MfgBarrelMillTool"
    },
    {
      "trigger": "MfgBase\tType",
      "contents": "MfgBase"
    },
    {
      "trigger": "MfgBaseInsert\tType",
      "contents": "MfgBaseInsert"
    },
    {
      "trigger": "MfgBaseLatheTool\tType",
      "contents": "MfgBaseLatheTool"
    },
    {
      "trigger": "MfgBaseMachinePX2\tType",
      "contents": "MfgBaseMachinePX2"
    },
    {
      "trigger": "MfgBaseTool\tType",
      "contents": "MfgBaseTool"
    },
    {
      "trigger": "MfgBaseToolAssembly\tType",
      "contents": "MfgBaseToolAssembly"
    },
    {
      "trigger": "MfgBoringAndChamferingTool\tType",
      "contents": "MfgBoringAndChamferingTool"
    },
    {
      "trigger": "MfgBoringBarTool\tType",
      "contents": "MfgBoringBarTool"
    },
    {
      "trigger": "MfgCenterDrillTool\tType",
      "contents": "MfgCenterDrillTool"
    },
    {
      "trigger": "MfgChainingStrategy\tType",
      "contents": "MfgChainingStrategy"
    },
    {
      "trigger": "MfgChamferedHole\tType",
      "contents": "MfgChamferedHole"
    },
    {
      "trigger": "MfgCheckStopMode\tType",
      "contents": "MfgCheckStopMode"
    },
    {
      "trigger": "MfgCircularMill\tType",
      "contents": "MfgCircularMill"
    },
    {
      "trigger": "MfgCircularMillingMode\tType",
      "contents": "MfgCircularMillingMode"
    },
    {
      "trigger": "MfgClosedContouringMatterSide\tType",
      "contents": "MfgClosedContouringMatterSide"
    },
    {
      "trigger": "MfgCollisionChecking\tType",
      "contents": "MfgCollisionChecking"
    },
    {
      "trigger": "MfgCollisionCheckingMode\tType",
      "contents": "MfgCollisionCheckingMode"
    },
    {
      "trigger": "MfgCompensationMode\tType",
      "contents": "MfgCompensationMode"
    },
    {
      "trigger": "MfgCondLim\tType",
      "contents": "MfgCondLim"
    },
    {
      "trigger": "MfgConicalMillTool\tType",
      "contents": "MfgConicalMillTool"
    },
    {
      "trigger": "MfgContourType\tType",
      "contents": "MfgContourType"
    },
    {
      "trigger": "MfgContouringContourCharacteristic\tType",
      "contents": "MfgContouringContourCharacteristic"
    },
    {
      "trigger": "MfgContouringDrivingMode\tType",
      "contents": "MfgContouringDrivingMode"
    },
    {
      "trigger": "MfgContouringMode\tType",
      "contents": "MfgContouringMode"
    },
    {
      "trigger": "MfgContouringModeForGC\tType",
      "contents": "MfgContouringModeForGC"
    },
    {
      "trigger": "MfgContouringPassMode\tType",
      "contents": "MfgContouringPassMode"
    },
    {
      "trigger": "MfgControllerType\tType",
      "contents": "MfgControllerType"
    },
    {
      "trigger": "MfgCopyBegin\tType",
      "contents": "MfgCopyBegin"
    },
    {
      "trigger": "MfgCopyEnd\tType",
      "contents": "MfgCopyEnd"
    },
    {
      "trigger": "MfgCopyOperation\tType",
      "contents": "MfgCopyOperation"
    },
    {
      "trigger": "MfgCopyOrder\tType",
      "contents": "MfgCopyOrder"
    },
    {
      "trigger": "MfgCounterbore\tType",
      "contents": "MfgCounterbore"
    },
    {
      "trigger": "MfgCounterboreMillTool\tType",
      "contents": "MfgCounterboreMillTool"
    },
    {
      "trigger": "MfgCountersink\tType",
      "contents": "MfgCountersink"
    },
    {
      "trigger": "MfgCountersinkTool\tType",
      "contents": "MfgCountersinkTool"
    },
    {
      "trigger": "MfgCurveAxisStrategy\tType",
      "contents": "MfgCurveAxisStrategy"
    },
    {
      "trigger": "MfgCurveEngravingMode\tType",
      "contents": "MfgCurveEngravingMode"
    },
    {
      "trigger": "MfgCurveMachiningMode\tType",
      "contents": "MfgCurveMachiningMode"
    },
    {
      "trigger": "MfgCurveMachiningType\tType",
      "contents": "MfgCurveMachiningType"
    },
    {
      "trigger": "MfgCurveTgtAxisStrategySubModes\tType",
      "contents": "MfgCurveTgtAxisStrategySubModes"
    },
    {
      "trigger": "MfgCuttingDepthControl\tType",
      "contents": "MfgCuttingDepthControl"
    },
    {
      "trigger": "MfgCuttingDirection\tType",
      "contents": "MfgCuttingDirection"
    },
    {
      "trigger": "MfgCuttingType\tType",
      "contents": "MfgCuttingType"
    },
    {
      "trigger": "MfgCylinderStylusTool\tType",
      "contents": "MfgCylinderStylusTool"
    },
    {
      "trigger": "MfgDRLateralMode\tType",
      "contents": "MfgDRLateralMode"
    },
    {
      "trigger": "MfgDefaultPositionOfSynchronisation\tType",
      "contents": "MfgDefaultPositionOfSynchronisation"
    },
    {
      "trigger": "MfgDiamondInsert\tType",
      "contents": "MfgDiamondInsert"
    },
    {
      "trigger": "MfgDirection\tType",
      "contents": "MfgDirection"
    },
    {
      "trigger": "MfgDirectionOfCut\tType",
      "contents": "MfgDirectionOfCut"
    },
    {
      "trigger": "MfgDrillTool\tType",
      "contents": "MfgDrillTool"
    },
    {
      "trigger": "MfgDrillingGenericInsert\tType",
      "contents": "MfgDrillingGenericInsert"
    },
    {
      "trigger": "MfgDrivingMode\tType",
      "contents": "MfgDrivingMode"
    },
    {
      "trigger": "MfgEndMillTool\tType",
      "contents": "MfgEndMillTool"
    },
    {
      "trigger": "MfgEndOfPath\tType",
      "contents": "MfgEndOfPath"
    },
    {
      "trigger": "MfgEndPathINOUT\tType",
      "contents": "MfgEndPathINOUT"
    },
    {
      "trigger": "MfgExternalTapTool\tType",
      "contents": "MfgExternalTapTool"
    },
    {
      "trigger": "MfgExternalTool\tType",
      "contents": "MfgExternalTool"
    },
    {
      "trigger": "MfgFSAxialConfiguration\tType",
      "contents": "MfgFSAxialConfiguration"
    },
    {
      "trigger": "MfgFSConfiguration\tType",
      "contents": "MfgFSConfiguration"
    },
    {
      "trigger": "MfgFSLatheConfiguration\tType",
      "contents": "MfgFSLatheConfiguration"
    },
    {
      "trigger": "MfgFSMillingConfiguration\tType",
      "contents": "MfgFSMillingConfiguration"
    },
    {
      "trigger": "MfgFaceMillTool\tType",
      "contents": "MfgFaceMillTool"
    },
    {
      "trigger": "MfgFacingFinish\tType",
      "contents": "MfgFacingFinish"
    },
    {
      "trigger": "MfgFeedrateMagnitude\tType",
      "contents": "MfgFeedrateMagnitude"
    },
    {
      "trigger": "MfgFeedrateType\tType",
      "contents": "MfgFeedrateType"
    },
    {
      "trigger": "MfgFinishMode\tType",
      "contents": "MfgFinishMode"
    },
    {
      "trigger": "MfgFollowCurve\tType",
      "contents": "MfgFollowCurve"
    },
    {
      "trigger": "MfgForcedContour\tType",
      "contents": "MfgForcedContour"
    },
    {
      "trigger": "MfgGenericFeature\tType",
      "contents": "MfgGenericFeature"
    },
    {
      "trigger": "MfgGenericGrinding\tType",
      "contents": "MfgGenericGrinding"
    },
    {
      "trigger": "MfgGenericMO\tType",
      "contents": "MfgGenericMO"
    },
    {
      "trigger": "MfgGenericMachinePX2\tType",
      "contents": "MfgGenericMachinePX2"
    },
    {
      "trigger": "MfgGrooveAxialStrategy\tType",
      "contents": "MfgGrooveAxialStrategy"
    },
    {
      "trigger": "MfgGrooveExternalTool\tType",
      "contents": "MfgGrooveExternalTool"
    },
    {
      "trigger": "MfgGrooveFrontalTool\tType",
      "contents": "MfgGrooveFrontalTool"
    },
    {
      "trigger": "MfgGrooveInsert\tType",
      "contents": "MfgGrooveInsert"
    },
    {
      "trigger": "MfgGrooveInternalTool\tType",
      "contents": "MfgGrooveInternalTool"
    },
    {
      "trigger": "MfgGrooveMachiningDirection\tType",
      "contents": "MfgGrooveMachiningDirection"
    },
    {
      "trigger": "MfgGuidance\tType",
      "contents": "MfgGuidance"
    },
    {
      "trigger": "MfgGuidingStrategy\tType",
      "contents": "MfgGuidingStrategy"
    },
    {
      "trigger": "MfgHardnessMode\tType",
      "contents": "MfgHardnessMode"
    },
    {
      "trigger": "MfgHole\tType",
      "contents": "MfgHole"
    },
    {
      "trigger": "MfgHoleExtension\tType",
      "contents": "MfgHoleExtension"
    },
    {
      "trigger": "MfgISOInsert\tType",
      "contents": "MfgISOInsert"
    },
    {
      "trigger": "MfgImpellerStepOverMode\tType",
      "contents": "MfgImpellerStepOverMode"
    },
    {
      "trigger": "MfgInsertDefinition\tType",
      "contents": "MfgInsertDefinition"
    },
    {
      "trigger": "MfgInstructionSetAbsOrRel\tType",
      "contents": "MfgInstructionSetAbsOrRel"
    },
    {
      "trigger": "MfgInstructionSetPosOrNeg\tType",
      "contents": "MfgInstructionSetPosOrNeg"
    },
    {
      "trigger": "MfgInstructionSetScope\tType",
      "contents": "MfgInstructionSetScope"
    },
    {
      "trigger": "MfgInstructionSetVisibility\tType",
      "contents": "MfgInstructionSetVisibility"
    },
    {
      "trigger": "MfgIntThreaded\tType",
      "contents": "MfgIntThreaded"
    },
    {
      "trigger": "MfgInternalTool\tType",
      "contents": "MfgInternalTool"
    },
    {
      "trigger": "MfgLaserBeam\tType",
      "contents": "MfgLaserBeam"
    },
    {
      "trigger": "MfgLaserCutTool\tType",
      "contents": "MfgLaserCutTool"
    },
    {
      "trigger": "MfgLateralMode\tType",
      "contents": "MfgLateralMode"
    },
    {
      "trigger": "MfgLatheBandCFromMachineInstruction\tType",
      "contents": "MfgLatheBandCFromMachineInstruction"
    },
    {
      "trigger": "MfgLatheContouringCornerMode\tType",
      "contents": "MfgLatheContouringCornerMode"
    },
    {
      "trigger": "MfgLatheContouringMode\tType",
      "contents": "MfgLatheContouringMode"
    },
    {
      "trigger": "MfgLatheCornerProcessing\tType",
      "contents": "MfgLatheCornerProcessing"
    },
    {
      "trigger": "MfgLatheCutcomStrategy\tType",
      "contents": "MfgLatheCutcomStrategy"
    },
    {
      "trigger": "MfgLatheDirection\tType",
      "contents": "MfgLatheDirection"
    },
    {
      "trigger": "MfgLatheEODeltaCheckMode\tType",
      "contents": "MfgLatheEODeltaCheckMode"
    },
    {
      "trigger": "MfgLatheEODriveDir\tType",
      "contents": "MfgLatheEODriveDir"
    },
    {
      "trigger": "MfgLatheEODriveElemType\tType",
      "contents": "MfgLatheEODriveElemType"
    },
    {
      "trigger": "MfgLatheEOFeedrateMode\tType",
      "contents": "MfgLatheEOFeedrateMode"
    },
    {
      "trigger": "MfgLatheEOFirstCheckMode\tType",
      "contents": "MfgLatheEOFirstCheckMode"
    },
    {
      "trigger": "MfgLatheEOGuidingPoint\tType",
      "contents": "MfgLatheEOGuidingPoint"
    },
    {
      "trigger": "MfgLatheEOLimitCheck\tType",
      "contents": "MfgLatheEOLimitCheck"
    },
    {
      "trigger": "MfgLatheEOLimitDrive\tType",
      "contents": "MfgLatheEOLimitDrive"
    },
    {
      "trigger": "MfgLatheEOSecondCheckMode\tType",
      "contents": "MfgLatheEOSecondCheckMode"
    },
    {
      "trigger": "MfgLatheEOType\tType",
      "contents": "MfgLatheEOType"
    },
    {
      "trigger": "MfgLatheFirstCornerProcessing\tType",
      "contents": "MfgLatheFirstCornerProcessing"
    },
    {
      "trigger": "MfgLatheFirstFlankLeadInType\tType",
      "contents": "MfgLatheFirstFlankLeadInType"
    },
    {
      "trigger": "MfgLatheFirstPlungePos\tType",
      "contents": "MfgLatheFirstPlungePos"
    },
    {
      "trigger": "MfgLatheGrooveFinish\tType",
      "contents": "MfgLatheGrooveFinish"
    },
    {
      "trigger": "MfgLatheGrooveFinishFeature\tType",
      "contents": "MfgLatheGrooveFinishFeature"
    },
    {
      "trigger": "MfgLatheGrooving\tType",
      "contents": "MfgLatheGrooving"
    },
    {
      "trigger": "MfgLatheGroovingFeature\tType",
      "contents": "MfgLatheGroovingFeature"
    },
    {
      "trigger": "MfgLatheGroovingOrientation\tType",
      "contents": "MfgLatheGroovingOrientation"
    },
    {
      "trigger": "MfgLatheGroovingStrategy\tType",
      "contents": "MfgLatheGroovingStrategy"
    },
    {
      "trigger": "MfgLatheInterruptMode\tType",
      "contents": "MfgLatheInterruptMode"
    },
    {
      "trigger": "MfgLatheInvertLiftOffType\tType",
      "contents": "MfgLatheInvertLiftOffType"
    },
    {
      "trigger": "MfgLatheInvertStrategy\tType",
      "contents": "MfgLatheInvertStrategy"
    },
    {
      "trigger": "MfgLatheLastCornerProcessing\tType",
      "contents": "MfgLatheLastCornerProcessing"
    },
    {
      "trigger": "MfgLatheLastFlankLeadInType\tType",
      "contents": "MfgLatheLastFlankLeadInType"
    },
    {
      "trigger": "MfgLatheLeadInMode\tType",
      "contents": "MfgLatheLeadInMode"
    },
    {
      "trigger": "MfgLatheLeadInType\tType",
      "contents": "MfgLatheLeadInType"
    },
    {
      "trigger": "MfgLatheLiftOffMode\tType",
      "contents": "MfgLatheLiftOffMode"
    },
    {
      "trigger": "MfgLatheLiftOffType\tType",
      "contents": "MfgLatheLiftOffType"
    },
    {
      "trigger": "MfgLatheLongRough\tType",
      "contents": "MfgLatheLongRough"
    },
    {
      "trigger": "MfgLatheLongRoughFeature\tType",
      "contents": "MfgLatheLongRoughFeature"
    },
    {
      "trigger": "MfgLatheMachDirection\tType",
      "contents": "MfgLatheMachDirection"
    },
    {
      "trigger": "MfgLatheMachLimitMode\tType",
      "contents": "MfgLatheMachLimitMode"
    },
    {
      "trigger": "MfgLatheMacroMode\tType",
      "contents": "MfgLatheMacroMode"
    },
    {
      "trigger": "MfgLatheMdLocation\tType",
      "contents": "MfgLatheMdLocation"
    },
    {
      "trigger": "MfgLatheMdOrientation\tType",
      "contents": "MfgLatheMdOrientation"
    },
    {
      "trigger": "MfgLatheModeEnd\tType",
      "contents": "MfgLatheModeEnd"
    },
    {
      "trigger": "MfgLatheModeStart\tType",
      "contents": "MfgLatheModeStart"
    },
    {
      "trigger": "MfgLatheNextPlungePos\tType",
      "contents": "MfgLatheNextPlungePos"
    },
    {
      "trigger": "MfgLatheOperation\tType",
      "contents": "MfgLatheOperation"
    },
    {
      "trigger": "MfgLatheOtherFlankLeadInType\tType",
      "contents": "MfgLatheOtherFlankLeadInType"
    },
    {
      "trigger": "MfgLatheProfileFinish\tType",
      "contents": "MfgLatheProfileFinish"
    },
    {
      "trigger": "MfgLatheProfileFinishFeature\tType",
      "contents": "MfgLatheProfileFinishFeature"
    },
    {
      "trigger": "MfgLatheProfileOutputMode\tType",
      "contents": "MfgLatheProfileOutputMode"
    },
    {
      "trigger": "MfgLatheRampingRecessing\tType",
      "contents": "MfgLatheRampingRecessing"
    },
    {
      "trigger": "MfgLatheRampingRecessingFeature\tType",
      "contents": "MfgLatheRampingRecessingFeature"
    },
    {
      "trigger": "MfgLatheRampingRecessingStrategy\tType",
      "contents": "MfgLatheRampingRecessingStrategy"
    },
    {
      "trigger": "MfgLatheRampingRoughing\tType",
      "contents": "MfgLatheRampingRoughing"
    },
    {
      "trigger": "MfgLatheRampingRoughingFeature\tType",
      "contents": "MfgLatheRampingRoughingFeature"
    },
    {
      "trigger": "MfgLatheRampingRoughingStrategy\tType",
      "contents": "MfgLatheRampingRoughingStrategy"
    },
    {
      "trigger": "MfgLatheRecessing\tType",
      "contents": "MfgLatheRecessing"
    },
    {
      "trigger": "MfgLatheRecessingFeature\tType",
      "contents": "MfgLatheRecessingFeature"
    },
    {
      "trigger": "MfgLatheRecessingStrategy\tType",
      "contents": "MfgLatheRecessingStrategy"
    },
    {
      "trigger": "MfgLatheRoughingMode\tType",
      "contents": "MfgLatheRoughingMode"
    },
    {
      "trigger": "MfgLatheRoughingStrategy\tType",
      "contents": "MfgLatheRoughingStrategy"
    },
    {
      "trigger": "MfgLatheSequentialFeature\tType",
      "contents": "MfgLatheSequentialFeature"
    },
    {
      "trigger": "MfgLatheSequentialGlobalGeomFeature\tType",
      "contents": "MfgLatheSequentialGlobalGeomFeature"
    },
    {
      "trigger": "MfgLatheSequentialOperation\tType",
      "contents": "MfgLatheSequentialOperation"
    },
    {
      "trigger": "MfgLatheSpindleRotDir\tType",
      "contents": "MfgLatheSpindleRotDir"
    },
    {
      "trigger": "MfgLatheStartRampingPassMode\tType",
      "contents": "MfgLatheStartRampingPassMode"
    },
    {
      "trigger": "MfgLatheThreadMachining\tType",
      "contents": "MfgLatheThreadMachining"
    },
    {
      "trigger": "MfgLatheThreadOrientation\tType",
      "contents": "MfgLatheThreadOrientation"
    },
    {
      "trigger": "MfgLatheThreadPenetration\tType",
      "contents": "MfgLatheThreadPenetration"
    },
    {
      "trigger": "MfgLatheThreadProfile\tType",
      "contents": "MfgLatheThreadProfile"
    },
    {
      "trigger": "MfgLatheThreadUnit\tType",
      "contents": "MfgLatheThreadUnit"
    },
    {
      "trigger": "MfgLatheThreading\tType",
      "contents": "MfgLatheThreading"
    },
    {
      "trigger": "MfgLatheThreadingFeature\tType",
      "contents": "MfgLatheThreadingFeature"
    },
    {
      "trigger": "MfgLatheToolAssembly\tType",
      "contents": "MfgLatheToolAssembly"
    },
    {
      "trigger": "MfgLatheToolAxisMachRadius\tType",
      "contents": "MfgLatheToolAxisMachRadius"
    },
    {
      "trigger": "MfgLatheToolAxisMd\tType",
      "contents": "MfgLatheToolAxisMd"
    },
    {
      "trigger": "MfgLatheToolHolderConstraintMode\tType",
      "contents": "MfgLatheToolHolderConstraintMode"
    },
    {
      "trigger": "MfgLensMillTool\tType",
      "contents": "MfgLensMillTool"
    },
    {
      "trigger": "MfgLmtMachSynchroMode\tType",
      "contents": "MfgLmtMachSynchroMode"
    },
    {
      "trigger": "MfgLmtSpiCaxisRotType\tType",
      "contents": "MfgLmtSpiCaxisRotType"
    },
    {
      "trigger": "MfgLmtSpiCaxisRotaryDir\tType",
      "contents": "MfgLmtSpiCaxisRotaryDir"
    },
    {
      "trigger": "MfgLmtSpiCaxisType\tType",
      "contents": "MfgLmtSpiCaxisType"
    },
    {
      "trigger": "MfgLmtSpindleType\tType",
      "contents": "MfgLmtSpindleType"
    },
    {
      "trigger": "MfgLmtTurBAxisType\tType",
      "contents": "MfgLmtTurBAxisType"
    },
    {
      "trigger": "MfgLmtTurSpindleLink\tType",
      "contents": "MfgLmtTurSpindleLink"
    },
    {
      "trigger": "MfgLmtTurretType\tType",
      "contents": "MfgLmtTurretType"
    },
    {
      "trigger": "MfgLocalToolAxisStrategy\tType",
      "contents": "MfgLocalToolAxisStrategy"
    },
    {
      "trigger": "MfgMAType\tType",
      "contents": "MfgMAType"
    },
    {
      "trigger": "MfgMOToolPower\tType",
      "contents": "MfgMOToolPower"
    },
    {
      "trigger": "MfgMPFSideFinish\tType",
      "contents": "MfgMPFSideFinish"
    },
    {
      "trigger": "MfgMachinableAreaFeature\tType",
      "contents": "MfgMachinableAreaFeature"
    },
    {
      "trigger": "MfgMachinableAxialFeature\tType",
      "contents": "MfgMachinableAxialFeature"
    },
    {
      "trigger": "MfgMachinableBaseFeature\tType",
      "contents": "MfgMachinableBaseFeature"
    },
    {
      "trigger": "MfgMachinableFastener\tType",
      "contents": "MfgMachinableFastener"
    },
    {
      "trigger": "MfgMachinableGeomFeature\tType",
      "contents": "MfgMachinableGeomFeature"
    },
    {
      "trigger": "MfgMachiningAxisSystem\tType",
      "contents": "MfgMachiningAxisSystem"
    },
    {
      "trigger": "MfgMachiningMode\tType",
      "contents": "MfgMachiningMode"
    },
    {
      "trigger": "MfgMachiningModeforFacing\tType",
      "contents": "MfgMachiningModeforFacing"
    },
    {
      "trigger": "MfgMachiningModeforPocket\tType",
      "contents": "MfgMachiningModeforPocket"
    },
    {
      "trigger": "MfgMachiningPattern\tType",
      "contents": "MfgMachiningPattern"
    },
    {
      "trigger": "MfgMacroBase\tType",
      "contents": "MfgMacroBase"
    },
    {
      "trigger": "MfgMacroCircleMode\tType",
      "contents": "MfgMacroCircleMode"
    },
    {
      "trigger": "MfgMacroElementaryAxialMotion\tType",
      "contents": "MfgMacroElementaryAxialMotion"
    },
    {
      "trigger": "MfgMacroElementaryBackMotion\tType",
      "contents": "MfgMacroElementaryBackMotion"
    },
    {
      "trigger": "MfgMacroElementaryBoxMotion\tType",
      "contents": "MfgMacroElementaryBoxMotion"
    },
    {
      "trigger": "MfgMacroElementaryCircularDirMotion\tType",
      "contents": "MfgMacroElementaryCircularDirMotion"
    },
    {
      "trigger": "MfgMacroElementaryCircularMotion\tType",
      "contents": "MfgMacroElementaryCircularMotion"
    },
    {
      "trigger": "MfgMacroElementaryDeltaLnDistMotion\tType",
      "contents": "MfgMacroElementaryDeltaLnDistMotion"
    },
    {
      "trigger": "MfgMacroElementaryGoToALineMotion\tType",
      "contents": "MfgMacroElementaryGoToALineMotion"
    },
    {
      "trigger": "MfgMacroElementaryGoToAPlaneMotion\tType",
      "contents": "MfgMacroElementaryGoToAPlaneMotion"
    },
    {
      "trigger": "MfgMacroElementaryGoToAPointMotion\tType",
      "contents": "MfgMacroElementaryGoToAPointMotion"
    },
    {
      "trigger": "MfgMacroElementaryHMRMotion\tType",
      "contents": "MfgMacroElementaryHMRMotion"
    },
    {
      "trigger": "MfgMacroElementaryHSMMotion\tType",
      "contents": "MfgMacroElementaryHSMMotion"
    },
    {
      "trigger": "MfgMacroElementaryHSMSMotion\tType",
      "contents": "MfgMacroElementaryHSMSMotion"
    },
    {
      "trigger": "MfgMacroElementaryHelixMotion\tType",
      "contents": "MfgMacroElementaryHelixMotion"
    },
    {
      "trigger": "MfgMacroElementaryHorizontalMotion\tType",
      "contents": "MfgMacroElementaryHorizontalMotion"
    },
    {
      "trigger": "MfgMacroElementaryMotion\tType",
      "contents": "MfgMacroElementaryMotion"
    },
    {
      "trigger": "MfgMacroElementaryNormalMotion\tType",
      "contents": "MfgMacroElementaryNormalMotion"
    },
    {
      "trigger": "MfgMacroElementaryPSMMotion\tType",
      "contents": "MfgMacroElementaryPSMMotion"
    },
    {
      "trigger": "MfgMacroElementaryRampToPlaneMotion\tType",
      "contents": "MfgMacroElementaryRampToPlaneMotion"
    },
    {
      "trigger": "MfgMacroElementaryRampingMotion\tType",
      "contents": "MfgMacroElementaryRampingMotion"
    },
    {
      "trigger": "MfgMacroElementarySimultaneousAxisMotion\tType",
      "contents": "MfgMacroElementarySimultaneousAxisMotion"
    },
    {
      "trigger": "MfgMacroElementaryTangentMotion\tType",
      "contents": "MfgMacroElementaryTangentMotion"
    },
    {
      "trigger": "MfgMacroElementaryToolAxisMotion\tType",
      "contents": "MfgMacroElementaryToolAxisMotion"
    },
    {
      "trigger": "MfgMacroElementaryZLCirMotion\tType",
      "contents": "MfgMacroElementaryZLCirMotion"
    },
    {
      "trigger": "MfgMacroElementaryZLCorMotion\tType",
      "contents": "MfgMacroElementaryZLCorMotion"
    },
    {
      "trigger": "MfgMacroElementaryZLPSMMotion\tType",
      "contents": "MfgMacroElementaryZLPSMMotion"
    },
    {
      "trigger": "MfgMacroElementaryZLRampMotion\tType",
      "contents": "MfgMacroElementaryZLRampMotion"
    },
    {
      "trigger": "MfgMacroFeedrateType\tType",
      "contents": "MfgMacroFeedrateType"
    },
    {
      "trigger": "MfgMacroMode\tType",
      "contents": "MfgMacroMode"
    },
    {
      "trigger": "MfgMacroMotion\tType",
      "contents": "MfgMacroMotion"
    },
    {
      "trigger": "MfgMacroMotions\tType",
      "contents": "MfgMacroMotions"
    },
    {
      "trigger": "MfgMacroPPWord\tType",
      "contents": "MfgMacroPPWord"
    },
    {
      "trigger": "MfgMacroPredefinedMode\tType",
      "contents": "MfgMacroPredefinedMode"
    },
    {
      "trigger": "MfgMacroSpindleSpeedType\tType",
      "contents": "MfgMacroSpindleSpeedType"
    },
    {
      "trigger": "MfgMacroType\tType",
      "contents": "MfgMacroType"
    },
    {
      "trigger": "MfgManualStartDir\tType",
      "contents": "MfgManualStartDir"
    },
    {
      "trigger": "MfgMarkerOperation\tType",
      "contents": "MfgMarkerOperation"
    },
    {
      "trigger": "MfgMaterialDepositionTool\tType",
      "contents": "MfgMaterialDepositionTool"
    },
    {
      "trigger": "MfgMatrixType\tType",
      "contents": "MfgMatrixType"
    },
    {
      "trigger": "MfgMeasureFeature\tType",
      "contents": "MfgMeasureFeature"
    },
    {
      "trigger": "MfgMillAndDrillToolAssembly\tType",
      "contents": "MfgMillAndDrillToolAssembly"
    },
    {
      "trigger": "MfgMillMachinePX2\tType",
      "contents": "MfgMillMachinePX2"
    },
    {
      "trigger": "MfgMillTool\tType",
      "contents": "MfgMillTool"
    },
    {
      "trigger": "MfgMillingGenericInsert\tType",
      "contents": "MfgMillingGenericInsert"
    },
    {
      "trigger": "MfgMultiAxisOperation\tType",
      "contents": "MfgMultiAxisOperation"
    },
    {
      "trigger": "MfgMultiDiamDrillTool\tType",
      "contents": "MfgMultiDiamDrillTool"
    },
    {
      "trigger": "MfgNormPSMode\tType",
      "contents": "MfgNormPSMode"
    },
    {
      "trigger": "MfgOddPathTreatment\tType",
      "contents": "MfgOddPathTreatment"
    },
    {
      "trigger": "MfgOpenContouringMatterSide\tType",
      "contents": "MfgOpenContouringMatterSide"
    },
    {
      "trigger": "MfgOperatorOperation\tType",
      "contents": "MfgOperatorOperation"
    },
    {
      "trigger": "MfgOutputStyle\tType",
      "contents": "MfgOutputStyle"
    },
    {
      "trigger": "MfgPartSeqAttachment\tType",
      "contents": "MfgPartSeqAttachment"
    },
    {
      "trigger": "MfgPartSeqVisibility\tType",
      "contents": "MfgPartSeqVisibility"
    },
    {
      "trigger": "MfgPatternOrderingMode\tType",
      "contents": "MfgPatternOrderingMode"
    },
    {
      "trigger": "MfgPatternTopMode\tType",
      "contents": "MfgPatternTopMode"
    },
    {
      "trigger": "MfgPatternUsage\tType",
      "contents": "MfgPatternUsage"
    },
    {
      "trigger": "MfgPgmOptimization\tType",
      "contents": "MfgPgmOptimization"
    },
    {
      "trigger": "MfgPitchSens\tType",
      "contents": "MfgPitchSens"
    },
    {
      "trigger": "MfgPitchType\tType",
      "contents": "MfgPitchType"
    },
    {
      "trigger": "MfgPlungeMode\tType",
      "contents": "MfgPlungeMode"
    },
    {
      "trigger": "MfgPocketingFinish\tType",
      "contents": "MfgPocketingFinish"
    },
    {
      "trigger": "MfgPocketingPattern\tType",
      "contents": "MfgPocketingPattern"
    },
    {
      "trigger": "MfgPocketingStyle\tType",
      "contents": "MfgPocketingStyle"
    },
    {
      "trigger": "MfgPolarInitialDefinition\tType",
      "contents": "MfgPolarInitialDefinition"
    },
    {
      "trigger": "MfgPolarInitialDirection\tType",
      "contents": "MfgPolarInitialDirection"
    },
    {
      "trigger": "MfgPowderBedMachinePX2\tType",
      "contents": "MfgPowderBedMachinePX2"
    },
    {
      "trigger": "MfgPriorityType\tType",
      "contents": "MfgPriorityType"
    },
    {
      "trigger": "MfgPrismaticPocket\tType",
      "contents": "MfgPrismaticPocket"
    },
    {
      "trigger": "MfgPrismaticSlab\tType",
      "contents": "MfgPrismaticSlab"
    },
    {
      "trigger": "MfgProbingCorner\tType",
      "contents": "MfgProbingCorner"
    },
    {
      "trigger": "MfgProbingFeature\tType",
      "contents": "MfgProbingFeature"
    },
    {
      "trigger": "MfgProbingHole\tType",
      "contents": "MfgProbingHole"
    },
    {
      "trigger": "MfgProbingMultiPoints\tType",
      "contents": "MfgProbingMultiPoints"
    },
    {
      "trigger": "MfgProbingMultiPointsFeature\tType",
      "contents": "MfgProbingMultiPointsFeature"
    },
    {
      "trigger": "MfgProbingMultiPointsMode\tType",
      "contents": "MfgProbingMultiPointsMode"
    },
    {
      "trigger": "MfgProbingOperation\tType",
      "contents": "MfgProbingOperation"
    },
    {
      "trigger": "MfgProbingOutputPoint\tType",
      "contents": "MfgProbingOutputPoint"
    },
    {
      "trigger": "MfgProbingSideEnum\tType",
      "contents": "MfgProbingSideEnum"
    },
    {
      "trigger": "MfgProbingSlot\tType",
      "contents": "MfgProbingSlot"
    },
    {
      "trigger": "MfgProcessOccurrence\tType",
      "contents": "MfgProcessOccurrence"
    },
    {
      "trigger": "MfgProfileContouringFeature\tType",
      "contents": "MfgProfileContouringFeature"
    },
    {
      "trigger": "MfgProfileWireEDM\tType",
      "contents": "MfgProfileWireEDM"
    },
    {
      "trigger": "MfgProgramCompensationModeSimulation\tType",
      "contents": "MfgProgramCompensationModeSimulation"
    },
    {
      "trigger": "MfgPtDeltaMode\tType",
      "contents": "MfgPtDeltaMode"
    },
    {
      "trigger": "MfgPtToPtDeltaFeature\tType",
      "contents": "MfgPtToPtDeltaFeature"
    },
    {
      "trigger": "MfgPtToPtDeltaSite\tType",
      "contents": "MfgPtToPtDeltaSite"
    },
    {
      "trigger": "MfgPtToPtFeature\tType",
      "contents": "MfgPtToPtFeature"
    },
    {
      "trigger": "MfgPtToPtPDCFeature\tType",
      "contents": "MfgPtToPtPDCFeature"
    },
    {
      "trigger": "MfgPtToPtSite\tType",
      "contents": "MfgPtToPtSite"
    },
    {
      "trigger": "MfgRadialStrategy\tType",
      "contents": "MfgRadialStrategy"
    },
    {
      "trigger": "MfgRadialStrategyforPocket\tType",
      "contents": "MfgRadialStrategyforPocket"
    },
    {
      "trigger": "MfgRadialStrategyforProfileContouring\tType",
      "contents": "MfgRadialStrategyforProfileContouring"
    },
    {
      "trigger": "MfgReamerTool\tType",
      "contents": "MfgReamerTool"
    },
    {
      "trigger": "MfgRelimitationMode\tType",
      "contents": "MfgRelimitationMode"
    },
    {
      "trigger": "MfgResource\tType",
      "contents": "MfgResource"
    },
    {
      "trigger": "MfgRetractMode\tType",
      "contents": "MfgRetractMode"
    },
    {
      "trigger": "MfgReturnMode\tType",
      "contents": "MfgReturnMode"
    },
    {
      "trigger": "MfgReworkMode\tType",
      "contents": "MfgReworkMode"
    },
    {
      "trigger": "MfgRivetHead\tType",
      "contents": "MfgRivetHead"
    },
    {
      "trigger": "MfgRivetType\tType",
      "contents": "MfgRivetType"
    },
    {
      "trigger": "MfgRotationMode\tType",
      "contents": "MfgRotationMode"
    },
    {
      "trigger": "MfgRotationType\tType",
      "contents": "MfgRotationType"
    },
    {
      "trigger": "MfgRoundInsert\tType",
      "contents": "MfgRoundInsert"
    },
    {
      "trigger": "MfgSeqMotionApplicationMode\tType",
      "contents": "MfgSeqMotionApplicationMode"
    },
    {
      "trigger": "MfgSeqMotionAxialBase\tType",
      "contents": "MfgSeqMotionAxialBase"
    },
    {
      "trigger": "MfgSeqMotionAxialCircular\tType",
      "contents": "MfgSeqMotionAxialCircular"
    },
    {
      "trigger": "MfgSeqMotionAxialDelay\tType",
      "contents": "MfgSeqMotionAxialDelay"
    },
    {
      "trigger": "MfgSeqMotionAxialGoDelta\tType",
      "contents": "MfgSeqMotionAxialGoDelta"
    },
    {
      "trigger": "MfgSeqMotionAxialGoToClearance\tType",
      "contents": "MfgSeqMotionAxialGoToClearance"
    },
    {
      "trigger": "MfgSeqMotionAxialGoToPlane\tType",
      "contents": "MfgSeqMotionAxialGoToPlane"
    },
    {
      "trigger": "MfgSeqMotionAxialHelical\tType",
      "contents": "MfgSeqMotionAxialHelical"
    },
    {
      "trigger": "MfgSeqMotionAxialSpindleSpeed\tType",
      "contents": "MfgSeqMotionAxialSpindleSpeed"
    },
    {
      "trigger": "MfgSeqMotionAxialSpindleStop\tType",
      "contents": "MfgSeqMotionAxialSpindleStop"
    },
    {
      "trigger": "MfgSeqMotionBase\tType",
      "contents": "MfgSeqMotionBase"
    },
    {
      "trigger": "MfgSeqMotionLatheBase\tType",
      "contents": "MfgSeqMotionLatheBase"
    },
    {
      "trigger": "MfgSeqMotionLatheDelta\tType",
      "contents": "MfgSeqMotionLatheDelta"
    },
    {
      "trigger": "MfgSeqMotionLatheFollow\tType",
      "contents": "MfgSeqMotionLatheFollow"
    },
    {
      "trigger": "MfgSeqMotionLatheGoStd\tType",
      "contents": "MfgSeqMotionLatheGoStd"
    },
    {
      "trigger": "MfgSeqMotionLatheGotoPoint\tType",
      "contents": "MfgSeqMotionLatheGotoPoint"
    },
    {
      "trigger": "MfgSeqMotionLatheIndirv\tType",
      "contents": "MfgSeqMotionLatheIndirv"
    },
    {
      "trigger": "MfgSeqMotionPPWord\tType",
      "contents": "MfgSeqMotionPPWord"
    },
    {
      "trigger": "MfgSequencing\tType",
      "contents": "MfgSequencing"
    },
    {
      "trigger": "MfgSequencingMode\tType",
      "contents": "MfgSequencingMode"
    },
    {
      "trigger": "MfgSequentialAxialOperation\tType",
      "contents": "MfgSequentialAxialOperation"
    },
    {
      "trigger": "MfgSequentialGrooveOperation\tType",
      "contents": "MfgSequentialGrooveOperation"
    },
    {
      "trigger": "MfgSetupPosition\tType",
      "contents": "MfgSetupPosition"
    },
    {
      "trigger": "MfgSideFinish\tType",
      "contents": "MfgSideFinish"
    },
    {
      "trigger": "MfgSpindleDwellMode\tType",
      "contents": "MfgSpindleDwellMode"
    },
    {
      "trigger": "MfgSpindleMagnitude\tType",
      "contents": "MfgSpindleMagnitude"
    },
    {
      "trigger": "MfgSpindleMode\tType",
      "contents": "MfgSpindleMode"
    },
    {
      "trigger": "MfgSpindleSpeedType\tType",
      "contents": "MfgSpindleSpeedType"
    },
    {
      "trigger": "MfgSpindleWayOfRotation\tType",
      "contents": "MfgSpindleWayOfRotation"
    },
    {
      "trigger": "MfgSpotDrill\tType",
      "contents": "MfgSpotDrill"
    },
    {
      "trigger": "MfgSpotDrillTool\tType",
      "contents": "MfgSpotDrillTool"
    },
    {
      "trigger": "MfgSquareInsert\tType",
      "contents": "MfgSquareInsert"
    },
    {
      "trigger": "MfgStartHardness\tType",
      "contents": "MfgStartHardness"
    },
    {
      "trigger": "MfgStartOnRelim1\tType",
      "contents": "MfgStartOnRelim1"
    },
    {
      "trigger": "MfgStartPosition\tType",
      "contents": "MfgStartPosition"
    },
    {
      "trigger": "MfgStateTool\tType",
      "contents": "MfgStateTool"
    },
    {
      "trigger": "MfgStayOnBottomMode\tType",
      "contents": "MfgStayOnBottomMode"
    },
    {
      "trigger": "MfgStopHardness\tType",
      "contents": "MfgStopHardness"
    },
    {
      "trigger": "MfgStylusTool\tType",
      "contents": "MfgStylusTool"
    },
    {
      "trigger": "MfgSubAssembly\tType",
      "contents": "MfgSubAssembly"
    },
    {
      "trigger": "MfgSweepHelixOperation\tType",
      "contents": "MfgSweepHelixOperation"
    },
    {
      "trigger": "MfgTSlot\tType",
      "contents": "MfgTSlot"
    },
    {
      "trigger": "MfgTSlotterTool\tType",
      "contents": "MfgTSlotterTool"
    },
    {
      "trigger": "MfgTableRotationAngleMode\tType",
      "contents": "MfgTableRotationAngleMode"
    },
    {
      "trigger": "MfgTapTool\tType",
      "contents": "MfgTapTool"
    },
    {
      "trigger": "MfgThreadExternalTool\tType",
      "contents": "MfgThreadExternalTool"
    },
    {
      "trigger": "MfgThreadInsert\tType",
      "contents": "MfgThreadInsert"
    },
    {
      "trigger": "MfgThreadInternalTool\tType",
      "contents": "MfgThreadInternalTool"
    },
    {
      "trigger": "MfgThreadMill\tType",
      "contents": "MfgThreadMill"
    },
    {
      "trigger": "MfgThreadMillTool\tType",
      "contents": "MfgThreadMillTool"
    },
    {
      "trigger": "MfgThreadMillingMode\tType",
      "contents": "MfgThreadMillingMode"
    },
    {
      "trigger": "MfgThreadMillingStrategy\tType",
      "contents": "MfgThreadMillingStrategy"
    },
    {
      "trigger": "MfgThreadType\tType",
      "contents": "MfgThreadType"
    },
    {
      "trigger": "MfgThruElem\tType",
      "contents": "MfgThruElem"
    },
    {
      "trigger": "MfgThruGuideSubMode\tType",
      "contents": "MfgThruGuideSubMode"
    },
    {
      "trigger": "MfgToolAttach\tType",
      "contents": "MfgToolAttach"
    },
    {
      "trigger": "MfgToolAxisMode\tType",
      "contents": "MfgToolAxisMode"
    },
    {
      "trigger": "MfgToolAxisModefor4XPocket\tType",
      "contents": "MfgToolAxisModefor4XPocket"
    },
    {
      "trigger": "MfgToolAxisStrategy\tType",
      "contents": "MfgToolAxisStrategy"
    },
    {
      "trigger": "MfgToolAxis_Mode\tType",
      "contents": "MfgToolAxis_Mode"
    },
    {
      "trigger": "MfgToolDetach\tType",
      "contents": "MfgToolDetach"
    },
    {
      "trigger": "MfgToolHolder\tType",
      "contents": "MfgToolHolder"
    },
    {
      "trigger": "MfgToolHolderPrismatic\tType",
      "contents": "MfgToolHolderPrismatic"
    },
    {
      "trigger": "MfgToolPathClosureMode\tType",
      "contents": "MfgToolPathClosureMode"
    },
    {
      "trigger": "MfgToolSideOnGuideCurve\tType",
      "contents": "MfgToolSideOnGuideCurve"
    },
    {
      "trigger": "MfgTraPathMotion\tType",
      "contents": "MfgTraPathMotion"
    },
    {
      "trigger": "MfgTraPathPriority\tType",
      "contents": "MfgTraPathPriority"
    },
    {
      "trigger": "MfgTracutEnd\tType",
      "contents": "MfgTracutEnd"
    },
    {
      "trigger": "MfgTracutOperation\tType",
      "contents": "MfgTracutOperation"
    },
    {
      "trigger": "MfgTransformationType\tType",
      "contents": "MfgTransformationType"
    },
    {
      "trigger": "MfgTransitionFeedrateType\tType",
      "contents": "MfgTransitionFeedrateType"
    },
    {
      "trigger": "MfgTranslationType\tType",
      "contents": "MfgTranslationType"
    },
    {
      "trigger": "MfgTriangularInsert\tType",
      "contents": "MfgTriangularInsert"
    },
    {
      "trigger": "MfgTrigonInsert\tType",
      "contents": "MfgTrigonInsert"
    },
    {
      "trigger": "MfgTrochoidStrategy\tType",
      "contents": "MfgTrochoidStrategy"
    },
    {
      "trigger": "MfgTwoSidesChamferingTool\tType",
      "contents": "MfgTwoSidesChamferingTool"
    },
    {
      "trigger": "MfgTypeOfSynchro\tType",
      "contents": "MfgTypeOfSynchro"
    },
    {
      "trigger": "MfgUseGuideCurve\tType",
      "contents": "MfgUseGuideCurve"
    },
    {
      "trigger": "MfgUserDefinedMachine\tType",
      "contents": "MfgUserDefinedMachine"
    },
    {
      "trigger": "MfgUserDefinedTool\tType",
      "contents": "MfgUserDefinedTool"
    },
    {
      "trigger": "MfgV4ApproachType\tType",
      "contents": "MfgV4ApproachType"
    },
    {
      "trigger": "MfgV4Boolean\tType",
      "contents": "MfgV4Boolean"
    },
    {
      "trigger": "MfgV4CollCheck\tType",
      "contents": "MfgV4CollCheck"
    },
    {
      "trigger": "MfgV4CollisionCheck\tType",
      "contents": "MfgV4CollisionCheck"
    },
    {
      "trigger": "MfgV4ComputedDistance\tType",
      "contents": "MfgV4ComputedDistance"
    },
    {
      "trigger": "MfgV4ContMillingType\tType",
      "contents": "MfgV4ContMillingType"
    },
    {
      "trigger": "MfgV4ContourType\tType",
      "contents": "MfgV4ContourType"
    },
    {
      "trigger": "MfgV4DistBetweenPathType\tType",
      "contents": "MfgV4DistBetweenPathType"
    },
    {
      "trigger": "MfgV4EdgeMode\tType",
      "contents": "MfgV4EdgeMode"
    },
    {
      "trigger": "MfgV4FinishingPassDir\tType",
      "contents": "MfgV4FinishingPassDir"
    },
    {
      "trigger": "MfgV4FirstPlungeDir\tType",
      "contents": "MfgV4FirstPlungeDir"
    },
    {
      "trigger": "MfgV4GeoRelimit\tType",
      "contents": "MfgV4GeoRelimit"
    },
    {
      "trigger": "MfgV4GotoFrom\tType",
      "contents": "MfgV4GotoFrom"
    },
    {
      "trigger": "MfgV4LatheContouringMode\tType",
      "contents": "MfgV4LatheContouringMode"
    },
    {
      "trigger": "MfgV4LatheCycleType\tType",
      "contents": "MfgV4LatheCycleType"
    },
    {
      "trigger": "MfgV4LatheFirstPlungePos\tType",
      "contents": "MfgV4LatheFirstPlungePos"
    },
    {
      "trigger": "MfgV4LatheMachDirection\tType",
      "contents": "MfgV4LatheMachDirection"
    },
    {
      "trigger": "MfgV4LatheMachiningDir\tType",
      "contents": "MfgV4LatheMachiningDir"
    },
    {
      "trigger": "MfgV4LatheMachiningRecess\tType",
      "contents": "MfgV4LatheMachiningRecess"
    },
    {
      "trigger": "MfgV4LatheMdLocation\tType",
      "contents": "MfgV4LatheMdLocation"
    },
    {
      "trigger": "MfgV4LatheMdOrientation\tType",
      "contents": "MfgV4LatheMdOrientation"
    },
    {
      "trigger": "MfgV4MachiningDirection\tType",
      "contents": "MfgV4MachiningDirection"
    },
    {
      "trigger": "MfgV4MacroType\tType",
      "contents": "MfgV4MacroType"
    },
    {
      "trigger": "MfgV4MacroTypeInSlowMode\tType",
      "contents": "MfgV4MacroTypeInSlowMode"
    },
    {
      "trigger": "MfgV4PartSurfThickType\tType",
      "contents": "MfgV4PartSurfThickType"
    },
    {
      "trigger": "MfgV4PlungeType\tType",
      "contents": "MfgV4PlungeType"
    },
    {
      "trigger": "MfgV4PocketBoundaryType\tType",
      "contents": "MfgV4PocketBoundaryType"
    },
    {
      "trigger": "MfgV4PosMode\tType",
      "contents": "MfgV4PosMode"
    },
    {
      "trigger": "MfgV4RetractType\tType",
      "contents": "MfgV4RetractType"
    },
    {
      "trigger": "MfgV4Rework\tType",
      "contents": "MfgV4Rework"
    },
    {
      "trigger": "MfgV4SkipPaths\tType",
      "contents": "MfgV4SkipPaths"
    },
    {
      "trigger": "MfgV4SurfMachMode\tType",
      "contents": "MfgV4SurfMachMode"
    },
    {
      "trigger": "MfgWaterJetCutTool\tType",
      "contents": "MfgWaterJetCutTool"
    },
    {
      "trigger": "MfgWireEDMFeature\tType",
      "contents": "MfgWireEDMFeature"
    },
    {
      "trigger": "MfgWireEDMMachinePX2\tType",
      "contents": "MfgWireEDMMachinePX2"
    },
    {
      "trigger": "MfgWireEDMPocketing\tType",
      "contents": "MfgWireEDMPocketing"
    },
    {
      "trigger": "MfgWireEDMTool\tType",
      "contents": "MfgWireEDMTool"
    },
    {
      "trigger": "MfgWireEDMToolPX2\tType",
      "contents": "MfgWireEDMToolPX2"
    },
    {
      "trigger": "MfgWkAttach\tType",
      "contents": "MfgWkAttach"
    },
    {
      "trigger": "MfgWkDetach\tType",
      "contents": "MfgWkDetach"
    },
    {
      "trigger": "MfgWorkType\tType",
      "contents": "MfgWorkType"
    },
    {
      "trigger": "MfgZigZagMode\tType",
      "contents": "MfgZigZagMode"
    },
    {
      "trigger": "Mfg_LatheGlobalFeedrateMagnitude\tType",
      "contents": "Mfg_LatheGlobalFeedrateMagnitude"
    },
    {
      "trigger": "Mfg_LatheGlobalSpindleMagnitude\tType",
      "contents": "Mfg_LatheGlobalSpindleMagnitude"
    },
    {
      "trigger": "MillingMachiningOperation\tType",
      "contents": "MillingMachiningOperation"
    },
    {
      "trigger": "Mirror\tType",
      "contents": "Mirror"
    },
    {
      "trigger": "ModelicaAllTypes\tType",
      "contents": "ModelicaAllTypes"
    },
    {
      "trigger": "ModelicaBlock\tType",
      "contents": "ModelicaBlock"
    },
    {
      "trigger": "ModelicaClass\tType",
      "contents": "ModelicaClass"
    },
    {
      "trigger": "ModelicaComponent\tType",
      "contents": "ModelicaComponent"
    },
    {
      "trigger": "ModelicaConnector\tType",
      "contents": "ModelicaConnector"
    },
    {
      "trigger": "ModelicaExpConnector\tType",
      "contents": "ModelicaExpConnector"
    },
    {
      "trigger": "ModelicaFunction\tType",
      "contents": "ModelicaFunction"
    },
    {
      "trigger": "ModelicaModel\tType",
      "contents": "ModelicaModel"
    },
    {
      "trigger": "ModelicaPackage\tType",
      "contents": "ModelicaPackage"
    },
    {
      "trigger": "ModelicaRecord\tType",
      "contents": "ModelicaRecord"
    },
    {
      "trigger": "ModelicaType\tType",
      "contents": "ModelicaType"
    },
    {
      "trigger": "Module\tType",
      "contents": "Module"
    },
    {
      "trigger": "MountingEquipmentOccurrence\tType",
      "contents": "MountingEquipmentOccurrence"
    },
    {
      "trigger": "MultiAxisFeature\tType",
      "contents": "MultiAxisFeature"
    },
    {
      "trigger": "MultiPad\tType",
      "contents": "MultiPad"
    },
    {
      "trigger": "MultiPocket\tType",
      "contents": "MultiPocket"
    },
    {
      "trigger": "NCMachineInstance\tType",
      "contents": "NCMachineInstance"
    },
    {
      "trigger": "NCMachineRef\tType",
      "contents": "NCMachineRef"
    },
    {
      "trigger": "NLSMessage\tType",
      "contents": "NLSMessage"
    },
    {
      "trigger": "NeutralFiber\tType",
      "contents": "NeutralFiber"
    },
    {
      "trigger": "ObjectPath\tType",
      "contents": "ObjectPath"
    },
    {
      "trigger": "OffsetGeometrySet\tType",
      "contents": "OffsetGeometrySet"
    },
    {
      "trigger": "Ontology\tType",
      "contents": "Ontology"
    },
    {
      "trigger": "OntologyElement\tType",
      "contents": "OntologyElement"
    },
    {
      "trigger": "OpenBodyFeature\tType",
      "contents": "OpenBodyFeature"
    },
    {
      "trigger": "OperationType\tType",
      "contents": "OperationType"
    },
    {
      "trigger": "OptApproximationAlgorithm\tType",
      "contents": "OptApproximationAlgorithm"
    },
    {
      "trigger": "OptApproximationGradientAlgorithm\tType",
      "contents": "OptApproximationGradientAlgorithm"
    },
    {
      "trigger": "OptConstraint\tType",
      "contents": "OptConstraint"
    },
    {
      "trigger": "OptConstraintSatisfaction\tType",
      "contents": "OptConstraintSatisfaction"
    },
    {
      "trigger": "OptCstGradientAlgorithm\tType",
      "contents": "OptCstGradientAlgorithm"
    },
    {
      "trigger": "OptFeature\tType",
      "contents": "OptFeature"
    },
    {
      "trigger": "OptFreeParameter\tType",
      "contents": "OptFreeParameter"
    },
    {
      "trigger": "OptGenericAlgorithm\tType",
      "contents": "OptGenericAlgorithm"
    },
    {
      "trigger": "OptGenericDoeAlgorithm\tType",
      "contents": "OptGenericDoeAlgorithm"
    },
    {
      "trigger": "OptGenericOptimAlgorithm\tType",
      "contents": "OptGenericOptimAlgorithm"
    },
    {
      "trigger": "OptGoal\tType",
      "contents": "OptGoal"
    },
    {
      "trigger": "OptGradientAlgorithm\tType",
      "contents": "OptGradientAlgorithm"
    },
    {
      "trigger": "OptOptimization\tType",
      "contents": "OptOptimization"
    },
    {
      "trigger": "OptOptimizationsSet\tType",
      "contents": "OptOptimizationsSet"
    },
    {
      "trigger": "OptProblem\tType",
      "contents": "OptProblem"
    },
    {
      "trigger": "OptSimAnnealingAlgorithm\tType",
      "contents": "OptSimAnnealingAlgorithm"
    },
    {
      "trigger": "OptimizationLog\tType",
      "contents": "OptimizationLog"
    },
    {
      "trigger": "OrganizationalInstance\tType",
      "contents": "OrganizationalInstance"
    },
    {
      "trigger": "OrganizationalRef\tType",
      "contents": "OrganizationalRef"
    },
    {
      "trigger": "OutputManager\tType",
      "contents": "OutputManager"
    },
    {
      "trigger": "PIM_ClashGeometry\tType",
      "contents": "PIM_ClashGeometry"
    },
    {
      "trigger": "PIM_ClashQuantifier\tType",
      "contents": "PIM_ClashQuantifier"
    },
    {
      "trigger": "PIM_ClearanceGeometry\tType",
      "contents": "PIM_ClearanceGeometry"
    },
    {
      "trigger": "PIM_ClearanceQuantifier\tType",
      "contents": "PIM_ClearanceQuantifier"
    },
    {
      "trigger": "PIM_Comparison\tType",
      "contents": "PIM_Comparison"
    },
    {
      "trigger": "PIM_ComputeQuantifier\tType",
      "contents": "PIM_ComputeQuantifier"
    },
    {
      "trigger": "PIM_ContactGeometry\tType",
      "contents": "PIM_ContactGeometry"
    },
    {
      "trigger": "PIM_FastenerSpec\tType",
      "contents": "PIM_FastenerSpec"
    },
    {
      "trigger": "PIM_GroupComputationType\tType",
      "contents": "PIM_GroupComputationType"
    },
    {
      "trigger": "PIM_IntermediateRepresentation\tType",
      "contents": "PIM_IntermediateRepresentation"
    },
    {
      "trigger": "PIM_SpecEngCnx\tType",
      "contents": "PIM_SpecEngCnx"
    },
    {
      "trigger": "PIM_StandardSpec\tType",
      "contents": "PIM_StandardSpec"
    },
    {
      "trigger": "PIM_TypeGeometry\tType",
      "contents": "PIM_TypeGeometry"
    },
    {
      "trigger": "PIM_TypeOfCheckWithRule\tType",
      "contents": "PIM_TypeOfCheckWithRule"
    },
    {
      "trigger": "PIM_TypeOfResult\tType",
      "contents": "PIM_TypeOfResult"
    },
    {
      "trigger": "PLMEleRepConductorRuleSet\tType",
      "contents": "PLMEleRepConductorRuleSet"
    },
    {
      "trigger": "PLMEntityID\tType",
      "contents": "PLMEntityID"
    },
    {
      "trigger": "PLMIDSet\tType",
      "contents": "PLMIDSet"
    },
    {
      "trigger": "PLMInterferenceGroup\tType",
      "contents": "PLMInterferenceGroup"
    },
    {
      "trigger": "PLMOccurrenceQueryResult\tType",
      "contents": "PLMOccurrenceQueryResult"
    },
    {
      "trigger": "PLMOperation\tType",
      "contents": "PLMOperation"
    },
    {
      "trigger": "PLMOperationInstance\tType",
      "contents": "PLMOperationInstance"
    },
    {
      "trigger": "PLMQuery\tType",
      "contents": "PLMQuery"
    },
    {
      "trigger": "PLMQueryResult\tType",
      "contents": "PLMQueryResult"
    },
    {
      "trigger": "PLMQueryResultExpandMode\tType",
      "contents": "PLMQueryResultExpandMode"
    },
    {
      "trigger": "PLMQueryResultLoadMode\tType",
      "contents": "PLMQueryResultLoadMode"
    },
    {
      "trigger": "PLMResource\tType",
      "contents": "PLMResource"
    },
    {
      "trigger": "PLMResourceInstance\tType",
      "contents": "PLMResourceInstance"
    },
    {
      "trigger": "PLMRouteSet\tType",
      "contents": "PLMRouteSet"
    },
    {
      "trigger": "PLMSimClashSpecsType\tType",
      "contents": "PLMSimClashSpecsType"
    },
    {
      "trigger": "PLMSimRscClrComponentEnum\tType",
      "contents": "PLMSimRscClrComponentEnum"
    },
    {
      "trigger": "PLMSimRscClrContextEnum\tType",
      "contents": "PLMSimRscClrContextEnum"
    },
    {
      "trigger": "PLMSystem\tType",
      "contents": "PLMSystem"
    },
    {
      "trigger": "PLMSystemInstance\tType",
      "contents": "PLMSystemInstance"
    },
    {
      "trigger": "PPInstruction\tType",
      "contents": "PPInstruction"
    },
    {
      "trigger": "PPRPrototype\tType",
      "contents": "PPRPrototype"
    },
    {
      "trigger": "Pad\tType",
      "contents": "Pad"
    },
    {
      "trigger": "ParallelAlignmentRelationshipTypeEnum\tType",
      "contents": "ParallelAlignmentRelationshipTypeEnum"
    },
    {
      "trigger": "Parameter\tType",
      "contents": "Parameter"
    },
    {
      "trigger": "PartFeature\tType",
      "contents": "PartFeature"
    },
    {
      "trigger": "PartSequencing\tType",
      "contents": "PartSequencing"
    },
    {
      "trigger": "PartThickness\tType",
      "contents": "PartThickness"
    },
    {
      "trigger": "Pathway\tType",
      "contents": "Pathway"
    },
    {
      "trigger": "PathwaySegment\tType",
      "contents": "PathwaySegment"
    },
    {
      "trigger": "Pattern\tType",
      "contents": "Pattern"
    },
    {
      "trigger": "PipLineOcc\tType",
      "contents": "PipLineOcc"
    },
    {
      "trigger": "PipLogicalBranchOcc\tType",
      "contents": "PipLogicalBranchOcc"
    },
    {
      "trigger": "PipLogicalInstrumentOcc\tType",
      "contents": "PipLogicalInstrumentOcc"
    },
    {
      "trigger": "PipLogicalMiscOcc\tType",
      "contents": "PipLogicalMiscOcc"
    },
    {
      "trigger": "PipLogicalOccurrence\tType",
      "contents": "PipLogicalOccurrence"
    },
    {
      "trigger": "PipLogicalPartOcc\tType",
      "contents": "PipLogicalPartOcc"
    },
    {
      "trigger": "PipLogicalPipeOcc\tType",
      "contents": "PipLogicalPipeOcc"
    },
    {
      "trigger": "PipLogicalReducerOcc\tType",
      "contents": "PipLogicalReducerOcc"
    },
    {
      "trigger": "PipLogicalValveOcc\tType",
      "contents": "PipLogicalValveOcc"
    },
    {
      "trigger": "PipingNodeType\tType",
      "contents": "PipingNodeType"
    },
    {
      "trigger": "PipingPort_Types\tType",
      "contents": "PipingPort_Types"
    },
    {
      "trigger": "PipingSpool_Mode\tType",
      "contents": "PipingSpool_Mode"
    },
    {
      "trigger": "Piping_Insulation_Occurrence\tType",
      "contents": "Piping_Insulation_Occurrence"
    },
    {
      "trigger": "Piping_Part_Occurrence\tType",
      "contents": "Piping_Part_Occurrence"
    },
    {
      "trigger": "Piping_Pipe_Occurrence\tType",
      "contents": "Piping_Pipe_Occurrence"
    },
    {
      "trigger": "Piping_Spool_Occurrence\tType",
      "contents": "Piping_Spool_Occurrence"
    },
    {
      "trigger": "Pit\tType",
      "contents": "Pit"
    },
    {
      "trigger": "PitParameters\tType",
      "contents": "PitParameters"
    },
    {
      "trigger": "Plane\tType",
      "contents": "Plane"
    },
    {
      "trigger": "Ply\tType",
      "contents": "Ply"
    },
    {
      "trigger": "Pocket\tType",
      "contents": "Pocket"
    },
    {
      "trigger": "Pocketing\tType",
      "contents": "Pocketing"
    },
    {
      "trigger": "Point\tType",
      "contents": "Point"
    },
    {
      "trigger": "PointOperationPosition\tType",
      "contents": "PointOperationPosition"
    },
    {
      "trigger": "PointOperationType\tType",
      "contents": "PointOperationType"
    },
    {
      "trigger": "PointToPoint\tType",
      "contents": "PointToPoint"
    },
    {
      "trigger": "PointTrajectoryType\tType",
      "contents": "PointTrajectoryType"
    },
    {
      "trigger": "Pointer\tType",
      "contents": "Pointer"
    },
    {
      "trigger": "Positioned3DObject\tType",
      "contents": "Positioned3DObject"
    },
    {
      "trigger": "PowerCopy\tType",
      "contents": "PowerCopy"
    },
    {
      "trigger": "PredefinedFlange\tType",
      "contents": "PredefinedFlange"
    },
    {
      "trigger": "PressureMovePushDepth\tType",
      "contents": "PressureMovePushDepth"
    },
    {
      "trigger": "PressureMoveSpeedFactor\tType",
      "contents": "PressureMoveSpeedFactor"
    },
    {
      "trigger": "PrincipalAxis\tType",
      "contents": "PrincipalAxis"
    },
    {
      "trigger": "PrintVisuRepresentationMode\tType",
      "contents": "PrintVisuRepresentationMode"
    },
    {
      "trigger": "PrismaticFeature\tType",
      "contents": "PrismaticFeature"
    },
    {
      "trigger": "ProdSystemOccurrence\tType",
      "contents": "ProdSystemOccurrence"
    },
    {
      "trigger": "Product\tType",
      "contents": "Product"
    },
    {
      "trigger": "ProductOccurrence\tType",
      "contents": "ProductOccurrence"
    },
    {
      "trigger": "ProductTableType\tType",
      "contents": "ProductTableType"
    },
    {
      "trigger": "ProfileContouring\tType",
      "contents": "ProfileContouring"
    },
    {
      "trigger": "ProfileCycles\tType",
      "contents": "ProfileCycles"
    },
    {
      "trigger": "ProfileMoves\tType",
      "contents": "ProfileMoves"
    },
    {
      "trigger": "ProfileType\tType",
      "contents": "ProfileType"
    },
    {
      "trigger": "ProfilesApproachDirection\tType",
      "contents": "ProfilesApproachDirection"
    },
    {
      "trigger": "ProfilesPrecycle\tType",
      "contents": "ProfilesPrecycle"
    },
    {
      "trigger": "Projected2DGeometrySet\tType",
      "contents": "Projected2DGeometrySet"
    },
    {
      "trigger": "Projected3DGeometrySet\tType",
      "contents": "Projected3DGeometrySet"
    },
    {
      "trigger": "PunchInsertTool\tType",
      "contents": "PunchInsertTool"
    },
    {
      "trigger": "PythonScript\tType",
      "contents": "PythonScript"
    },
    {
      "trigger": "R6IntersectedGeometrySet\tType",
      "contents": "R6IntersectedGeometrySet"
    },
    {
      "trigger": "R6ProjectedGeometrySet\tType",
      "contents": "R6ProjectedGeometrySet"
    },
    {
      "trigger": "R6SilhouetteGeometrySet\tType",
      "contents": "R6SilhouetteGeometrySet"
    },
    {
      "trigger": "R7Imported3DGeometry\tType",
      "contents": "R7Imported3DGeometry"
    },
    {
      "trigger": "R7IntersectedGeometrySet\tType",
      "contents": "R7IntersectedGeometrySet"
    },
    {
      "trigger": "R7ProjectedGeometrySet\tType",
      "contents": "R7ProjectedGeometrySet"
    },
    {
      "trigger": "RFG3DWSupport\tType",
      "contents": "RFG3DWSupport"
    },
    {
      "trigger": "RFGGridFace\tType",
      "contents": "RFGGridFace"
    },
    {
      "trigger": "RFGGridSet\tType",
      "contents": "RFGGridSet"
    },
    {
      "trigger": "RFGGridSubset\tType",
      "contents": "RFGGridSubset"
    },
    {
      "trigger": "RFGProjectData\tType",
      "contents": "RFGProjectData"
    },
    {
      "trigger": "RFGWSupport\tType",
      "contents": "RFGWSupport"
    },
    {
      "trigger": "RFLPLMFunctional2DReference\tType",
      "contents": "RFLPLMFunctional2DReference"
    },
    {
      "trigger": "RFLVPMLogical2DReference\tType",
      "contents": "RFLVPMLogical2DReference"
    },
    {
      "trigger": "RRSConnectionMgr\tType",
      "contents": "RRSConnectionMgr"
    },
    {
      "trigger": "RRSConnectionParameters\tType",
      "contents": "RRSConnectionParameters"
    },
    {
      "trigger": "RRSParameterScope\tType",
      "contents": "RRSParameterScope"
    },
    {
      "trigger": "RacewayNodeType\tType",
      "contents": "RacewayNodeType"
    },
    {
      "trigger": "RacewayOrientation\tType",
      "contents": "RacewayOrientation"
    },
    {
      "trigger": "RacewayPort_Types\tType",
      "contents": "RacewayPort_Types"
    },
    {
      "trigger": "RacewaySpool_Mode\tType",
      "contents": "RacewaySpool_Mode"
    },
    {
      "trigger": "Raceway_Part_Occurrence\tType",
      "contents": "Raceway_Part_Occurrence"
    },
    {
      "trigger": "Raceway_Spool_Occurrence\tType",
      "contents": "Raceway_Spool_Occurrence"
    },
    {
      "trigger": "Raceway_Tray_Occurrence\tType",
      "contents": "Raceway_Tray_Occurrence"
    },
    {
      "trigger": "RailTrackTypeEnum\tType",
      "contents": "RailTrackTypeEnum"
    },
    {
      "trigger": "RailwaySurfaceMainCurvesTypeEnum\tType",
      "contents": "RailwaySurfaceMainCurvesTypeEnum"
    },
    {
      "trigger": "RasterModeRepresentationMode\tType",
      "contents": "RasterModeRepresentationMode"
    },
    {
      "trigger": "Reaming\tType",
      "contents": "Reaming"
    },
    {
      "trigger": "RectPattern\tType",
      "contents": "RectPattern"
    },
    {
      "trigger": "ReferenceAlignmentRelationshipEnum\tType",
      "contents": "ReferenceAlignmentRelationshipEnum"
    },
    {
      "trigger": "RelationArgument\tType",
      "contents": "RelationArgument"
    },
    {
      "trigger": "Remove\tType",
      "contents": "Remove"
    },
    {
      "trigger": "RemoveFace\tType",
      "contents": "RemoveFace"
    },
    {
      "trigger": "RepImpact\tType",
      "contents": "RepImpact"
    },
    {
      "trigger": "ReplaceFace\tType",
      "contents": "ReplaceFace"
    },
    {
      "trigger": "RequirementOccurrence\tType",
      "contents": "RequirementOccurrence"
    },
    {
      "trigger": "ResourceOccurrence\tType",
      "contents": "ResourceOccurrence"
    },
    {
      "trigger": "ResourcePositionApplicability\tType",
      "contents": "ResourcePositionApplicability"
    },
    {
      "trigger": "ResourcePositionReferential\tType",
      "contents": "ResourcePositionReferential"
    },
    {
      "trigger": "ResourceTable\tType",
      "contents": "ResourceTable"
    },
    {
      "trigger": "ResourceTableItem\tType",
      "contents": "ResourceTableItem"
    },
    {
      "trigger": "ResponsibilityLifeCycleStatus\tType",
      "contents": "ResponsibilityLifeCycleStatus"
    },
    {
      "trigger": "ResponsibilitySRStatus\tType",
      "contents": "ResponsibilitySRStatus"
    },
    {
      "trigger": "ReverseThreading\tType",
      "contents": "ReverseThreading"
    },
    {
      "trigger": "Rib\tType",
      "contents": "Rib"
    },
    {
      "trigger": "Riveting\tType",
      "contents": "Riveting"
    },
    {
      "trigger": "RoadSurfaceMainCurvesTypeEnum\tType",
      "contents": "RoadSurfaceMainCurvesTypeEnum"
    },
    {
      "trigger": "RobApplicationType\tType",
      "contents": "RobApplicationType"
    },
    {
      "trigger": "RobArcTaskParam\tType",
      "contents": "RobArcTaskParam"
    },
    {
      "trigger": "RobArcTrajectory\tType",
      "contents": "RobArcTrajectory"
    },
    {
      "trigger": "RobAxis\tType",
      "contents": "RobAxis"
    },
    {
      "trigger": "RobDrillRivetAction\tType",
      "contents": "RobDrillRivetAction"
    },
    {
      "trigger": "RobDrillRivetProfile\tType",
      "contents": "RobDrillRivetProfile"
    },
    {
      "trigger": "RobDrillRivetSequence\tType",
      "contents": "RobDrillRivetSequence"
    },
    {
      "trigger": "RobDrillRivetTaskParam\tType",
      "contents": "RobDrillRivetTaskParam"
    },
    {
      "trigger": "RobInterferencePair\tType",
      "contents": "RobInterferencePair"
    },
    {
      "trigger": "RobInterferenceZone\tType",
      "contents": "RobInterferenceZone"
    },
    {
      "trigger": "RobInterferenceZoneMgr\tType",
      "contents": "RobInterferenceZoneMgr"
    },
    {
      "trigger": "RobSpotTaskParam\tType",
      "contents": "RobSpotTaskParam"
    },
    {
      "trigger": "RobTaskParam\tType",
      "contents": "RobTaskParam"
    },
    {
      "trigger": "RobotInstance\tType",
      "contents": "RobotInstance"
    },
    {
      "trigger": "RobotRef\tType",
      "contents": "RobotRef"
    },
    {
      "trigger": "RouteRuleSet\tType",
      "contents": "RouteRuleSet"
    },
    {
      "trigger": "RouteStatus\tType",
      "contents": "RouteStatus"
    },
    {
      "trigger": "RouteValidationStatus\tType",
      "contents": "RouteValidationStatus"
    },
    {
      "trigger": "RscAccelerationModeType\tType",
      "contents": "RscAccelerationModeType"
    },
    {
      "trigger": "RscAccelerationScalingType\tType",
      "contents": "RscAccelerationScalingType"
    },
    {
      "trigger": "RscAccuracyProfile\tType",
      "contents": "RscAccuracyProfile"
    },
    {
      "trigger": "RscAccuracyType\tType",
      "contents": "RscAccuracyType"
    },
    {
      "trigger": "RscApplicativeProfile\tType",
      "contents": "RscApplicativeProfile"
    },
    {
      "trigger": "RscApplicativeProfileGroup\tType",
      "contents": "RscApplicativeProfileGroup"
    },
    {
      "trigger": "RscApplicativeProfileMgr\tType",
      "contents": "RscApplicativeProfileMgr"
    },
    {
      "trigger": "RscAttachmentsMgr\tType",
      "contents": "RscAttachmentsMgr"
    },
    {
      "trigger": "RscAttributeValueType\tType",
      "contents": "RscAttributeValueType"
    },
    {
      "trigger": "RscControlLogicMgr\tType",
      "contents": "RscControlLogicMgr"
    },
    {
      "trigger": "RscController\tType",
      "contents": "RscController"
    },
    {
      "trigger": "RscControllerContextType\tType",
      "contents": "RscControllerContextType"
    },
    {
      "trigger": "RscControllerMgr\tType",
      "contents": "RscControllerMgr"
    },
    {
      "trigger": "RscControllerObject\tType",
      "contents": "RscControllerObject"
    },
    {
      "trigger": "RscControllerProfile\tType",
      "contents": "RscControllerProfile"
    },
    {
      "trigger": "RscControllerProfileMgr\tType",
      "contents": "RscControllerProfileMgr"
    },
    {
      "trigger": "RscControllerSynchronization\tType",
      "contents": "RscControllerSynchronization"
    },
    {
      "trigger": "RscControllerSynchronizationCategory\tType",
      "contents": "RscControllerSynchronizationCategory"
    },
    {
      "trigger": "RscControllerUsageType\tType",
      "contents": "RscControllerUsageType"
    },
    {
      "trigger": "RscCtrlResourceType\tType",
      "contents": "RscCtrlResourceType"
    },
    {
      "trigger": "RscDoorOpenerProfile\tType",
      "contents": "RscDoorOpenerProfile"
    },
    {
      "trigger": "RscEditabilityScopeType\tType",
      "contents": "RscEditabilityScopeType"
    },
    {
      "trigger": "RscEnvironmentType\tType",
      "contents": "RscEnvironmentType"
    },
    {
      "trigger": "RscGenericProfileType\tType",
      "contents": "RscGenericProfileType"
    },
    {
      "trigger": "RscHomePositionMgr\tType",
      "contents": "RscHomePositionMgr"
    },
    {
      "trigger": "RscJointInterpolationModeType\tType",
      "contents": "RscJointInterpolationModeType"
    },
    {
      "trigger": "RscJointType\tType",
      "contents": "RscJointType"
    },
    {
      "trigger": "RscKinWizardMgr\tType",
      "contents": "RscKinWizardMgr"
    },
    {
      "trigger": "RscKinematicsMgr\tType",
      "contents": "RscKinematicsMgr"
    },
    {
      "trigger": "RscLightType\tType",
      "contents": "RscLightType"
    },
    {
      "trigger": "RscLogicAssign\tType",
      "contents": "RscLogicAssign"
    },
    {
      "trigger": "RscLogicBreak\tType",
      "contents": "RscLogicBreak"
    },
    {
      "trigger": "RscLogicCondition\tType",
      "contents": "RscLogicCondition"
    },
    {
      "trigger": "RscLogicControlTimer\tType",
      "contents": "RscLogicControlTimer"
    },
    {
      "trigger": "RscLogicCustom\tType",
      "contents": "RscLogicCustom"
    },
    {
      "trigger": "RscLogicEntity\tType",
      "contents": "RscLogicEntity"
    },
    {
      "trigger": "RscLogicForLoop\tType",
      "contents": "RscLogicForLoop"
    },
    {
      "trigger": "RscLogicGoto\tType",
      "contents": "RscLogicGoto"
    },
    {
      "trigger": "RscLogicGrab\tType",
      "contents": "RscLogicGrab"
    },
    {
      "trigger": "RscLogicInstruction\tType",
      "contents": "RscLogicInstruction"
    },
    {
      "trigger": "RscLogicParallel\tType",
      "contents": "RscLogicParallel"
    },
    {
      "trigger": "RscLogicPulse\tType",
      "contents": "RscLogicPulse"
    },
    {
      "trigger": "RscLogicRelease\tType",
      "contents": "RscLogicRelease"
    },
    {
      "trigger": "RscLogicReturn\tType",
      "contents": "RscLogicReturn"
    },
    {
      "trigger": "RscLogicRun\tType",
      "contents": "RscLogicRun"
    },
    {
      "trigger": "RscLogicRunTask\tType",
      "contents": "RscLogicRunTask"
    },
    {
      "trigger": "RscLogicSequence\tType",
      "contents": "RscLogicSequence"
    },
    {
      "trigger": "RscLogicServiceCall\tType",
      "contents": "RscLogicServiceCall"
    },
    {
      "trigger": "RscLogicSimSensor\tType",
      "contents": "RscLogicSimSensor"
    },
    {
      "trigger": "RscLogicTask\tType",
      "contents": "RscLogicTask"
    },
    {
      "trigger": "RscLogicToolAttach\tType",
      "contents": "RscLogicToolAttach"
    },
    {
      "trigger": "RscLogicToolDetach\tType",
      "contents": "RscLogicToolDetach"
    },
    {
      "trigger": "RscLogicWait\tType",
      "contents": "RscLogicWait"
    },
    {
      "trigger": "RscLogicWhileLoop\tType",
      "contents": "RscLogicWhileLoop"
    },
    {
      "trigger": "RscModelLogicMgr\tType",
      "contents": "RscModelLogicMgr"
    },
    {
      "trigger": "RscMotionBasisType\tType",
      "contents": "RscMotionBasisType"
    },
    {
      "trigger": "RscMotionGroup\tType",
      "contents": "RscMotionGroup"
    },
    {
      "trigger": "RscMotionOrientationModeType\tType",
      "contents": "RscMotionOrientationModeType"
    },
    {
      "trigger": "RscMotionProfile\tType",
      "contents": "RscMotionProfile"
    },
    {
      "trigger": "RscMotionType\tType",
      "contents": "RscMotionType"
    },
    {
      "trigger": "RscMotionUnitType\tType",
      "contents": "RscMotionUnitType"
    },
    {
      "trigger": "RscMountsMgr\tType",
      "contents": "RscMountsMgr"
    },
    {
      "trigger": "RscMountsType\tType",
      "contents": "RscMountsType"
    },
    {
      "trigger": "RscMultiRobotPathPlanner\tType",
      "contents": "RscMultiRobotPathPlanner"
    },
    {
      "trigger": "RscObjFrameProfile\tType",
      "contents": "RscObjFrameProfile"
    },
    {
      "trigger": "RscOptimizationPath\tType",
      "contents": "RscOptimizationPath"
    },
    {
      "trigger": "RscOptimizationPathTarget\tType",
      "contents": "RscOptimizationPathTarget"
    },
    {
      "trigger": "RscPathPlanner\tType",
      "contents": "RscPathPlanner"
    },
    {
      "trigger": "RscPathPlannerSolutionStatus\tType",
      "contents": "RscPathPlannerSolutionStatus"
    },
    {
      "trigger": "RscPerformRemoveRobotAreaOptionsType\tType",
      "contents": "RscPerformRemoveRobotAreaOptionsType"
    },
    {
      "trigger": "RscPortsMgr\tType",
      "contents": "RscPortsMgr"
    },
    {
      "trigger": "RscPositionReferenceType\tType",
      "contents": "RscPositionReferenceType"
    },
    {
      "trigger": "RscProfileScopeType\tType",
      "contents": "RscProfileScopeType"
    },
    {
      "trigger": "RscSpeedAccelType\tType",
      "contents": "RscSpeedAccelType"
    },
    {
      "trigger": "RscSweptVolumeOptionType\tType",
      "contents": "RscSweptVolumeOptionType"
    },
    {
      "trigger": "RscTimeBasedMotionType\tType",
      "contents": "RscTimeBasedMotionType"
    },
    {
      "trigger": "RscToolProfile\tType",
      "contents": "RscToolProfile"
    },
    {
      "trigger": "RscTransform\tType",
      "contents": "RscTransform"
    },
    {
      "trigger": "RscTravelLimitsType\tType",
      "contents": "RscTravelLimitsType"
    },
    {
      "trigger": "RuleContext\tType",
      "contents": "RuleContext"
    },
    {
      "trigger": "SHMDistance\tType",
      "contents": "SHMDistance"
    },
    {
      "trigger": "SHMHoleType\tType",
      "contents": "SHMHoleType"
    },
    {
      "trigger": "SMAPoint\tType",
      "contents": "SMAPoint"
    },
    {
      "trigger": "SMATable\tType",
      "contents": "SMATable"
    },
    {
      "trigger": "SWXBxBeamCast1\tType",
      "contents": "SWXBxBeamCast1"
    },
    {
      "trigger": "SWXBxBeamPatternCast1\tType",
      "contents": "SWXBxBeamPatternCast1"
    },
    {
      "trigger": "SWXBxBeamPatternSteel1\tType",
      "contents": "SWXBxBeamPatternSteel1"
    },
    {
      "trigger": "SWXBxBeamSteel1\tType",
      "contents": "SWXBxBeamSteel1"
    },
    {
      "trigger": "SWXBxBraceCast1\tType",
      "contents": "SWXBxBraceCast1"
    },
    {
      "trigger": "SWXBxBraceSteel1\tType",
      "contents": "SWXBxBraceSteel1"
    },
    {
      "trigger": "SWXBxColumnCast1\tType",
      "contents": "SWXBxColumnCast1"
    },
    {
      "trigger": "SWXBxColumnSteel1\tType",
      "contents": "SWXBxColumnSteel1"
    },
    {
      "trigger": "SWXBxCorbelCast1\tType",
      "contents": "SWXBxCorbelCast1"
    },
    {
      "trigger": "SWXBxCutterNode1\tType",
      "contents": "SWXBxCutterNode1"
    },
    {
      "trigger": "SWXBxDetailBasePlateSteel1\tType",
      "contents": "SWXBxDetailBasePlateSteel1"
    },
    {
      "trigger": "SWXBxDetailClipAngle1\tType",
      "contents": "SWXBxDetailClipAngle1"
    },
    {
      "trigger": "SWXBxDetailHoleFeature1\tType",
      "contents": "SWXBxDetailHoleFeature1"
    },
    {
      "trigger": "SWXBxDetailHolePattern1\tType",
      "contents": "SWXBxDetailHolePattern1"
    },
    {
      "trigger": "SWXBxDetailMemberPlateSteel1\tType",
      "contents": "SWXBxDetailMemberPlateSteel1"
    },
    {
      "trigger": "SWXBxDetailStiffenerPlateSteel1\tType",
      "contents": "SWXBxDetailStiffenerPlateSteel1"
    },
    {
      "trigger": "SWXBxFooterIso1\tType",
      "contents": "SWXBxFooterIso1"
    },
    {
      "trigger": "SWXBxFooterStrip1\tType",
      "contents": "SWXBxFooterStrip1"
    },
    {
      "trigger": "SWXBxFooterUser1\tType",
      "contents": "SWXBxFooterUser1"
    },
    {
      "trigger": "SWXBxGridPlateSteel2\tType",
      "contents": "SWXBxGridPlateSteel2"
    },
    {
      "trigger": "SWXBxGridPlateTwoRailSteel1\tType",
      "contents": "SWXBxGridPlateTwoRailSteel1"
    },
    {
      "trigger": "SWXBxRamp\tType",
      "contents": "SWXBxRamp"
    },
    {
      "trigger": "SamplingType\tType",
      "contents": "SamplingType"
    },
    {
      "trigger": "Scaling\tType",
      "contents": "Scaling"
    },
    {
      "trigger": "ScenarioParameteres\tType",
      "contents": "ScenarioParameteres"
    },
    {
      "trigger": "ScenarioTypeEnum\tType",
      "contents": "ScenarioTypeEnum"
    },
    {
      "trigger": "ScrapCutTool\tType",
      "contents": "ScrapCutTool"
    },
    {
      "trigger": "Screw\tType",
      "contents": "Screw"
    },
    {
      "trigger": "SddChamfer\tType",
      "contents": "SddChamfer"
    },
    {
      "trigger": "SddCollarSurface\tType",
      "contents": "SddCollarSurface"
    },
    {
      "trigger": "SddContourBased\tType",
      "contents": "SddContourBased"
    },
    {
      "trigger": "SddContourBasedX\tType",
      "contents": "SddContourBasedX"
    },
    {
      "trigger": "SddEndcut\tType",
      "contents": "SddEndcut"
    },
    {
      "trigger": "SddFlange\tType",
      "contents": "SddFlange"
    },
    {
      "trigger": "SddFunction\tType",
      "contents": "SddFunction"
    },
    {
      "trigger": "SddMember\tType",
      "contents": "SddMember"
    },
    {
      "trigger": "SddMemberX\tType",
      "contents": "SddMemberX"
    },
    {
      "trigger": "SddOpening\tType",
      "contents": "SddOpening"
    },
    {
      "trigger": "SddOpening3DObjectPanel\tType",
      "contents": "SddOpening3DObjectPanel"
    },
    {
      "trigger": "SddOpeningOutputProfilePanel\tType",
      "contents": "SddOpeningOutputProfilePanel"
    },
    {
      "trigger": "SddOpeningPanel\tType",
      "contents": "SddOpeningPanel"
    },
    {
      "trigger": "SddOpeningStandardPanel\tType",
      "contents": "SddOpeningStandardPanel"
    },
    {
      "trigger": "SddOpeningX\tType",
      "contents": "SddOpeningX"
    },
    {
      "trigger": "SddOperation\tType",
      "contents": "SddOperation"
    },
    {
      "trigger": "SddPanel\tType",
      "contents": "SddPanel"
    },
    {
      "trigger": "SddPanelSpecificationImport\tType",
      "contents": "SddPanelSpecificationImport"
    },
    {
      "trigger": "SddPlate\tType",
      "contents": "SddPlate"
    },
    {
      "trigger": "SddPlateX\tType",
      "contents": "SddPlateX"
    },
    {
      "trigger": "SddProfile\tType",
      "contents": "SddProfile"
    },
    {
      "trigger": "SddScallop\tType",
      "contents": "SddScallop"
    },
    {
      "trigger": "SddScallopPanel\tType",
      "contents": "SddScallopPanel"
    },
    {
      "trigger": "SddSlaveOpeningPlate\tType",
      "contents": "SddSlaveOpeningPlate"
    },
    {
      "trigger": "SddSlotPanel\tType",
      "contents": "SddSlotPanel"
    },
    {
      "trigger": "SddSplitPlate\tType",
      "contents": "SddSplitPlate"
    },
    {
      "trigger": "SddSplitPlateManagerImport\tType",
      "contents": "SddSplitPlateManagerImport"
    },
    {
      "trigger": "SddStiffener\tType",
      "contents": "SddStiffener"
    },
    {
      "trigger": "SddStiffenerOnFreeEdge\tType",
      "contents": "SddStiffenerOnFreeEdge"
    },
    {
      "trigger": "Segment\tType",
      "contents": "Segment"
    },
    {
      "trigger": "SegmentExtremity\tType",
      "contents": "SegmentExtremity"
    },
    {
      "trigger": "SensorInstance\tType",
      "contents": "SensorInstance"
    },
    {
      "trigger": "SensorRef\tType",
      "contents": "SensorRef"
    },
    {
      "trigger": "SetCapableRscGroupIndexStatus\tType",
      "contents": "SetCapableRscGroupIndexStatus"
    },
    {
      "trigger": "SetOfMeshEdges\tType",
      "contents": "SetOfMeshEdges"
    },
    {
      "trigger": "SetOfMeshFaces\tType",
      "contents": "SetOfMeshFaces"
    },
    {
      "trigger": "SetOfMeshVertices\tType",
      "contents": "SetOfMeshVertices"
    },
    {
      "trigger": "SewSurface\tType",
      "contents": "SewSurface"
    },
    {
      "trigger": "Shaft\tType",
      "contents": "Shaft"
    },
    {
      "trigger": "SharedEquipmentPartOccurrence\tType",
      "contents": "SharedEquipmentPartOccurrence"
    },
    {
      "trigger": "SharedSupportPartOccurrence\tType",
      "contents": "SharedSupportPartOccurrence"
    },
    {
      "trigger": "ShePart\tType",
      "contents": "ShePart"
    },
    {
      "trigger": "SheetProjectionMethod\tType",
      "contents": "SheetProjectionMethod"
    },
    {
      "trigger": "Shell\tType",
      "contents": "Shell"
    },
    {
      "trigger": "ShmBend\tType",
      "contents": "ShmBend"
    },
    {
      "trigger": "ShmWall\tType",
      "contents": "ShmWall"
    },
    {
      "trigger": "ShmWallOnEdge\tType",
      "contents": "ShmWallOnEdge"
    },
    {
      "trigger": "SimilarityModeEnum\tType",
      "contents": "SimilarityModeEnum"
    },
    {
      "trigger": "SimpleHole\tType",
      "contents": "SimpleHole"
    },
    {
      "trigger": "Sketch\tType",
      "contents": "Sketch"
    },
    {
      "trigger": "SketchSupport\tType",
      "contents": "SketchSupport"
    },
    {
      "trigger": "SkinFeature\tType",
      "contents": "SkinFeature"
    },
    {
      "trigger": "SldAdvConnection\tType",
      "contents": "SldAdvConnection"
    },
    {
      "trigger": "SldCollar\tType",
      "contents": "SldCollar"
    },
    {
      "trigger": "SldConnection\tType",
      "contents": "SldConnection"
    },
    {
      "trigger": "SldEndcut\tType",
      "contents": "SldEndcut"
    },
    {
      "trigger": "SldFlange\tType",
      "contents": "SldFlange"
    },
    {
      "trigger": "SldFunction\tType",
      "contents": "SldFunction"
    },
    {
      "trigger": "SldMember\tType",
      "contents": "SldMember"
    },
    {
      "trigger": "SldOpening\tType",
      "contents": "SldOpening"
    },
    {
      "trigger": "SldOpeningP\tType",
      "contents": "SldOpeningP"
    },
    {
      "trigger": "SldOpeningPr\tType",
      "contents": "SldOpeningPr"
    },
    {
      "trigger": "SldPanel\tType",
      "contents": "SldPanel"
    },
    {
      "trigger": "SldPlate\tType",
      "contents": "SldPlate"
    },
    {
      "trigger": "SldProfile\tType",
      "contents": "SldProfile"
    },
    {
      "trigger": "SldScallopOnProfile\tType",
      "contents": "SldScallopOnProfile"
    },
    {
      "trigger": "SldScallopP\tType",
      "contents": "SldScallopP"
    },
    {
      "trigger": "SldSketchBasedPanel\tType",
      "contents": "SldSketchBasedPanel"
    },
    {
      "trigger": "SldSketchBasedPlate\tType",
      "contents": "SldSketchBasedPlate"
    },
    {
      "trigger": "SldSlot\tType",
      "contents": "SldSlot"
    },
    {
      "trigger": "SldSlotP\tType",
      "contents": "SldSlotP"
    },
    {
      "trigger": "SldSlotPr\tType",
      "contents": "SldSlotPr"
    },
    {
      "trigger": "SldStiffener\tType",
      "contents": "SldStiffener"
    },
    {
      "trigger": "SldStiffenerOnFreeEdge\tType",
      "contents": "SldStiffenerOnFreeEdge"
    },
    {
      "trigger": "SldUserConnection\tType",
      "contents": "SldUserConnection"
    },
    {
      "trigger": "Slot\tType",
      "contents": "Slot"
    },
    {
      "trigger": "SmdExtrude\tType",
      "contents": "SmdExtrude"
    },
    {
      "trigger": "SmdMultiCornerRelief\tType",
      "contents": "SmdMultiCornerRelief"
    },
    {
      "trigger": "SmdRolledWall\tType",
      "contents": "SmdRolledWall"
    },
    {
      "trigger": "Solid\tType",
      "contents": "Solid"
    },
    {
      "trigger": "SolidCombine\tType",
      "contents": "SolidCombine"
    },
    {
      "trigger": "SolidImpact\tType",
      "contents": "SolidImpact"
    },
    {
      "trigger": "Source\tType",
      "contents": "Source"
    },
    {
      "trigger": "SpdBodyRef\tType",
      "contents": "SpdBodyRef"
    },
    {
      "trigger": "SpdBoss\tType",
      "contents": "SpdBoss"
    },
    {
      "trigger": "SpdCut\tType",
      "contents": "SpdCut"
    },
    {
      "trigger": "SpdCutout\tType",
      "contents": "SpdCutout"
    },
    {
      "trigger": "SpdDivide\tType",
      "contents": "SpdDivide"
    },
    {
      "trigger": "SpdDraftProperties\tType",
      "contents": "SpdDraftProperties"
    },
    {
      "trigger": "SpdEdgeFilletR19\tType",
      "contents": "SpdEdgeFilletR19"
    },
    {
      "trigger": "SpdExtract\tType",
      "contents": "SpdExtract"
    },
    {
      "trigger": "SpdExtractBehavior\tType",
      "contents": "SpdExtractBehavior"
    },
    {
      "trigger": "SpdExtractionProperties\tType",
      "contents": "SpdExtractionProperties"
    },
    {
      "trigger": "SpdExtrude\tType",
      "contents": "SpdExtrude"
    },
    {
      "trigger": "SpdFlange\tType",
      "contents": "SpdFlange"
    },
    {
      "trigger": "SpdFunctionalUDF\tType",
      "contents": "SpdFunctionalUDF"
    },
    {
      "trigger": "SpdGrill\tType",
      "contents": "SpdGrill"
    },
    {
      "trigger": "SpdImport\tType",
      "contents": "SpdImport"
    },
    {
      "trigger": "SpdJoin\tType",
      "contents": "SpdJoin"
    },
    {
      "trigger": "SpdLip\tType",
      "contents": "SpdLip"
    },
    {
      "trigger": "SpdMirror\tType",
      "contents": "SpdMirror"
    },
    {
      "trigger": "SpdOffset\tType",
      "contents": "SpdOffset"
    },
    {
      "trigger": "SpdPPF\tType",
      "contents": "SpdPPF"
    },
    {
      "trigger": "SpdPattern\tType",
      "contents": "SpdPattern"
    },
    {
      "trigger": "SpdPocket\tType",
      "contents": "SpdPocket"
    },
    {
      "trigger": "SpdReinforcement\tType",
      "contents": "SpdReinforcement"
    },
    {
      "trigger": "SpdRest\tType",
      "contents": "SpdRest"
    },
    {
      "trigger": "SpdRevolve\tType",
      "contents": "SpdRevolve"
    },
    {
      "trigger": "SpdRib\tType",
      "contents": "SpdRib"
    },
    {
      "trigger": "SpdShell\tType",
      "contents": "SpdShell"
    },
    {
      "trigger": "SpdSnapLock\tType",
      "contents": "SpdSnapLock"
    },
    {
      "trigger": "SpdThicken\tType",
      "contents": "SpdThicken"
    },
    {
      "trigger": "SpdThicknessMod\tType",
      "contents": "SpdThicknessMod"
    },
    {
      "trigger": "SpdXForm\tType",
      "contents": "SpdXForm"
    },
    {
      "trigger": "SplDelimitedMoldedSurface\tType",
      "contents": "SplDelimitedMoldedSurface"
    },
    {
      "trigger": "Split\tType",
      "contents": "Split"
    },
    {
      "trigger": "SpotAssyFastenerOccurrence\tType",
      "contents": "SpotAssyFastenerOccurrence"
    },
    {
      "trigger": "SpotDistributionType\tType",
      "contents": "SpotDistributionType"
    },
    {
      "trigger": "SpotDrilling\tType",
      "contents": "SpotDrilling"
    },
    {
      "trigger": "SpotMoves\tType",
      "contents": "SpotMoves"
    },
    {
      "trigger": "SpotSingleFastenerOccurrence\tType",
      "contents": "SpotSingleFastenerOccurrence"
    },
    {
      "trigger": "SptPrimaryInterfaceStatus\tType",
      "contents": "SptPrimaryInterfaceStatus"
    },
    {
      "trigger": "SptPrimarySupport\tType",
      "contents": "SptPrimarySupport"
    },
    {
      "trigger": "SptPrimarySupportConnectionType\tType",
      "contents": "SptPrimarySupportConnectionType"
    },
    {
      "trigger": "SptPrimarySupportFilterOption\tType",
      "contents": "SptPrimarySupportFilterOption"
    },
    {
      "trigger": "SptPrimarySupportInst\tType",
      "contents": "SptPrimarySupportInst"
    },
    {
      "trigger": "SptPrimarySupportOccurrence\tType",
      "contents": "SptPrimarySupportOccurrence"
    },
    {
      "trigger": "SptPrimarySupportType\tType",
      "contents": "SptPrimarySupportType"
    },
    {
      "trigger": "SptPrimarySupportValidationStatus\tType",
      "contents": "SptPrimarySupportValidationStatus"
    },
    {
      "trigger": "SptRetainerSupportingInterface\tType",
      "contents": "SptRetainerSupportingInterface"
    },
    {
      "trigger": "SptStandardSupportingInterface\tType",
      "contents": "SptStandardSupportingInterface"
    },
    {
      "trigger": "SptSupportAssembly\tType",
      "contents": "SptSupportAssembly"
    },
    {
      "trigger": "SptSupportAssemblyInst\tType",
      "contents": "SptSupportAssemblyInst"
    },
    {
      "trigger": "SptSupportAssemblyType\tType",
      "contents": "SptSupportAssemblyType"
    },
    {
      "trigger": "SsmSpaceCell\tType",
      "contents": "SsmSpaceCell"
    },
    {
      "trigger": "StampTool\tType",
      "contents": "StampTool"
    },
    {
      "trigger": "StatusSemanticAnnotation\tType",
      "contents": "StatusSemanticAnnotation"
    },
    {
      "trigger": "Stiffener\tType",
      "contents": "Stiffener"
    },
    {
      "trigger": "StiffenerMode\tType",
      "contents": "StiffenerMode"
    },
    {
      "trigger": "StkStickerType\tType",
      "contents": "StkStickerType"
    },
    {
      "trigger": "StorageInstance\tType",
      "contents": "StorageInstance"
    },
    {
      "trigger": "StorageRef\tType",
      "contents": "StorageRef"
    },
    {
      "trigger": "StrSection\tType",
      "contents": "StrSection"
    },
    {
      "trigger": "StrStructureCopySpecification\tType",
      "contents": "StrStructureCopySpecification"
    },
    {
      "trigger": "StructureFeature\tType",
      "contents": "StructureFeature"
    },
    {
      "trigger": "StructuredDoc\tType",
      "contents": "StructuredDoc"
    },
    {
      "trigger": "SubRoutine\tType",
      "contents": "SubRoutine"
    },
    {
      "trigger": "SubRoutineRun\tType",
      "contents": "SubRoutineRun"
    },
    {
      "trigger": "SubstituteLifeCycleStatus\tType",
      "contents": "SubstituteLifeCycleStatus"
    },
    {
      "trigger": "SubstituteSRStatus\tType",
      "contents": "SubstituteSRStatus"
    },
    {
      "trigger": "Surface\tType",
      "contents": "Surface"
    },
    {
      "trigger": "Sys3DAllocationConnection\tType",
      "contents": "Sys3DAllocationConnection"
    },
    {
      "trigger": "Sys3DAnnotation\tType",
      "contents": "Sys3DAnnotation"
    },
    {
      "trigger": "Sys3DComponentVolumeNode\tType",
      "contents": "Sys3DComponentVolumeNode"
    },
    {
      "trigger": "Sys3DCone\tType",
      "contents": "Sys3DCone"
    },
    {
      "trigger": "Sys3DCylinder\tType",
      "contents": "Sys3DCylinder"
    },
    {
      "trigger": "Sys3DDerivationVolumeNode\tType",
      "contents": "Sys3DDerivationVolumeNode"
    },
    {
      "trigger": "Sys3DInterfaceVolumeNode\tType",
      "contents": "Sys3DInterfaceVolumeNode"
    },
    {
      "trigger": "Sys3DJunctionNode\tType",
      "contents": "Sys3DJunctionNode"
    },
    {
      "trigger": "Sys3DNetworkArc\tType",
      "contents": "Sys3DNetworkArc"
    },
    {
      "trigger": "Sys3DNetworkNode\tType",
      "contents": "Sys3DNetworkNode"
    },
    {
      "trigger": "Sys3DNetworkPath\tType",
      "contents": "Sys3DNetworkPath"
    },
    {
      "trigger": "Sys3DPad\tType",
      "contents": "Sys3DPad"
    },
    {
      "trigger": "Sys3DPathwayBranch\tType",
      "contents": "Sys3DPathwayBranch"
    },
    {
      "trigger": "Sys3DPathwayBranchAnnotation\tType",
      "contents": "Sys3DPathwayBranchAnnotation"
    },
    {
      "trigger": "Sys3DPathwayRouteElement\tType",
      "contents": "Sys3DPathwayRouteElement"
    },
    {
      "trigger": "Sys3DPathwaySegment\tType",
      "contents": "Sys3DPathwaySegment"
    },
    {
      "trigger": "Sys3DPathwaySegmentAnnotation\tType",
      "contents": "Sys3DPathwaySegmentAnnotation"
    },
    {
      "trigger": "Sys3DPathwaySegmentArc\tType",
      "contents": "Sys3DPathwaySegmentArc"
    },
    {
      "trigger": "Sys3DPathwaySegmentExtremity\tType",
      "contents": "Sys3DPathwaySegmentExtremity"
    },
    {
      "trigger": "Sys3DPathwaySet\tType",
      "contents": "Sys3DPathwaySet"
    },
    {
      "trigger": "Sys3DPointRouteElement\tType",
      "contents": "Sys3DPointRouteElement"
    },
    {
      "trigger": "Sys3DRouteElement\tType",
      "contents": "Sys3DRouteElement"
    },
    {
      "trigger": "Sys3DRoutingRuleSet\tType",
      "contents": "Sys3DRoutingRuleSet"
    },
    {
      "trigger": "Sys3DShape\tType",
      "contents": "Sys3DShape"
    },
    {
      "trigger": "Sys3DSphere\tType",
      "contents": "Sys3DSphere"
    },
    {
      "trigger": "Sys3DVolumeNode\tType",
      "contents": "Sys3DVolumeNode"
    },
    {
      "trigger": "Sys3DVolumeRouteElement\tType",
      "contents": "Sys3DVolumeRouteElement"
    },
    {
      "trigger": "Sys3D_AbstractVolumeOccurrence\tType",
      "contents": "Sys3D_AbstractVolumeOccurrence"
    },
    {
      "trigger": "Sys3D_ComponentVolumeOccurrence\tType",
      "contents": "Sys3D_ComponentVolumeOccurrence"
    },
    {
      "trigger": "Sys3D_DerivationVolumeOccurrence\tType",
      "contents": "Sys3D_DerivationVolumeOccurrence"
    },
    {
      "trigger": "Sys3D_FromTo\tType",
      "contents": "Sys3D_FromTo"
    },
    {
      "trigger": "Sys3D_IntegrationVolumeOccurrence\tType",
      "contents": "Sys3D_IntegrationVolumeOccurrence"
    },
    {
      "trigger": "Sys3D_InterfaceVolumeOccurrence\tType",
      "contents": "Sys3D_InterfaceVolumeOccurrence"
    },
    {
      "trigger": "Sys3D_PathwayGeometryOccurrence\tType",
      "contents": "Sys3D_PathwayGeometryOccurrence"
    },
    {
      "trigger": "Sys3D_RouteOccurrence\tType",
      "contents": "Sys3D_RouteOccurrence"
    },
    {
      "trigger": "Sys3D_Signal\tType",
      "contents": "Sys3D_Signal"
    },
    {
      "trigger": "SysConnectable\tType",
      "contents": "SysConnectable"
    },
    {
      "trigger": "SysConnection\tType",
      "contents": "SysConnection"
    },
    {
      "trigger": "SysInterface\tType",
      "contents": "SysInterface"
    },
    {
      "trigger": "SysItfInContext\tType",
      "contents": "SysItfInContext"
    },
    {
      "trigger": "SysPort\tType",
      "contents": "SysPort"
    },
    {
      "trigger": "SystemPreference\tType",
      "contents": "SystemPreference"
    },
    {
      "trigger": "SystemSetting\tType",
      "contents": "SystemSetting"
    },
    {
      "trigger": "SystemType\tType",
      "contents": "SystemType"
    },
    {
      "trigger": "TEBLExchangeObject\tType",
      "contents": "TEBLExchangeObject"
    },
    {
      "trigger": "TPSDatumAnnot\tType",
      "contents": "TPSDatumAnnot"
    },
    {
      "trigger": "TPSDimensionAnnot\tType",
      "contents": "TPSDimensionAnnot"
    },
    {
      "trigger": "TPSGeometricalAnnot\tType",
      "contents": "TPSGeometricalAnnot"
    },
    {
      "trigger": "TPSTargetAnnot\tType",
      "contents": "TPSTargetAnnot"
    },
    {
      "trigger": "TPSTransitionSpecification\tType",
      "contents": "TPSTransitionSpecification"
    },
    {
      "trigger": "TSlotting\tType",
      "contents": "TSlotting"
    },
    {
      "trigger": "TableHeadRotation\tType",
      "contents": "TableHeadRotation"
    },
    {
      "trigger": "TapSide\tType",
      "contents": "TapSide"
    },
    {
      "trigger": "TaperedHole\tType",
      "contents": "TaperedHole"
    },
    {
      "trigger": "Tapping\tType",
      "contents": "Tapping"
    },
    {
      "trigger": "TemplateInstance\tType",
      "contents": "TemplateInstance"
    },
    {
      "trigger": "TemplateInstantiationOptionsType\tType",
      "contents": "TemplateInstantiationOptionsType"
    },
    {
      "trigger": "TextFile\tType",
      "contents": "TextFile"
    },
    {
      "trigger": "ThickSurface\tType",
      "contents": "ThickSurface"
    },
    {
      "trigger": "Thickness\tType",
      "contents": "Thickness"
    },
    {
      "trigger": "ThinMode\tType",
      "contents": "ThinMode"
    },
    {
      "trigger": "Thread\tType",
      "contents": "Thread"
    },
    {
      "trigger": "ThreadMilling\tType",
      "contents": "ThreadMilling"
    },
    {
      "trigger": "ThreadSide\tType",
      "contents": "ThreadSide"
    },
    {
      "trigger": "ThreadWithoutTapHead\tType",
      "contents": "ThreadWithoutTapHead"
    },
    {
      "trigger": "TlgGenFeatSymmetricalAxisSystem\tType",
      "contents": "TlgGenFeatSymmetricalAxisSystem"
    },
    {
      "trigger": "TlgGeomChainingEdges\tType",
      "contents": "TlgGeomChainingEdges"
    },
    {
      "trigger": "TlgGeomColorRamp\tType",
      "contents": "TlgGeomColorRamp"
    },
    {
      "trigger": "TlgGeomConnectSurface\tType",
      "contents": "TlgGeomConnectSurface"
    },
    {
      "trigger": "TlgGeomEdgeNetwork_Shared\tType",
      "contents": "TlgGeomEdgeNetwork_Shared"
    },
    {
      "trigger": "TlgGeomFillSurface\tType",
      "contents": "TlgGeomFillSurface"
    },
    {
      "trigger": "TlgGeomFillSurfaceChildren\tType",
      "contents": "TlgGeomFillSurfaceChildren"
    },
    {
      "trigger": "TlgGeomFilletConstant\tType",
      "contents": "TlgGeomFilletConstant"
    },
    {
      "trigger": "TlgGeomFilletJoint\tType",
      "contents": "TlgGeomFilletJoint"
    },
    {
      "trigger": "TlgGeomFilletNoFillet\tType",
      "contents": "TlgGeomFilletNoFillet"
    },
    {
      "trigger": "TlgGeomFilletReductionManager\tType",
      "contents": "TlgGeomFilletReductionManager"
    },
    {
      "trigger": "TlgGeomFilletVariable\tType",
      "contents": "TlgGeomFilletVariable"
    },
    {
      "trigger": "TlgGeomInnerCurve\tType",
      "contents": "TlgGeomInnerCurve"
    },
    {
      "trigger": "TlgGeomLightExtension_Shared\tType",
      "contents": "TlgGeomLightExtension_Shared"
    },
    {
      "trigger": "TlgGeomSelectArea\tType",
      "contents": "TlgGeomSelectArea"
    },
    {
      "trigger": "TlgGeomSurface\tType",
      "contents": "TlgGeomSurface"
    },
    {
      "trigger": "TlgGeomUpToBoundary\tType",
      "contents": "TlgGeomUpToBoundary"
    },
    {
      "trigger": "TlgGeomVariableOffsetCurve\tType",
      "contents": "TlgGeomVariableOffsetCurve"
    },
    {
      "trigger": "ToolChange\tType",
      "contents": "ToolChange"
    },
    {
      "trigger": "ToolChangeLathe\tType",
      "contents": "ToolChangeLathe"
    },
    {
      "trigger": "ToolDeviceInstance\tType",
      "contents": "ToolDeviceInstance"
    },
    {
      "trigger": "ToolDeviceRef\tType",
      "contents": "ToolDeviceRef"
    },
    {
      "trigger": "TransitionHAIntermediateReverseSpiralTypeEnum\tType",
      "contents": "TransitionHAIntermediateReverseSpiralTypeEnum"
    },
    {
      "trigger": "TransitionHAIntermediateSpiralCSCTypeEnum\tType",
      "contents": "TransitionHAIntermediateSpiralCSCTypeEnum"
    },
    {
      "trigger": "TransitionHAIntermediateSpiralTypeEnum\tType",
      "contents": "TransitionHAIntermediateSpiralTypeEnum"
    },
    {
      "trigger": "TransitionHASpiralTypeEnum\tType",
      "contents": "TransitionHASpiralTypeEnum"
    },
    {
      "trigger": "TransitionPath\tType",
      "contents": "TransitionPath"
    },
    {
      "trigger": "TransitionVAIntermediateSpiralCSCTypeEnum\tType",
      "contents": "TransitionVAIntermediateSpiralCSCTypeEnum"
    },
    {
      "trigger": "TransitionVAIntermediateSpiralTypeEnum\tType",
      "contents": "TransitionVAIntermediateSpiralTypeEnum"
    },
    {
      "trigger": "TransitionVASpiralTypeEnum\tType",
      "contents": "TransitionVASpiralTypeEnum"
    },
    {
      "trigger": "TransportInstance\tType",
      "contents": "TransportInstance"
    },
    {
      "trigger": "TransportRef\tType",
      "contents": "TransportRef"
    },
    {
      "trigger": "TraveledWayRotationModeCrownEnum\tType",
      "contents": "TraveledWayRotationModeCrownEnum"
    },
    {
      "trigger": "TraveledWayRotationModeEnum\tType",
      "contents": "TraveledWayRotationModeEnum"
    },
    {
      "trigger": "TraveledWayRotationModePlanarEnum\tType",
      "contents": "TraveledWayRotationModePlanarEnum"
    },
    {
      "trigger": "TraveledWayTypeEnum\tType",
      "contents": "TraveledWayTypeEnum"
    },
    {
      "trigger": "Trim\tType",
      "contents": "Trim"
    },
    {
      "trigger": "TritangentFillet\tType",
      "contents": "TritangentFillet"
    },
    {
      "trigger": "TrochoidMilling\tType",
      "contents": "TrochoidMilling"
    },
    {
      "trigger": "Type\tType",
      "contents": "Type"
    },
    {
      "trigger": "TypeAnnotation\tType",
      "contents": "TypeAnnotation"
    },
    {
      "trigger": "TypeSemanticAnnotation\tType",
      "contents": "TypeSemanticAnnotation"
    },
    {
      "trigger": "UndergroundZone\tType",
      "contents": "UndergroundZone"
    },
    {
      "trigger": "UnfoldTool\tType",
      "contents": "UnfoldTool"
    },
    {
      "trigger": "UserDefinedInstance\tType",
      "contents": "UserDefinedInstance"
    },
    {
      "trigger": "UserDefinedRef\tType",
      "contents": "UserDefinedRef"
    },
    {
      "trigger": "UserFeature\tType",
      "contents": "UserFeature"
    },
    {
      "trigger": "UserPattern\tType",
      "contents": "UserPattern"
    },
    {
      "trigger": "UserTool\tType",
      "contents": "UserTool"
    },
    {
      "trigger": "VBScript\tType",
      "contents": "VBScript"
    },
    {
      "trigger": "VOC3DCut\tType",
      "contents": "VOC3DCut"
    },
    {
      "trigger": "VOCFreeSpace\tType",
      "contents": "VOCFreeSpace"
    },
    {
      "trigger": "VOCOffset\tType",
      "contents": "VOCOffset"
    },
    {
      "trigger": "VOCSilhouette\tType",
      "contents": "VOCSilhouette"
    },
    {
      "trigger": "VOCSimplification\tType",
      "contents": "VOCSimplification"
    },
    {
      "trigger": "VOCSweptVolume\tType",
      "contents": "VOCSweptVolume"
    },
    {
      "trigger": "VOCThickness\tType",
      "contents": "VOCThickness"
    },
    {
      "trigger": "VOCVibrationVolume\tType",
      "contents": "VOCVibrationVolume"
    },
    {
      "trigger": "VOCWrapping\tType",
      "contents": "VOCWrapping"
    },
    {
      "trigger": "ValuePointer\tType",
      "contents": "ValuePointer"
    },
    {
      "trigger": "VariableEdgeFillet\tType",
      "contents": "VariableEdgeFillet"
    },
    {
      "trigger": "Vector\tType",
      "contents": "Vector"
    },
    {
      "trigger": "VerticalSignageLateralPosition\tType",
      "contents": "VerticalSignageLateralPosition"
    },
    {
      "trigger": "VerticalSignageMarker\tType",
      "contents": "VerticalSignageMarker"
    },
    {
      "trigger": "ViewGenerationMode\tType",
      "contents": "ViewGenerationMode"
    },
    {
      "trigger": "ViewType\tType",
      "contents": "ViewType"
    },
    {
      "trigger": "VisuInstance\tType",
      "contents": "VisuInstance"
    },
    {
      "trigger": "Visualizable\tType",
      "contents": "Visualizable"
    },
    {
      "trigger": "VolatileInstance\tType",
      "contents": "VolatileInstance"
    },
    {
      "trigger": "VolumeGeo\tType",
      "contents": "VolumeGeo"
    },
    {
      "trigger": "WOEClearance\tType",
      "contents": "WOEClearance"
    },
    {
      "trigger": "WOECotationType\tType",
      "contents": "WOECotationType"
    },
    {
      "trigger": "WOEExtrapolationType\tType",
      "contents": "WOEExtrapolationType"
    },
    {
      "trigger": "WOEType\tType",
      "contents": "WOEType"
    },
    {
      "trigger": "Web\tType",
      "contents": "Web"
    },
    {
      "trigger": "WeldDelay\tType",
      "contents": "WeldDelay"
    },
    {
      "trigger": "WeldPositionType\tType",
      "contents": "WeldPositionType"
    },
    {
      "trigger": "WeldPressureStabilizationTime\tType",
      "contents": "WeldPressureStabilizationTime"
    },
    {
      "trigger": "Wire\tType",
      "contents": "Wire"
    },
    {
      "trigger": "WireGroup\tType",
      "contents": "WireGroup"
    },
    {
      "trigger": "Wireframe\tType",
      "contents": "Wireframe"
    },
    {
      "trigger": "WkiAlertInstance\tType",
      "contents": "WkiAlertInstance"
    },
    {
      "trigger": "WkiAlertReference\tType",
      "contents": "WkiAlertReference"
    },
    {
      "trigger": "WkiDataCollectInstance\tType",
      "contents": "WkiDataCollectInstance"
    },
    {
      "trigger": "WkiDataCollectReference\tType",
      "contents": "WkiDataCollectReference"
    },
    {
      "trigger": "WkiExecAlertInstance\tType",
      "contents": "WkiExecAlertInstance"
    },
    {
      "trigger": "WkiExecAlertReference\tType",
      "contents": "WkiExecAlertReference"
    },
    {
      "trigger": "WkiExecDataCollectInstance\tType",
      "contents": "WkiExecDataCollectInstance"
    },
    {
      "trigger": "WkiExecDataCollectReference\tType",
      "contents": "WkiExecDataCollectReference"
    },
    {
      "trigger": "WkiExecInstructionInstance\tType",
      "contents": "WkiExecInstructionInstance"
    },
    {
      "trigger": "WkiExecInstructionReference\tType",
      "contents": "WkiExecInstructionReference"
    },
    {
      "trigger": "WkiExecSignOffInstance\tType",
      "contents": "WkiExecSignOffInstance"
    },
    {
      "trigger": "WkiExecSignOffReference\tType",
      "contents": "WkiExecSignOffReference"
    },
    {
      "trigger": "WkiInstructionInstance\tType",
      "contents": "WkiInstructionInstance"
    },
    {
      "trigger": "WkiInstructionReference\tType",
      "contents": "WkiInstructionReference"
    },
    {
      "trigger": "WkiSignOffInstance\tType",
      "contents": "WkiSignOffInstance"
    },
    {
      "trigger": "WkiSignOffReference\tType",
      "contents": "WkiSignOffReference"
    },
    {
      "trigger": "WorkInstructionType\tType",
      "contents": "WorkInstructionType"
    },
    {
      "trigger": "WorkerInstance\tType",
      "contents": "WorkerInstance"
    },
    {
      "trigger": "WorkerRef\tType",
      "contents": "WorkerRef"
    },
    {
      "trigger": "XMLCDATA\tType",
      "contents": "XMLCDATA"
    },
    {
      "trigger": "XMLComment\tType",
      "contents": "XMLComment"
    },
    {
      "trigger": "XMLDocument\tType",
      "contents": "XMLDocument"
    },
    {
      "trigger": "XMLElement\tType",
      "contents": "XMLElement"
    },
    {
      "trigger": "XMLNode\tType",
      "contents": "XMLNode"
    },
    {
      "trigger": "XMLText\tType",
      "contents": "XMLText"
    }
  ]
}